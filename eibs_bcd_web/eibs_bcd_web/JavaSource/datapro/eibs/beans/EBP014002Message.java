package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EBP014002 physical file definition.
* 
* File level identifier is 1130611112841.
* Record format level identifier is 4A20098D67413.
*/

public class EBP014002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02BPBNUM",
                                     "E02BPBSEQ",
                                     "E02BPPAMT",
                                     "E02BPPPDY",
                                     "E02BPPPDM",
                                     "E02BPPPDD",
                                     "E02BPPPVI",
                                     "E02BPPSTS",
                                     "E02BPGNUM",
                                     "E02BPGSEQ",
                                     "E02BPGTYP",
                                     "E02BPGTYPD",
                                     "E02BPGDC",
                                     "E02BPGBNK",
                                     "E02BPGBRN",
                                     "E02BPGCCY",
                                     "E02BPGGLN",
                                     "E02BPGACC",
                                     "E02BPGCCN",
                                     "E02BPGAMT",
                                     "E02ACT",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02BPBNUM",
                                   "E02BPBSEQ",
                                   "E02BPPAMT",
                                   "E02BPPPDY",
                                   "E02BPPPDM",
                                   "E02BPPPDD",
                                   "E02BPPPVI",
                                   "E02BPPSTS",
                                   "E02BPGNUM",
                                   "E02BPGSEQ",
                                   "E02BPGTYP",
                                   "E02BPGTYPD",
                                   "E02BPGDC",
                                   "E02BPGBNK",
                                   "E02BPGBRN",
                                   "E02BPGCCY",
                                   "E02BPGGLN",
                                   "E02BPGACC",
                                   "E02BPGCCN",
                                   "E02BPGAMT",
                                   "E02ACT",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1130611112841";
  final static String rid = "4A20098D67413";
  final static String fmtname = "EBP014002";
  final int FIELDCOUNT = 32;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02BPBNUM = null;
  private DecimalField fieldE02BPBSEQ = null;
  private DecimalField fieldE02BPPAMT = null;
  private DecimalField fieldE02BPPPDY = null;
  private DecimalField fieldE02BPPPDM = null;
  private DecimalField fieldE02BPPPDD = null;
  private CharacterField fieldE02BPPPVI = null;
  private CharacterField fieldE02BPPSTS = null;
  private DecimalField fieldE02BPGNUM = null;
  private DecimalField fieldE02BPGSEQ = null;
  private CharacterField fieldE02BPGTYP = null;
  private CharacterField fieldE02BPGTYPD = null;
  private CharacterField fieldE02BPGDC = null;
  private CharacterField fieldE02BPGBNK = null;
  private DecimalField fieldE02BPGBRN = null;
  private CharacterField fieldE02BPGCCY = null;
  private DecimalField fieldE02BPGGLN = null;
  private DecimalField fieldE02BPGACC = null;
  private DecimalField fieldE02BPGCCN = null;
  private DecimalField fieldE02BPGAMT = null;
  private CharacterField fieldE02ACT = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EBP014002Message.
  */
  public EBP014002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 231;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02BPBNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02BPBNUM");
    fields[10] = fieldE02BPBSEQ =
    new DecimalField(message, HEADERSIZE + 55, 4, 0, "E02BPBSEQ");
    fields[11] = fieldE02BPPAMT =
    new DecimalField(message, HEADERSIZE + 59, 17, 2, "E02BPPAMT");
    fields[12] = fieldE02BPPPDY =
    new DecimalField(message, HEADERSIZE + 76, 5, 0, "E02BPPPDY");
    fields[13] = fieldE02BPPPDM =
    new DecimalField(message, HEADERSIZE + 81, 3, 0, "E02BPPPDM");
    fields[14] = fieldE02BPPPDD =
    new DecimalField(message, HEADERSIZE + 84, 3, 0, "E02BPPPDD");
    fields[15] = fieldE02BPPPVI =
    new CharacterField(message, HEADERSIZE + 87, 1, "E02BPPPVI");
    fields[16] = fieldE02BPPSTS =
    new CharacterField(message, HEADERSIZE + 88, 1, "E02BPPSTS");
    fields[17] = fieldE02BPGNUM =
    new DecimalField(message, HEADERSIZE + 89, 13, 0, "E02BPGNUM");
    fields[18] = fieldE02BPGSEQ =
    new DecimalField(message, HEADERSIZE + 102, 5, 0, "E02BPGSEQ");
    fields[19] = fieldE02BPGTYP =
    new CharacterField(message, HEADERSIZE + 107, 1, "E02BPGTYP");
    fields[20] = fieldE02BPGTYPD =
    new CharacterField(message, HEADERSIZE + 108, 45, "E02BPGTYPD");
    fields[21] = fieldE02BPGDC =
    new CharacterField(message, HEADERSIZE + 153, 2, "E02BPGDC");
    fields[22] = fieldE02BPGBNK =
    new CharacterField(message, HEADERSIZE + 155, 2, "E02BPGBNK");
    fields[23] = fieldE02BPGBRN =
    new DecimalField(message, HEADERSIZE + 157, 5, 0, "E02BPGBRN");
    fields[24] = fieldE02BPGCCY =
    new CharacterField(message, HEADERSIZE + 162, 3, "E02BPGCCY");
    fields[25] = fieldE02BPGGLN =
    new DecimalField(message, HEADERSIZE + 165, 17, 0, "E02BPGGLN");
    fields[26] = fieldE02BPGACC =
    new DecimalField(message, HEADERSIZE + 182, 13, 0, "E02BPGACC");
    fields[27] = fieldE02BPGCCN =
    new DecimalField(message, HEADERSIZE + 195, 9, 0, "E02BPGCCN");
    fields[28] = fieldE02BPGAMT =
    new DecimalField(message, HEADERSIZE + 204, 17, 2, "E02BPGAMT");
    fields[29] = fieldE02ACT =
    new CharacterField(message, HEADERSIZE + 221, 1, "E02ACT");
    fields[30] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 222, 8, 0, "E02NUMREC");
    fields[31] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 230, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02BPBNUM using a String value.
  */
  public void setE02BPBNUM(String newvalue)
  {
    fieldE02BPBNUM.setString(newvalue);
  }

  /**
  * Get value of field E02BPBNUM as a String.
  */
  public String getE02BPBNUM()
  {
    return fieldE02BPBNUM.getString();
  }

  /**
  * Set numeric field E02BPBNUM using a BigDecimal value.
  */
  public void setE02BPBNUM(BigDecimal newvalue)
  {
    fieldE02BPBNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPBNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPBNUM()
  {
    return fieldE02BPBNUM.getBigDecimal();
  }

  /**
  * Set field E02BPBSEQ using a String value.
  */
  public void setE02BPBSEQ(String newvalue)
  {
    fieldE02BPBSEQ.setString(newvalue);
  }

  /**
  * Get value of field E02BPBSEQ as a String.
  */
  public String getE02BPBSEQ()
  {
    return fieldE02BPBSEQ.getString();
  }

  /**
  * Set numeric field E02BPBSEQ using a BigDecimal value.
  */
  public void setE02BPBSEQ(BigDecimal newvalue)
  {
    fieldE02BPBSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPBSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPBSEQ()
  {
    return fieldE02BPBSEQ.getBigDecimal();
  }

  /**
  * Set field E02BPPAMT using a String value.
  */
  public void setE02BPPAMT(String newvalue)
  {
    fieldE02BPPAMT.setString(newvalue);
  }

  /**
  * Get value of field E02BPPAMT as a String.
  */
  public String getE02BPPAMT()
  {
    return fieldE02BPPAMT.getString();
  }

  /**
  * Set numeric field E02BPPAMT using a BigDecimal value.
  */
  public void setE02BPPAMT(BigDecimal newvalue)
  {
    fieldE02BPPAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPPAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPPAMT()
  {
    return fieldE02BPPAMT.getBigDecimal();
  }

  /**
  * Set field E02BPPPDY using a String value.
  */
  public void setE02BPPPDY(String newvalue)
  {
    fieldE02BPPPDY.setString(newvalue);
  }

  /**
  * Get value of field E02BPPPDY as a String.
  */
  public String getE02BPPPDY()
  {
    return fieldE02BPPPDY.getString();
  }

  /**
  * Set numeric field E02BPPPDY using a BigDecimal value.
  */
  public void setE02BPPPDY(BigDecimal newvalue)
  {
    fieldE02BPPPDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPPPDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPPPDY()
  {
    return fieldE02BPPPDY.getBigDecimal();
  }

  /**
  * Set field E02BPPPDM using a String value.
  */
  public void setE02BPPPDM(String newvalue)
  {
    fieldE02BPPPDM.setString(newvalue);
  }

  /**
  * Get value of field E02BPPPDM as a String.
  */
  public String getE02BPPPDM()
  {
    return fieldE02BPPPDM.getString();
  }

  /**
  * Set numeric field E02BPPPDM using a BigDecimal value.
  */
  public void setE02BPPPDM(BigDecimal newvalue)
  {
    fieldE02BPPPDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPPPDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPPPDM()
  {
    return fieldE02BPPPDM.getBigDecimal();
  }

  /**
  * Set field E02BPPPDD using a String value.
  */
  public void setE02BPPPDD(String newvalue)
  {
    fieldE02BPPPDD.setString(newvalue);
  }

  /**
  * Get value of field E02BPPPDD as a String.
  */
  public String getE02BPPPDD()
  {
    return fieldE02BPPPDD.getString();
  }

  /**
  * Set numeric field E02BPPPDD using a BigDecimal value.
  */
  public void setE02BPPPDD(BigDecimal newvalue)
  {
    fieldE02BPPPDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPPPDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPPPDD()
  {
    return fieldE02BPPPDD.getBigDecimal();
  }

  /**
  * Set field E02BPPPVI using a String value.
  */
  public void setE02BPPPVI(String newvalue)
  {
    fieldE02BPPPVI.setString(newvalue);
  }

  /**
  * Get value of field E02BPPPVI as a String.
  */
  public String getE02BPPPVI()
  {
    return fieldE02BPPPVI.getString();
  }

  /**
  * Set field E02BPPSTS using a String value.
  */
  public void setE02BPPSTS(String newvalue)
  {
    fieldE02BPPSTS.setString(newvalue);
  }

  /**
  * Get value of field E02BPPSTS as a String.
  */
  public String getE02BPPSTS()
  {
    return fieldE02BPPSTS.getString();
  }

  /**
  * Set field E02BPGNUM using a String value.
  */
  public void setE02BPGNUM(String newvalue)
  {
    fieldE02BPGNUM.setString(newvalue);
  }

  /**
  * Get value of field E02BPGNUM as a String.
  */
  public String getE02BPGNUM()
  {
    return fieldE02BPGNUM.getString();
  }

  /**
  * Set numeric field E02BPGNUM using a BigDecimal value.
  */
  public void setE02BPGNUM(BigDecimal newvalue)
  {
    fieldE02BPGNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGNUM()
  {
    return fieldE02BPGNUM.getBigDecimal();
  }

  /**
  * Set field E02BPGSEQ using a String value.
  */
  public void setE02BPGSEQ(String newvalue)
  {
    fieldE02BPGSEQ.setString(newvalue);
  }

  /**
  * Get value of field E02BPGSEQ as a String.
  */
  public String getE02BPGSEQ()
  {
    return fieldE02BPGSEQ.getString();
  }

  /**
  * Set numeric field E02BPGSEQ using a BigDecimal value.
  */
  public void setE02BPGSEQ(BigDecimal newvalue)
  {
    fieldE02BPGSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGSEQ()
  {
    return fieldE02BPGSEQ.getBigDecimal();
  }

  /**
  * Set field E02BPGTYP using a String value.
  */
  public void setE02BPGTYP(String newvalue)
  {
    fieldE02BPGTYP.setString(newvalue);
  }

  /**
  * Get value of field E02BPGTYP as a String.
  */
  public String getE02BPGTYP()
  {
    return fieldE02BPGTYP.getString();
  }

  /**
  * Set field E02BPGTYPD using a String value.
  */
  public void setE02BPGTYPD(String newvalue)
  {
    fieldE02BPGTYPD.setString(newvalue);
  }

  /**
  * Get value of field E02BPGTYPD as a String.
  */
  public String getE02BPGTYPD()
  {
    return fieldE02BPGTYPD.getString();
  }

  /**
  * Set field E02BPGDC using a String value.
  */
  public void setE02BPGDC(String newvalue)
  {
    fieldE02BPGDC.setString(newvalue);
  }

  /**
  * Get value of field E02BPGDC as a String.
  */
  public String getE02BPGDC()
  {
    return fieldE02BPGDC.getString();
  }

  /**
  * Set field E02BPGBNK using a String value.
  */
  public void setE02BPGBNK(String newvalue)
  {
    fieldE02BPGBNK.setString(newvalue);
  }

  /**
  * Get value of field E02BPGBNK as a String.
  */
  public String getE02BPGBNK()
  {
    return fieldE02BPGBNK.getString();
  }

  /**
  * Set field E02BPGBRN using a String value.
  */
  public void setE02BPGBRN(String newvalue)
  {
    fieldE02BPGBRN.setString(newvalue);
  }

  /**
  * Get value of field E02BPGBRN as a String.
  */
  public String getE02BPGBRN()
  {
    return fieldE02BPGBRN.getString();
  }

  /**
  * Set numeric field E02BPGBRN using a BigDecimal value.
  */
  public void setE02BPGBRN(BigDecimal newvalue)
  {
    fieldE02BPGBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGBRN()
  {
    return fieldE02BPGBRN.getBigDecimal();
  }

  /**
  * Set field E02BPGCCY using a String value.
  */
  public void setE02BPGCCY(String newvalue)
  {
    fieldE02BPGCCY.setString(newvalue);
  }

  /**
  * Get value of field E02BPGCCY as a String.
  */
  public String getE02BPGCCY()
  {
    return fieldE02BPGCCY.getString();
  }

  /**
  * Set field E02BPGGLN using a String value.
  */
  public void setE02BPGGLN(String newvalue)
  {
    fieldE02BPGGLN.setString(newvalue);
  }

  /**
  * Get value of field E02BPGGLN as a String.
  */
  public String getE02BPGGLN()
  {
    return fieldE02BPGGLN.getString();
  }

  /**
  * Set numeric field E02BPGGLN using a BigDecimal value.
  */
  public void setE02BPGGLN(BigDecimal newvalue)
  {
    fieldE02BPGGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGGLN()
  {
    return fieldE02BPGGLN.getBigDecimal();
  }

  /**
  * Set field E02BPGACC using a String value.
  */
  public void setE02BPGACC(String newvalue)
  {
    fieldE02BPGACC.setString(newvalue);
  }

  /**
  * Get value of field E02BPGACC as a String.
  */
  public String getE02BPGACC()
  {
    return fieldE02BPGACC.getString();
  }

  /**
  * Set numeric field E02BPGACC using a BigDecimal value.
  */
  public void setE02BPGACC(BigDecimal newvalue)
  {
    fieldE02BPGACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGACC()
  {
    return fieldE02BPGACC.getBigDecimal();
  }

  /**
  * Set field E02BPGCCN using a String value.
  */
  public void setE02BPGCCN(String newvalue)
  {
    fieldE02BPGCCN.setString(newvalue);
  }

  /**
  * Get value of field E02BPGCCN as a String.
  */
  public String getE02BPGCCN()
  {
    return fieldE02BPGCCN.getString();
  }

  /**
  * Set numeric field E02BPGCCN using a BigDecimal value.
  */
  public void setE02BPGCCN(BigDecimal newvalue)
  {
    fieldE02BPGCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGCCN()
  {
    return fieldE02BPGCCN.getBigDecimal();
  }

  /**
  * Set field E02BPGAMT using a String value.
  */
  public void setE02BPGAMT(String newvalue)
  {
    fieldE02BPGAMT.setString(newvalue);
  }

  /**
  * Get value of field E02BPGAMT as a String.
  */
  public String getE02BPGAMT()
  {
    return fieldE02BPGAMT.getString();
  }

  /**
  * Set numeric field E02BPGAMT using a BigDecimal value.
  */
  public void setE02BPGAMT(BigDecimal newvalue)
  {
    fieldE02BPGAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02BPGAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02BPGAMT()
  {
    return fieldE02BPGAMT.getBigDecimal();
  }

  /**
  * Set field E02ACT using a String value.
  */
  public void setE02ACT(String newvalue)
  {
    fieldE02ACT.setString(newvalue);
  }

  /**
  * Get value of field E02ACT as a String.
  */
  public String getE02ACT()
  {
    return fieldE02ACT.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
