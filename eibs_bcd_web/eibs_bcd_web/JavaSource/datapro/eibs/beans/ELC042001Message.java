package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELC042001 physical file definition.
* 
* File level identifier is 1160706142056.
* Record format level identifier is 30944E2C2AA0E.
*/

public class ELC042001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DDITYP",
                                     "E01DDIFEM",
                                     "E01DDIFED",
                                     "E01DDIFEY",
                                     "E01DDINUM",
                                     "E01DDICUN",
                                     "E01DDIMDA",
                                     "E01DDIMTO",
                                     "E01CUSNME",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DDITYP",
                                   "E01DDIFEM",
                                   "E01DDIFED",
                                   "E01DDIFEY",
                                   "E01DDINUM",
                                   "E01DDICUN",
                                   "E01DDIMDA",
                                   "E01DDIMTO",
                                   "E01CUSNME",
                                   "E01INDOPE"
                                 };
  final static String fid = "1160706142056";
  final static String rid = "30944E2C2AA0E";
  final static String fmtname = "ELC042001";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DDITYP = null;
  private DecimalField fieldE01DDIFEM = null;
  private DecimalField fieldE01DDIFED = null;
  private DecimalField fieldE01DDIFEY = null;
  private CharacterField fieldE01DDINUM = null;
  private DecimalField fieldE01DDICUN = null;
  private CharacterField fieldE01DDIMDA = null;
  private DecimalField fieldE01DDIMTO = null;
  private CharacterField fieldE01CUSNME = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ELC042001Message.
  */
  public ELC042001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 148;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DDITYP =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01DDITYP");
    fields[10] = fieldE01DDIFEM =
    new DecimalField(message, HEADERSIZE + 43, 3, 0, "E01DDIFEM");
    fields[11] = fieldE01DDIFED =
    new DecimalField(message, HEADERSIZE + 46, 3, 0, "E01DDIFED");
    fields[12] = fieldE01DDIFEY =
    new DecimalField(message, HEADERSIZE + 49, 5, 0, "E01DDIFEY");
    fields[13] = fieldE01DDINUM =
    new CharacterField(message, HEADERSIZE + 54, 20, "E01DDINUM");
    fields[14] = fieldE01DDICUN =
    new DecimalField(message, HEADERSIZE + 74, 10, 0, "E01DDICUN");
    fields[15] = fieldE01DDIMDA =
    new CharacterField(message, HEADERSIZE + 84, 3, "E01DDIMDA");
    fields[16] = fieldE01DDIMTO =
    new DecimalField(message, HEADERSIZE + 87, 15, 2, "E01DDIMTO");
    fields[17] = fieldE01CUSNME =
    new CharacterField(message, HEADERSIZE + 102, 45, "E01CUSNME");
    fields[18] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 147, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DDITYP using a String value.
  */
  public void setE01DDITYP(String newvalue)
  {
    fieldE01DDITYP.setString(newvalue);
  }

  /**
  * Get value of field E01DDITYP as a String.
  */
  public String getE01DDITYP()
  {
    return fieldE01DDITYP.getString();
  }

  /**
  * Set field E01DDIFEM using a String value.
  */
  public void setE01DDIFEM(String newvalue)
  {
    fieldE01DDIFEM.setString(newvalue);
  }

  /**
  * Get value of field E01DDIFEM as a String.
  */
  public String getE01DDIFEM()
  {
    return fieldE01DDIFEM.getString();
  }

  /**
  * Set numeric field E01DDIFEM using a BigDecimal value.
  */
  public void setE01DDIFEM(BigDecimal newvalue)
  {
    fieldE01DDIFEM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDIFEM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDIFEM()
  {
    return fieldE01DDIFEM.getBigDecimal();
  }

  /**
  * Set field E01DDIFED using a String value.
  */
  public void setE01DDIFED(String newvalue)
  {
    fieldE01DDIFED.setString(newvalue);
  }

  /**
  * Get value of field E01DDIFED as a String.
  */
  public String getE01DDIFED()
  {
    return fieldE01DDIFED.getString();
  }

  /**
  * Set numeric field E01DDIFED using a BigDecimal value.
  */
  public void setE01DDIFED(BigDecimal newvalue)
  {
    fieldE01DDIFED.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDIFED as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDIFED()
  {
    return fieldE01DDIFED.getBigDecimal();
  }

  /**
  * Set field E01DDIFEY using a String value.
  */
  public void setE01DDIFEY(String newvalue)
  {
    fieldE01DDIFEY.setString(newvalue);
  }

  /**
  * Get value of field E01DDIFEY as a String.
  */
  public String getE01DDIFEY()
  {
    return fieldE01DDIFEY.getString();
  }

  /**
  * Set numeric field E01DDIFEY using a BigDecimal value.
  */
  public void setE01DDIFEY(BigDecimal newvalue)
  {
    fieldE01DDIFEY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDIFEY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDIFEY()
  {
    return fieldE01DDIFEY.getBigDecimal();
  }

  /**
  * Set field E01DDINUM using a String value.
  */
  public void setE01DDINUM(String newvalue)
  {
    fieldE01DDINUM.setString(newvalue);
  }

  /**
  * Get value of field E01DDINUM as a String.
  */
  public String getE01DDINUM()
  {
    return fieldE01DDINUM.getString();
  }

  /**
  * Set field E01DDICUN using a String value.
  */
  public void setE01DDICUN(String newvalue)
  {
    fieldE01DDICUN.setString(newvalue);
  }

  /**
  * Get value of field E01DDICUN as a String.
  */
  public String getE01DDICUN()
  {
    return fieldE01DDICUN.getString();
  }

  /**
  * Set numeric field E01DDICUN using a BigDecimal value.
  */
  public void setE01DDICUN(BigDecimal newvalue)
  {
    fieldE01DDICUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDICUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDICUN()
  {
    return fieldE01DDICUN.getBigDecimal();
  }

  /**
  * Set field E01DDIMDA using a String value.
  */
  public void setE01DDIMDA(String newvalue)
  {
    fieldE01DDIMDA.setString(newvalue);
  }

  /**
  * Get value of field E01DDIMDA as a String.
  */
  public String getE01DDIMDA()
  {
    return fieldE01DDIMDA.getString();
  }

  /**
  * Set field E01DDIMTO using a String value.
  */
  public void setE01DDIMTO(String newvalue)
  {
    fieldE01DDIMTO.setString(newvalue);
  }

  /**
  * Get value of field E01DDIMTO as a String.
  */
  public String getE01DDIMTO()
  {
    return fieldE01DDIMTO.getString();
  }

  /**
  * Set numeric field E01DDIMTO using a BigDecimal value.
  */
  public void setE01DDIMTO(BigDecimal newvalue)
  {
    fieldE01DDIMTO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DDIMTO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DDIMTO()
  {
    return fieldE01DDIMTO.getBigDecimal();
  }

  /**
  * Set field E01CUSNME using a String value.
  */
  public void setE01CUSNME(String newvalue)
  {
    fieldE01CUSNME.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNME as a String.
  */
  public String getE01CUSNME()
  {
    return fieldE01CUSNME.getString();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
