package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0548DS physical file definition.
* 
* File level identifier is 1180201153943.
* Record format level identifier is 471611C939031.
*/

public class EWD0548DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDNUM",
                                     "EWDCNV",
                                     "EWDTYP",
                                     "EWDDSC",
                                     "EWDAPV",
                                     "EWDRSV",
                                     "EWDUTI",
                                     "EWDMDI",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDNUM",
                                   "EWDCNV",
                                   "EWDTYP",
                                   "EWDDSC",
                                   "EWDAPV",
                                   "EWDRSV",
                                   "EWDUTI",
                                   "EWDMDI",
                                   "EWDOPE"
                                 };
  final static String fid = "1180201153943";
  final static String rid = "471611C939031";
  final static String fmtname = "EWD0548DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldEWDNUM = null;
  private CharacterField fieldEWDCNV = null;
  private CharacterField fieldEWDTYP = null;
  private CharacterField fieldEWDDSC = null;
  private DecimalField fieldEWDAPV = null;
  private DecimalField fieldEWDRSV = null;
  private DecimalField fieldEWDUTI = null;
  private DecimalField fieldEWDMDI = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0548DSMessage.
  */
  public EWD0548DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 133;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDNUM =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "EWDNUM");
    fields[1] = fieldEWDCNV =
    new CharacterField(message, HEADERSIZE + 13, 4, "EWDCNV");
    fields[2] = fieldEWDTYP =
    new CharacterField(message, HEADERSIZE + 17, 2, "EWDTYP");
    fields[3] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 19, 45, "EWDDSC");
    fields[4] = fieldEWDAPV =
    new DecimalField(message, HEADERSIZE + 64, 17, 2, "EWDAPV");
    fields[5] = fieldEWDRSV =
    new DecimalField(message, HEADERSIZE + 81, 17, 2, "EWDRSV");
    fields[6] = fieldEWDUTI =
    new DecimalField(message, HEADERSIZE + 98, 17, 2, "EWDUTI");
    fields[7] = fieldEWDMDI =
    new DecimalField(message, HEADERSIZE + 115, 17, 2, "EWDMDI");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 132, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDNUM using a String value.
  */
  public void setEWDNUM(String newvalue)
  {
    fieldEWDNUM.setString(newvalue);
  }

  /**
  * Get value of field EWDNUM as a String.
  */
  public String getEWDNUM()
  {
    return fieldEWDNUM.getString();
  }

  /**
  * Set numeric field EWDNUM using a BigDecimal value.
  */
  public void setEWDNUM(BigDecimal newvalue)
  {
    fieldEWDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDNUM()
  {
    return fieldEWDNUM.getBigDecimal();
  }

  /**
  * Set field EWDCNV using a String value.
  */
  public void setEWDCNV(String newvalue)
  {
    fieldEWDCNV.setString(newvalue);
  }

  /**
  * Get value of field EWDCNV as a String.
  */
  public String getEWDCNV()
  {
    return fieldEWDCNV.getString();
  }

  /**
  * Set field EWDTYP using a String value.
  */
  public void setEWDTYP(String newvalue)
  {
    fieldEWDTYP.setString(newvalue);
  }

  /**
  * Get value of field EWDTYP as a String.
  */
  public String getEWDTYP()
  {
    return fieldEWDTYP.getString();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDAPV using a String value.
  */
  public void setEWDAPV(String newvalue)
  {
    fieldEWDAPV.setString(newvalue);
  }

  /**
  * Get value of field EWDAPV as a String.
  */
  public String getEWDAPV()
  {
    return fieldEWDAPV.getString();
  }

  /**
  * Set numeric field EWDAPV using a BigDecimal value.
  */
  public void setEWDAPV(BigDecimal newvalue)
  {
    fieldEWDAPV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDAPV as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDAPV()
  {
    return fieldEWDAPV.getBigDecimal();
  }

  /**
  * Set field EWDRSV using a String value.
  */
  public void setEWDRSV(String newvalue)
  {
    fieldEWDRSV.setString(newvalue);
  }

  /**
  * Get value of field EWDRSV as a String.
  */
  public String getEWDRSV()
  {
    return fieldEWDRSV.getString();
  }

  /**
  * Set numeric field EWDRSV using a BigDecimal value.
  */
  public void setEWDRSV(BigDecimal newvalue)
  {
    fieldEWDRSV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDRSV as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDRSV()
  {
    return fieldEWDRSV.getBigDecimal();
  }

  /**
  * Set field EWDUTI using a String value.
  */
  public void setEWDUTI(String newvalue)
  {
    fieldEWDUTI.setString(newvalue);
  }

  /**
  * Get value of field EWDUTI as a String.
  */
  public String getEWDUTI()
  {
    return fieldEWDUTI.getString();
  }

  /**
  * Set numeric field EWDUTI using a BigDecimal value.
  */
  public void setEWDUTI(BigDecimal newvalue)
  {
    fieldEWDUTI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDUTI as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDUTI()
  {
    return fieldEWDUTI.getBigDecimal();
  }

  /**
  * Set field EWDMDI using a String value.
  */
  public void setEWDMDI(String newvalue)
  {
    fieldEWDMDI.setString(newvalue);
  }

  /**
  * Get value of field EWDMDI as a String.
  */
  public String getEWDMDI()
  {
    return fieldEWDMDI.getString();
  }

  /**
  * Set numeric field EWDMDI using a BigDecimal value.
  */
  public void setEWDMDI(BigDecimal newvalue)
  {
    fieldEWDMDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDMDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDMDI()
  {
    return fieldEWDMDI.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
