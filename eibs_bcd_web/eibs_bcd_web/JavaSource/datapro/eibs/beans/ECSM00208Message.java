package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECSM00208 physical file definition.
* 
* File level identifier is 1190515152156.
* Record format level identifier is 2B251486A3091.
*/

public class ECSM00208Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H08USERID",
                                     "H08PROGRM",
                                     "H08TIMSYS",
                                     "H08SCRCOD",
                                     "H08OPECOD",
                                     "H08FLGMAS",
                                     "H08FLGWK1",
                                     "H08FLGWK2",
                                     "H08FLGWK3",
                                     "E08SCHBNK",
                                     "E08SCHNUM",
                                     "E08SCHSEQ",
                                     "E08SCHDAY",
                                     "D08SCHDAY",
                                     "E08SCHFTH",
                                     "E08SCHFTM",
                                     "E08SCHTTH",
                                     "E08SCHTTM",
                                     "D08SCHTIM",
                                     "E08SCHMIN",
                                     "E08SCHEYY",
                                     "E08SCHEMM",
                                     "E08SCHEDD",
                                     "E08SCHCYY",
                                     "E08SCHCMM",
                                     "E08SCHCDD",
                                     "E08SCHCTT",
                                     "E08SCHCMU",
                                     "E08SCHLYY",
                                     "E08SCHLMM",
                                     "E08SCHLDD",
                                     "E08SCHLTT",
                                     "E08SCHLMU",
                                     "E08NUMREC",
                                     "E08INDOPE"
                                   };
  final static String tnames[] = {
                                   "H08USERID",
                                   "H08PROGRM",
                                   "H08TIMSYS",
                                   "H08SCRCOD",
                                   "H08OPECOD",
                                   "H08FLGMAS",
                                   "H08FLGWK1",
                                   "H08FLGWK2",
                                   "H08FLGWK3",
                                   "E08SCHBNK",
                                   "E08SCHNUM",
                                   "E08SCHSEQ",
                                   "E08SCHDAY",
                                   "D08SCHDAY",
                                   "E08SCHFTH",
                                   "E08SCHFTM",
                                   "E08SCHTTH",
                                   "E08SCHTTM",
                                   "D08SCHTIM",
                                   "E08SCHMIN",
                                   "E08SCHEYY",
                                   "E08SCHEMM",
                                   "E08SCHEDD",
                                   "E08SCHCYY",
                                   "E08SCHCMM",
                                   "E08SCHCDD",
                                   "E08SCHCTT",
                                   "E08SCHCMU",
                                   "E08SCHLYY",
                                   "E08SCHLMM",
                                   "E08SCHLDD",
                                   "E08SCHLTT",
                                   "E08SCHLMU",
                                   "E08NUMREC",
                                   "E08INDOPE"
                                 };
  final static String fid = "1190515152156";
  final static String rid = "2B251486A3091";
  final static String fmtname = "ECSM00208";
  final int FIELDCOUNT = 35;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH08USERID = null;
  private CharacterField fieldH08PROGRM = null;
  private CharacterField fieldH08TIMSYS = null;
  private CharacterField fieldH08SCRCOD = null;
  private CharacterField fieldH08OPECOD = null;
  private CharacterField fieldH08FLGMAS = null;
  private CharacterField fieldH08FLGWK1 = null;
  private CharacterField fieldH08FLGWK2 = null;
  private CharacterField fieldH08FLGWK3 = null;
  private CharacterField fieldE08SCHBNK = null;
  private DecimalField fieldE08SCHNUM = null;
  private DecimalField fieldE08SCHSEQ = null;
  private CharacterField fieldE08SCHDAY = null;
  private CharacterField fieldD08SCHDAY = null;
  private DecimalField fieldE08SCHFTH = null;
  private DecimalField fieldE08SCHFTM = null;
  private DecimalField fieldE08SCHTTH = null;
  private DecimalField fieldE08SCHTTM = null;
  private CharacterField fieldD08SCHTIM = null;
  private DecimalField fieldE08SCHMIN = null;
  private DecimalField fieldE08SCHEYY = null;
  private DecimalField fieldE08SCHEMM = null;
  private DecimalField fieldE08SCHEDD = null;
  private DecimalField fieldE08SCHCYY = null;
  private DecimalField fieldE08SCHCMM = null;
  private DecimalField fieldE08SCHCDD = null;
  private CharacterField fieldE08SCHCTT = null;
  private CharacterField fieldE08SCHCMU = null;
  private DecimalField fieldE08SCHLYY = null;
  private DecimalField fieldE08SCHLMM = null;
  private DecimalField fieldE08SCHLDD = null;
  private CharacterField fieldE08SCHLTT = null;
  private CharacterField fieldE08SCHLMU = null;
  private DecimalField fieldE08NUMREC = null;
  private CharacterField fieldE08INDOPE = null;

  /**
  * Constructor for ECSM00208Message.
  */
  public ECSM00208Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 289;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH08USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H08USERID");
    fields[1] = fieldH08PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H08PROGRM");
    fields[2] = fieldH08TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H08TIMSYS");
    fields[3] = fieldH08SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H08SCRCOD");
    fields[4] = fieldH08OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H08OPECOD");
    fields[5] = fieldH08FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H08FLGMAS");
    fields[6] = fieldH08FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H08FLGWK1");
    fields[7] = fieldH08FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H08FLGWK2");
    fields[8] = fieldH08FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H08FLGWK3");
    fields[9] = fieldE08SCHBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E08SCHBNK");
    fields[10] = fieldE08SCHNUM =
    new DecimalField(message, HEADERSIZE + 44, 13, 0, "E08SCHNUM");
    fields[11] = fieldE08SCHSEQ =
    new DecimalField(message, HEADERSIZE + 57, 6, 0, "E08SCHSEQ");
    fields[12] = fieldE08SCHDAY =
    new CharacterField(message, HEADERSIZE + 63, 4, "E08SCHDAY");
    fields[13] = fieldD08SCHDAY =
    new CharacterField(message, HEADERSIZE + 67, 45, "D08SCHDAY");
    fields[14] = fieldE08SCHFTH =
    new DecimalField(message, HEADERSIZE + 112, 3, 0, "E08SCHFTH");
    fields[15] = fieldE08SCHFTM =
    new DecimalField(message, HEADERSIZE + 115, 3, 0, "E08SCHFTM");
    fields[16] = fieldE08SCHTTH =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E08SCHTTH");
    fields[17] = fieldE08SCHTTM =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "E08SCHTTM");
    fields[18] = fieldD08SCHTIM =
    new CharacterField(message, HEADERSIZE + 124, 45, "D08SCHTIM");
    fields[19] = fieldE08SCHMIN =
    new DecimalField(message, HEADERSIZE + 169, 6, 0, "E08SCHMIN");
    fields[20] = fieldE08SCHEYY =
    new DecimalField(message, HEADERSIZE + 175, 5, 0, "E08SCHEYY");
    fields[21] = fieldE08SCHEMM =
    new DecimalField(message, HEADERSIZE + 180, 3, 0, "E08SCHEMM");
    fields[22] = fieldE08SCHEDD =
    new DecimalField(message, HEADERSIZE + 183, 3, 0, "E08SCHEDD");
    fields[23] = fieldE08SCHCYY =
    new DecimalField(message, HEADERSIZE + 186, 5, 0, "E08SCHCYY");
    fields[24] = fieldE08SCHCMM =
    new DecimalField(message, HEADERSIZE + 191, 3, 0, "E08SCHCMM");
    fields[25] = fieldE08SCHCDD =
    new DecimalField(message, HEADERSIZE + 194, 3, 0, "E08SCHCDD");
    fields[26] = fieldE08SCHCTT =
    new CharacterField(message, HEADERSIZE + 197, 26, "E08SCHCTT");
    fields[27] = fieldE08SCHCMU =
    new CharacterField(message, HEADERSIZE + 223, 10, "E08SCHCMU");
    fields[28] = fieldE08SCHLYY =
    new DecimalField(message, HEADERSIZE + 233, 5, 0, "E08SCHLYY");
    fields[29] = fieldE08SCHLMM =
    new DecimalField(message, HEADERSIZE + 238, 3, 0, "E08SCHLMM");
    fields[30] = fieldE08SCHLDD =
    new DecimalField(message, HEADERSIZE + 241, 3, 0, "E08SCHLDD");
    fields[31] = fieldE08SCHLTT =
    new CharacterField(message, HEADERSIZE + 244, 26, "E08SCHLTT");
    fields[32] = fieldE08SCHLMU =
    new CharacterField(message, HEADERSIZE + 270, 10, "E08SCHLMU");
    fields[33] = fieldE08NUMREC =
    new DecimalField(message, HEADERSIZE + 280, 8, 0, "E08NUMREC");
    fields[34] = fieldE08INDOPE =
    new CharacterField(message, HEADERSIZE + 288, 1, "E08INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H08USERID using a String value.
  */
  public void setH08USERID(String newvalue)
  {
    fieldH08USERID.setString(newvalue);
  }

  /**
  * Get value of field H08USERID as a String.
  */
  public String getH08USERID()
  {
    return fieldH08USERID.getString();
  }

  /**
  * Set field H08PROGRM using a String value.
  */
  public void setH08PROGRM(String newvalue)
  {
    fieldH08PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H08PROGRM as a String.
  */
  public String getH08PROGRM()
  {
    return fieldH08PROGRM.getString();
  }

  /**
  * Set field H08TIMSYS using a String value.
  */
  public void setH08TIMSYS(String newvalue)
  {
    fieldH08TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H08TIMSYS as a String.
  */
  public String getH08TIMSYS()
  {
    return fieldH08TIMSYS.getString();
  }

  /**
  * Set field H08SCRCOD using a String value.
  */
  public void setH08SCRCOD(String newvalue)
  {
    fieldH08SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H08SCRCOD as a String.
  */
  public String getH08SCRCOD()
  {
    return fieldH08SCRCOD.getString();
  }

  /**
  * Set field H08OPECOD using a String value.
  */
  public void setH08OPECOD(String newvalue)
  {
    fieldH08OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H08OPECOD as a String.
  */
  public String getH08OPECOD()
  {
    return fieldH08OPECOD.getString();
  }

  /**
  * Set field H08FLGMAS using a String value.
  */
  public void setH08FLGMAS(String newvalue)
  {
    fieldH08FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H08FLGMAS as a String.
  */
  public String getH08FLGMAS()
  {
    return fieldH08FLGMAS.getString();
  }

  /**
  * Set field H08FLGWK1 using a String value.
  */
  public void setH08FLGWK1(String newvalue)
  {
    fieldH08FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK1 as a String.
  */
  public String getH08FLGWK1()
  {
    return fieldH08FLGWK1.getString();
  }

  /**
  * Set field H08FLGWK2 using a String value.
  */
  public void setH08FLGWK2(String newvalue)
  {
    fieldH08FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK2 as a String.
  */
  public String getH08FLGWK2()
  {
    return fieldH08FLGWK2.getString();
  }

  /**
  * Set field H08FLGWK3 using a String value.
  */
  public void setH08FLGWK3(String newvalue)
  {
    fieldH08FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H08FLGWK3 as a String.
  */
  public String getH08FLGWK3()
  {
    return fieldH08FLGWK3.getString();
  }

  /**
  * Set field E08SCHBNK using a String value.
  */
  public void setE08SCHBNK(String newvalue)
  {
    fieldE08SCHBNK.setString(newvalue);
  }

  /**
  * Get value of field E08SCHBNK as a String.
  */
  public String getE08SCHBNK()
  {
    return fieldE08SCHBNK.getString();
  }

  /**
  * Set field E08SCHNUM using a String value.
  */
  public void setE08SCHNUM(String newvalue)
  {
    fieldE08SCHNUM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHNUM as a String.
  */
  public String getE08SCHNUM()
  {
    return fieldE08SCHNUM.getString();
  }

  /**
  * Set numeric field E08SCHNUM using a BigDecimal value.
  */
  public void setE08SCHNUM(BigDecimal newvalue)
  {
    fieldE08SCHNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHNUM()
  {
    return fieldE08SCHNUM.getBigDecimal();
  }

  /**
  * Set field E08SCHSEQ using a String value.
  */
  public void setE08SCHSEQ(String newvalue)
  {
    fieldE08SCHSEQ.setString(newvalue);
  }

  /**
  * Get value of field E08SCHSEQ as a String.
  */
  public String getE08SCHSEQ()
  {
    return fieldE08SCHSEQ.getString();
  }

  /**
  * Set numeric field E08SCHSEQ using a BigDecimal value.
  */
  public void setE08SCHSEQ(BigDecimal newvalue)
  {
    fieldE08SCHSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHSEQ()
  {
    return fieldE08SCHSEQ.getBigDecimal();
  }

  /**
  * Set field E08SCHDAY using a String value.
  */
  public void setE08SCHDAY(String newvalue)
  {
    fieldE08SCHDAY.setString(newvalue);
  }

  /**
  * Get value of field E08SCHDAY as a String.
  */
  public String getE08SCHDAY()
  {
    return fieldE08SCHDAY.getString();
  }

  /**
  * Set field D08SCHDAY using a String value.
  */
  public void setD08SCHDAY(String newvalue)
  {
    fieldD08SCHDAY.setString(newvalue);
  }

  /**
  * Get value of field D08SCHDAY as a String.
  */
  public String getD08SCHDAY()
  {
    return fieldD08SCHDAY.getString();
  }

  /**
  * Set field E08SCHFTH using a String value.
  */
  public void setE08SCHFTH(String newvalue)
  {
    fieldE08SCHFTH.setString(newvalue);
  }

  /**
  * Get value of field E08SCHFTH as a String.
  */
  public String getE08SCHFTH()
  {
    return fieldE08SCHFTH.getString();
  }

  /**
  * Set numeric field E08SCHFTH using a BigDecimal value.
  */
  public void setE08SCHFTH(BigDecimal newvalue)
  {
    fieldE08SCHFTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHFTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHFTH()
  {
    return fieldE08SCHFTH.getBigDecimal();
  }

  /**
  * Set field E08SCHFTM using a String value.
  */
  public void setE08SCHFTM(String newvalue)
  {
    fieldE08SCHFTM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHFTM as a String.
  */
  public String getE08SCHFTM()
  {
    return fieldE08SCHFTM.getString();
  }

  /**
  * Set numeric field E08SCHFTM using a BigDecimal value.
  */
  public void setE08SCHFTM(BigDecimal newvalue)
  {
    fieldE08SCHFTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHFTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHFTM()
  {
    return fieldE08SCHFTM.getBigDecimal();
  }

  /**
  * Set field E08SCHTTH using a String value.
  */
  public void setE08SCHTTH(String newvalue)
  {
    fieldE08SCHTTH.setString(newvalue);
  }

  /**
  * Get value of field E08SCHTTH as a String.
  */
  public String getE08SCHTTH()
  {
    return fieldE08SCHTTH.getString();
  }

  /**
  * Set numeric field E08SCHTTH using a BigDecimal value.
  */
  public void setE08SCHTTH(BigDecimal newvalue)
  {
    fieldE08SCHTTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHTTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHTTH()
  {
    return fieldE08SCHTTH.getBigDecimal();
  }

  /**
  * Set field E08SCHTTM using a String value.
  */
  public void setE08SCHTTM(String newvalue)
  {
    fieldE08SCHTTM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHTTM as a String.
  */
  public String getE08SCHTTM()
  {
    return fieldE08SCHTTM.getString();
  }

  /**
  * Set numeric field E08SCHTTM using a BigDecimal value.
  */
  public void setE08SCHTTM(BigDecimal newvalue)
  {
    fieldE08SCHTTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHTTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHTTM()
  {
    return fieldE08SCHTTM.getBigDecimal();
  }

  /**
  * Set field D08SCHTIM using a String value.
  */
  public void setD08SCHTIM(String newvalue)
  {
    fieldD08SCHTIM.setString(newvalue);
  }

  /**
  * Get value of field D08SCHTIM as a String.
  */
  public String getD08SCHTIM()
  {
    return fieldD08SCHTIM.getString();
  }

  /**
  * Set field E08SCHMIN using a String value.
  */
  public void setE08SCHMIN(String newvalue)
  {
    fieldE08SCHMIN.setString(newvalue);
  }

  /**
  * Get value of field E08SCHMIN as a String.
  */
  public String getE08SCHMIN()
  {
    return fieldE08SCHMIN.getString();
  }

  /**
  * Set numeric field E08SCHMIN using a BigDecimal value.
  */
  public void setE08SCHMIN(BigDecimal newvalue)
  {
    fieldE08SCHMIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHMIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHMIN()
  {
    return fieldE08SCHMIN.getBigDecimal();
  }

  /**
  * Set field E08SCHEYY using a String value.
  */
  public void setE08SCHEYY(String newvalue)
  {
    fieldE08SCHEYY.setString(newvalue);
  }

  /**
  * Get value of field E08SCHEYY as a String.
  */
  public String getE08SCHEYY()
  {
    return fieldE08SCHEYY.getString();
  }

  /**
  * Set numeric field E08SCHEYY using a BigDecimal value.
  */
  public void setE08SCHEYY(BigDecimal newvalue)
  {
    fieldE08SCHEYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHEYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHEYY()
  {
    return fieldE08SCHEYY.getBigDecimal();
  }

  /**
  * Set field E08SCHEMM using a String value.
  */
  public void setE08SCHEMM(String newvalue)
  {
    fieldE08SCHEMM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHEMM as a String.
  */
  public String getE08SCHEMM()
  {
    return fieldE08SCHEMM.getString();
  }

  /**
  * Set numeric field E08SCHEMM using a BigDecimal value.
  */
  public void setE08SCHEMM(BigDecimal newvalue)
  {
    fieldE08SCHEMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHEMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHEMM()
  {
    return fieldE08SCHEMM.getBigDecimal();
  }

  /**
  * Set field E08SCHEDD using a String value.
  */
  public void setE08SCHEDD(String newvalue)
  {
    fieldE08SCHEDD.setString(newvalue);
  }

  /**
  * Get value of field E08SCHEDD as a String.
  */
  public String getE08SCHEDD()
  {
    return fieldE08SCHEDD.getString();
  }

  /**
  * Set numeric field E08SCHEDD using a BigDecimal value.
  */
  public void setE08SCHEDD(BigDecimal newvalue)
  {
    fieldE08SCHEDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHEDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHEDD()
  {
    return fieldE08SCHEDD.getBigDecimal();
  }

  /**
  * Set field E08SCHCYY using a String value.
  */
  public void setE08SCHCYY(String newvalue)
  {
    fieldE08SCHCYY.setString(newvalue);
  }

  /**
  * Get value of field E08SCHCYY as a String.
  */
  public String getE08SCHCYY()
  {
    return fieldE08SCHCYY.getString();
  }

  /**
  * Set numeric field E08SCHCYY using a BigDecimal value.
  */
  public void setE08SCHCYY(BigDecimal newvalue)
  {
    fieldE08SCHCYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHCYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHCYY()
  {
    return fieldE08SCHCYY.getBigDecimal();
  }

  /**
  * Set field E08SCHCMM using a String value.
  */
  public void setE08SCHCMM(String newvalue)
  {
    fieldE08SCHCMM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHCMM as a String.
  */
  public String getE08SCHCMM()
  {
    return fieldE08SCHCMM.getString();
  }

  /**
  * Set numeric field E08SCHCMM using a BigDecimal value.
  */
  public void setE08SCHCMM(BigDecimal newvalue)
  {
    fieldE08SCHCMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHCMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHCMM()
  {
    return fieldE08SCHCMM.getBigDecimal();
  }

  /**
  * Set field E08SCHCDD using a String value.
  */
  public void setE08SCHCDD(String newvalue)
  {
    fieldE08SCHCDD.setString(newvalue);
  }

  /**
  * Get value of field E08SCHCDD as a String.
  */
  public String getE08SCHCDD()
  {
    return fieldE08SCHCDD.getString();
  }

  /**
  * Set numeric field E08SCHCDD using a BigDecimal value.
  */
  public void setE08SCHCDD(BigDecimal newvalue)
  {
    fieldE08SCHCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHCDD()
  {
    return fieldE08SCHCDD.getBigDecimal();
  }

  /**
  * Set field E08SCHCTT using a String value.
  */
  public void setE08SCHCTT(String newvalue)
  {
    fieldE08SCHCTT.setString(newvalue);
  }

  /**
  * Get value of field E08SCHCTT as a String.
  */
  public String getE08SCHCTT()
  {
    return fieldE08SCHCTT.getString();
  }

  /**
  * Set field E08SCHCMU using a String value.
  */
  public void setE08SCHCMU(String newvalue)
  {
    fieldE08SCHCMU.setString(newvalue);
  }

  /**
  * Get value of field E08SCHCMU as a String.
  */
  public String getE08SCHCMU()
  {
    return fieldE08SCHCMU.getString();
  }

  /**
  * Set field E08SCHLYY using a String value.
  */
  public void setE08SCHLYY(String newvalue)
  {
    fieldE08SCHLYY.setString(newvalue);
  }

  /**
  * Get value of field E08SCHLYY as a String.
  */
  public String getE08SCHLYY()
  {
    return fieldE08SCHLYY.getString();
  }

  /**
  * Set numeric field E08SCHLYY using a BigDecimal value.
  */
  public void setE08SCHLYY(BigDecimal newvalue)
  {
    fieldE08SCHLYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHLYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHLYY()
  {
    return fieldE08SCHLYY.getBigDecimal();
  }

  /**
  * Set field E08SCHLMM using a String value.
  */
  public void setE08SCHLMM(String newvalue)
  {
    fieldE08SCHLMM.setString(newvalue);
  }

  /**
  * Get value of field E08SCHLMM as a String.
  */
  public String getE08SCHLMM()
  {
    return fieldE08SCHLMM.getString();
  }

  /**
  * Set numeric field E08SCHLMM using a BigDecimal value.
  */
  public void setE08SCHLMM(BigDecimal newvalue)
  {
    fieldE08SCHLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHLMM()
  {
    return fieldE08SCHLMM.getBigDecimal();
  }

  /**
  * Set field E08SCHLDD using a String value.
  */
  public void setE08SCHLDD(String newvalue)
  {
    fieldE08SCHLDD.setString(newvalue);
  }

  /**
  * Get value of field E08SCHLDD as a String.
  */
  public String getE08SCHLDD()
  {
    return fieldE08SCHLDD.getString();
  }

  /**
  * Set numeric field E08SCHLDD using a BigDecimal value.
  */
  public void setE08SCHLDD(BigDecimal newvalue)
  {
    fieldE08SCHLDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08SCHLDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08SCHLDD()
  {
    return fieldE08SCHLDD.getBigDecimal();
  }

  /**
  * Set field E08SCHLTT using a String value.
  */
  public void setE08SCHLTT(String newvalue)
  {
    fieldE08SCHLTT.setString(newvalue);
  }

  /**
  * Get value of field E08SCHLTT as a String.
  */
  public String getE08SCHLTT()
  {
    return fieldE08SCHLTT.getString();
  }

  /**
  * Set field E08SCHLMU using a String value.
  */
  public void setE08SCHLMU(String newvalue)
  {
    fieldE08SCHLMU.setString(newvalue);
  }

  /**
  * Get value of field E08SCHLMU as a String.
  */
  public String getE08SCHLMU()
  {
    return fieldE08SCHLMU.getString();
  }

  /**
  * Set field E08NUMREC using a String value.
  */
  public void setE08NUMREC(String newvalue)
  {
    fieldE08NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E08NUMREC as a String.
  */
  public String getE08NUMREC()
  {
    return fieldE08NUMREC.getString();
  }

  /**
  * Set numeric field E08NUMREC using a BigDecimal value.
  */
  public void setE08NUMREC(BigDecimal newvalue)
  {
    fieldE08NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E08NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE08NUMREC()
  {
    return fieldE08NUMREC.getBigDecimal();
  }

  /**
  * Set field E08INDOPE using a String value.
  */
  public void setE08INDOPE(String newvalue)
  {
    fieldE08INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E08INDOPE as a String.
  */
  public String getE08INDOPE()
  {
    return fieldE08INDOPE.getString();
  }

}
