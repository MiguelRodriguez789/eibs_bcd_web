package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL000111 physical file definition.
* 
* File level identifier is 1100706173537.
* Record format level identifier is 3225D23786DF4.
*/

public class ECL000111Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "ECLBNK",
                                     "ECLCCY",
                                     "ECLLUY",
                                     "ECLLUM",
                                     "ECLLUD",
                                     "RATDSC",
                                     "RTREXR",
                                     "RTRUSD",
                                     "RATCYA",
                                     "ECLXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "ECLBNK",
                                   "ECLCCY",
                                   "ECLLUY",
                                   "ECLLUM",
                                   "ECLLUD",
                                   "RATDSC",
                                   "RTREXR",
                                   "RTRUSD",
                                   "RATCYA",
                                   "ECLXRT"
                                 };
  final static String fid = "1100706173537";
  final static String rid = "3225D23786DF4";
  final static String fmtname = "ECL000111";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldECLBNK = null;
  private CharacterField fieldECLCCY = null;
  private DecimalField fieldECLLUY = null;
  private DecimalField fieldECLLUM = null;
  private DecimalField fieldECLLUD = null;
  private CharacterField fieldRATDSC = null;
  private DecimalField fieldRTREXR = null;
  private DecimalField fieldRTRUSD = null;
  private CharacterField fieldRATCYA = null;
  private DecimalField fieldECLXRT = null;

  /**
  * Constructor for ECL000111Message.
  */
  public ECL000111Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 131;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldECLBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "ECLBNK");
    fields[10] = fieldECLCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "ECLCCY");
    fields[11] = fieldECLLUY =
    new DecimalField(message, HEADERSIZE + 47, 3, 0, "ECLLUY");
    fields[12] = fieldECLLUM =
    new DecimalField(message, HEADERSIZE + 50, 3, 0, "ECLLUM");
    fields[13] = fieldECLLUD =
    new DecimalField(message, HEADERSIZE + 53, 3, 0, "ECLLUD");
    fields[14] = fieldRATDSC =
    new CharacterField(message, HEADERSIZE + 56, 35, "RATDSC");
    fields[15] = fieldRTREXR =
    new DecimalField(message, HEADERSIZE + 91, 13, 6, "RTREXR");
    fields[16] = fieldRTRUSD =
    new DecimalField(message, HEADERSIZE + 104, 13, 6, "RTRUSD");
    fields[17] = fieldRATCYA =
    new CharacterField(message, HEADERSIZE + 117, 12, "RATCYA");
    fields[18] = fieldECLXRT =
    new DecimalField(message, HEADERSIZE + 129, 2, 0, "ECLXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field ECLBNK using a String value.
  */
  public void setECLBNK(String newvalue)
  {
    fieldECLBNK.setString(newvalue);
  }

  /**
  * Get value of field ECLBNK as a String.
  */
  public String getECLBNK()
  {
    return fieldECLBNK.getString();
  }

  /**
  * Set field ECLCCY using a String value.
  */
  public void setECLCCY(String newvalue)
  {
    fieldECLCCY.setString(newvalue);
  }

  /**
  * Get value of field ECLCCY as a String.
  */
  public String getECLCCY()
  {
    return fieldECLCCY.getString();
  }

  /**
  * Set field ECLLUY using a String value.
  */
  public void setECLLUY(String newvalue)
  {
    fieldECLLUY.setString(newvalue);
  }

  /**
  * Get value of field ECLLUY as a String.
  */
  public String getECLLUY()
  {
    return fieldECLLUY.getString();
  }

  /**
  * Set numeric field ECLLUY using a BigDecimal value.
  */
  public void setECLLUY(BigDecimal newvalue)
  {
    fieldECLLUY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLLUY as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLLUY()
  {
    return fieldECLLUY.getBigDecimal();
  }

  /**
  * Set field ECLLUM using a String value.
  */
  public void setECLLUM(String newvalue)
  {
    fieldECLLUM.setString(newvalue);
  }

  /**
  * Get value of field ECLLUM as a String.
  */
  public String getECLLUM()
  {
    return fieldECLLUM.getString();
  }

  /**
  * Set numeric field ECLLUM using a BigDecimal value.
  */
  public void setECLLUM(BigDecimal newvalue)
  {
    fieldECLLUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLLUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLLUM()
  {
    return fieldECLLUM.getBigDecimal();
  }

  /**
  * Set field ECLLUD using a String value.
  */
  public void setECLLUD(String newvalue)
  {
    fieldECLLUD.setString(newvalue);
  }

  /**
  * Get value of field ECLLUD as a String.
  */
  public String getECLLUD()
  {
    return fieldECLLUD.getString();
  }

  /**
  * Set numeric field ECLLUD using a BigDecimal value.
  */
  public void setECLLUD(BigDecimal newvalue)
  {
    fieldECLLUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLLUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLLUD()
  {
    return fieldECLLUD.getBigDecimal();
  }

  /**
  * Set field RATDSC using a String value.
  */
  public void setRATDSC(String newvalue)
  {
    fieldRATDSC.setString(newvalue);
  }

  /**
  * Get value of field RATDSC as a String.
  */
  public String getRATDSC()
  {
    return fieldRATDSC.getString();
  }

  /**
  * Set field RTREXR using a String value.
  */
  public void setRTREXR(String newvalue)
  {
    fieldRTREXR.setString(newvalue);
  }

  /**
  * Get value of field RTREXR as a String.
  */
  public String getRTREXR()
  {
    return fieldRTREXR.getString();
  }

  /**
  * Set numeric field RTREXR using a BigDecimal value.
  */
  public void setRTREXR(BigDecimal newvalue)
  {
    fieldRTREXR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RTREXR as a BigDecimal.
  */
  public BigDecimal getBigDecimalRTREXR()
  {
    return fieldRTREXR.getBigDecimal();
  }

  /**
  * Set field RTRUSD using a String value.
  */
  public void setRTRUSD(String newvalue)
  {
    fieldRTRUSD.setString(newvalue);
  }

  /**
  * Get value of field RTRUSD as a String.
  */
  public String getRTRUSD()
  {
    return fieldRTRUSD.getString();
  }

  /**
  * Set numeric field RTRUSD using a BigDecimal value.
  */
  public void setRTRUSD(BigDecimal newvalue)
  {
    fieldRTRUSD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RTRUSD as a BigDecimal.
  */
  public BigDecimal getBigDecimalRTRUSD()
  {
    return fieldRTRUSD.getBigDecimal();
  }

  /**
  * Set field RATCYA using a String value.
  */
  public void setRATCYA(String newvalue)
  {
    fieldRATCYA.setString(newvalue);
  }

  /**
  * Get value of field RATCYA as a String.
  */
  public String getRATCYA()
  {
    return fieldRATCYA.getString();
  }

  /**
  * Set field ECLXRT using a String value.
  */
  public void setECLXRT(String newvalue)
  {
    fieldECLXRT.setString(newvalue);
  }

  /**
  * Get value of field ECLXRT as a String.
  */
  public String getECLXRT()
  {
    return fieldECLXRT.getString();
  }

  /**
  * Set numeric field ECLXRT using a BigDecimal value.
  */
  public void setECLXRT(BigDecimal newvalue)
  {
    fieldECLXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLXRT()
  {
    return fieldECLXRT.getBigDecimal();
  }

}
