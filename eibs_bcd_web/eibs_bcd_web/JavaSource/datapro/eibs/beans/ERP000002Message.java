package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERP000002 physical file definition.
* 
* File level identifier is 1160818112709.
* Record format level identifier is 461176312E303.
*/

public class ERP000002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02RPTRPN",
                                     "E02RPTSEQ",
                                     "E02RPTCOD",
                                     "E02RPTINS",
                                     "E02RPTDFT",
                                     "E02RPTHLP",
                                     "E02RPTHID",
                                     "E02RPTLIF",
                                     "E02RPTPTY",
                                     "E02RPTPLN",
                                     "E02RPTNDC",
                                     "D02CODDSC",
                                     "D02IBSDSC",
                                     "E02CDM",
                                     "E02CDD",
                                     "E02CDY",
                                     "E02CTM",
                                     "E02CUS",
                                     "E02MDM",
                                     "E02MDD",
                                     "E02MDY",
                                     "E02MTM",
                                     "E02MUS",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02RPTRPN",
                                   "E02RPTSEQ",
                                   "E02RPTCOD",
                                   "E02RPTINS",
                                   "E02RPTDFT",
                                   "E02RPTHLP",
                                   "E02RPTHID",
                                   "E02RPTLIF",
                                   "E02RPTPTY",
                                   "E02RPTPLN",
                                   "E02RPTNDC",
                                   "D02CODDSC",
                                   "D02IBSDSC",
                                   "E02CDM",
                                   "E02CDD",
                                   "E02CDY",
                                   "E02CTM",
                                   "E02CUS",
                                   "E02MDM",
                                   "E02MDD",
                                   "E02MDY",
                                   "E02MTM",
                                   "E02MUS",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1160818112709";
  final static String rid = "461176312E303";
  final static String fmtname = "ERP000002";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02RPTRPN = null;
  private DecimalField fieldE02RPTSEQ = null;
  private CharacterField fieldE02RPTCOD = null;
  private CharacterField fieldE02RPTINS = null;
  private CharacterField fieldE02RPTDFT = null;
  private CharacterField fieldE02RPTHLP = null;
  private CharacterField fieldE02RPTHID = null;
  private CharacterField fieldE02RPTLIF = null;
  private CharacterField fieldE02RPTPTY = null;
  private DecimalField fieldE02RPTPLN = null;
  private DecimalField fieldE02RPTNDC = null;
  private CharacterField fieldD02CODDSC = null;
  private CharacterField fieldD02IBSDSC = null;
  private DecimalField fieldE02CDM = null;
  private DecimalField fieldE02CDD = null;
  private DecimalField fieldE02CDY = null;
  private CharacterField fieldE02CTM = null;
  private CharacterField fieldE02CUS = null;
  private DecimalField fieldE02MDM = null;
  private DecimalField fieldE02MDD = null;
  private DecimalField fieldE02MDY = null;
  private CharacterField fieldE02MTM = null;
  private CharacterField fieldE02MUS = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for ERP000002Message.
  */
  public ERP000002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1028;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02RPTRPN =
    new CharacterField(message, HEADERSIZE + 42, 10, "E02RPTRPN");
    fields[10] = fieldE02RPTSEQ =
    new DecimalField(message, HEADERSIZE + 52, 3, 0, "E02RPTSEQ");
    fields[11] = fieldE02RPTCOD =
    new CharacterField(message, HEADERSIZE + 55, 2, "E02RPTCOD");
    fields[12] = fieldE02RPTINS =
    new CharacterField(message, HEADERSIZE + 57, 256, "E02RPTINS");
    fields[13] = fieldE02RPTDFT =
    new CharacterField(message, HEADERSIZE + 313, 256, "E02RPTDFT");
    fields[14] = fieldE02RPTHLP =
    new CharacterField(message, HEADERSIZE + 569, 256, "E02RPTHLP");
    fields[15] = fieldE02RPTHID =
    new CharacterField(message, HEADERSIZE + 825, 1, "E02RPTHID");
    fields[16] = fieldE02RPTLIF =
    new CharacterField(message, HEADERSIZE + 826, 1, "E02RPTLIF");
    fields[17] = fieldE02RPTPTY =
    new CharacterField(message, HEADERSIZE + 827, 1, "E02RPTPTY");
    fields[18] = fieldE02RPTPLN =
    new DecimalField(message, HEADERSIZE + 828, 4, 0, "E02RPTPLN");
    fields[19] = fieldE02RPTNDC =
    new DecimalField(message, HEADERSIZE + 832, 3, 0, "E02RPTNDC");
    fields[20] = fieldD02CODDSC =
    new CharacterField(message, HEADERSIZE + 835, 45, "D02CODDSC");
    fields[21] = fieldD02IBSDSC =
    new CharacterField(message, HEADERSIZE + 880, 45, "D02IBSDSC");
    fields[22] = fieldE02CDM =
    new DecimalField(message, HEADERSIZE + 925, 3, 0, "E02CDM");
    fields[23] = fieldE02CDD =
    new DecimalField(message, HEADERSIZE + 928, 3, 0, "E02CDD");
    fields[24] = fieldE02CDY =
    new DecimalField(message, HEADERSIZE + 931, 5, 0, "E02CDY");
    fields[25] = fieldE02CTM =
    new CharacterField(message, HEADERSIZE + 936, 26, "E02CTM");
    fields[26] = fieldE02CUS =
    new CharacterField(message, HEADERSIZE + 962, 10, "E02CUS");
    fields[27] = fieldE02MDM =
    new DecimalField(message, HEADERSIZE + 972, 3, 0, "E02MDM");
    fields[28] = fieldE02MDD =
    new DecimalField(message, HEADERSIZE + 975, 3, 0, "E02MDD");
    fields[29] = fieldE02MDY =
    new DecimalField(message, HEADERSIZE + 978, 5, 0, "E02MDY");
    fields[30] = fieldE02MTM =
    new CharacterField(message, HEADERSIZE + 983, 26, "E02MTM");
    fields[31] = fieldE02MUS =
    new CharacterField(message, HEADERSIZE + 1009, 10, "E02MUS");
    fields[32] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 1019, 8, 0, "E02NUMREC");
    fields[33] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 1027, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02RPTRPN using a String value.
  */
  public void setE02RPTRPN(String newvalue)
  {
    fieldE02RPTRPN.setString(newvalue);
  }

  /**
  * Get value of field E02RPTRPN as a String.
  */
  public String getE02RPTRPN()
  {
    return fieldE02RPTRPN.getString();
  }

  /**
  * Set field E02RPTSEQ using a String value.
  */
  public void setE02RPTSEQ(String newvalue)
  {
    fieldE02RPTSEQ.setString(newvalue);
  }

  /**
  * Get value of field E02RPTSEQ as a String.
  */
  public String getE02RPTSEQ()
  {
    return fieldE02RPTSEQ.getString();
  }

  /**
  * Set numeric field E02RPTSEQ using a BigDecimal value.
  */
  public void setE02RPTSEQ(BigDecimal newvalue)
  {
    fieldE02RPTSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RPTSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RPTSEQ()
  {
    return fieldE02RPTSEQ.getBigDecimal();
  }

  /**
  * Set field E02RPTCOD using a String value.
  */
  public void setE02RPTCOD(String newvalue)
  {
    fieldE02RPTCOD.setString(newvalue);
  }

  /**
  * Get value of field E02RPTCOD as a String.
  */
  public String getE02RPTCOD()
  {
    return fieldE02RPTCOD.getString();
  }

  /**
  * Set field E02RPTINS using a String value.
  */
  public void setE02RPTINS(String newvalue)
  {
    fieldE02RPTINS.setString(newvalue);
  }

  /**
  * Get value of field E02RPTINS as a String.
  */
  public String getE02RPTINS()
  {
    return fieldE02RPTINS.getString();
  }

  /**
  * Set field E02RPTDFT using a String value.
  */
  public void setE02RPTDFT(String newvalue)
  {
    fieldE02RPTDFT.setString(newvalue);
  }

  /**
  * Get value of field E02RPTDFT as a String.
  */
  public String getE02RPTDFT()
  {
    return fieldE02RPTDFT.getString();
  }

  /**
  * Set field E02RPTHLP using a String value.
  */
  public void setE02RPTHLP(String newvalue)
  {
    fieldE02RPTHLP.setString(newvalue);
  }

  /**
  * Get value of field E02RPTHLP as a String.
  */
  public String getE02RPTHLP()
  {
    return fieldE02RPTHLP.getString();
  }

  /**
  * Set field E02RPTHID using a String value.
  */
  public void setE02RPTHID(String newvalue)
  {
    fieldE02RPTHID.setString(newvalue);
  }

  /**
  * Get value of field E02RPTHID as a String.
  */
  public String getE02RPTHID()
  {
    return fieldE02RPTHID.getString();
  }

  /**
  * Set field E02RPTLIF using a String value.
  */
  public void setE02RPTLIF(String newvalue)
  {
    fieldE02RPTLIF.setString(newvalue);
  }

  /**
  * Get value of field E02RPTLIF as a String.
  */
  public String getE02RPTLIF()
  {
    return fieldE02RPTLIF.getString();
  }

  /**
  * Set field E02RPTPTY using a String value.
  */
  public void setE02RPTPTY(String newvalue)
  {
    fieldE02RPTPTY.setString(newvalue);
  }

  /**
  * Get value of field E02RPTPTY as a String.
  */
  public String getE02RPTPTY()
  {
    return fieldE02RPTPTY.getString();
  }

  /**
  * Set field E02RPTPLN using a String value.
  */
  public void setE02RPTPLN(String newvalue)
  {
    fieldE02RPTPLN.setString(newvalue);
  }

  /**
  * Get value of field E02RPTPLN as a String.
  */
  public String getE02RPTPLN()
  {
    return fieldE02RPTPLN.getString();
  }

  /**
  * Set numeric field E02RPTPLN using a BigDecimal value.
  */
  public void setE02RPTPLN(BigDecimal newvalue)
  {
    fieldE02RPTPLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RPTPLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RPTPLN()
  {
    return fieldE02RPTPLN.getBigDecimal();
  }

  /**
  * Set field E02RPTNDC using a String value.
  */
  public void setE02RPTNDC(String newvalue)
  {
    fieldE02RPTNDC.setString(newvalue);
  }

  /**
  * Get value of field E02RPTNDC as a String.
  */
  public String getE02RPTNDC()
  {
    return fieldE02RPTNDC.getString();
  }

  /**
  * Set numeric field E02RPTNDC using a BigDecimal value.
  */
  public void setE02RPTNDC(BigDecimal newvalue)
  {
    fieldE02RPTNDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RPTNDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RPTNDC()
  {
    return fieldE02RPTNDC.getBigDecimal();
  }

  /**
  * Set field D02CODDSC using a String value.
  */
  public void setD02CODDSC(String newvalue)
  {
    fieldD02CODDSC.setString(newvalue);
  }

  /**
  * Get value of field D02CODDSC as a String.
  */
  public String getD02CODDSC()
  {
    return fieldD02CODDSC.getString();
  }

  /**
  * Set field D02IBSDSC using a String value.
  */
  public void setD02IBSDSC(String newvalue)
  {
    fieldD02IBSDSC.setString(newvalue);
  }

  /**
  * Get value of field D02IBSDSC as a String.
  */
  public String getD02IBSDSC()
  {
    return fieldD02IBSDSC.getString();
  }

  /**
  * Set field E02CDM using a String value.
  */
  public void setE02CDM(String newvalue)
  {
    fieldE02CDM.setString(newvalue);
  }

  /**
  * Get value of field E02CDM as a String.
  */
  public String getE02CDM()
  {
    return fieldE02CDM.getString();
  }

  /**
  * Set numeric field E02CDM using a BigDecimal value.
  */
  public void setE02CDM(BigDecimal newvalue)
  {
    fieldE02CDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDM()
  {
    return fieldE02CDM.getBigDecimal();
  }

  /**
  * Set field E02CDD using a String value.
  */
  public void setE02CDD(String newvalue)
  {
    fieldE02CDD.setString(newvalue);
  }

  /**
  * Get value of field E02CDD as a String.
  */
  public String getE02CDD()
  {
    return fieldE02CDD.getString();
  }

  /**
  * Set numeric field E02CDD using a BigDecimal value.
  */
  public void setE02CDD(BigDecimal newvalue)
  {
    fieldE02CDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDD()
  {
    return fieldE02CDD.getBigDecimal();
  }

  /**
  * Set field E02CDY using a String value.
  */
  public void setE02CDY(String newvalue)
  {
    fieldE02CDY.setString(newvalue);
  }

  /**
  * Get value of field E02CDY as a String.
  */
  public String getE02CDY()
  {
    return fieldE02CDY.getString();
  }

  /**
  * Set numeric field E02CDY using a BigDecimal value.
  */
  public void setE02CDY(BigDecimal newvalue)
  {
    fieldE02CDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDY()
  {
    return fieldE02CDY.getBigDecimal();
  }

  /**
  * Set field E02CTM using a String value.
  */
  public void setE02CTM(String newvalue)
  {
    fieldE02CTM.setString(newvalue);
  }

  /**
  * Get value of field E02CTM as a String.
  */
  public String getE02CTM()
  {
    return fieldE02CTM.getString();
  }

  /**
  * Set field E02CUS using a String value.
  */
  public void setE02CUS(String newvalue)
  {
    fieldE02CUS.setString(newvalue);
  }

  /**
  * Get value of field E02CUS as a String.
  */
  public String getE02CUS()
  {
    return fieldE02CUS.getString();
  }

  /**
  * Set field E02MDM using a String value.
  */
  public void setE02MDM(String newvalue)
  {
    fieldE02MDM.setString(newvalue);
  }

  /**
  * Get value of field E02MDM as a String.
  */
  public String getE02MDM()
  {
    return fieldE02MDM.getString();
  }

  /**
  * Set numeric field E02MDM using a BigDecimal value.
  */
  public void setE02MDM(BigDecimal newvalue)
  {
    fieldE02MDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MDM()
  {
    return fieldE02MDM.getBigDecimal();
  }

  /**
  * Set field E02MDD using a String value.
  */
  public void setE02MDD(String newvalue)
  {
    fieldE02MDD.setString(newvalue);
  }

  /**
  * Get value of field E02MDD as a String.
  */
  public String getE02MDD()
  {
    return fieldE02MDD.getString();
  }

  /**
  * Set numeric field E02MDD using a BigDecimal value.
  */
  public void setE02MDD(BigDecimal newvalue)
  {
    fieldE02MDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MDD()
  {
    return fieldE02MDD.getBigDecimal();
  }

  /**
  * Set field E02MDY using a String value.
  */
  public void setE02MDY(String newvalue)
  {
    fieldE02MDY.setString(newvalue);
  }

  /**
  * Get value of field E02MDY as a String.
  */
  public String getE02MDY()
  {
    return fieldE02MDY.getString();
  }

  /**
  * Set numeric field E02MDY using a BigDecimal value.
  */
  public void setE02MDY(BigDecimal newvalue)
  {
    fieldE02MDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MDY()
  {
    return fieldE02MDY.getBigDecimal();
  }

  /**
  * Set field E02MTM using a String value.
  */
  public void setE02MTM(String newvalue)
  {
    fieldE02MTM.setString(newvalue);
  }

  /**
  * Get value of field E02MTM as a String.
  */
  public String getE02MTM()
  {
    return fieldE02MTM.getString();
  }

  /**
  * Set field E02MUS using a String value.
  */
  public void setE02MUS(String newvalue)
  {
    fieldE02MUS.setString(newvalue);
  }

  /**
  * Get value of field E02MUS as a String.
  */
  public String getE02MUS()
  {
    return fieldE02MUS.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
