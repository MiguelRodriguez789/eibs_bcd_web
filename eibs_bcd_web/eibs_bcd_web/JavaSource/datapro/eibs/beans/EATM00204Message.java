package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EATM00204 physical file definition.
* 
* File level identifier is 1190102164715.
* Record format level identifier is 4A16863B9A386.
*/

public class EATM00204Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "E04MOVBNK",
                                     "E04MOVCCY",
                                     "E04MOVTID",
                                     "E04PARRYY",
                                     "E04PARRMM",
                                     "E04PARRDD",
                                     "E04TOTTIM",
                                     "E04TOTARQ",
                                     "E04TOTAPR",
                                     "E04TOTMOV",
                                     "E04FLGCLO",
                                     "E04NUMREC",
                                     "E04INDOPE"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "E04MOVBNK",
                                   "E04MOVCCY",
                                   "E04MOVTID",
                                   "E04PARRYY",
                                   "E04PARRMM",
                                   "E04PARRDD",
                                   "E04TOTTIM",
                                   "E04TOTARQ",
                                   "E04TOTAPR",
                                   "E04TOTMOV",
                                   "E04FLGCLO",
                                   "E04NUMREC",
                                   "E04INDOPE"
                                 };
  final static String fid = "1190102164715";
  final static String rid = "4A16863B9A386";
  final static String fmtname = "EATM00204";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private CharacterField fieldE04MOVBNK = null;
  private CharacterField fieldE04MOVCCY = null;
  private CharacterField fieldE04MOVTID = null;
  private DecimalField fieldE04PARRYY = null;
  private DecimalField fieldE04PARRMM = null;
  private DecimalField fieldE04PARRDD = null;
  private DecimalField fieldE04TOTTIM = null;
  private DecimalField fieldE04TOTARQ = null;
  private DecimalField fieldE04TOTAPR = null;
  private DecimalField fieldE04TOTMOV = null;
  private CharacterField fieldE04FLGCLO = null;
  private DecimalField fieldE04NUMREC = null;
  private CharacterField fieldE04INDOPE = null;

  /**
  * Constructor for EATM00204Message.
  */
  public EATM00204Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 162;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldE04MOVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E04MOVBNK");
    fields[10] = fieldE04MOVCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E04MOVCCY");
    fields[11] = fieldE04MOVTID =
    new CharacterField(message, HEADERSIZE + 47, 10, "E04MOVTID");
    fields[12] = fieldE04PARRYY =
    new DecimalField(message, HEADERSIZE + 57, 5, 0, "E04PARRYY");
    fields[13] = fieldE04PARRMM =
    new DecimalField(message, HEADERSIZE + 62, 3, 0, "E04PARRMM");
    fields[14] = fieldE04PARRDD =
    new DecimalField(message, HEADERSIZE + 65, 3, 0, "E04PARRDD");
    fields[15] = fieldE04TOTTIM =
    new DecimalField(message, HEADERSIZE + 68, 21, 2, "E04TOTTIM");
    fields[16] = fieldE04TOTARQ =
    new DecimalField(message, HEADERSIZE + 89, 21, 2, "E04TOTARQ");
    fields[17] = fieldE04TOTAPR =
    new DecimalField(message, HEADERSIZE + 110, 21, 2, "E04TOTAPR");
    fields[18] = fieldE04TOTMOV =
    new DecimalField(message, HEADERSIZE + 131, 21, 2, "E04TOTMOV");
    fields[19] = fieldE04FLGCLO =
    new CharacterField(message, HEADERSIZE + 152, 1, "E04FLGCLO");
    fields[20] = fieldE04NUMREC =
    new DecimalField(message, HEADERSIZE + 153, 8, 0, "E04NUMREC");
    fields[21] = fieldE04INDOPE =
    new CharacterField(message, HEADERSIZE + 161, 1, "E04INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field E04MOVBNK using a String value.
  */
  public void setE04MOVBNK(String newvalue)
  {
    fieldE04MOVBNK.setString(newvalue);
  }

  /**
  * Get value of field E04MOVBNK as a String.
  */
  public String getE04MOVBNK()
  {
    return fieldE04MOVBNK.getString();
  }

  /**
  * Set field E04MOVCCY using a String value.
  */
  public void setE04MOVCCY(String newvalue)
  {
    fieldE04MOVCCY.setString(newvalue);
  }

  /**
  * Get value of field E04MOVCCY as a String.
  */
  public String getE04MOVCCY()
  {
    return fieldE04MOVCCY.getString();
  }

  /**
  * Set field E04MOVTID using a String value.
  */
  public void setE04MOVTID(String newvalue)
  {
    fieldE04MOVTID.setString(newvalue);
  }

  /**
  * Get value of field E04MOVTID as a String.
  */
  public String getE04MOVTID()
  {
    return fieldE04MOVTID.getString();
  }

  /**
  * Set field E04PARRYY using a String value.
  */
  public void setE04PARRYY(String newvalue)
  {
    fieldE04PARRYY.setString(newvalue);
  }

  /**
  * Get value of field E04PARRYY as a String.
  */
  public String getE04PARRYY()
  {
    return fieldE04PARRYY.getString();
  }

  /**
  * Set numeric field E04PARRYY using a BigDecimal value.
  */
  public void setE04PARRYY(BigDecimal newvalue)
  {
    fieldE04PARRYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04PARRYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04PARRYY()
  {
    return fieldE04PARRYY.getBigDecimal();
  }

  /**
  * Set field E04PARRMM using a String value.
  */
  public void setE04PARRMM(String newvalue)
  {
    fieldE04PARRMM.setString(newvalue);
  }

  /**
  * Get value of field E04PARRMM as a String.
  */
  public String getE04PARRMM()
  {
    return fieldE04PARRMM.getString();
  }

  /**
  * Set numeric field E04PARRMM using a BigDecimal value.
  */
  public void setE04PARRMM(BigDecimal newvalue)
  {
    fieldE04PARRMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04PARRMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04PARRMM()
  {
    return fieldE04PARRMM.getBigDecimal();
  }

  /**
  * Set field E04PARRDD using a String value.
  */
  public void setE04PARRDD(String newvalue)
  {
    fieldE04PARRDD.setString(newvalue);
  }

  /**
  * Get value of field E04PARRDD as a String.
  */
  public String getE04PARRDD()
  {
    return fieldE04PARRDD.getString();
  }

  /**
  * Set numeric field E04PARRDD using a BigDecimal value.
  */
  public void setE04PARRDD(BigDecimal newvalue)
  {
    fieldE04PARRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04PARRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04PARRDD()
  {
    return fieldE04PARRDD.getBigDecimal();
  }

  /**
  * Set field E04TOTTIM using a String value.
  */
  public void setE04TOTTIM(String newvalue)
  {
    fieldE04TOTTIM.setString(newvalue);
  }

  /**
  * Get value of field E04TOTTIM as a String.
  */
  public String getE04TOTTIM()
  {
    return fieldE04TOTTIM.getString();
  }

  /**
  * Set numeric field E04TOTTIM using a BigDecimal value.
  */
  public void setE04TOTTIM(BigDecimal newvalue)
  {
    fieldE04TOTTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04TOTTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04TOTTIM()
  {
    return fieldE04TOTTIM.getBigDecimal();
  }

  /**
  * Set field E04TOTARQ using a String value.
  */
  public void setE04TOTARQ(String newvalue)
  {
    fieldE04TOTARQ.setString(newvalue);
  }

  /**
  * Get value of field E04TOTARQ as a String.
  */
  public String getE04TOTARQ()
  {
    return fieldE04TOTARQ.getString();
  }

  /**
  * Set numeric field E04TOTARQ using a BigDecimal value.
  */
  public void setE04TOTARQ(BigDecimal newvalue)
  {
    fieldE04TOTARQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04TOTARQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04TOTARQ()
  {
    return fieldE04TOTARQ.getBigDecimal();
  }

  /**
  * Set field E04TOTAPR using a String value.
  */
  public void setE04TOTAPR(String newvalue)
  {
    fieldE04TOTAPR.setString(newvalue);
  }

  /**
  * Get value of field E04TOTAPR as a String.
  */
  public String getE04TOTAPR()
  {
    return fieldE04TOTAPR.getString();
  }

  /**
  * Set numeric field E04TOTAPR using a BigDecimal value.
  */
  public void setE04TOTAPR(BigDecimal newvalue)
  {
    fieldE04TOTAPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04TOTAPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04TOTAPR()
  {
    return fieldE04TOTAPR.getBigDecimal();
  }

  /**
  * Set field E04TOTMOV using a String value.
  */
  public void setE04TOTMOV(String newvalue)
  {
    fieldE04TOTMOV.setString(newvalue);
  }

  /**
  * Get value of field E04TOTMOV as a String.
  */
  public String getE04TOTMOV()
  {
    return fieldE04TOTMOV.getString();
  }

  /**
  * Set numeric field E04TOTMOV using a BigDecimal value.
  */
  public void setE04TOTMOV(BigDecimal newvalue)
  {
    fieldE04TOTMOV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04TOTMOV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04TOTMOV()
  {
    return fieldE04TOTMOV.getBigDecimal();
  }

  /**
  * Set field E04FLGCLO using a String value.
  */
  public void setE04FLGCLO(String newvalue)
  {
    fieldE04FLGCLO.setString(newvalue);
  }

  /**
  * Get value of field E04FLGCLO as a String.
  */
  public String getE04FLGCLO()
  {
    return fieldE04FLGCLO.getString();
  }

  /**
  * Set field E04NUMREC using a String value.
  */
  public void setE04NUMREC(String newvalue)
  {
    fieldE04NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E04NUMREC as a String.
  */
  public String getE04NUMREC()
  {
    return fieldE04NUMREC.getString();
  }

  /**
  * Set numeric field E04NUMREC using a BigDecimal value.
  */
  public void setE04NUMREC(BigDecimal newvalue)
  {
    fieldE04NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04NUMREC()
  {
    return fieldE04NUMREC.getBigDecimal();
  }

  /**
  * Set field E04INDOPE using a String value.
  */
  public void setE04INDOPE(String newvalue)
  {
    fieldE04INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E04INDOPE as a String.
  */
  public String getE04INDOPE()
  {
    return fieldE04INDOPE.getString();
  }

}
