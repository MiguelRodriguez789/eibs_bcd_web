package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EACH00001 physical file definition.
* 
* File level identifier is 1110211175838.
* Record format level identifier is 3DB5C9531A41B.
*/

public class EACH00001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACHTYP",
                                     "E01ACHNUM",
                                     "E01ACHCUN",
                                     "E01ACHACC",
                                     "E01ACHOPE",
                                     "E01ACHVDY",
                                     "E01ACHVDM",
                                     "E01ACHVDD",
                                     "E01ACHBTH",
                                     "E01ACHECD",
                                     "E01ACHROU",
                                     "E01ACHDAC",
                                     "E01ACHACT",
                                     "E01ACHCCY",
                                     "E01ACHAMT",
                                     "E01ACHADD",
                                     "E01ACHNME",
                                     "E01ACHADR",
                                     "E01ACHCSZ",
                                     "E01ACHEMA",
                                     "E01ACHSTS",
                                     "E01OPRDTE",
                                     "E01PRCDTE",
                                     "E01ACHERR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACHTYP",
                                   "E01ACHNUM",
                                   "E01ACHCUN",
                                   "E01ACHACC",
                                   "E01ACHOPE",
                                   "E01ACHVDY",
                                   "E01ACHVDM",
                                   "E01ACHVDD",
                                   "E01ACHBTH",
                                   "E01ACHECD",
                                   "E01ACHROU",
                                   "E01ACHDAC",
                                   "E01ACHACT",
                                   "E01ACHCCY",
                                   "E01ACHAMT",
                                   "E01ACHADD",
                                   "E01ACHNME",
                                   "E01ACHADR",
                                   "E01ACHCSZ",
                                   "E01ACHEMA",
                                   "E01ACHSTS",
                                   "E01OPRDTE",
                                   "E01PRCDTE",
                                   "E01ACHERR"
                                 };
  final static String fid = "1110211175838";
  final static String rid = "3DB5C9531A41B";
  final static String fmtname = "EACH00001";
  final int FIELDCOUNT = 33;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ACHTYP = null;
  private DecimalField fieldE01ACHNUM = null;
  private DecimalField fieldE01ACHCUN = null;
  private DecimalField fieldE01ACHACC = null;
  private CharacterField fieldE01ACHOPE = null;
  private DecimalField fieldE01ACHVDY = null;
  private DecimalField fieldE01ACHVDM = null;
  private DecimalField fieldE01ACHVDD = null;
  private DecimalField fieldE01ACHBTH = null;
  private CharacterField fieldE01ACHECD = null;
  private CharacterField fieldE01ACHROU = null;
  private CharacterField fieldE01ACHDAC = null;
  private CharacterField fieldE01ACHACT = null;
  private CharacterField fieldE01ACHCCY = null;
  private DecimalField fieldE01ACHAMT = null;
  private CharacterField fieldE01ACHADD = null;
  private CharacterField fieldE01ACHNME = null;
  private CharacterField fieldE01ACHADR = null;
  private CharacterField fieldE01ACHCSZ = null;
  private CharacterField fieldE01ACHEMA = null;
  private CharacterField fieldE01ACHSTS = null;
  private CharacterField fieldE01OPRDTE = null;
  private CharacterField fieldE01PRCDTE = null;
  private DecimalField fieldE01ACHERR = null;

  /**
  * Constructor for EACH00001Message.
  */
  public EACH00001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 453;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACHTYP =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01ACHTYP");
    fields[10] = fieldE01ACHNUM =
    new DecimalField(message, HEADERSIZE + 43, 13, 0, "E01ACHNUM");
    fields[11] = fieldE01ACHCUN =
    new DecimalField(message, HEADERSIZE + 56, 10, 0, "E01ACHCUN");
    fields[12] = fieldE01ACHACC =
    new DecimalField(message, HEADERSIZE + 66, 13, 0, "E01ACHACC");
    fields[13] = fieldE01ACHOPE =
    new CharacterField(message, HEADERSIZE + 79, 10, "E01ACHOPE");
    fields[14] = fieldE01ACHVDY =
    new DecimalField(message, HEADERSIZE + 89, 5, 0, "E01ACHVDY");
    fields[15] = fieldE01ACHVDM =
    new DecimalField(message, HEADERSIZE + 94, 3, 0, "E01ACHVDM");
    fields[16] = fieldE01ACHVDD =
    new DecimalField(message, HEADERSIZE + 97, 3, 0, "E01ACHVDD");
    fields[17] = fieldE01ACHBTH =
    new DecimalField(message, HEADERSIZE + 100, 6, 0, "E01ACHBTH");
    fields[18] = fieldE01ACHECD =
    new CharacterField(message, HEADERSIZE + 106, 3, "E01ACHECD");
    fields[19] = fieldE01ACHROU =
    new CharacterField(message, HEADERSIZE + 109, 9, "E01ACHROU");
    fields[20] = fieldE01ACHDAC =
    new CharacterField(message, HEADERSIZE + 118, 17, "E01ACHDAC");
    fields[21] = fieldE01ACHACT =
    new CharacterField(message, HEADERSIZE + 135, 1, "E01ACHACT");
    fields[22] = fieldE01ACHCCY =
    new CharacterField(message, HEADERSIZE + 136, 3, "E01ACHCCY");
    fields[23] = fieldE01ACHAMT =
    new DecimalField(message, HEADERSIZE + 139, 17, 2, "E01ACHAMT");
    fields[24] = fieldE01ACHADD =
    new CharacterField(message, HEADERSIZE + 156, 80, "E01ACHADD");
    fields[25] = fieldE01ACHNME =
    new CharacterField(message, HEADERSIZE + 236, 45, "E01ACHNME");
    fields[26] = fieldE01ACHADR =
    new CharacterField(message, HEADERSIZE + 281, 45, "E01ACHADR");
    fields[27] = fieldE01ACHCSZ =
    new CharacterField(message, HEADERSIZE + 326, 45, "E01ACHCSZ");
    fields[28] = fieldE01ACHEMA =
    new CharacterField(message, HEADERSIZE + 371, 60, "E01ACHEMA");
    fields[29] = fieldE01ACHSTS =
    new CharacterField(message, HEADERSIZE + 431, 1, "E01ACHSTS");
    fields[30] = fieldE01OPRDTE =
    new CharacterField(message, HEADERSIZE + 432, 8, "E01OPRDTE");
    fields[31] = fieldE01PRCDTE =
    new CharacterField(message, HEADERSIZE + 440, 8, "E01PRCDTE");
    fields[32] = fieldE01ACHERR =
    new DecimalField(message, HEADERSIZE + 448, 5, 0, "E01ACHERR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACHTYP using a String value.
  */
  public void setE01ACHTYP(String newvalue)
  {
    fieldE01ACHTYP.setString(newvalue);
  }

  /**
  * Get value of field E01ACHTYP as a String.
  */
  public String getE01ACHTYP()
  {
    return fieldE01ACHTYP.getString();
  }

  /**
  * Set field E01ACHNUM using a String value.
  */
  public void setE01ACHNUM(String newvalue)
  {
    fieldE01ACHNUM.setString(newvalue);
  }

  /**
  * Get value of field E01ACHNUM as a String.
  */
  public String getE01ACHNUM()
  {
    return fieldE01ACHNUM.getString();
  }

  /**
  * Set numeric field E01ACHNUM using a BigDecimal value.
  */
  public void setE01ACHNUM(BigDecimal newvalue)
  {
    fieldE01ACHNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHNUM()
  {
    return fieldE01ACHNUM.getBigDecimal();
  }

  /**
  * Set field E01ACHCUN using a String value.
  */
  public void setE01ACHCUN(String newvalue)
  {
    fieldE01ACHCUN.setString(newvalue);
  }

  /**
  * Get value of field E01ACHCUN as a String.
  */
  public String getE01ACHCUN()
  {
    return fieldE01ACHCUN.getString();
  }

  /**
  * Set numeric field E01ACHCUN using a BigDecimal value.
  */
  public void setE01ACHCUN(BigDecimal newvalue)
  {
    fieldE01ACHCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHCUN()
  {
    return fieldE01ACHCUN.getBigDecimal();
  }

  /**
  * Set field E01ACHACC using a String value.
  */
  public void setE01ACHACC(String newvalue)
  {
    fieldE01ACHACC.setString(newvalue);
  }

  /**
  * Get value of field E01ACHACC as a String.
  */
  public String getE01ACHACC()
  {
    return fieldE01ACHACC.getString();
  }

  /**
  * Set numeric field E01ACHACC using a BigDecimal value.
  */
  public void setE01ACHACC(BigDecimal newvalue)
  {
    fieldE01ACHACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHACC()
  {
    return fieldE01ACHACC.getBigDecimal();
  }

  /**
  * Set field E01ACHOPE using a String value.
  */
  public void setE01ACHOPE(String newvalue)
  {
    fieldE01ACHOPE.setString(newvalue);
  }

  /**
  * Get value of field E01ACHOPE as a String.
  */
  public String getE01ACHOPE()
  {
    return fieldE01ACHOPE.getString();
  }

  /**
  * Set field E01ACHVDY using a String value.
  */
  public void setE01ACHVDY(String newvalue)
  {
    fieldE01ACHVDY.setString(newvalue);
  }

  /**
  * Get value of field E01ACHVDY as a String.
  */
  public String getE01ACHVDY()
  {
    return fieldE01ACHVDY.getString();
  }

  /**
  * Set numeric field E01ACHVDY using a BigDecimal value.
  */
  public void setE01ACHVDY(BigDecimal newvalue)
  {
    fieldE01ACHVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHVDY()
  {
    return fieldE01ACHVDY.getBigDecimal();
  }

  /**
  * Set field E01ACHVDM using a String value.
  */
  public void setE01ACHVDM(String newvalue)
  {
    fieldE01ACHVDM.setString(newvalue);
  }

  /**
  * Get value of field E01ACHVDM as a String.
  */
  public String getE01ACHVDM()
  {
    return fieldE01ACHVDM.getString();
  }

  /**
  * Set numeric field E01ACHVDM using a BigDecimal value.
  */
  public void setE01ACHVDM(BigDecimal newvalue)
  {
    fieldE01ACHVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHVDM()
  {
    return fieldE01ACHVDM.getBigDecimal();
  }

  /**
  * Set field E01ACHVDD using a String value.
  */
  public void setE01ACHVDD(String newvalue)
  {
    fieldE01ACHVDD.setString(newvalue);
  }

  /**
  * Get value of field E01ACHVDD as a String.
  */
  public String getE01ACHVDD()
  {
    return fieldE01ACHVDD.getString();
  }

  /**
  * Set numeric field E01ACHVDD using a BigDecimal value.
  */
  public void setE01ACHVDD(BigDecimal newvalue)
  {
    fieldE01ACHVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHVDD()
  {
    return fieldE01ACHVDD.getBigDecimal();
  }

  /**
  * Set field E01ACHBTH using a String value.
  */
  public void setE01ACHBTH(String newvalue)
  {
    fieldE01ACHBTH.setString(newvalue);
  }

  /**
  * Get value of field E01ACHBTH as a String.
  */
  public String getE01ACHBTH()
  {
    return fieldE01ACHBTH.getString();
  }

  /**
  * Set numeric field E01ACHBTH using a BigDecimal value.
  */
  public void setE01ACHBTH(BigDecimal newvalue)
  {
    fieldE01ACHBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHBTH()
  {
    return fieldE01ACHBTH.getBigDecimal();
  }

  /**
  * Set field E01ACHECD using a String value.
  */
  public void setE01ACHECD(String newvalue)
  {
    fieldE01ACHECD.setString(newvalue);
  }

  /**
  * Get value of field E01ACHECD as a String.
  */
  public String getE01ACHECD()
  {
    return fieldE01ACHECD.getString();
  }

  /**
  * Set field E01ACHROU using a String value.
  */
  public void setE01ACHROU(String newvalue)
  {
    fieldE01ACHROU.setString(newvalue);
  }

  /**
  * Get value of field E01ACHROU as a String.
  */
  public String getE01ACHROU()
  {
    return fieldE01ACHROU.getString();
  }

  /**
  * Set field E01ACHDAC using a String value.
  */
  public void setE01ACHDAC(String newvalue)
  {
    fieldE01ACHDAC.setString(newvalue);
  }

  /**
  * Get value of field E01ACHDAC as a String.
  */
  public String getE01ACHDAC()
  {
    return fieldE01ACHDAC.getString();
  }

  /**
  * Set field E01ACHACT using a String value.
  */
  public void setE01ACHACT(String newvalue)
  {
    fieldE01ACHACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACHACT as a String.
  */
  public String getE01ACHACT()
  {
    return fieldE01ACHACT.getString();
  }

  /**
  * Set field E01ACHCCY using a String value.
  */
  public void setE01ACHCCY(String newvalue)
  {
    fieldE01ACHCCY.setString(newvalue);
  }

  /**
  * Get value of field E01ACHCCY as a String.
  */
  public String getE01ACHCCY()
  {
    return fieldE01ACHCCY.getString();
  }

  /**
  * Set field E01ACHAMT using a String value.
  */
  public void setE01ACHAMT(String newvalue)
  {
    fieldE01ACHAMT.setString(newvalue);
  }

  /**
  * Get value of field E01ACHAMT as a String.
  */
  public String getE01ACHAMT()
  {
    return fieldE01ACHAMT.getString();
  }

  /**
  * Set numeric field E01ACHAMT using a BigDecimal value.
  */
  public void setE01ACHAMT(BigDecimal newvalue)
  {
    fieldE01ACHAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHAMT()
  {
    return fieldE01ACHAMT.getBigDecimal();
  }

  /**
  * Set field E01ACHADD using a String value.
  */
  public void setE01ACHADD(String newvalue)
  {
    fieldE01ACHADD.setString(newvalue);
  }

  /**
  * Get value of field E01ACHADD as a String.
  */
  public String getE01ACHADD()
  {
    return fieldE01ACHADD.getString();
  }

  /**
  * Set field E01ACHNME using a String value.
  */
  public void setE01ACHNME(String newvalue)
  {
    fieldE01ACHNME.setString(newvalue);
  }

  /**
  * Get value of field E01ACHNME as a String.
  */
  public String getE01ACHNME()
  {
    return fieldE01ACHNME.getString();
  }

  /**
  * Set field E01ACHADR using a String value.
  */
  public void setE01ACHADR(String newvalue)
  {
    fieldE01ACHADR.setString(newvalue);
  }

  /**
  * Get value of field E01ACHADR as a String.
  */
  public String getE01ACHADR()
  {
    return fieldE01ACHADR.getString();
  }

  /**
  * Set field E01ACHCSZ using a String value.
  */
  public void setE01ACHCSZ(String newvalue)
  {
    fieldE01ACHCSZ.setString(newvalue);
  }

  /**
  * Get value of field E01ACHCSZ as a String.
  */
  public String getE01ACHCSZ()
  {
    return fieldE01ACHCSZ.getString();
  }

  /**
  * Set field E01ACHEMA using a String value.
  */
  public void setE01ACHEMA(String newvalue)
  {
    fieldE01ACHEMA.setString(newvalue);
  }

  /**
  * Get value of field E01ACHEMA as a String.
  */
  public String getE01ACHEMA()
  {
    return fieldE01ACHEMA.getString();
  }

  /**
  * Set field E01ACHSTS using a String value.
  */
  public void setE01ACHSTS(String newvalue)
  {
    fieldE01ACHSTS.setString(newvalue);
  }

  /**
  * Get value of field E01ACHSTS as a String.
  */
  public String getE01ACHSTS()
  {
    return fieldE01ACHSTS.getString();
  }

  /**
  * Set field E01OPRDTE using a String value.
  */
  public void setE01OPRDTE(String newvalue)
  {
    fieldE01OPRDTE.setString(newvalue);
  }

  /**
  * Get value of field E01OPRDTE as a String.
  */
  public String getE01OPRDTE()
  {
    return fieldE01OPRDTE.getString();
  }

  /**
  * Set field E01PRCDTE using a String value.
  */
  public void setE01PRCDTE(String newvalue)
  {
    fieldE01PRCDTE.setString(newvalue);
  }

  /**
  * Get value of field E01PRCDTE as a String.
  */
  public String getE01PRCDTE()
  {
    return fieldE01PRCDTE.getString();
  }

  /**
  * Set field E01ACHERR using a String value.
  */
  public void setE01ACHERR(String newvalue)
  {
    fieldE01ACHERR.setString(newvalue);
  }

  /**
  * Get value of field E01ACHERR as a String.
  */
  public String getE01ACHERR()
  {
    return fieldE01ACHERR.getString();
  }

  /**
  * Set numeric field E01ACHERR using a BigDecimal value.
  */
  public void setE01ACHERR(BigDecimal newvalue)
  {
    fieldE01ACHERR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACHERR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACHERR()
  {
    return fieldE01ACHERR.getBigDecimal();
  }

}
