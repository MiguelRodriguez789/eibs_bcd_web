package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0362DS physical file definition.
* 
* File level identifier is 1130611113506.
* Record format level identifier is 3A4D6BF1E2881.
*/

public class EWD0362DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDNUM",
                                     "RWDCUN",
                                     "RWDCDE",
                                     "RWDFRC",
                                     "RWDSHN",
                                     "RWDSHO",
                                     "SWDNUM",
                                     "SWDCDE",
                                     "SWDCUN",
                                     "SWDNME",
                                     "SWDADD",
                                     "SWDCSZ",
                                     "SWDCAT",
                                     "SWDROU",
                                     "SWDACC",
                                     "SWDACT",
                                     "SWDEMA",
                                     "SWDDFI",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDNUM",
                                   "RWDCUN",
                                   "RWDCDE",
                                   "RWDFRC",
                                   "RWDSHN",
                                   "RWDSHO",
                                   "SWDNUM",
                                   "SWDCDE",
                                   "SWDCUN",
                                   "SWDNME",
                                   "SWDADD",
                                   "SWDCSZ",
                                   "SWDCAT",
                                   "SWDROU",
                                   "SWDACC",
                                   "SWDACT",
                                   "SWDEMA",
                                   "SWDDFI",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1130611113506";
  final static String rid = "3A4D6BF1E2881";
  final static String fmtname = "EWD0362DS";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDNUM = null;
  private DecimalField fieldRWDCUN = null;
  private CharacterField fieldRWDCDE = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldRWDSHN = null;
  private CharacterField fieldRWDSHO = null;
  private DecimalField fieldSWDNUM = null;
  private CharacterField fieldSWDCDE = null;
  private DecimalField fieldSWDCUN = null;
  private CharacterField fieldSWDNME = null;
  private CharacterField fieldSWDADD = null;
  private CharacterField fieldSWDCSZ = null;
  private CharacterField fieldSWDCAT = null;
  private CharacterField fieldSWDROU = null;
  private CharacterField fieldSWDACC = null;
  private CharacterField fieldSWDACT = null;
  private CharacterField fieldSWDEMA = null;
  private CharacterField fieldSWDDFI = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0362DSMessage.
  */
  public EWD0362DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 440;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDNUM =
    new DecimalField(message, HEADERSIZE + 11, 13, 0, "RWDNUM");
    fields[3] = fieldRWDCUN =
    new DecimalField(message, HEADERSIZE + 24, 10, 0, "RWDCUN");
    fields[4] = fieldRWDCDE =
    new CharacterField(message, HEADERSIZE + 34, 10, "RWDCDE");
    fields[5] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 44, 8, 0, "RWDFRC");
    fields[6] = fieldRWDSHN =
    new CharacterField(message, HEADERSIZE + 52, 45, "RWDSHN");
    fields[7] = fieldRWDSHO =
    new CharacterField(message, HEADERSIZE + 97, 45, "RWDSHO");
    fields[8] = fieldSWDNUM =
    new DecimalField(message, HEADERSIZE + 142, 13, 0, "SWDNUM");
    fields[9] = fieldSWDCDE =
    new CharacterField(message, HEADERSIZE + 155, 10, "SWDCDE");
    fields[10] = fieldSWDCUN =
    new DecimalField(message, HEADERSIZE + 165, 10, 0, "SWDCUN");
    fields[11] = fieldSWDNME =
    new CharacterField(message, HEADERSIZE + 175, 45, "SWDNME");
    fields[12] = fieldSWDADD =
    new CharacterField(message, HEADERSIZE + 220, 45, "SWDADD");
    fields[13] = fieldSWDCSZ =
    new CharacterField(message, HEADERSIZE + 265, 45, "SWDCSZ");
    fields[14] = fieldSWDCAT =
    new CharacterField(message, HEADERSIZE + 310, 4, "SWDCAT");
    fields[15] = fieldSWDROU =
    new CharacterField(message, HEADERSIZE + 314, 9, "SWDROU");
    fields[16] = fieldSWDACC =
    new CharacterField(message, HEADERSIZE + 323, 17, "SWDACC");
    fields[17] = fieldSWDACT =
    new CharacterField(message, HEADERSIZE + 340, 1, "SWDACT");
    fields[18] = fieldSWDEMA =
    new CharacterField(message, HEADERSIZE + 341, 60, "SWDEMA");
    fields[19] = fieldSWDDFI =
    new CharacterField(message, HEADERSIZE + 401, 30, "SWDDFI");
    fields[20] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 431, 8, 0, "SWDREC");
    fields[21] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 439, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDNUM using a String value.
  */
  public void setRWDNUM(String newvalue)
  {
    fieldRWDNUM.setString(newvalue);
  }

  /**
  * Get value of field RWDNUM as a String.
  */
  public String getRWDNUM()
  {
    return fieldRWDNUM.getString();
  }

  /**
  * Set numeric field RWDNUM using a BigDecimal value.
  */
  public void setRWDNUM(BigDecimal newvalue)
  {
    fieldRWDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDNUM()
  {
    return fieldRWDNUM.getBigDecimal();
  }

  /**
  * Set field RWDCUN using a String value.
  */
  public void setRWDCUN(String newvalue)
  {
    fieldRWDCUN.setString(newvalue);
  }

  /**
  * Get value of field RWDCUN as a String.
  */
  public String getRWDCUN()
  {
    return fieldRWDCUN.getString();
  }

  /**
  * Set numeric field RWDCUN using a BigDecimal value.
  */
  public void setRWDCUN(BigDecimal newvalue)
  {
    fieldRWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDCUN()
  {
    return fieldRWDCUN.getBigDecimal();
  }

  /**
  * Set field RWDCDE using a String value.
  */
  public void setRWDCDE(String newvalue)
  {
    fieldRWDCDE.setString(newvalue);
  }

  /**
  * Get value of field RWDCDE as a String.
  */
  public String getRWDCDE()
  {
    return fieldRWDCDE.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field RWDSHN using a String value.
  */
  public void setRWDSHN(String newvalue)
  {
    fieldRWDSHN.setString(newvalue);
  }

  /**
  * Get value of field RWDSHN as a String.
  */
  public String getRWDSHN()
  {
    return fieldRWDSHN.getString();
  }

  /**
  * Set field RWDSHO using a String value.
  */
  public void setRWDSHO(String newvalue)
  {
    fieldRWDSHO.setString(newvalue);
  }

  /**
  * Get value of field RWDSHO as a String.
  */
  public String getRWDSHO()
  {
    return fieldRWDSHO.getString();
  }

  /**
  * Set field SWDNUM using a String value.
  */
  public void setSWDNUM(String newvalue)
  {
    fieldSWDNUM.setString(newvalue);
  }

  /**
  * Get value of field SWDNUM as a String.
  */
  public String getSWDNUM()
  {
    return fieldSWDNUM.getString();
  }

  /**
  * Set numeric field SWDNUM using a BigDecimal value.
  */
  public void setSWDNUM(BigDecimal newvalue)
  {
    fieldSWDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDNUM()
  {
    return fieldSWDNUM.getBigDecimal();
  }

  /**
  * Set field SWDCDE using a String value.
  */
  public void setSWDCDE(String newvalue)
  {
    fieldSWDCDE.setString(newvalue);
  }

  /**
  * Get value of field SWDCDE as a String.
  */
  public String getSWDCDE()
  {
    return fieldSWDCDE.getString();
  }

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
    fieldSWDCUN.setString(newvalue);
  }

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
    return fieldSWDCUN.getString();
  }

  /**
  * Set numeric field SWDCUN using a BigDecimal value.
  */
  public void setSWDCUN(BigDecimal newvalue)
  {
    fieldSWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCUN()
  {
    return fieldSWDCUN.getBigDecimal();
  }

  /**
  * Set field SWDNME using a String value.
  */
  public void setSWDNME(String newvalue)
  {
    fieldSWDNME.setString(newvalue);
  }

  /**
  * Get value of field SWDNME as a String.
  */
  public String getSWDNME()
  {
    return fieldSWDNME.getString();
  }

  /**
  * Set field SWDADD using a String value.
  */
  public void setSWDADD(String newvalue)
  {
    fieldSWDADD.setString(newvalue);
  }

  /**
  * Get value of field SWDADD as a String.
  */
  public String getSWDADD()
  {
    return fieldSWDADD.getString();
  }

  /**
  * Set field SWDCSZ using a String value.
  */
  public void setSWDCSZ(String newvalue)
  {
    fieldSWDCSZ.setString(newvalue);
  }

  /**
  * Get value of field SWDCSZ as a String.
  */
  public String getSWDCSZ()
  {
    return fieldSWDCSZ.getString();
  }

  /**
  * Set field SWDCAT using a String value.
  */
  public void setSWDCAT(String newvalue)
  {
    fieldSWDCAT.setString(newvalue);
  }

  /**
  * Get value of field SWDCAT as a String.
  */
  public String getSWDCAT()
  {
    return fieldSWDCAT.getString();
  }

  /**
  * Set field SWDROU using a String value.
  */
  public void setSWDROU(String newvalue)
  {
    fieldSWDROU.setString(newvalue);
  }

  /**
  * Get value of field SWDROU as a String.
  */
  public String getSWDROU()
  {
    return fieldSWDROU.getString();
  }

  /**
  * Set field SWDACC using a String value.
  */
  public void setSWDACC(String newvalue)
  {
    fieldSWDACC.setString(newvalue);
  }

  /**
  * Get value of field SWDACC as a String.
  */
  public String getSWDACC()
  {
    return fieldSWDACC.getString();
  }

  /**
  * Set field SWDACT using a String value.
  */
  public void setSWDACT(String newvalue)
  {
    fieldSWDACT.setString(newvalue);
  }

  /**
  * Get value of field SWDACT as a String.
  */
  public String getSWDACT()
  {
    return fieldSWDACT.getString();
  }

  /**
  * Set field SWDEMA using a String value.
  */
  public void setSWDEMA(String newvalue)
  {
    fieldSWDEMA.setString(newvalue);
  }

  /**
  * Get value of field SWDEMA as a String.
  */
  public String getSWDEMA()
  {
    return fieldSWDEMA.getString();
  }

  /**
  * Set field SWDDFI using a String value.
  */
  public void setSWDDFI(String newvalue)
  {
    fieldSWDDFI.setString(newvalue);
  }

  /**
  * Get value of field SWDDFI as a String.
  */
  public String getSWDDFI()
  {
    return fieldSWDDFI.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
