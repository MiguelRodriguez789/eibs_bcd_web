package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD003201 physical file definition.
* 
* File level identifier is 1170814160940.
* Record format level identifier is 434F496A599B0.
*/

public class ESD003201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CDRCTR",
                                     "E01CDRSTE",
                                     "E01CDRCTY",
                                     "E01CDRCTG",
                                     "E01CDRCTGD",
                                     "E01CDRTYP",
                                     "E01CDRSCT",
                                     "E01CDRSCTD",
                                     "E01CDREST",
                                     "D01CDRCTR",
                                     "D01CDRSTE",
                                     "D01CDRCTY",
                                     "E01CDRCUS",
                                     "E01CDRCDM",
                                     "E01CDRCDD",
                                     "E01CDRCDY",
                                     "E01CDRCTM",
                                     "E01CDRMUS",
                                     "E01CDRRDM",
                                     "E01CDRRDD",
                                     "E01CDRRDY",
                                     "E01CDRMTM",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CDRCTR",
                                   "E01CDRSTE",
                                   "E01CDRCTY",
                                   "E01CDRCTG",
                                   "E01CDRCTGD",
                                   "E01CDRTYP",
                                   "E01CDRSCT",
                                   "E01CDRSCTD",
                                   "E01CDREST",
                                   "D01CDRCTR",
                                   "D01CDRSTE",
                                   "D01CDRCTY",
                                   "E01CDRCUS",
                                   "E01CDRCDM",
                                   "E01CDRCDD",
                                   "E01CDRCDY",
                                   "E01CDRCTM",
                                   "E01CDRMUS",
                                   "E01CDRRDM",
                                   "E01CDRRDD",
                                   "E01CDRRDY",
                                   "E01CDRMTM",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1170814160940";
  final static String rid = "434F496A599B0";
  final static String fmtname = "ESD003201";
  final int FIELDCOUNT = 33;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CDRCTR = null;
  private CharacterField fieldE01CDRSTE = null;
  private CharacterField fieldE01CDRCTY = null;
  private CharacterField fieldE01CDRCTG = null;
  private CharacterField fieldE01CDRCTGD = null;
  private CharacterField fieldE01CDRTYP = null;
  private CharacterField fieldE01CDRSCT = null;
  private CharacterField fieldE01CDRSCTD = null;
  private CharacterField fieldE01CDREST = null;
  private CharacterField fieldD01CDRCTR = null;
  private CharacterField fieldD01CDRSTE = null;
  private CharacterField fieldD01CDRCTY = null;
  private CharacterField fieldE01CDRCUS = null;
  private DecimalField fieldE01CDRCDM = null;
  private DecimalField fieldE01CDRCDD = null;
  private DecimalField fieldE01CDRCDY = null;
  private CharacterField fieldE01CDRCTM = null;
  private CharacterField fieldE01CDRMUS = null;
  private DecimalField fieldE01CDRRDM = null;
  private DecimalField fieldE01CDRRDD = null;
  private DecimalField fieldE01CDRRDY = null;
  private CharacterField fieldE01CDRMTM = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ESD003201Message.
  */
  public ESD003201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 467;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CDRCTR =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01CDRCTR");
    fields[10] = fieldE01CDRSTE =
    new CharacterField(message, HEADERSIZE + 46, 4, "E01CDRSTE");
    fields[11] = fieldE01CDRCTY =
    new CharacterField(message, HEADERSIZE + 50, 4, "E01CDRCTY");
    fields[12] = fieldE01CDRCTG =
    new CharacterField(message, HEADERSIZE + 54, 4, "E01CDRCTG");
    fields[13] = fieldE01CDRCTGD =
    new CharacterField(message, HEADERSIZE + 58, 60, "E01CDRCTGD");
    fields[14] = fieldE01CDRTYP =
    new CharacterField(message, HEADERSIZE + 118, 1, "E01CDRTYP");
    fields[15] = fieldE01CDRSCT =
    new CharacterField(message, HEADERSIZE + 119, 4, "E01CDRSCT");
    fields[16] = fieldE01CDRSCTD =
    new CharacterField(message, HEADERSIZE + 123, 60, "E01CDRSCTD");
    fields[17] = fieldE01CDREST =
    new CharacterField(message, HEADERSIZE + 183, 1, "E01CDREST");
    fields[18] = fieldD01CDRCTR =
    new CharacterField(message, HEADERSIZE + 184, 60, "D01CDRCTR");
    fields[19] = fieldD01CDRSTE =
    new CharacterField(message, HEADERSIZE + 244, 60, "D01CDRSTE");
    fields[20] = fieldD01CDRCTY =
    new CharacterField(message, HEADERSIZE + 304, 60, "D01CDRCTY");
    fields[21] = fieldE01CDRCUS =
    new CharacterField(message, HEADERSIZE + 364, 10, "E01CDRCUS");
    fields[22] = fieldE01CDRCDM =
    new DecimalField(message, HEADERSIZE + 374, 3, 0, "E01CDRCDM");
    fields[23] = fieldE01CDRCDD =
    new DecimalField(message, HEADERSIZE + 377, 3, 0, "E01CDRCDD");
    fields[24] = fieldE01CDRCDY =
    new DecimalField(message, HEADERSIZE + 380, 5, 0, "E01CDRCDY");
    fields[25] = fieldE01CDRCTM =
    new CharacterField(message, HEADERSIZE + 385, 26, "E01CDRCTM");
    fields[26] = fieldE01CDRMUS =
    new CharacterField(message, HEADERSIZE + 411, 10, "E01CDRMUS");
    fields[27] = fieldE01CDRRDM =
    new DecimalField(message, HEADERSIZE + 421, 3, 0, "E01CDRRDM");
    fields[28] = fieldE01CDRRDD =
    new DecimalField(message, HEADERSIZE + 424, 3, 0, "E01CDRRDD");
    fields[29] = fieldE01CDRRDY =
    new DecimalField(message, HEADERSIZE + 427, 5, 0, "E01CDRRDY");
    fields[30] = fieldE01CDRMTM =
    new CharacterField(message, HEADERSIZE + 432, 26, "E01CDRMTM");
    fields[31] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 458, 8, 0, "E01NUMREC");
    fields[32] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 466, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CDRCTR using a String value.
  */
  public void setE01CDRCTR(String newvalue)
  {
    fieldE01CDRCTR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCTR as a String.
  */
  public String getE01CDRCTR()
  {
    return fieldE01CDRCTR.getString();
  }

  /**
  * Set field E01CDRSTE using a String value.
  */
  public void setE01CDRSTE(String newvalue)
  {
    fieldE01CDRSTE.setString(newvalue);
  }

  /**
  * Get value of field E01CDRSTE as a String.
  */
  public String getE01CDRSTE()
  {
    return fieldE01CDRSTE.getString();
  }

  /**
  * Set field E01CDRCTY using a String value.
  */
  public void setE01CDRCTY(String newvalue)
  {
    fieldE01CDRCTY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCTY as a String.
  */
  public String getE01CDRCTY()
  {
    return fieldE01CDRCTY.getString();
  }

  /**
  * Set field E01CDRCTG using a String value.
  */
  public void setE01CDRCTG(String newvalue)
  {
    fieldE01CDRCTG.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCTG as a String.
  */
  public String getE01CDRCTG()
  {
    return fieldE01CDRCTG.getString();
  }

  /**
  * Set field E01CDRCTGD using a String value.
  */
  public void setE01CDRCTGD(String newvalue)
  {
    fieldE01CDRCTGD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCTGD as a String.
  */
  public String getE01CDRCTGD()
  {
    return fieldE01CDRCTGD.getString();
  }

  /**
  * Set field E01CDRTYP using a String value.
  */
  public void setE01CDRTYP(String newvalue)
  {
    fieldE01CDRTYP.setString(newvalue);
  }

  /**
  * Get value of field E01CDRTYP as a String.
  */
  public String getE01CDRTYP()
  {
    return fieldE01CDRTYP.getString();
  }

  /**
  * Set field E01CDRSCT using a String value.
  */
  public void setE01CDRSCT(String newvalue)
  {
    fieldE01CDRSCT.setString(newvalue);
  }

  /**
  * Get value of field E01CDRSCT as a String.
  */
  public String getE01CDRSCT()
  {
    return fieldE01CDRSCT.getString();
  }

  /**
  * Set field E01CDRSCTD using a String value.
  */
  public void setE01CDRSCTD(String newvalue)
  {
    fieldE01CDRSCTD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRSCTD as a String.
  */
  public String getE01CDRSCTD()
  {
    return fieldE01CDRSCTD.getString();
  }

  /**
  * Set field E01CDREST using a String value.
  */
  public void setE01CDREST(String newvalue)
  {
    fieldE01CDREST.setString(newvalue);
  }

  /**
  * Get value of field E01CDREST as a String.
  */
  public String getE01CDREST()
  {
    return fieldE01CDREST.getString();
  }

  /**
  * Set field D01CDRCTR using a String value.
  */
  public void setD01CDRCTR(String newvalue)
  {
    fieldD01CDRCTR.setString(newvalue);
  }

  /**
  * Get value of field D01CDRCTR as a String.
  */
  public String getD01CDRCTR()
  {
    return fieldD01CDRCTR.getString();
  }

  /**
  * Set field D01CDRSTE using a String value.
  */
  public void setD01CDRSTE(String newvalue)
  {
    fieldD01CDRSTE.setString(newvalue);
  }

  /**
  * Get value of field D01CDRSTE as a String.
  */
  public String getD01CDRSTE()
  {
    return fieldD01CDRSTE.getString();
  }

  /**
  * Set field D01CDRCTY using a String value.
  */
  public void setD01CDRCTY(String newvalue)
  {
    fieldD01CDRCTY.setString(newvalue);
  }

  /**
  * Get value of field D01CDRCTY as a String.
  */
  public String getD01CDRCTY()
  {
    return fieldD01CDRCTY.getString();
  }

  /**
  * Set field E01CDRCUS using a String value.
  */
  public void setE01CDRCUS(String newvalue)
  {
    fieldE01CDRCUS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCUS as a String.
  */
  public String getE01CDRCUS()
  {
    return fieldE01CDRCUS.getString();
  }

  /**
  * Set field E01CDRCDM using a String value.
  */
  public void setE01CDRCDM(String newvalue)
  {
    fieldE01CDRCDM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCDM as a String.
  */
  public String getE01CDRCDM()
  {
    return fieldE01CDRCDM.getString();
  }

  /**
  * Set numeric field E01CDRCDM using a BigDecimal value.
  */
  public void setE01CDRCDM(BigDecimal newvalue)
  {
    fieldE01CDRCDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRCDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRCDM()
  {
    return fieldE01CDRCDM.getBigDecimal();
  }

  /**
  * Set field E01CDRCDD using a String value.
  */
  public void setE01CDRCDD(String newvalue)
  {
    fieldE01CDRCDD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCDD as a String.
  */
  public String getE01CDRCDD()
  {
    return fieldE01CDRCDD.getString();
  }

  /**
  * Set numeric field E01CDRCDD using a BigDecimal value.
  */
  public void setE01CDRCDD(BigDecimal newvalue)
  {
    fieldE01CDRCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRCDD()
  {
    return fieldE01CDRCDD.getBigDecimal();
  }

  /**
  * Set field E01CDRCDY using a String value.
  */
  public void setE01CDRCDY(String newvalue)
  {
    fieldE01CDRCDY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCDY as a String.
  */
  public String getE01CDRCDY()
  {
    return fieldE01CDRCDY.getString();
  }

  /**
  * Set numeric field E01CDRCDY using a BigDecimal value.
  */
  public void setE01CDRCDY(BigDecimal newvalue)
  {
    fieldE01CDRCDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRCDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRCDY()
  {
    return fieldE01CDRCDY.getBigDecimal();
  }

  /**
  * Set field E01CDRCTM using a String value.
  */
  public void setE01CDRCTM(String newvalue)
  {
    fieldE01CDRCTM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCTM as a String.
  */
  public String getE01CDRCTM()
  {
    return fieldE01CDRCTM.getString();
  }

  /**
  * Set field E01CDRMUS using a String value.
  */
  public void setE01CDRMUS(String newvalue)
  {
    fieldE01CDRMUS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMUS as a String.
  */
  public String getE01CDRMUS()
  {
    return fieldE01CDRMUS.getString();
  }

  /**
  * Set field E01CDRRDM using a String value.
  */
  public void setE01CDRRDM(String newvalue)
  {
    fieldE01CDRRDM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRRDM as a String.
  */
  public String getE01CDRRDM()
  {
    return fieldE01CDRRDM.getString();
  }

  /**
  * Set numeric field E01CDRRDM using a BigDecimal value.
  */
  public void setE01CDRRDM(BigDecimal newvalue)
  {
    fieldE01CDRRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRRDM()
  {
    return fieldE01CDRRDM.getBigDecimal();
  }

  /**
  * Set field E01CDRRDD using a String value.
  */
  public void setE01CDRRDD(String newvalue)
  {
    fieldE01CDRRDD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRRDD as a String.
  */
  public String getE01CDRRDD()
  {
    return fieldE01CDRRDD.getString();
  }

  /**
  * Set numeric field E01CDRRDD using a BigDecimal value.
  */
  public void setE01CDRRDD(BigDecimal newvalue)
  {
    fieldE01CDRRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRRDD()
  {
    return fieldE01CDRRDD.getBigDecimal();
  }

  /**
  * Set field E01CDRRDY using a String value.
  */
  public void setE01CDRRDY(String newvalue)
  {
    fieldE01CDRRDY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRRDY as a String.
  */
  public String getE01CDRRDY()
  {
    return fieldE01CDRRDY.getString();
  }

  /**
  * Set numeric field E01CDRRDY using a BigDecimal value.
  */
  public void setE01CDRRDY(BigDecimal newvalue)
  {
    fieldE01CDRRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRRDY()
  {
    return fieldE01CDRRDY.getBigDecimal();
  }

  /**
  * Set field E01CDRMTM using a String value.
  */
  public void setE01CDRMTM(String newvalue)
  {
    fieldE01CDRMTM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMTM as a String.
  */
  public String getE01CDRMTM()
  {
    return fieldE01CDRMTM.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
