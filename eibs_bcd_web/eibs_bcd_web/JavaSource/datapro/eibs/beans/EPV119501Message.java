package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV119501 physical file definition.
* 
* File level identifier is 1130611113308.
* Record format level identifier is 423E6E68677E2.
*/

public class EPV119501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PVDRCD",
                                     "E01PVDDES",
                                     "E01PVDREC",
                                     "E01PVDDIS",
                                     "E01PVDVDM",
                                     "E01PVDVDD",
                                     "E01PVDVDY",
                                     "E01PVDVHM",
                                     "E01PVDVHD",
                                     "E01PVDVHY"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PVDRCD",
                                   "E01PVDDES",
                                   "E01PVDREC",
                                   "E01PVDDIS",
                                   "E01PVDVDM",
                                   "E01PVDVDD",
                                   "E01PVDVDY",
                                   "E01PVDVHM",
                                   "E01PVDVHD",
                                   "E01PVDVHY"
                                 };
  final static String fid = "1130611113308";
  final static String rid = "423E6E68677E2";
  final static String fmtname = "EPV119501";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01PVDRCD = null;
  private CharacterField fieldE01PVDDES = null;
  private CharacterField fieldE01PVDREC = null;
  private DecimalField fieldE01PVDDIS = null;
  private DecimalField fieldE01PVDVDM = null;
  private DecimalField fieldE01PVDVDD = null;
  private DecimalField fieldE01PVDVDY = null;
  private DecimalField fieldE01PVDVHM = null;
  private DecimalField fieldE01PVDVHD = null;
  private DecimalField fieldE01PVDVHY = null;

  /**
  * Constructor for EPV119501Message.
  */
  public EPV119501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 125;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PVDRCD =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01PVDRCD");
    fields[10] = fieldE01PVDDES =
    new CharacterField(message, HEADERSIZE + 46, 45, "E01PVDDES");
    fields[11] = fieldE01PVDREC =
    new CharacterField(message, HEADERSIZE + 91, 1, "E01PVDREC");
    fields[12] = fieldE01PVDDIS =
    new DecimalField(message, HEADERSIZE + 92, 11, 6, "E01PVDDIS");
    fields[13] = fieldE01PVDVDM =
    new DecimalField(message, HEADERSIZE + 103, 3, 0, "E01PVDVDM");
    fields[14] = fieldE01PVDVDD =
    new DecimalField(message, HEADERSIZE + 106, 3, 0, "E01PVDVDD");
    fields[15] = fieldE01PVDVDY =
    new DecimalField(message, HEADERSIZE + 109, 5, 0, "E01PVDVDY");
    fields[16] = fieldE01PVDVHM =
    new DecimalField(message, HEADERSIZE + 114, 3, 0, "E01PVDVHM");
    fields[17] = fieldE01PVDVHD =
    new DecimalField(message, HEADERSIZE + 117, 3, 0, "E01PVDVHD");
    fields[18] = fieldE01PVDVHY =
    new DecimalField(message, HEADERSIZE + 120, 5, 0, "E01PVDVHY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PVDRCD using a String value.
  */
  public void setE01PVDRCD(String newvalue)
  {
    fieldE01PVDRCD.setString(newvalue);
  }

  /**
  * Get value of field E01PVDRCD as a String.
  */
  public String getE01PVDRCD()
  {
    return fieldE01PVDRCD.getString();
  }

  /**
  * Set field E01PVDDES using a String value.
  */
  public void setE01PVDDES(String newvalue)
  {
    fieldE01PVDDES.setString(newvalue);
  }

  /**
  * Get value of field E01PVDDES as a String.
  */
  public String getE01PVDDES()
  {
    return fieldE01PVDDES.getString();
  }

  /**
  * Set field E01PVDREC using a String value.
  */
  public void setE01PVDREC(String newvalue)
  {
    fieldE01PVDREC.setString(newvalue);
  }

  /**
  * Get value of field E01PVDREC as a String.
  */
  public String getE01PVDREC()
  {
    return fieldE01PVDREC.getString();
  }

  /**
  * Set field E01PVDDIS using a String value.
  */
  public void setE01PVDDIS(String newvalue)
  {
    fieldE01PVDDIS.setString(newvalue);
  }

  /**
  * Get value of field E01PVDDIS as a String.
  */
  public String getE01PVDDIS()
  {
    return fieldE01PVDDIS.getString();
  }

  /**
  * Set numeric field E01PVDDIS using a BigDecimal value.
  */
  public void setE01PVDDIS(BigDecimal newvalue)
  {
    fieldE01PVDDIS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDDIS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDDIS()
  {
    return fieldE01PVDDIS.getBigDecimal();
  }

  /**
  * Set field E01PVDVDM using a String value.
  */
  public void setE01PVDVDM(String newvalue)
  {
    fieldE01PVDVDM.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVDM as a String.
  */
  public String getE01PVDVDM()
  {
    return fieldE01PVDVDM.getString();
  }

  /**
  * Set numeric field E01PVDVDM using a BigDecimal value.
  */
  public void setE01PVDVDM(BigDecimal newvalue)
  {
    fieldE01PVDVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVDM()
  {
    return fieldE01PVDVDM.getBigDecimal();
  }

  /**
  * Set field E01PVDVDD using a String value.
  */
  public void setE01PVDVDD(String newvalue)
  {
    fieldE01PVDVDD.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVDD as a String.
  */
  public String getE01PVDVDD()
  {
    return fieldE01PVDVDD.getString();
  }

  /**
  * Set numeric field E01PVDVDD using a BigDecimal value.
  */
  public void setE01PVDVDD(BigDecimal newvalue)
  {
    fieldE01PVDVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVDD()
  {
    return fieldE01PVDVDD.getBigDecimal();
  }

  /**
  * Set field E01PVDVDY using a String value.
  */
  public void setE01PVDVDY(String newvalue)
  {
    fieldE01PVDVDY.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVDY as a String.
  */
  public String getE01PVDVDY()
  {
    return fieldE01PVDVDY.getString();
  }

  /**
  * Set numeric field E01PVDVDY using a BigDecimal value.
  */
  public void setE01PVDVDY(BigDecimal newvalue)
  {
    fieldE01PVDVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVDY()
  {
    return fieldE01PVDVDY.getBigDecimal();
  }

  /**
  * Set field E01PVDVHM using a String value.
  */
  public void setE01PVDVHM(String newvalue)
  {
    fieldE01PVDVHM.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVHM as a String.
  */
  public String getE01PVDVHM()
  {
    return fieldE01PVDVHM.getString();
  }

  /**
  * Set numeric field E01PVDVHM using a BigDecimal value.
  */
  public void setE01PVDVHM(BigDecimal newvalue)
  {
    fieldE01PVDVHM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVHM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVHM()
  {
    return fieldE01PVDVHM.getBigDecimal();
  }

  /**
  * Set field E01PVDVHD using a String value.
  */
  public void setE01PVDVHD(String newvalue)
  {
    fieldE01PVDVHD.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVHD as a String.
  */
  public String getE01PVDVHD()
  {
    return fieldE01PVDVHD.getString();
  }

  /**
  * Set numeric field E01PVDVHD using a BigDecimal value.
  */
  public void setE01PVDVHD(BigDecimal newvalue)
  {
    fieldE01PVDVHD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVHD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVHD()
  {
    return fieldE01PVDVHD.getBigDecimal();
  }

  /**
  * Set field E01PVDVHY using a String value.
  */
  public void setE01PVDVHY(String newvalue)
  {
    fieldE01PVDVHY.setString(newvalue);
  }

  /**
  * Get value of field E01PVDVHY as a String.
  */
  public String getE01PVDVHY()
  {
    return fieldE01PVDVHY.getString();
  }

  /**
  * Set numeric field E01PVDVHY using a BigDecimal value.
  */
  public void setE01PVDVHY(BigDecimal newvalue)
  {
    fieldE01PVDVHY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVDVHY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVDVHY()
  {
    return fieldE01PVDVHY.getBigDecimal();
  }

}
