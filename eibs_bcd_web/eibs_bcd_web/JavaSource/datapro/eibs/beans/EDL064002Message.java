package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL064002 physical file definition.
* 
* File level identifier is 1170719113508.
* Record format level identifier is 41430224DCE7C.
*/

public class EDL064002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02IFHCFL",
                                     "E02IFHRCD",
                                     "E02IFHDYY",
                                     "E02IFHDMM",
                                     "E02IFHDDD",
                                     "E02IFHVA1",
                                     "E02IFHVA2",
                                     "E02IFHNME",
                                     "E02IFHSTS",
                                     "E02IFHLMM",
                                     "E02IFHLMD",
                                     "E02IFHLMY",
                                     "E02IFHLMT",
                                     "E02IFHLMU"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02IFHCFL",
                                   "E02IFHRCD",
                                   "E02IFHDYY",
                                   "E02IFHDMM",
                                   "E02IFHDDD",
                                   "E02IFHVA1",
                                   "E02IFHVA2",
                                   "E02IFHNME",
                                   "E02IFHSTS",
                                   "E02IFHLMM",
                                   "E02IFHLMD",
                                   "E02IFHLMY",
                                   "E02IFHLMT",
                                   "E02IFHLMU"
                                 };
  final static String fid = "1170719113508";
  final static String rid = "41430224DCE7C";
  final static String fmtname = "EDL064002";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02IFHCFL = null;
  private CharacterField fieldE02IFHRCD = null;
  private DecimalField fieldE02IFHDYY = null;
  private DecimalField fieldE02IFHDMM = null;
  private DecimalField fieldE02IFHDDD = null;
  private DecimalField fieldE02IFHVA1 = null;
  private DecimalField fieldE02IFHVA2 = null;
  private CharacterField fieldE02IFHNME = null;
  private CharacterField fieldE02IFHSTS = null;
  private DecimalField fieldE02IFHLMM = null;
  private DecimalField fieldE02IFHLMD = null;
  private DecimalField fieldE02IFHLMY = null;
  private CharacterField fieldE02IFHLMT = null;
  private CharacterField fieldE02IFHLMU = null;

  /**
  * Constructor for EDL064002Message.
  */
  public EDL064002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 186;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02IFHCFL =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02IFHCFL");
    fields[10] = fieldE02IFHRCD =
    new CharacterField(message, HEADERSIZE + 44, 4, "E02IFHRCD");
    fields[11] = fieldE02IFHDYY =
    new DecimalField(message, HEADERSIZE + 48, 5, 0, "E02IFHDYY");
    fields[12] = fieldE02IFHDMM =
    new DecimalField(message, HEADERSIZE + 53, 3, 0, "E02IFHDMM");
    fields[13] = fieldE02IFHDDD =
    new DecimalField(message, HEADERSIZE + 56, 3, 0, "E02IFHDDD");
    fields[14] = fieldE02IFHVA1 =
    new DecimalField(message, HEADERSIZE + 59, 17, 2, "E02IFHVA1");
    fields[15] = fieldE02IFHVA2 =
    new DecimalField(message, HEADERSIZE + 76, 17, 2, "E02IFHVA2");
    fields[16] = fieldE02IFHNME =
    new CharacterField(message, HEADERSIZE + 93, 45, "E02IFHNME");
    fields[17] = fieldE02IFHSTS =
    new CharacterField(message, HEADERSIZE + 138, 1, "E02IFHSTS");
    fields[18] = fieldE02IFHLMM =
    new DecimalField(message, HEADERSIZE + 139, 3, 0, "E02IFHLMM");
    fields[19] = fieldE02IFHLMD =
    new DecimalField(message, HEADERSIZE + 142, 3, 0, "E02IFHLMD");
    fields[20] = fieldE02IFHLMY =
    new DecimalField(message, HEADERSIZE + 145, 5, 0, "E02IFHLMY");
    fields[21] = fieldE02IFHLMT =
    new CharacterField(message, HEADERSIZE + 150, 26, "E02IFHLMT");
    fields[22] = fieldE02IFHLMU =
    new CharacterField(message, HEADERSIZE + 176, 10, "E02IFHLMU");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02IFHCFL using a String value.
  */
  public void setE02IFHCFL(String newvalue)
  {
    fieldE02IFHCFL.setString(newvalue);
  }

  /**
  * Get value of field E02IFHCFL as a String.
  */
  public String getE02IFHCFL()
  {
    return fieldE02IFHCFL.getString();
  }

  /**
  * Set field E02IFHRCD using a String value.
  */
  public void setE02IFHRCD(String newvalue)
  {
    fieldE02IFHRCD.setString(newvalue);
  }

  /**
  * Get value of field E02IFHRCD as a String.
  */
  public String getE02IFHRCD()
  {
    return fieldE02IFHRCD.getString();
  }

  /**
  * Set field E02IFHDYY using a String value.
  */
  public void setE02IFHDYY(String newvalue)
  {
    fieldE02IFHDYY.setString(newvalue);
  }

  /**
  * Get value of field E02IFHDYY as a String.
  */
  public String getE02IFHDYY()
  {
    return fieldE02IFHDYY.getString();
  }

  /**
  * Set numeric field E02IFHDYY using a BigDecimal value.
  */
  public void setE02IFHDYY(BigDecimal newvalue)
  {
    fieldE02IFHDYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHDYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHDYY()
  {
    return fieldE02IFHDYY.getBigDecimal();
  }

  /**
  * Set field E02IFHDMM using a String value.
  */
  public void setE02IFHDMM(String newvalue)
  {
    fieldE02IFHDMM.setString(newvalue);
  }

  /**
  * Get value of field E02IFHDMM as a String.
  */
  public String getE02IFHDMM()
  {
    return fieldE02IFHDMM.getString();
  }

  /**
  * Set numeric field E02IFHDMM using a BigDecimal value.
  */
  public void setE02IFHDMM(BigDecimal newvalue)
  {
    fieldE02IFHDMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHDMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHDMM()
  {
    return fieldE02IFHDMM.getBigDecimal();
  }

  /**
  * Set field E02IFHDDD using a String value.
  */
  public void setE02IFHDDD(String newvalue)
  {
    fieldE02IFHDDD.setString(newvalue);
  }

  /**
  * Get value of field E02IFHDDD as a String.
  */
  public String getE02IFHDDD()
  {
    return fieldE02IFHDDD.getString();
  }

  /**
  * Set numeric field E02IFHDDD using a BigDecimal value.
  */
  public void setE02IFHDDD(BigDecimal newvalue)
  {
    fieldE02IFHDDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHDDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHDDD()
  {
    return fieldE02IFHDDD.getBigDecimal();
  }

  /**
  * Set field E02IFHVA1 using a String value.
  */
  public void setE02IFHVA1(String newvalue)
  {
    fieldE02IFHVA1.setString(newvalue);
  }

  /**
  * Get value of field E02IFHVA1 as a String.
  */
  public String getE02IFHVA1()
  {
    return fieldE02IFHVA1.getString();
  }

  /**
  * Set numeric field E02IFHVA1 using a BigDecimal value.
  */
  public void setE02IFHVA1(BigDecimal newvalue)
  {
    fieldE02IFHVA1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHVA1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHVA1()
  {
    return fieldE02IFHVA1.getBigDecimal();
  }

  /**
  * Set field E02IFHVA2 using a String value.
  */
  public void setE02IFHVA2(String newvalue)
  {
    fieldE02IFHVA2.setString(newvalue);
  }

  /**
  * Get value of field E02IFHVA2 as a String.
  */
  public String getE02IFHVA2()
  {
    return fieldE02IFHVA2.getString();
  }

  /**
  * Set numeric field E02IFHVA2 using a BigDecimal value.
  */
  public void setE02IFHVA2(BigDecimal newvalue)
  {
    fieldE02IFHVA2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHVA2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHVA2()
  {
    return fieldE02IFHVA2.getBigDecimal();
  }

  /**
  * Set field E02IFHNME using a String value.
  */
  public void setE02IFHNME(String newvalue)
  {
    fieldE02IFHNME.setString(newvalue);
  }

  /**
  * Get value of field E02IFHNME as a String.
  */
  public String getE02IFHNME()
  {
    return fieldE02IFHNME.getString();
  }

  /**
  * Set field E02IFHSTS using a String value.
  */
  public void setE02IFHSTS(String newvalue)
  {
    fieldE02IFHSTS.setString(newvalue);
  }

  /**
  * Get value of field E02IFHSTS as a String.
  */
  public String getE02IFHSTS()
  {
    return fieldE02IFHSTS.getString();
  }

  /**
  * Set field E02IFHLMM using a String value.
  */
  public void setE02IFHLMM(String newvalue)
  {
    fieldE02IFHLMM.setString(newvalue);
  }

  /**
  * Get value of field E02IFHLMM as a String.
  */
  public String getE02IFHLMM()
  {
    return fieldE02IFHLMM.getString();
  }

  /**
  * Set numeric field E02IFHLMM using a BigDecimal value.
  */
  public void setE02IFHLMM(BigDecimal newvalue)
  {
    fieldE02IFHLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHLMM()
  {
    return fieldE02IFHLMM.getBigDecimal();
  }

  /**
  * Set field E02IFHLMD using a String value.
  */
  public void setE02IFHLMD(String newvalue)
  {
    fieldE02IFHLMD.setString(newvalue);
  }

  /**
  * Get value of field E02IFHLMD as a String.
  */
  public String getE02IFHLMD()
  {
    return fieldE02IFHLMD.getString();
  }

  /**
  * Set numeric field E02IFHLMD using a BigDecimal value.
  */
  public void setE02IFHLMD(BigDecimal newvalue)
  {
    fieldE02IFHLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHLMD()
  {
    return fieldE02IFHLMD.getBigDecimal();
  }

  /**
  * Set field E02IFHLMY using a String value.
  */
  public void setE02IFHLMY(String newvalue)
  {
    fieldE02IFHLMY.setString(newvalue);
  }

  /**
  * Get value of field E02IFHLMY as a String.
  */
  public String getE02IFHLMY()
  {
    return fieldE02IFHLMY.getString();
  }

  /**
  * Set numeric field E02IFHLMY using a BigDecimal value.
  */
  public void setE02IFHLMY(BigDecimal newvalue)
  {
    fieldE02IFHLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02IFHLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02IFHLMY()
  {
    return fieldE02IFHLMY.getBigDecimal();
  }

  /**
  * Set field E02IFHLMT using a String value.
  */
  public void setE02IFHLMT(String newvalue)
  {
    fieldE02IFHLMT.setString(newvalue);
  }

  /**
  * Get value of field E02IFHLMT as a String.
  */
  public String getE02IFHLMT()
  {
    return fieldE02IFHLMT.getString();
  }

  /**
  * Set field E02IFHLMU using a String value.
  */
  public void setE02IFHLMU(String newvalue)
  {
    fieldE02IFHLMU.setString(newvalue);
  }

  /**
  * Get value of field E02IFHLMU as a String.
  */
  public String getE02IFHLMU()
  {
    return fieldE02IFHLMU.getString();
  }

}
