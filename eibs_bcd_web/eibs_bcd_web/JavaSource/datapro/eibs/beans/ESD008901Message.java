package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD008901 physical file definition.
* 
* File level identifier is 1130611113356.
* Record format level identifier is 4FAD98DEBE882.
*/

public class ESD008901Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CUPPRF",
                                     "E01PRFDSC",
                                     "E01CUPCUR",
                                     "E01CUSNA1",
                                     "E01CUPNAM",
                                     "E01CUPNA1",
                                     "E01CUPADD",
                                     "E01CUPAD1",
                                     "E01CUPTYP",
                                     "E01CUPBSX",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE",
                                     "F01CUPCUR",
                                     "F01CUPBSX",
                                     "F01ACT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CUPPRF",
                                   "E01PRFDSC",
                                   "E01CUPCUR",
                                   "E01CUSNA1",
                                   "E01CUPNAM",
                                   "E01CUPNA1",
                                   "E01CUPADD",
                                   "E01CUPAD1",
                                   "E01CUPTYP",
                                   "E01CUPBSX",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE",
                                   "F01CUPCUR",
                                   "F01CUPBSX",
                                   "F01ACT"
                                 };
  final static String fid = "1130611113356";
  final static String rid = "4FAD98DEBE882";
  final static String fmtname = "ESD008901";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CUPPRF = null;
  private CharacterField fieldE01PRFDSC = null;
  private DecimalField fieldE01CUPCUR = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CUPNAM = null;
  private CharacterField fieldE01CUPNA1 = null;
  private CharacterField fieldE01CUPADD = null;
  private CharacterField fieldE01CUPAD1 = null;
  private CharacterField fieldE01CUPTYP = null;
  private CharacterField fieldE01CUPBSX = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;
  private CharacterField fieldF01CUPCUR = null;
  private CharacterField fieldF01CUPBSX = null;
  private CharacterField fieldF01ACT = null;

  /**
  * Constructor for ESD008901Message.
  */
  public ESD008901Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 437;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CUPPRF =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01CUPPRF");
    fields[10] = fieldE01PRFDSC =
    new CharacterField(message, HEADERSIZE + 52, 60, "E01PRFDSC");
    fields[11] = fieldE01CUPCUR =
    new DecimalField(message, HEADERSIZE + 112, 10, 0, "E01CUPCUR");
    fields[12] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 122, 60, "E01CUSNA1");
    fields[13] = fieldE01CUPNAM =
    new CharacterField(message, HEADERSIZE + 182, 60, "E01CUPNAM");
    fields[14] = fieldE01CUPNA1 =
    new CharacterField(message, HEADERSIZE + 242, 60, "E01CUPNA1");
    fields[15] = fieldE01CUPADD =
    new CharacterField(message, HEADERSIZE + 302, 60, "E01CUPADD");
    fields[16] = fieldE01CUPAD1 =
    new CharacterField(message, HEADERSIZE + 362, 60, "E01CUPAD1");
    fields[17] = fieldE01CUPTYP =
    new CharacterField(message, HEADERSIZE + 422, 1, "E01CUPTYP");
    fields[18] = fieldE01CUPBSX =
    new CharacterField(message, HEADERSIZE + 423, 1, "E01CUPBSX");
    fields[19] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 424, 1, "E01ACT");
    fields[20] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 425, 8, 0, "E01NUMREC");
    fields[21] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 433, 1, "E01INDOPE");
    fields[22] = fieldF01CUPCUR =
    new CharacterField(message, HEADERSIZE + 434, 1, "F01CUPCUR");
    fields[23] = fieldF01CUPBSX =
    new CharacterField(message, HEADERSIZE + 435, 1, "F01CUPBSX");
    fields[24] = fieldF01ACT =
    new CharacterField(message, HEADERSIZE + 436, 1, "F01ACT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CUPPRF using a String value.
  */
  public void setE01CUPPRF(String newvalue)
  {
    fieldE01CUPPRF.setString(newvalue);
  }

  /**
  * Get value of field E01CUPPRF as a String.
  */
  public String getE01CUPPRF()
  {
    return fieldE01CUPPRF.getString();
  }

  /**
  * Set numeric field E01CUPPRF using a BigDecimal value.
  */
  public void setE01CUPPRF(BigDecimal newvalue)
  {
    fieldE01CUPPRF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUPPRF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUPPRF()
  {
    return fieldE01CUPPRF.getBigDecimal();
  }

  /**
  * Set field E01PRFDSC using a String value.
  */
  public void setE01PRFDSC(String newvalue)
  {
    fieldE01PRFDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PRFDSC as a String.
  */
  public String getE01PRFDSC()
  {
    return fieldE01PRFDSC.getString();
  }

  /**
  * Set field E01CUPCUR using a String value.
  */
  public void setE01CUPCUR(String newvalue)
  {
    fieldE01CUPCUR.setString(newvalue);
  }

  /**
  * Get value of field E01CUPCUR as a String.
  */
  public String getE01CUPCUR()
  {
    return fieldE01CUPCUR.getString();
  }

  /**
  * Set numeric field E01CUPCUR using a BigDecimal value.
  */
  public void setE01CUPCUR(BigDecimal newvalue)
  {
    fieldE01CUPCUR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUPCUR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUPCUR()
  {
    return fieldE01CUPCUR.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUPNAM using a String value.
  */
  public void setE01CUPNAM(String newvalue)
  {
    fieldE01CUPNAM.setString(newvalue);
  }

  /**
  * Get value of field E01CUPNAM as a String.
  */
  public String getE01CUPNAM()
  {
    return fieldE01CUPNAM.getString();
  }

  /**
  * Set field E01CUPNA1 using a String value.
  */
  public void setE01CUPNA1(String newvalue)
  {
    fieldE01CUPNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUPNA1 as a String.
  */
  public String getE01CUPNA1()
  {
    return fieldE01CUPNA1.getString();
  }

  /**
  * Set field E01CUPADD using a String value.
  */
  public void setE01CUPADD(String newvalue)
  {
    fieldE01CUPADD.setString(newvalue);
  }

  /**
  * Get value of field E01CUPADD as a String.
  */
  public String getE01CUPADD()
  {
    return fieldE01CUPADD.getString();
  }

  /**
  * Set field E01CUPAD1 using a String value.
  */
  public void setE01CUPAD1(String newvalue)
  {
    fieldE01CUPAD1.setString(newvalue);
  }

  /**
  * Get value of field E01CUPAD1 as a String.
  */
  public String getE01CUPAD1()
  {
    return fieldE01CUPAD1.getString();
  }

  /**
  * Set field E01CUPTYP using a String value.
  */
  public void setE01CUPTYP(String newvalue)
  {
    fieldE01CUPTYP.setString(newvalue);
  }

  /**
  * Get value of field E01CUPTYP as a String.
  */
  public String getE01CUPTYP()
  {
    return fieldE01CUPTYP.getString();
  }

  /**
  * Set field E01CUPBSX using a String value.
  */
  public void setE01CUPBSX(String newvalue)
  {
    fieldE01CUPBSX.setString(newvalue);
  }

  /**
  * Get value of field E01CUPBSX as a String.
  */
  public String getE01CUPBSX()
  {
    return fieldE01CUPBSX.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

  /**
  * Set field F01CUPCUR using a String value.
  */
  public void setF01CUPCUR(String newvalue)
  {
    fieldF01CUPCUR.setString(newvalue);
  }

  /**
  * Get value of field F01CUPCUR as a String.
  */
  public String getF01CUPCUR()
  {
    return fieldF01CUPCUR.getString();
  }

  /**
  * Set field F01CUPBSX using a String value.
  */
  public void setF01CUPBSX(String newvalue)
  {
    fieldF01CUPBSX.setString(newvalue);
  }

  /**
  * Get value of field F01CUPBSX as a String.
  */
  public String getF01CUPBSX()
  {
    return fieldF01CUPBSX.getString();
  }

  /**
  * Set field F01ACT using a String value.
  */
  public void setF01ACT(String newvalue)
  {
    fieldF01ACT.setString(newvalue);
  }

  /**
  * Get value of field F01ACT as a String.
  */
  public String getF01ACT()
  {
    return fieldF01ACT.getString();
  }

}
