package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD9015DS physical file definition.
* 
* File level identifier is 1170421105328.
* Record format level identifier is 3BA4292C0A4D1.
*/

public class EWD9015DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDID",
                                     "RWDFRC",
                                     "SWDID",
                                     "SWDDEN",
                                     "SWDDSC",
                                     "SWDURI",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDID",
                                   "RWDFRC",
                                   "SWDID",
                                   "SWDDEN",
                                   "SWDDSC",
                                   "SWDURI",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1170421105328";
  final static String rid = "3BA4292C0A4D1";
  final static String fmtname = "EWD9015DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDID = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDID = null;
  private CharacterField fieldSWDDEN = null;
  private CharacterField fieldSWDDSC = null;
  private CharacterField fieldSWDURI = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD9015DSMessage.
  */
  public EWD9015DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 401;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDID =
    new CharacterField(message, HEADERSIZE + 10, 30, "RWDID");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 40, 8, 0, "RWDFRC");
    fields[3] = fieldSWDID =
    new CharacterField(message, HEADERSIZE + 48, 6, "SWDID");
    fields[4] = fieldSWDDEN =
    new CharacterField(message, HEADERSIZE + 54, 3, "SWDDEN");
    fields[5] = fieldSWDDSC =
    new CharacterField(message, HEADERSIZE + 57, 80, "SWDDSC");
    fields[6] = fieldSWDURI =
    new CharacterField(message, HEADERSIZE + 137, 255, "SWDURI");
    fields[7] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 392, 8, 0, "SWDREC");
    fields[8] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 400, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDID using a String value.
  */
  public void setRWDID(String newvalue)
  {
    fieldRWDID.setString(newvalue);
  }

  /**
  * Get value of field RWDID as a String.
  */
  public String getRWDID()
  {
    return fieldRWDID.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDID using a String value.
  */
  public void setSWDID(String newvalue)
  {
    fieldSWDID.setString(newvalue);
  }

  /**
  * Get value of field SWDID as a String.
  */
  public String getSWDID()
  {
    return fieldSWDID.getString();
  }

  /**
  * Set field SWDDEN using a String value.
  */
  public void setSWDDEN(String newvalue)
  {
    fieldSWDDEN.setString(newvalue);
  }

  /**
  * Get value of field SWDDEN as a String.
  */
  public String getSWDDEN()
  {
    return fieldSWDDEN.getString();
  }

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
    fieldSWDDSC.setString(newvalue);
  }

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
    return fieldSWDDSC.getString();
  }

  /**
  * Set field SWDURI using a String value.
  */
  public void setSWDURI(String newvalue)
  {
    fieldSWDURI.setString(newvalue);
  }

  /**
  * Get value of field SWDURI as a String.
  */
  public String getSWDURI()
  {
    return fieldSWDURI.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
