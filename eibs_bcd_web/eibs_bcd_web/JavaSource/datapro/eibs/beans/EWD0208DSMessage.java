package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0208DS physical file definition.
* 
* File level identifier is 1171020104611.
* Record format level identifier is 444224846255C.
*/

public class EWD0208DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDCUN",
                                     "EWDCDE",
                                     "EWDDES",
                                     "EWDFVM",
                                     "EWDFVD",
                                     "EWDFVY",
                                     "EWDSTA",
                                     "EWDFL1",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDCUN",
                                   "EWDCDE",
                                   "EWDDES",
                                   "EWDFVM",
                                   "EWDFVD",
                                   "EWDFVY",
                                   "EWDSTA",
                                   "EWDFL1",
                                   "EWDOPE"
                                 };
  final static String fid = "1171020104611";
  final static String rid = "444224846255C";
  final static String fmtname = "EWD0208DS";
  final int FIELDCOUNT = 9;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldEWDCUN = null;
  private CharacterField fieldEWDCDE = null;
  private CharacterField fieldEWDDES = null;
  private DecimalField fieldEWDFVM = null;
  private DecimalField fieldEWDFVD = null;
  private DecimalField fieldEWDFVY = null;
  private CharacterField fieldEWDSTA = null;
  private CharacterField fieldEWDFL1 = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0208DSMessage.
  */
  public EWD0208DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 73;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDCUN =
    new DecimalField(message, HEADERSIZE + 0, 10, 0, "EWDCUN");
    fields[1] = fieldEWDCDE =
    new CharacterField(message, HEADERSIZE + 10, 4, "EWDCDE");
    fields[2] = fieldEWDDES =
    new CharacterField(message, HEADERSIZE + 14, 45, "EWDDES");
    fields[3] = fieldEWDFVM =
    new DecimalField(message, HEADERSIZE + 59, 3, 0, "EWDFVM");
    fields[4] = fieldEWDFVD =
    new DecimalField(message, HEADERSIZE + 62, 3, 0, "EWDFVD");
    fields[5] = fieldEWDFVY =
    new DecimalField(message, HEADERSIZE + 65, 5, 0, "EWDFVY");
    fields[6] = fieldEWDSTA =
    new CharacterField(message, HEADERSIZE + 70, 1, "EWDSTA");
    fields[7] = fieldEWDFL1 =
    new CharacterField(message, HEADERSIZE + 71, 1, "EWDFL1");
    fields[8] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 72, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDCUN using a String value.
  */
  public void setEWDCUN(String newvalue)
  {
    fieldEWDCUN.setString(newvalue);
  }

  /**
  * Get value of field EWDCUN as a String.
  */
  public String getEWDCUN()
  {
    return fieldEWDCUN.getString();
  }

  /**
  * Set numeric field EWDCUN using a BigDecimal value.
  */
  public void setEWDCUN(BigDecimal newvalue)
  {
    fieldEWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCUN()
  {
    return fieldEWDCUN.getBigDecimal();
  }

  /**
  * Set field EWDCDE using a String value.
  */
  public void setEWDCDE(String newvalue)
  {
    fieldEWDCDE.setString(newvalue);
  }

  /**
  * Get value of field EWDCDE as a String.
  */
  public String getEWDCDE()
  {
    return fieldEWDCDE.getString();
  }

  /**
  * Set field EWDDES using a String value.
  */
  public void setEWDDES(String newvalue)
  {
    fieldEWDDES.setString(newvalue);
  }

  /**
  * Get value of field EWDDES as a String.
  */
  public String getEWDDES()
  {
    return fieldEWDDES.getString();
  }

  /**
  * Set field EWDFVM using a String value.
  */
  public void setEWDFVM(String newvalue)
  {
    fieldEWDFVM.setString(newvalue);
  }

  /**
  * Get value of field EWDFVM as a String.
  */
  public String getEWDFVM()
  {
    return fieldEWDFVM.getString();
  }

  /**
  * Set numeric field EWDFVM using a BigDecimal value.
  */
  public void setEWDFVM(BigDecimal newvalue)
  {
    fieldEWDFVM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVM()
  {
    return fieldEWDFVM.getBigDecimal();
  }

  /**
  * Set field EWDFVD using a String value.
  */
  public void setEWDFVD(String newvalue)
  {
    fieldEWDFVD.setString(newvalue);
  }

  /**
  * Get value of field EWDFVD as a String.
  */
  public String getEWDFVD()
  {
    return fieldEWDFVD.getString();
  }

  /**
  * Set numeric field EWDFVD using a BigDecimal value.
  */
  public void setEWDFVD(BigDecimal newvalue)
  {
    fieldEWDFVD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVD()
  {
    return fieldEWDFVD.getBigDecimal();
  }

  /**
  * Set field EWDFVY using a String value.
  */
  public void setEWDFVY(String newvalue)
  {
    fieldEWDFVY.setString(newvalue);
  }

  /**
  * Get value of field EWDFVY as a String.
  */
  public String getEWDFVY()
  {
    return fieldEWDFVY.getString();
  }

  /**
  * Set numeric field EWDFVY using a BigDecimal value.
  */
  public void setEWDFVY(BigDecimal newvalue)
  {
    fieldEWDFVY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDFVY as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDFVY()
  {
    return fieldEWDFVY.getBigDecimal();
  }

  /**
  * Set field EWDSTA using a String value.
  */
  public void setEWDSTA(String newvalue)
  {
    fieldEWDSTA.setString(newvalue);
  }

  /**
  * Get value of field EWDSTA as a String.
  */
  public String getEWDSTA()
  {
    return fieldEWDSTA.getString();
  }

  /**
  * Set field EWDFL1 using a String value.
  */
  public void setEWDFL1(String newvalue)
  {
    fieldEWDFL1.setString(newvalue);
  }

  /**
  * Get value of field EWDFL1 as a String.
  */
  public String getEWDFL1()
  {
    return fieldEWDFL1.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
