package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECB10101 physical file definition.
* 
* File level identifier is 1100706173516.
* Record format level identifier is 48E4BBA7F28B8.
*/

public class ECB10101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "ECBRUT",
                                     "ECBMUT",
                                     "ECBCUO",
                                     "HPDVCM",
                                     "HPDABC",
                                     "HPDTAS",
                                     "HPDAMZ",
                                     "HPDINT",
                                     "HPDCMS",
                                     "HPDTOD",
                                     "HPDSED",
                                     "HPDSEI",
                                     "HPDMPG",
                                     "HPDTPU",
                                     "HPDSDO",
                                     "HPDIPE",
                                     "GASCOB",
                                     "ECBTPP",
                                     "HPDPZO",
                                     "HPDNOM",
                                     "HPDDIR",
                                     "HPDCOM"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "ECBRUT",
                                   "ECBMUT",
                                   "ECBCUO",
                                   "HPDVCM",
                                   "HPDABC",
                                   "HPDTAS",
                                   "HPDAMZ",
                                   "HPDINT",
                                   "HPDCMS",
                                   "HPDTOD",
                                   "HPDSED",
                                   "HPDSEI",
                                   "HPDMPG",
                                   "HPDTPU",
                                   "HPDSDO",
                                   "HPDIPE",
                                   "GASCOB",
                                   "ECBTPP",
                                   "HPDPZO",
                                   "HPDNOM",
                                   "HPDDIR",
                                   "HPDCOM"
                                 };
  final static String fid = "1100706173516";
  final static String rid = "48E4BBA7F28B8";
  final static String fmtname = "ECB10101";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldECBRUT = null;
  private DecimalField fieldECBMUT = null;
  private DecimalField fieldECBCUO = null;
  private DecimalField fieldHPDVCM = null;
  private CharacterField fieldHPDABC = null;
  private DecimalField fieldHPDTAS = null;
  private DecimalField fieldHPDAMZ = null;
  private DecimalField fieldHPDINT = null;
  private DecimalField fieldHPDCMS = null;
  private DecimalField fieldHPDTOD = null;
  private DecimalField fieldHPDSED = null;
  private DecimalField fieldHPDSEI = null;
  private DecimalField fieldHPDMPG = null;
  private DecimalField fieldHPDTPU = null;
  private DecimalField fieldHPDSDO = null;
  private DecimalField fieldHPDIPE = null;
  private DecimalField fieldGASCOB = null;
  private DecimalField fieldECBTPP = null;
  private DecimalField fieldHPDPZO = null;
  private CharacterField fieldHPDNOM = null;
  private CharacterField fieldHPDDIR = null;
  private CharacterField fieldHPDCOM = null;

  /**
  * Constructor for ECB10101Message.
  */
  public ECB10101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 385;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldECBRUT =
    new CharacterField(message, HEADERSIZE + 42, 15, "ECBRUT");
    fields[10] = fieldECBMUT =
    new DecimalField(message, HEADERSIZE + 57, 6, 0, "ECBMUT");
    fields[11] = fieldECBCUO =
    new DecimalField(message, HEADERSIZE + 63, 4, 0, "ECBCUO");
    fields[12] = fieldHPDVCM =
    new DecimalField(message, HEADERSIZE + 67, 9, 0, "HPDVCM");
    fields[13] = fieldHPDABC =
    new CharacterField(message, HEADERSIZE + 76, 5, "HPDABC");
    fields[14] = fieldHPDTAS =
    new DecimalField(message, HEADERSIZE + 81, 6, 2, "HPDTAS");
    fields[15] = fieldHPDAMZ =
    new DecimalField(message, HEADERSIZE + 87, 15, 4, "HPDAMZ");
    fields[16] = fieldHPDINT =
    new DecimalField(message, HEADERSIZE + 102, 15, 4, "HPDINT");
    fields[17] = fieldHPDCMS =
    new DecimalField(message, HEADERSIZE + 117, 15, 4, "HPDCMS");
    fields[18] = fieldHPDTOD =
    new DecimalField(message, HEADERSIZE + 132, 15, 4, "HPDTOD");
    fields[19] = fieldHPDSED =
    new DecimalField(message, HEADERSIZE + 147, 15, 4, "HPDSED");
    fields[20] = fieldHPDSEI =
    new DecimalField(message, HEADERSIZE + 162, 15, 4, "HPDSEI");
    fields[21] = fieldHPDMPG =
    new DecimalField(message, HEADERSIZE + 177, 15, 4, "HPDMPG");
    fields[22] = fieldHPDTPU =
    new DecimalField(message, HEADERSIZE + 192, 15, 4, "HPDTPU");
    fields[23] = fieldHPDSDO =
    new DecimalField(message, HEADERSIZE + 207, 15, 4, "HPDSDO");
    fields[24] = fieldHPDIPE =
    new DecimalField(message, HEADERSIZE + 222, 11, 0, "HPDIPE");
    fields[25] = fieldGASCOB =
    new DecimalField(message, HEADERSIZE + 233, 17, 4, "GASCOB");
    fields[26] = fieldECBTPP =
    new DecimalField(message, HEADERSIZE + 250, 11, 0, "ECBTPP");
    fields[27] = fieldHPDPZO =
    new DecimalField(message, HEADERSIZE + 261, 4, 0, "HPDPZO");
    fields[28] = fieldHPDNOM =
    new CharacterField(message, HEADERSIZE + 265, 50, "HPDNOM");
    fields[29] = fieldHPDDIR =
    new CharacterField(message, HEADERSIZE + 315, 40, "HPDDIR");
    fields[30] = fieldHPDCOM =
    new CharacterField(message, HEADERSIZE + 355, 30, "HPDCOM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field ECBRUT using a String value.
  */
  public void setECBRUT(String newvalue)
  {
    fieldECBRUT.setString(newvalue);
  }

  /**
  * Get value of field ECBRUT as a String.
  */
  public String getECBRUT()
  {
    return fieldECBRUT.getString();
  }

  /**
  * Set field ECBMUT using a String value.
  */
  public void setECBMUT(String newvalue)
  {
    fieldECBMUT.setString(newvalue);
  }

  /**
  * Get value of field ECBMUT as a String.
  */
  public String getECBMUT()
  {
    return fieldECBMUT.getString();
  }

  /**
  * Set numeric field ECBMUT using a BigDecimal value.
  */
  public void setECBMUT(BigDecimal newvalue)
  {
    fieldECBMUT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECBMUT as a BigDecimal.
  */
  public BigDecimal getBigDecimalECBMUT()
  {
    return fieldECBMUT.getBigDecimal();
  }

  /**
  * Set field ECBCUO using a String value.
  */
  public void setECBCUO(String newvalue)
  {
    fieldECBCUO.setString(newvalue);
  }

  /**
  * Get value of field ECBCUO as a String.
  */
  public String getECBCUO()
  {
    return fieldECBCUO.getString();
  }

  /**
  * Set numeric field ECBCUO using a BigDecimal value.
  */
  public void setECBCUO(BigDecimal newvalue)
  {
    fieldECBCUO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECBCUO as a BigDecimal.
  */
  public BigDecimal getBigDecimalECBCUO()
  {
    return fieldECBCUO.getBigDecimal();
  }

  /**
  * Set field HPDVCM using a String value.
  */
  public void setHPDVCM(String newvalue)
  {
    fieldHPDVCM.setString(newvalue);
  }

  /**
  * Get value of field HPDVCM as a String.
  */
  public String getHPDVCM()
  {
    return fieldHPDVCM.getString();
  }

  /**
  * Set numeric field HPDVCM using a BigDecimal value.
  */
  public void setHPDVCM(BigDecimal newvalue)
  {
    fieldHPDVCM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDVCM as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDVCM()
  {
    return fieldHPDVCM.getBigDecimal();
  }

  /**
  * Set field HPDABC using a String value.
  */
  public void setHPDABC(String newvalue)
  {
    fieldHPDABC.setString(newvalue);
  }

  /**
  * Get value of field HPDABC as a String.
  */
  public String getHPDABC()
  {
    return fieldHPDABC.getString();
  }

  /**
  * Set field HPDTAS using a String value.
  */
  public void setHPDTAS(String newvalue)
  {
    fieldHPDTAS.setString(newvalue);
  }

  /**
  * Get value of field HPDTAS as a String.
  */
  public String getHPDTAS()
  {
    return fieldHPDTAS.getString();
  }

  /**
  * Set numeric field HPDTAS using a BigDecimal value.
  */
  public void setHPDTAS(BigDecimal newvalue)
  {
    fieldHPDTAS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDTAS as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDTAS()
  {
    return fieldHPDTAS.getBigDecimal();
  }

  /**
  * Set field HPDAMZ using a String value.
  */
  public void setHPDAMZ(String newvalue)
  {
    fieldHPDAMZ.setString(newvalue);
  }

  /**
  * Get value of field HPDAMZ as a String.
  */
  public String getHPDAMZ()
  {
    return fieldHPDAMZ.getString();
  }

  /**
  * Set numeric field HPDAMZ using a BigDecimal value.
  */
  public void setHPDAMZ(BigDecimal newvalue)
  {
    fieldHPDAMZ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDAMZ as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDAMZ()
  {
    return fieldHPDAMZ.getBigDecimal();
  }

  /**
  * Set field HPDINT using a String value.
  */
  public void setHPDINT(String newvalue)
  {
    fieldHPDINT.setString(newvalue);
  }

  /**
  * Get value of field HPDINT as a String.
  */
  public String getHPDINT()
  {
    return fieldHPDINT.getString();
  }

  /**
  * Set numeric field HPDINT using a BigDecimal value.
  */
  public void setHPDINT(BigDecimal newvalue)
  {
    fieldHPDINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDINT()
  {
    return fieldHPDINT.getBigDecimal();
  }

  /**
  * Set field HPDCMS using a String value.
  */
  public void setHPDCMS(String newvalue)
  {
    fieldHPDCMS.setString(newvalue);
  }

  /**
  * Get value of field HPDCMS as a String.
  */
  public String getHPDCMS()
  {
    return fieldHPDCMS.getString();
  }

  /**
  * Set numeric field HPDCMS using a BigDecimal value.
  */
  public void setHPDCMS(BigDecimal newvalue)
  {
    fieldHPDCMS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDCMS as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDCMS()
  {
    return fieldHPDCMS.getBigDecimal();
  }

  /**
  * Set field HPDTOD using a String value.
  */
  public void setHPDTOD(String newvalue)
  {
    fieldHPDTOD.setString(newvalue);
  }

  /**
  * Get value of field HPDTOD as a String.
  */
  public String getHPDTOD()
  {
    return fieldHPDTOD.getString();
  }

  /**
  * Set numeric field HPDTOD using a BigDecimal value.
  */
  public void setHPDTOD(BigDecimal newvalue)
  {
    fieldHPDTOD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDTOD as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDTOD()
  {
    return fieldHPDTOD.getBigDecimal();
  }

  /**
  * Set field HPDSED using a String value.
  */
  public void setHPDSED(String newvalue)
  {
    fieldHPDSED.setString(newvalue);
  }

  /**
  * Get value of field HPDSED as a String.
  */
  public String getHPDSED()
  {
    return fieldHPDSED.getString();
  }

  /**
  * Set numeric field HPDSED using a BigDecimal value.
  */
  public void setHPDSED(BigDecimal newvalue)
  {
    fieldHPDSED.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDSED as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDSED()
  {
    return fieldHPDSED.getBigDecimal();
  }

  /**
  * Set field HPDSEI using a String value.
  */
  public void setHPDSEI(String newvalue)
  {
    fieldHPDSEI.setString(newvalue);
  }

  /**
  * Get value of field HPDSEI as a String.
  */
  public String getHPDSEI()
  {
    return fieldHPDSEI.getString();
  }

  /**
  * Set numeric field HPDSEI using a BigDecimal value.
  */
  public void setHPDSEI(BigDecimal newvalue)
  {
    fieldHPDSEI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDSEI as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDSEI()
  {
    return fieldHPDSEI.getBigDecimal();
  }

  /**
  * Set field HPDMPG using a String value.
  */
  public void setHPDMPG(String newvalue)
  {
    fieldHPDMPG.setString(newvalue);
  }

  /**
  * Get value of field HPDMPG as a String.
  */
  public String getHPDMPG()
  {
    return fieldHPDMPG.getString();
  }

  /**
  * Set numeric field HPDMPG using a BigDecimal value.
  */
  public void setHPDMPG(BigDecimal newvalue)
  {
    fieldHPDMPG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDMPG as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDMPG()
  {
    return fieldHPDMPG.getBigDecimal();
  }

  /**
  * Set field HPDTPU using a String value.
  */
  public void setHPDTPU(String newvalue)
  {
    fieldHPDTPU.setString(newvalue);
  }

  /**
  * Get value of field HPDTPU as a String.
  */
  public String getHPDTPU()
  {
    return fieldHPDTPU.getString();
  }

  /**
  * Set numeric field HPDTPU using a BigDecimal value.
  */
  public void setHPDTPU(BigDecimal newvalue)
  {
    fieldHPDTPU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDTPU as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDTPU()
  {
    return fieldHPDTPU.getBigDecimal();
  }

  /**
  * Set field HPDSDO using a String value.
  */
  public void setHPDSDO(String newvalue)
  {
    fieldHPDSDO.setString(newvalue);
  }

  /**
  * Get value of field HPDSDO as a String.
  */
  public String getHPDSDO()
  {
    return fieldHPDSDO.getString();
  }

  /**
  * Set numeric field HPDSDO using a BigDecimal value.
  */
  public void setHPDSDO(BigDecimal newvalue)
  {
    fieldHPDSDO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDSDO as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDSDO()
  {
    return fieldHPDSDO.getBigDecimal();
  }

  /**
  * Set field HPDIPE using a String value.
  */
  public void setHPDIPE(String newvalue)
  {
    fieldHPDIPE.setString(newvalue);
  }

  /**
  * Get value of field HPDIPE as a String.
  */
  public String getHPDIPE()
  {
    return fieldHPDIPE.getString();
  }

  /**
  * Set numeric field HPDIPE using a BigDecimal value.
  */
  public void setHPDIPE(BigDecimal newvalue)
  {
    fieldHPDIPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDIPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDIPE()
  {
    return fieldHPDIPE.getBigDecimal();
  }

  /**
  * Set field GASCOB using a String value.
  */
  public void setGASCOB(String newvalue)
  {
    fieldGASCOB.setString(newvalue);
  }

  /**
  * Get value of field GASCOB as a String.
  */
  public String getGASCOB()
  {
    return fieldGASCOB.getString();
  }

  /**
  * Set numeric field GASCOB using a BigDecimal value.
  */
  public void setGASCOB(BigDecimal newvalue)
  {
    fieldGASCOB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field GASCOB as a BigDecimal.
  */
  public BigDecimal getBigDecimalGASCOB()
  {
    return fieldGASCOB.getBigDecimal();
  }

  /**
  * Set field ECBTPP using a String value.
  */
  public void setECBTPP(String newvalue)
  {
    fieldECBTPP.setString(newvalue);
  }

  /**
  * Get value of field ECBTPP as a String.
  */
  public String getECBTPP()
  {
    return fieldECBTPP.getString();
  }

  /**
  * Set numeric field ECBTPP using a BigDecimal value.
  */
  public void setECBTPP(BigDecimal newvalue)
  {
    fieldECBTPP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECBTPP as a BigDecimal.
  */
  public BigDecimal getBigDecimalECBTPP()
  {
    return fieldECBTPP.getBigDecimal();
  }

  /**
  * Set field HPDPZO using a String value.
  */
  public void setHPDPZO(String newvalue)
  {
    fieldHPDPZO.setString(newvalue);
  }

  /**
  * Get value of field HPDPZO as a String.
  */
  public String getHPDPZO()
  {
    return fieldHPDPZO.getString();
  }

  /**
  * Set numeric field HPDPZO using a BigDecimal value.
  */
  public void setHPDPZO(BigDecimal newvalue)
  {
    fieldHPDPZO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HPDPZO as a BigDecimal.
  */
  public BigDecimal getBigDecimalHPDPZO()
  {
    return fieldHPDPZO.getBigDecimal();
  }

  /**
  * Set field HPDNOM using a String value.
  */
  public void setHPDNOM(String newvalue)
  {
    fieldHPDNOM.setString(newvalue);
  }

  /**
  * Get value of field HPDNOM as a String.
  */
  public String getHPDNOM()
  {
    return fieldHPDNOM.getString();
  }

  /**
  * Set field HPDDIR using a String value.
  */
  public void setHPDDIR(String newvalue)
  {
    fieldHPDDIR.setString(newvalue);
  }

  /**
  * Get value of field HPDDIR as a String.
  */
  public String getHPDDIR()
  {
    return fieldHPDDIR.getString();
  }

  /**
  * Set field HPDCOM using a String value.
  */
  public void setHPDCOM(String newvalue)
  {
    fieldHPDCOM.setString(newvalue);
  }

  /**
  * Get value of field HPDCOM as a String.
  */
  public String getHPDCOM()
  {
    return fieldHPDCOM.getString();
  }

}
