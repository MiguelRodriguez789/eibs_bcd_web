package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL089002 physical file definition.
* 
* File level identifier is 1170221162710.
* Record format level identifier is 3CBAE2AE907F0.
*/

public class EDL089002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02SELDID",
                                     "E02CUSNA1",
                                     "E02DLDMAM",
                                     "E02DLDMAD",
                                     "E02DLDMAY",
                                     "E02MONBSE",
                                     "E02MONMEX",
                                     "E02TOTBSE",
                                     "E02TOTMEX",
                                     "E02ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02SELDID",
                                   "E02CUSNA1",
                                   "E02DLDMAM",
                                   "E02DLDMAD",
                                   "E02DLDMAY",
                                   "E02MONBSE",
                                   "E02MONMEX",
                                   "E02TOTBSE",
                                   "E02TOTMEX",
                                   "E02ENDFLD"
                                 };
  final static String fid = "1170221162710";
  final static String rid = "3CBAE2AE907F0";
  final static String fmtname = "EDL089002";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02SELDID = null;
  private CharacterField fieldE02CUSNA1 = null;
  private DecimalField fieldE02DLDMAM = null;
  private DecimalField fieldE02DLDMAD = null;
  private DecimalField fieldE02DLDMAY = null;
  private DecimalField fieldE02MONBSE = null;
  private DecimalField fieldE02MONMEX = null;
  private DecimalField fieldE02TOTBSE = null;
  private DecimalField fieldE02TOTMEX = null;
  private CharacterField fieldE02ENDFLD = null;

  /**
  * Constructor for EDL089002Message.
  */
  public EDL089002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 207;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02SELDID =
    new CharacterField(message, HEADERSIZE + 42, 25, "E02SELDID");
    fields[10] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 67, 60, "E02CUSNA1");
    fields[11] = fieldE02DLDMAM =
    new DecimalField(message, HEADERSIZE + 127, 3, 0, "E02DLDMAM");
    fields[12] = fieldE02DLDMAD =
    new DecimalField(message, HEADERSIZE + 130, 3, 0, "E02DLDMAD");
    fields[13] = fieldE02DLDMAY =
    new DecimalField(message, HEADERSIZE + 133, 5, 0, "E02DLDMAY");
    fields[14] = fieldE02MONBSE =
    new DecimalField(message, HEADERSIZE + 138, 17, 2, "E02MONBSE");
    fields[15] = fieldE02MONMEX =
    new DecimalField(message, HEADERSIZE + 155, 17, 2, "E02MONMEX");
    fields[16] = fieldE02TOTBSE =
    new DecimalField(message, HEADERSIZE + 172, 17, 2, "E02TOTBSE");
    fields[17] = fieldE02TOTMEX =
    new DecimalField(message, HEADERSIZE + 189, 17, 2, "E02TOTMEX");
    fields[18] = fieldE02ENDFLD =
    new CharacterField(message, HEADERSIZE + 206, 1, "E02ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02SELDID using a String value.
  */
  public void setE02SELDID(String newvalue)
  {
    fieldE02SELDID.setString(newvalue);
  }

  /**
  * Get value of field E02SELDID as a String.
  */
  public String getE02SELDID()
  {
    return fieldE02SELDID.getString();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02DLDMAM using a String value.
  */
  public void setE02DLDMAM(String newvalue)
  {
    fieldE02DLDMAM.setString(newvalue);
  }

  /**
  * Get value of field E02DLDMAM as a String.
  */
  public String getE02DLDMAM()
  {
    return fieldE02DLDMAM.getString();
  }

  /**
  * Set numeric field E02DLDMAM using a BigDecimal value.
  */
  public void setE02DLDMAM(BigDecimal newvalue)
  {
    fieldE02DLDMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLDMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLDMAM()
  {
    return fieldE02DLDMAM.getBigDecimal();
  }

  /**
  * Set field E02DLDMAD using a String value.
  */
  public void setE02DLDMAD(String newvalue)
  {
    fieldE02DLDMAD.setString(newvalue);
  }

  /**
  * Get value of field E02DLDMAD as a String.
  */
  public String getE02DLDMAD()
  {
    return fieldE02DLDMAD.getString();
  }

  /**
  * Set numeric field E02DLDMAD using a BigDecimal value.
  */
  public void setE02DLDMAD(BigDecimal newvalue)
  {
    fieldE02DLDMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLDMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLDMAD()
  {
    return fieldE02DLDMAD.getBigDecimal();
  }

  /**
  * Set field E02DLDMAY using a String value.
  */
  public void setE02DLDMAY(String newvalue)
  {
    fieldE02DLDMAY.setString(newvalue);
  }

  /**
  * Get value of field E02DLDMAY as a String.
  */
  public String getE02DLDMAY()
  {
    return fieldE02DLDMAY.getString();
  }

  /**
  * Set numeric field E02DLDMAY using a BigDecimal value.
  */
  public void setE02DLDMAY(BigDecimal newvalue)
  {
    fieldE02DLDMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLDMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLDMAY()
  {
    return fieldE02DLDMAY.getBigDecimal();
  }

  /**
  * Set field E02MONBSE using a String value.
  */
  public void setE02MONBSE(String newvalue)
  {
    fieldE02MONBSE.setString(newvalue);
  }

  /**
  * Get value of field E02MONBSE as a String.
  */
  public String getE02MONBSE()
  {
    return fieldE02MONBSE.getString();
  }

  /**
  * Set numeric field E02MONBSE using a BigDecimal value.
  */
  public void setE02MONBSE(BigDecimal newvalue)
  {
    fieldE02MONBSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MONBSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MONBSE()
  {
    return fieldE02MONBSE.getBigDecimal();
  }

  /**
  * Set field E02MONMEX using a String value.
  */
  public void setE02MONMEX(String newvalue)
  {
    fieldE02MONMEX.setString(newvalue);
  }

  /**
  * Get value of field E02MONMEX as a String.
  */
  public String getE02MONMEX()
  {
    return fieldE02MONMEX.getString();
  }

  /**
  * Set numeric field E02MONMEX using a BigDecimal value.
  */
  public void setE02MONMEX(BigDecimal newvalue)
  {
    fieldE02MONMEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MONMEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MONMEX()
  {
    return fieldE02MONMEX.getBigDecimal();
  }

  /**
  * Set field E02TOTBSE using a String value.
  */
  public void setE02TOTBSE(String newvalue)
  {
    fieldE02TOTBSE.setString(newvalue);
  }

  /**
  * Get value of field E02TOTBSE as a String.
  */
  public String getE02TOTBSE()
  {
    return fieldE02TOTBSE.getString();
  }

  /**
  * Set numeric field E02TOTBSE using a BigDecimal value.
  */
  public void setE02TOTBSE(BigDecimal newvalue)
  {
    fieldE02TOTBSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02TOTBSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02TOTBSE()
  {
    return fieldE02TOTBSE.getBigDecimal();
  }

  /**
  * Set field E02TOTMEX using a String value.
  */
  public void setE02TOTMEX(String newvalue)
  {
    fieldE02TOTMEX.setString(newvalue);
  }

  /**
  * Get value of field E02TOTMEX as a String.
  */
  public String getE02TOTMEX()
  {
    return fieldE02TOTMEX.getString();
  }

  /**
  * Set numeric field E02TOTMEX using a BigDecimal value.
  */
  public void setE02TOTMEX(BigDecimal newvalue)
  {
    fieldE02TOTMEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02TOTMEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02TOTMEX()
  {
    return fieldE02TOTMEX.getBigDecimal();
  }

  /**
  * Set field E02ENDFLD using a String value.
  */
  public void setE02ENDFLD(String newvalue)
  {
    fieldE02ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E02ENDFLD as a String.
  */
  public String getE02ENDFLD()
  {
    return fieldE02ENDFLD.getString();
  }

}
