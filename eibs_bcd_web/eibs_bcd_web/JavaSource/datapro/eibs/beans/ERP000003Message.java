package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERP000003 physical file definition.
* 
* File level identifier is 1160816114233.
* Record format level identifier is 51B6A42F543E0.
*/

public class ERP000003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03PMSCOD",
                                     "E03PMSLIF",
                                     "E03PMSDSC",
                                     "E03PMSPLN",
                                     "E03PMSPTY",
                                     "E03PMSNDC",
                                     "E03PMSDDS",
                                     "E03CDM",
                                     "E03CDD",
                                     "E03CDY",
                                     "E03CTM",
                                     "E03CUS",
                                     "E03MDM",
                                     "E03MDD",
                                     "E03MDY",
                                     "E03MTM",
                                     "E03MUS",
                                     "E03NUMREC",
                                     "E03INDOPE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03PMSCOD",
                                   "E03PMSLIF",
                                   "E03PMSDSC",
                                   "E03PMSPLN",
                                   "E03PMSPTY",
                                   "E03PMSNDC",
                                   "E03PMSDDS",
                                   "E03CDM",
                                   "E03CDD",
                                   "E03CDY",
                                   "E03CTM",
                                   "E03CUS",
                                   "E03MDM",
                                   "E03MDD",
                                   "E03MDY",
                                   "E03MTM",
                                   "E03MUS",
                                   "E03NUMREC",
                                   "E03INDOPE"
                                 };
  final static String fid = "1160816114233";
  final static String rid = "51B6A42F543E0";
  final static String fmtname = "ERP000003";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03PMSCOD = null;
  private CharacterField fieldE03PMSLIF = null;
  private CharacterField fieldE03PMSDSC = null;
  private DecimalField fieldE03PMSPLN = null;
  private CharacterField fieldE03PMSPTY = null;
  private DecimalField fieldE03PMSNDC = null;
  private CharacterField fieldE03PMSDDS = null;
  private DecimalField fieldE03CDM = null;
  private DecimalField fieldE03CDD = null;
  private DecimalField fieldE03CDY = null;
  private CharacterField fieldE03CTM = null;
  private CharacterField fieldE03CUS = null;
  private DecimalField fieldE03MDM = null;
  private DecimalField fieldE03MDD = null;
  private DecimalField fieldE03MDY = null;
  private CharacterField fieldE03MTM = null;
  private CharacterField fieldE03MUS = null;
  private DecimalField fieldE03NUMREC = null;
  private CharacterField fieldE03INDOPE = null;

  /**
  * Constructor for ERP000003Message.
  */
  public ERP000003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 270;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03PMSCOD =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03PMSCOD");
    fields[10] = fieldE03PMSLIF =
    new CharacterField(message, HEADERSIZE + 44, 1, "E03PMSLIF");
    fields[11] = fieldE03PMSDSC =
    new CharacterField(message, HEADERSIZE + 45, 50, "E03PMSDSC");
    fields[12] = fieldE03PMSPLN =
    new DecimalField(message, HEADERSIZE + 95, 4, 0, "E03PMSPLN");
    fields[13] = fieldE03PMSPTY =
    new CharacterField(message, HEADERSIZE + 99, 1, "E03PMSPTY");
    fields[14] = fieldE03PMSNDC =
    new DecimalField(message, HEADERSIZE + 100, 3, 0, "E03PMSNDC");
    fields[15] = fieldE03PMSDDS =
    new CharacterField(message, HEADERSIZE + 103, 64, "E03PMSDDS");
    fields[16] = fieldE03CDM =
    new DecimalField(message, HEADERSIZE + 167, 3, 0, "E03CDM");
    fields[17] = fieldE03CDD =
    new DecimalField(message, HEADERSIZE + 170, 3, 0, "E03CDD");
    fields[18] = fieldE03CDY =
    new DecimalField(message, HEADERSIZE + 173, 5, 0, "E03CDY");
    fields[19] = fieldE03CTM =
    new CharacterField(message, HEADERSIZE + 178, 26, "E03CTM");
    fields[20] = fieldE03CUS =
    new CharacterField(message, HEADERSIZE + 204, 10, "E03CUS");
    fields[21] = fieldE03MDM =
    new DecimalField(message, HEADERSIZE + 214, 3, 0, "E03MDM");
    fields[22] = fieldE03MDD =
    new DecimalField(message, HEADERSIZE + 217, 3, 0, "E03MDD");
    fields[23] = fieldE03MDY =
    new DecimalField(message, HEADERSIZE + 220, 5, 0, "E03MDY");
    fields[24] = fieldE03MTM =
    new CharacterField(message, HEADERSIZE + 225, 26, "E03MTM");
    fields[25] = fieldE03MUS =
    new CharacterField(message, HEADERSIZE + 251, 10, "E03MUS");
    fields[26] = fieldE03NUMREC =
    new DecimalField(message, HEADERSIZE + 261, 8, 0, "E03NUMREC");
    fields[27] = fieldE03INDOPE =
    new CharacterField(message, HEADERSIZE + 269, 1, "E03INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03PMSCOD using a String value.
  */
  public void setE03PMSCOD(String newvalue)
  {
    fieldE03PMSCOD.setString(newvalue);
  }

  /**
  * Get value of field E03PMSCOD as a String.
  */
  public String getE03PMSCOD()
  {
    return fieldE03PMSCOD.getString();
  }

  /**
  * Set field E03PMSLIF using a String value.
  */
  public void setE03PMSLIF(String newvalue)
  {
    fieldE03PMSLIF.setString(newvalue);
  }

  /**
  * Get value of field E03PMSLIF as a String.
  */
  public String getE03PMSLIF()
  {
    return fieldE03PMSLIF.getString();
  }

  /**
  * Set field E03PMSDSC using a String value.
  */
  public void setE03PMSDSC(String newvalue)
  {
    fieldE03PMSDSC.setString(newvalue);
  }

  /**
  * Get value of field E03PMSDSC as a String.
  */
  public String getE03PMSDSC()
  {
    return fieldE03PMSDSC.getString();
  }

  /**
  * Set field E03PMSPLN using a String value.
  */
  public void setE03PMSPLN(String newvalue)
  {
    fieldE03PMSPLN.setString(newvalue);
  }

  /**
  * Get value of field E03PMSPLN as a String.
  */
  public String getE03PMSPLN()
  {
    return fieldE03PMSPLN.getString();
  }

  /**
  * Set numeric field E03PMSPLN using a BigDecimal value.
  */
  public void setE03PMSPLN(BigDecimal newvalue)
  {
    fieldE03PMSPLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03PMSPLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03PMSPLN()
  {
    return fieldE03PMSPLN.getBigDecimal();
  }

  /**
  * Set field E03PMSPTY using a String value.
  */
  public void setE03PMSPTY(String newvalue)
  {
    fieldE03PMSPTY.setString(newvalue);
  }

  /**
  * Get value of field E03PMSPTY as a String.
  */
  public String getE03PMSPTY()
  {
    return fieldE03PMSPTY.getString();
  }

  /**
  * Set field E03PMSNDC using a String value.
  */
  public void setE03PMSNDC(String newvalue)
  {
    fieldE03PMSNDC.setString(newvalue);
  }

  /**
  * Get value of field E03PMSNDC as a String.
  */
  public String getE03PMSNDC()
  {
    return fieldE03PMSNDC.getString();
  }

  /**
  * Set numeric field E03PMSNDC using a BigDecimal value.
  */
  public void setE03PMSNDC(BigDecimal newvalue)
  {
    fieldE03PMSNDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03PMSNDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03PMSNDC()
  {
    return fieldE03PMSNDC.getBigDecimal();
  }

  /**
  * Set field E03PMSDDS using a String value.
  */
  public void setE03PMSDDS(String newvalue)
  {
    fieldE03PMSDDS.setString(newvalue);
  }

  /**
  * Get value of field E03PMSDDS as a String.
  */
  public String getE03PMSDDS()
  {
    return fieldE03PMSDDS.getString();
  }

  /**
  * Set field E03CDM using a String value.
  */
  public void setE03CDM(String newvalue)
  {
    fieldE03CDM.setString(newvalue);
  }

  /**
  * Get value of field E03CDM as a String.
  */
  public String getE03CDM()
  {
    return fieldE03CDM.getString();
  }

  /**
  * Set numeric field E03CDM using a BigDecimal value.
  */
  public void setE03CDM(BigDecimal newvalue)
  {
    fieldE03CDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CDM()
  {
    return fieldE03CDM.getBigDecimal();
  }

  /**
  * Set field E03CDD using a String value.
  */
  public void setE03CDD(String newvalue)
  {
    fieldE03CDD.setString(newvalue);
  }

  /**
  * Get value of field E03CDD as a String.
  */
  public String getE03CDD()
  {
    return fieldE03CDD.getString();
  }

  /**
  * Set numeric field E03CDD using a BigDecimal value.
  */
  public void setE03CDD(BigDecimal newvalue)
  {
    fieldE03CDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CDD()
  {
    return fieldE03CDD.getBigDecimal();
  }

  /**
  * Set field E03CDY using a String value.
  */
  public void setE03CDY(String newvalue)
  {
    fieldE03CDY.setString(newvalue);
  }

  /**
  * Get value of field E03CDY as a String.
  */
  public String getE03CDY()
  {
    return fieldE03CDY.getString();
  }

  /**
  * Set numeric field E03CDY using a BigDecimal value.
  */
  public void setE03CDY(BigDecimal newvalue)
  {
    fieldE03CDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CDY()
  {
    return fieldE03CDY.getBigDecimal();
  }

  /**
  * Set field E03CTM using a String value.
  */
  public void setE03CTM(String newvalue)
  {
    fieldE03CTM.setString(newvalue);
  }

  /**
  * Get value of field E03CTM as a String.
  */
  public String getE03CTM()
  {
    return fieldE03CTM.getString();
  }

  /**
  * Set field E03CUS using a String value.
  */
  public void setE03CUS(String newvalue)
  {
    fieldE03CUS.setString(newvalue);
  }

  /**
  * Get value of field E03CUS as a String.
  */
  public String getE03CUS()
  {
    return fieldE03CUS.getString();
  }

  /**
  * Set field E03MDM using a String value.
  */
  public void setE03MDM(String newvalue)
  {
    fieldE03MDM.setString(newvalue);
  }

  /**
  * Get value of field E03MDM as a String.
  */
  public String getE03MDM()
  {
    return fieldE03MDM.getString();
  }

  /**
  * Set numeric field E03MDM using a BigDecimal value.
  */
  public void setE03MDM(BigDecimal newvalue)
  {
    fieldE03MDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MDM()
  {
    return fieldE03MDM.getBigDecimal();
  }

  /**
  * Set field E03MDD using a String value.
  */
  public void setE03MDD(String newvalue)
  {
    fieldE03MDD.setString(newvalue);
  }

  /**
  * Get value of field E03MDD as a String.
  */
  public String getE03MDD()
  {
    return fieldE03MDD.getString();
  }

  /**
  * Set numeric field E03MDD using a BigDecimal value.
  */
  public void setE03MDD(BigDecimal newvalue)
  {
    fieldE03MDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MDD()
  {
    return fieldE03MDD.getBigDecimal();
  }

  /**
  * Set field E03MDY using a String value.
  */
  public void setE03MDY(String newvalue)
  {
    fieldE03MDY.setString(newvalue);
  }

  /**
  * Get value of field E03MDY as a String.
  */
  public String getE03MDY()
  {
    return fieldE03MDY.getString();
  }

  /**
  * Set numeric field E03MDY using a BigDecimal value.
  */
  public void setE03MDY(BigDecimal newvalue)
  {
    fieldE03MDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MDY()
  {
    return fieldE03MDY.getBigDecimal();
  }

  /**
  * Set field E03MTM using a String value.
  */
  public void setE03MTM(String newvalue)
  {
    fieldE03MTM.setString(newvalue);
  }

  /**
  * Get value of field E03MTM as a String.
  */
  public String getE03MTM()
  {
    return fieldE03MTM.getString();
  }

  /**
  * Set field E03MUS using a String value.
  */
  public void setE03MUS(String newvalue)
  {
    fieldE03MUS.setString(newvalue);
  }

  /**
  * Get value of field E03MUS as a String.
  */
  public String getE03MUS()
  {
    return fieldE03MUS.getString();
  }

  /**
  * Set field E03NUMREC using a String value.
  */
  public void setE03NUMREC(String newvalue)
  {
    fieldE03NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E03NUMREC as a String.
  */
  public String getE03NUMREC()
  {
    return fieldE03NUMREC.getString();
  }

  /**
  * Set numeric field E03NUMREC using a BigDecimal value.
  */
  public void setE03NUMREC(BigDecimal newvalue)
  {
    fieldE03NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NUMREC()
  {
    return fieldE03NUMREC.getBigDecimal();
  }

  /**
  * Set field E03INDOPE using a String value.
  */
  public void setE03INDOPE(String newvalue)
  {
    fieldE03INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E03INDOPE as a String.
  */
  public String getE03INDOPE()
  {
    return fieldE03INDOPE.getString();
  }

}
