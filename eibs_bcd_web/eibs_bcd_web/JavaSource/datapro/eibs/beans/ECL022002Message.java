package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL022002 physical file definition.
* 
* File level identifier is 1130611112849.
* Record format level identifier is 43869E7C6F631.
*/

public class ECL022002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02LOGEMP",
                                     "E02LOGCON",
                                     "E02LOGIDE",
                                     "E02LOGANO",
                                     "E02LOGMES",
                                     "E02LOGDIA",
                                     "E02LOGUSR",
                                     "E02LOGTIM",
                                     "E02LOGGE1",
                                     "E02LOGGE2",
                                     "E02LOGGE3"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02LOGEMP",
                                   "E02LOGCON",
                                   "E02LOGIDE",
                                   "E02LOGANO",
                                   "E02LOGMES",
                                   "E02LOGDIA",
                                   "E02LOGUSR",
                                   "E02LOGTIM",
                                   "E02LOGGE1",
                                   "E02LOGGE2",
                                   "E02LOGGE3"
                                 };
  final static String fid = "1130611112849";
  final static String rid = "43869E7C6F631";
  final static String fmtname = "ECL022002";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02LOGEMP = null;
  private CharacterField fieldE02LOGCON = null;
  private CharacterField fieldE02LOGIDE = null;
  private DecimalField fieldE02LOGANO = null;
  private DecimalField fieldE02LOGMES = null;
  private DecimalField fieldE02LOGDIA = null;
  private CharacterField fieldE02LOGUSR = null;
  private DecimalField fieldE02LOGTIM = null;
  private CharacterField fieldE02LOGGE1 = null;
  private CharacterField fieldE02LOGGE2 = null;
  private CharacterField fieldE02LOGGE3 = null;

  /**
  * Constructor for ECL022002Message.
  */
  public ECL022002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 330;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02LOGEMP =
    new CharacterField(message, HEADERSIZE + 42, 25, "E02LOGEMP");
    fields[10] = fieldE02LOGCON =
    new CharacterField(message, HEADERSIZE + 67, 30, "E02LOGCON");
    fields[11] = fieldE02LOGIDE =
    new CharacterField(message, HEADERSIZE + 97, 25, "E02LOGIDE");
    fields[12] = fieldE02LOGANO =
    new DecimalField(message, HEADERSIZE + 122, 5, 0, "E02LOGANO");
    fields[13] = fieldE02LOGMES =
    new DecimalField(message, HEADERSIZE + 127, 3, 0, "E02LOGMES");
    fields[14] = fieldE02LOGDIA =
    new DecimalField(message, HEADERSIZE + 130, 3, 0, "E02LOGDIA");
    fields[15] = fieldE02LOGUSR =
    new CharacterField(message, HEADERSIZE + 133, 10, "E02LOGUSR");
    fields[16] = fieldE02LOGTIM =
    new DecimalField(message, HEADERSIZE + 143, 7, 0, "E02LOGTIM");
    fields[17] = fieldE02LOGGE1 =
    new CharacterField(message, HEADERSIZE + 150, 60, "E02LOGGE1");
    fields[18] = fieldE02LOGGE2 =
    new CharacterField(message, HEADERSIZE + 210, 60, "E02LOGGE2");
    fields[19] = fieldE02LOGGE3 =
    new CharacterField(message, HEADERSIZE + 270, 60, "E02LOGGE3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02LOGEMP using a String value.
  */
  public void setE02LOGEMP(String newvalue)
  {
    fieldE02LOGEMP.setString(newvalue);
  }

  /**
  * Get value of field E02LOGEMP as a String.
  */
  public String getE02LOGEMP()
  {
    return fieldE02LOGEMP.getString();
  }

  /**
  * Set field E02LOGCON using a String value.
  */
  public void setE02LOGCON(String newvalue)
  {
    fieldE02LOGCON.setString(newvalue);
  }

  /**
  * Get value of field E02LOGCON as a String.
  */
  public String getE02LOGCON()
  {
    return fieldE02LOGCON.getString();
  }

  /**
  * Set field E02LOGIDE using a String value.
  */
  public void setE02LOGIDE(String newvalue)
  {
    fieldE02LOGIDE.setString(newvalue);
  }

  /**
  * Get value of field E02LOGIDE as a String.
  */
  public String getE02LOGIDE()
  {
    return fieldE02LOGIDE.getString();
  }

  /**
  * Set field E02LOGANO using a String value.
  */
  public void setE02LOGANO(String newvalue)
  {
    fieldE02LOGANO.setString(newvalue);
  }

  /**
  * Get value of field E02LOGANO as a String.
  */
  public String getE02LOGANO()
  {
    return fieldE02LOGANO.getString();
  }

  /**
  * Set numeric field E02LOGANO using a BigDecimal value.
  */
  public void setE02LOGANO(BigDecimal newvalue)
  {
    fieldE02LOGANO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LOGANO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LOGANO()
  {
    return fieldE02LOGANO.getBigDecimal();
  }

  /**
  * Set field E02LOGMES using a String value.
  */
  public void setE02LOGMES(String newvalue)
  {
    fieldE02LOGMES.setString(newvalue);
  }

  /**
  * Get value of field E02LOGMES as a String.
  */
  public String getE02LOGMES()
  {
    return fieldE02LOGMES.getString();
  }

  /**
  * Set numeric field E02LOGMES using a BigDecimal value.
  */
  public void setE02LOGMES(BigDecimal newvalue)
  {
    fieldE02LOGMES.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LOGMES as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LOGMES()
  {
    return fieldE02LOGMES.getBigDecimal();
  }

  /**
  * Set field E02LOGDIA using a String value.
  */
  public void setE02LOGDIA(String newvalue)
  {
    fieldE02LOGDIA.setString(newvalue);
  }

  /**
  * Get value of field E02LOGDIA as a String.
  */
  public String getE02LOGDIA()
  {
    return fieldE02LOGDIA.getString();
  }

  /**
  * Set numeric field E02LOGDIA using a BigDecimal value.
  */
  public void setE02LOGDIA(BigDecimal newvalue)
  {
    fieldE02LOGDIA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LOGDIA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LOGDIA()
  {
    return fieldE02LOGDIA.getBigDecimal();
  }

  /**
  * Set field E02LOGUSR using a String value.
  */
  public void setE02LOGUSR(String newvalue)
  {
    fieldE02LOGUSR.setString(newvalue);
  }

  /**
  * Get value of field E02LOGUSR as a String.
  */
  public String getE02LOGUSR()
  {
    return fieldE02LOGUSR.getString();
  }

  /**
  * Set field E02LOGTIM using a String value.
  */
  public void setE02LOGTIM(String newvalue)
  {
    fieldE02LOGTIM.setString(newvalue);
  }

  /**
  * Get value of field E02LOGTIM as a String.
  */
  public String getE02LOGTIM()
  {
    return fieldE02LOGTIM.getString();
  }

  /**
  * Set numeric field E02LOGTIM using a BigDecimal value.
  */
  public void setE02LOGTIM(BigDecimal newvalue)
  {
    fieldE02LOGTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LOGTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LOGTIM()
  {
    return fieldE02LOGTIM.getBigDecimal();
  }

  /**
  * Set field E02LOGGE1 using a String value.
  */
  public void setE02LOGGE1(String newvalue)
  {
    fieldE02LOGGE1.setString(newvalue);
  }

  /**
  * Get value of field E02LOGGE1 as a String.
  */
  public String getE02LOGGE1()
  {
    return fieldE02LOGGE1.getString();
  }

  /**
  * Set field E02LOGGE2 using a String value.
  */
  public void setE02LOGGE2(String newvalue)
  {
    fieldE02LOGGE2.setString(newvalue);
  }

  /**
  * Get value of field E02LOGGE2 as a String.
  */
  public String getE02LOGGE2()
  {
    return fieldE02LOGGE2.getString();
  }

  /**
  * Set field E02LOGGE3 using a String value.
  */
  public void setE02LOGGE3(String newvalue)
  {
    fieldE02LOGGE3.setString(newvalue);
  }

  /**
  * Get value of field E02LOGGE3 as a String.
  */
  public String getE02LOGGE3()
  {
    return fieldE02LOGGE3.getString();
  }

}
