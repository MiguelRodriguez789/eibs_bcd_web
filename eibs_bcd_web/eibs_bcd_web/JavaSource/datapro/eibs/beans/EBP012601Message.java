package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EBP012601 physical file definition.
* 
* File level identifier is 1130611112828.
* Record format level identifier is 5137095EBD941.
*/

public class EBP012601Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BDGNUM",
                                     "E01BDGSEQ",
                                     "E01BDGRKN",
                                     "E01BDGKIND",
                                     "E01BDGDC",
                                     "E01BDGBNK",
                                     "E01BDGBRN",
                                     "E01BDGCCY",
                                     "E01BDGGLN",
                                     "E01BDGACC",
                                     "E01BDGCCN",
                                     "E01BDGAMT",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BDGNUM",
                                   "E01BDGSEQ",
                                   "E01BDGRKN",
                                   "E01BDGKIND",
                                   "E01BDGDC",
                                   "E01BDGBNK",
                                   "E01BDGBRN",
                                   "E01BDGCCY",
                                   "E01BDGGLN",
                                   "E01BDGACC",
                                   "E01BDGCCN",
                                   "E01BDGAMT",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1130611112828";
  final static String rid = "5137095EBD941";
  final static String fmtname = "EBP012601";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01BDGNUM = null;
  private DecimalField fieldE01BDGSEQ = null;
  private CharacterField fieldE01BDGRKN = null;
  private CharacterField fieldE01BDGKIND = null;
  private CharacterField fieldE01BDGDC = null;
  private CharacterField fieldE01BDGBNK = null;
  private DecimalField fieldE01BDGBRN = null;
  private CharacterField fieldE01BDGCCY = null;
  private DecimalField fieldE01BDGGLN = null;
  private DecimalField fieldE01BDGACC = null;
  private DecimalField fieldE01BDGCCN = null;
  private DecimalField fieldE01BDGAMT = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EBP012601Message.
  */
  public EBP012601Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 184;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BDGNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01BDGNUM");
    fields[10] = fieldE01BDGSEQ =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "E01BDGSEQ");
    fields[11] = fieldE01BDGRKN =
    new CharacterField(message, HEADERSIZE + 60, 1, "E01BDGRKN");
    fields[12] = fieldE01BDGKIND =
    new CharacterField(message, HEADERSIZE + 61, 45, "E01BDGKIND");
    fields[13] = fieldE01BDGDC =
    new CharacterField(message, HEADERSIZE + 106, 2, "E01BDGDC");
    fields[14] = fieldE01BDGBNK =
    new CharacterField(message, HEADERSIZE + 108, 2, "E01BDGBNK");
    fields[15] = fieldE01BDGBRN =
    new DecimalField(message, HEADERSIZE + 110, 5, 0, "E01BDGBRN");
    fields[16] = fieldE01BDGCCY =
    new CharacterField(message, HEADERSIZE + 115, 3, "E01BDGCCY");
    fields[17] = fieldE01BDGGLN =
    new DecimalField(message, HEADERSIZE + 118, 17, 0, "E01BDGGLN");
    fields[18] = fieldE01BDGACC =
    new DecimalField(message, HEADERSIZE + 135, 13, 0, "E01BDGACC");
    fields[19] = fieldE01BDGCCN =
    new DecimalField(message, HEADERSIZE + 148, 9, 0, "E01BDGCCN");
    fields[20] = fieldE01BDGAMT =
    new DecimalField(message, HEADERSIZE + 157, 17, 2, "E01BDGAMT");
    fields[21] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 174, 1, "E01ACT");
    fields[22] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 175, 8, 0, "E01NUMREC");
    fields[23] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 183, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BDGNUM using a String value.
  */
  public void setE01BDGNUM(String newvalue)
  {
    fieldE01BDGNUM.setString(newvalue);
  }

  /**
  * Get value of field E01BDGNUM as a String.
  */
  public String getE01BDGNUM()
  {
    return fieldE01BDGNUM.getString();
  }

  /**
  * Set numeric field E01BDGNUM using a BigDecimal value.
  */
  public void setE01BDGNUM(BigDecimal newvalue)
  {
    fieldE01BDGNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGNUM()
  {
    return fieldE01BDGNUM.getBigDecimal();
  }

  /**
  * Set field E01BDGSEQ using a String value.
  */
  public void setE01BDGSEQ(String newvalue)
  {
    fieldE01BDGSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01BDGSEQ as a String.
  */
  public String getE01BDGSEQ()
  {
    return fieldE01BDGSEQ.getString();
  }

  /**
  * Set numeric field E01BDGSEQ using a BigDecimal value.
  */
  public void setE01BDGSEQ(BigDecimal newvalue)
  {
    fieldE01BDGSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGSEQ()
  {
    return fieldE01BDGSEQ.getBigDecimal();
  }

  /**
  * Set field E01BDGRKN using a String value.
  */
  public void setE01BDGRKN(String newvalue)
  {
    fieldE01BDGRKN.setString(newvalue);
  }

  /**
  * Get value of field E01BDGRKN as a String.
  */
  public String getE01BDGRKN()
  {
    return fieldE01BDGRKN.getString();
  }

  /**
  * Set field E01BDGKIND using a String value.
  */
  public void setE01BDGKIND(String newvalue)
  {
    fieldE01BDGKIND.setString(newvalue);
  }

  /**
  * Get value of field E01BDGKIND as a String.
  */
  public String getE01BDGKIND()
  {
    return fieldE01BDGKIND.getString();
  }

  /**
  * Set field E01BDGDC using a String value.
  */
  public void setE01BDGDC(String newvalue)
  {
    fieldE01BDGDC.setString(newvalue);
  }

  /**
  * Get value of field E01BDGDC as a String.
  */
  public String getE01BDGDC()
  {
    return fieldE01BDGDC.getString();
  }

  /**
  * Set field E01BDGBNK using a String value.
  */
  public void setE01BDGBNK(String newvalue)
  {
    fieldE01BDGBNK.setString(newvalue);
  }

  /**
  * Get value of field E01BDGBNK as a String.
  */
  public String getE01BDGBNK()
  {
    return fieldE01BDGBNK.getString();
  }

  /**
  * Set field E01BDGBRN using a String value.
  */
  public void setE01BDGBRN(String newvalue)
  {
    fieldE01BDGBRN.setString(newvalue);
  }

  /**
  * Get value of field E01BDGBRN as a String.
  */
  public String getE01BDGBRN()
  {
    return fieldE01BDGBRN.getString();
  }

  /**
  * Set numeric field E01BDGBRN using a BigDecimal value.
  */
  public void setE01BDGBRN(BigDecimal newvalue)
  {
    fieldE01BDGBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGBRN()
  {
    return fieldE01BDGBRN.getBigDecimal();
  }

  /**
  * Set field E01BDGCCY using a String value.
  */
  public void setE01BDGCCY(String newvalue)
  {
    fieldE01BDGCCY.setString(newvalue);
  }

  /**
  * Get value of field E01BDGCCY as a String.
  */
  public String getE01BDGCCY()
  {
    return fieldE01BDGCCY.getString();
  }

  /**
  * Set field E01BDGGLN using a String value.
  */
  public void setE01BDGGLN(String newvalue)
  {
    fieldE01BDGGLN.setString(newvalue);
  }

  /**
  * Get value of field E01BDGGLN as a String.
  */
  public String getE01BDGGLN()
  {
    return fieldE01BDGGLN.getString();
  }

  /**
  * Set numeric field E01BDGGLN using a BigDecimal value.
  */
  public void setE01BDGGLN(BigDecimal newvalue)
  {
    fieldE01BDGGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGGLN()
  {
    return fieldE01BDGGLN.getBigDecimal();
  }

  /**
  * Set field E01BDGACC using a String value.
  */
  public void setE01BDGACC(String newvalue)
  {
    fieldE01BDGACC.setString(newvalue);
  }

  /**
  * Get value of field E01BDGACC as a String.
  */
  public String getE01BDGACC()
  {
    return fieldE01BDGACC.getString();
  }

  /**
  * Set numeric field E01BDGACC using a BigDecimal value.
  */
  public void setE01BDGACC(BigDecimal newvalue)
  {
    fieldE01BDGACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGACC()
  {
    return fieldE01BDGACC.getBigDecimal();
  }

  /**
  * Set field E01BDGCCN using a String value.
  */
  public void setE01BDGCCN(String newvalue)
  {
    fieldE01BDGCCN.setString(newvalue);
  }

  /**
  * Get value of field E01BDGCCN as a String.
  */
  public String getE01BDGCCN()
  {
    return fieldE01BDGCCN.getString();
  }

  /**
  * Set numeric field E01BDGCCN using a BigDecimal value.
  */
  public void setE01BDGCCN(BigDecimal newvalue)
  {
    fieldE01BDGCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGCCN()
  {
    return fieldE01BDGCCN.getBigDecimal();
  }

  /**
  * Set field E01BDGAMT using a String value.
  */
  public void setE01BDGAMT(String newvalue)
  {
    fieldE01BDGAMT.setString(newvalue);
  }

  /**
  * Get value of field E01BDGAMT as a String.
  */
  public String getE01BDGAMT()
  {
    return fieldE01BDGAMT.getString();
  }

  /**
  * Set numeric field E01BDGAMT using a BigDecimal value.
  */
  public void setE01BDGAMT(BigDecimal newvalue)
  {
    fieldE01BDGAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDGAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDGAMT()
  {
    return fieldE01BDGAMT.getBigDecimal();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
