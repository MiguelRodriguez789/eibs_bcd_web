package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL0001DS physical file definition.
* 
* File level identifier is 1130611112848.
* Record format level identifier is 4FF7E87552753.
*/

public class ECL0001DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CATBNK",
                                     "E01CATCNL",
                                     "E01CATQT1",
                                     "E01CATQT2",
                                     "E01CATERR",
                                     "E01CATINT",
                                     "E01CATLMU",
                                     "E01CATLMY",
                                     "E01CATLMM",
                                     "E01CATLMD",
                                     "E01CATLMT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CATBNK",
                                   "E01CATCNL",
                                   "E01CATQT1",
                                   "E01CATQT2",
                                   "E01CATERR",
                                   "E01CATINT",
                                   "E01CATLMU",
                                   "E01CATLMY",
                                   "E01CATLMM",
                                   "E01CATLMD",
                                   "E01CATLMT"
                                 };
  final static String fid = "1130611112848";
  final static String rid = "4FF7E87552753";
  final static String fmtname = "ECL0001DS";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CATBNK = null;
  private CharacterField fieldE01CATCNL = null;
  private DecimalField fieldE01CATQT1 = null;
  private DecimalField fieldE01CATQT2 = null;
  private DecimalField fieldE01CATERR = null;
  private DecimalField fieldE01CATINT = null;
  private CharacterField fieldE01CATLMU = null;
  private DecimalField fieldE01CATLMY = null;
  private DecimalField fieldE01CATLMM = null;
  private DecimalField fieldE01CATLMD = null;
  private CharacterField fieldE01CATLMT = null;

  /**
  * Constructor for ECL0001DSMessage.
  */
  public ECL0001DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 103;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CATBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CATBNK");
    fields[10] = fieldE01CATCNL =
    new CharacterField(message, HEADERSIZE + 44, 2, "E01CATCNL");
    fields[11] = fieldE01CATQT1 =
    new DecimalField(message, HEADERSIZE + 46, 3, 0, "E01CATQT1");
    fields[12] = fieldE01CATQT2 =
    new DecimalField(message, HEADERSIZE + 49, 3, 0, "E01CATQT2");
    fields[13] = fieldE01CATERR =
    new DecimalField(message, HEADERSIZE + 52, 2, 0, "E01CATERR");
    fields[14] = fieldE01CATINT =
    new DecimalField(message, HEADERSIZE + 54, 2, 0, "E01CATINT");
    fields[15] = fieldE01CATLMU =
    new CharacterField(message, HEADERSIZE + 56, 10, "E01CATLMU");
    fields[16] = fieldE01CATLMY =
    new DecimalField(message, HEADERSIZE + 66, 5, 0, "E01CATLMY");
    fields[17] = fieldE01CATLMM =
    new DecimalField(message, HEADERSIZE + 71, 3, 0, "E01CATLMM");
    fields[18] = fieldE01CATLMD =
    new DecimalField(message, HEADERSIZE + 74, 3, 0, "E01CATLMD");
    fields[19] = fieldE01CATLMT =
    new CharacterField(message, HEADERSIZE + 77, 26, "E01CATLMT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CATBNK using a String value.
  */
  public void setE01CATBNK(String newvalue)
  {
    fieldE01CATBNK.setString(newvalue);
  }

  /**
  * Get value of field E01CATBNK as a String.
  */
  public String getE01CATBNK()
  {
    return fieldE01CATBNK.getString();
  }

  /**
  * Set field E01CATCNL using a String value.
  */
  public void setE01CATCNL(String newvalue)
  {
    fieldE01CATCNL.setString(newvalue);
  }

  /**
  * Get value of field E01CATCNL as a String.
  */
  public String getE01CATCNL()
  {
    return fieldE01CATCNL.getString();
  }

  /**
  * Set field E01CATQT1 using a String value.
  */
  public void setE01CATQT1(String newvalue)
  {
    fieldE01CATQT1.setString(newvalue);
  }

  /**
  * Get value of field E01CATQT1 as a String.
  */
  public String getE01CATQT1()
  {
    return fieldE01CATQT1.getString();
  }

  /**
  * Set numeric field E01CATQT1 using a BigDecimal value.
  */
  public void setE01CATQT1(BigDecimal newvalue)
  {
    fieldE01CATQT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATQT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATQT1()
  {
    return fieldE01CATQT1.getBigDecimal();
  }

  /**
  * Set field E01CATQT2 using a String value.
  */
  public void setE01CATQT2(String newvalue)
  {
    fieldE01CATQT2.setString(newvalue);
  }

  /**
  * Get value of field E01CATQT2 as a String.
  */
  public String getE01CATQT2()
  {
    return fieldE01CATQT2.getString();
  }

  /**
  * Set numeric field E01CATQT2 using a BigDecimal value.
  */
  public void setE01CATQT2(BigDecimal newvalue)
  {
    fieldE01CATQT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATQT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATQT2()
  {
    return fieldE01CATQT2.getBigDecimal();
  }

  /**
  * Set field E01CATERR using a String value.
  */
  public void setE01CATERR(String newvalue)
  {
    fieldE01CATERR.setString(newvalue);
  }

  /**
  * Get value of field E01CATERR as a String.
  */
  public String getE01CATERR()
  {
    return fieldE01CATERR.getString();
  }

  /**
  * Set numeric field E01CATERR using a BigDecimal value.
  */
  public void setE01CATERR(BigDecimal newvalue)
  {
    fieldE01CATERR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATERR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATERR()
  {
    return fieldE01CATERR.getBigDecimal();
  }

  /**
  * Set field E01CATINT using a String value.
  */
  public void setE01CATINT(String newvalue)
  {
    fieldE01CATINT.setString(newvalue);
  }

  /**
  * Get value of field E01CATINT as a String.
  */
  public String getE01CATINT()
  {
    return fieldE01CATINT.getString();
  }

  /**
  * Set numeric field E01CATINT using a BigDecimal value.
  */
  public void setE01CATINT(BigDecimal newvalue)
  {
    fieldE01CATINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATINT()
  {
    return fieldE01CATINT.getBigDecimal();
  }

  /**
  * Set field E01CATLMU using a String value.
  */
  public void setE01CATLMU(String newvalue)
  {
    fieldE01CATLMU.setString(newvalue);
  }

  /**
  * Get value of field E01CATLMU as a String.
  */
  public String getE01CATLMU()
  {
    return fieldE01CATLMU.getString();
  }

  /**
  * Set field E01CATLMY using a String value.
  */
  public void setE01CATLMY(String newvalue)
  {
    fieldE01CATLMY.setString(newvalue);
  }

  /**
  * Get value of field E01CATLMY as a String.
  */
  public String getE01CATLMY()
  {
    return fieldE01CATLMY.getString();
  }

  /**
  * Set numeric field E01CATLMY using a BigDecimal value.
  */
  public void setE01CATLMY(BigDecimal newvalue)
  {
    fieldE01CATLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATLMY()
  {
    return fieldE01CATLMY.getBigDecimal();
  }

  /**
  * Set field E01CATLMM using a String value.
  */
  public void setE01CATLMM(String newvalue)
  {
    fieldE01CATLMM.setString(newvalue);
  }

  /**
  * Get value of field E01CATLMM as a String.
  */
  public String getE01CATLMM()
  {
    return fieldE01CATLMM.getString();
  }

  /**
  * Set numeric field E01CATLMM using a BigDecimal value.
  */
  public void setE01CATLMM(BigDecimal newvalue)
  {
    fieldE01CATLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATLMM()
  {
    return fieldE01CATLMM.getBigDecimal();
  }

  /**
  * Set field E01CATLMD using a String value.
  */
  public void setE01CATLMD(String newvalue)
  {
    fieldE01CATLMD.setString(newvalue);
  }

  /**
  * Get value of field E01CATLMD as a String.
  */
  public String getE01CATLMD()
  {
    return fieldE01CATLMD.getString();
  }

  /**
  * Set numeric field E01CATLMD using a BigDecimal value.
  */
  public void setE01CATLMD(BigDecimal newvalue)
  {
    fieldE01CATLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CATLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CATLMD()
  {
    return fieldE01CATLMD.getBigDecimal();
  }

  /**
  * Set field E01CATLMT using a String value.
  */
  public void setE01CATLMT(String newvalue)
  {
    fieldE01CATLMT.setString(newvalue);
  }

  /**
  * Get value of field E01CATLMT as a String.
  */
  public String getE01CATLMT()
  {
    return fieldE01CATLMT.getString();
  }

}
