package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELC045002 physical file definition.
* 
* File level identifier is 1160706101113.
* Record format level identifier is 35DAD3F82737C.
*/

public class ELC045002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02LCLACC",
                                     "E02LCLTNO",
                                     "E02LCMBNK",
                                     "E02LCMBRN",
                                     "E02LCMCCY",
                                     "E02LCMPRO",
                                     "E02DSCPRO",
                                     "E02LCLACD",
                                     "E02LCLOPR",
                                     "E02LCLTDY",
                                     "E02LCLTDM",
                                     "E02LCLTDD",
                                     "E02LCLTTM",
                                     "E02LCLTTP",
                                     "E02DSCTTP",
                                     "E02LCLARF",
                                     "E02APPREJ",
                                     "E02LCLSUP",
                                     "E02LCLADM",
                                     "E02LCLADD",
                                     "E02LCLADY",
                                     "E02LCLATM",
                                     "E02LCLOTP",
                                     "E02LCLLON",
                                     "E02LCLTMS"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02LCLACC",
                                   "E02LCLTNO",
                                   "E02LCMBNK",
                                   "E02LCMBRN",
                                   "E02LCMCCY",
                                   "E02LCMPRO",
                                   "E02DSCPRO",
                                   "E02LCLACD",
                                   "E02LCLOPR",
                                   "E02LCLTDY",
                                   "E02LCLTDM",
                                   "E02LCLTDD",
                                   "E02LCLTTM",
                                   "E02LCLTTP",
                                   "E02DSCTTP",
                                   "E02LCLARF",
                                   "E02APPREJ",
                                   "E02LCLSUP",
                                   "E02LCLADM",
                                   "E02LCLADD",
                                   "E02LCLADY",
                                   "E02LCLATM",
                                   "E02LCLOTP",
                                   "E02LCLLON",
                                   "E02LCLTMS"
                                 };
  final static String fid = "1160706101113";
  final static String rid = "35DAD3F82737C";
  final static String fmtname = "ELC045002";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02LCLACC = null;
  private DecimalField fieldE02LCLTNO = null;
  private CharacterField fieldE02LCMBNK = null;
  private DecimalField fieldE02LCMBRN = null;
  private CharacterField fieldE02LCMCCY = null;
  private CharacterField fieldE02LCMPRO = null;
  private CharacterField fieldE02DSCPRO = null;
  private CharacterField fieldE02LCLACD = null;
  private CharacterField fieldE02LCLOPR = null;
  private DecimalField fieldE02LCLTDY = null;
  private DecimalField fieldE02LCLTDM = null;
  private DecimalField fieldE02LCLTDD = null;
  private DecimalField fieldE02LCLTTM = null;
  private CharacterField fieldE02LCLTTP = null;
  private CharacterField fieldE02DSCTTP = null;
  private CharacterField fieldE02LCLARF = null;
  private CharacterField fieldE02APPREJ = null;
  private CharacterField fieldE02LCLSUP = null;
  private DecimalField fieldE02LCLADM = null;
  private DecimalField fieldE02LCLADD = null;
  private DecimalField fieldE02LCLADY = null;
  private DecimalField fieldE02LCLATM = null;
  private CharacterField fieldE02LCLOTP = null;
  private DecimalField fieldE02LCLLON = null;
  private CharacterField fieldE02LCLTMS = null;

  /**
  * Constructor for ELC045002Message.
  */
  public ELC045002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 254;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02LCLACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02LCLACC");
    fields[10] = fieldE02LCLTNO =
    new DecimalField(message, HEADERSIZE + 55, 4, 0, "E02LCLTNO");
    fields[11] = fieldE02LCMBNK =
    new CharacterField(message, HEADERSIZE + 59, 2, "E02LCMBNK");
    fields[12] = fieldE02LCMBRN =
    new DecimalField(message, HEADERSIZE + 61, 5, 0, "E02LCMBRN");
    fields[13] = fieldE02LCMCCY =
    new CharacterField(message, HEADERSIZE + 66, 3, "E02LCMCCY");
    fields[14] = fieldE02LCMPRO =
    new CharacterField(message, HEADERSIZE + 69, 4, "E02LCMPRO");
    fields[15] = fieldE02DSCPRO =
    new CharacterField(message, HEADERSIZE + 73, 60, "E02DSCPRO");
    fields[16] = fieldE02LCLACD =
    new CharacterField(message, HEADERSIZE + 133, 2, "E02LCLACD");
    fields[17] = fieldE02LCLOPR =
    new CharacterField(message, HEADERSIZE + 135, 10, "E02LCLOPR");
    fields[18] = fieldE02LCLTDY =
    new DecimalField(message, HEADERSIZE + 145, 5, 0, "E02LCLTDY");
    fields[19] = fieldE02LCLTDM =
    new DecimalField(message, HEADERSIZE + 150, 3, 0, "E02LCLTDM");
    fields[20] = fieldE02LCLTDD =
    new DecimalField(message, HEADERSIZE + 153, 3, 0, "E02LCLTDD");
    fields[21] = fieldE02LCLTTM =
    new DecimalField(message, HEADERSIZE + 156, 7, 0, "E02LCLTTM");
    fields[22] = fieldE02LCLTTP =
    new CharacterField(message, HEADERSIZE + 163, 1, "E02LCLTTP");
    fields[23] = fieldE02DSCTTP =
    new CharacterField(message, HEADERSIZE + 164, 20, "E02DSCTTP");
    fields[24] = fieldE02LCLARF =
    new CharacterField(message, HEADERSIZE + 184, 1, "E02LCLARF");
    fields[25] = fieldE02APPREJ =
    new CharacterField(message, HEADERSIZE + 185, 10, "E02APPREJ");
    fields[26] = fieldE02LCLSUP =
    new CharacterField(message, HEADERSIZE + 195, 10, "E02LCLSUP");
    fields[27] = fieldE02LCLADM =
    new DecimalField(message, HEADERSIZE + 205, 3, 0, "E02LCLADM");
    fields[28] = fieldE02LCLADD =
    new DecimalField(message, HEADERSIZE + 208, 3, 0, "E02LCLADD");
    fields[29] = fieldE02LCLADY =
    new DecimalField(message, HEADERSIZE + 211, 5, 0, "E02LCLADY");
    fields[30] = fieldE02LCLATM =
    new DecimalField(message, HEADERSIZE + 216, 7, 0, "E02LCLATM");
    fields[31] = fieldE02LCLOTP =
    new CharacterField(message, HEADERSIZE + 223, 1, "E02LCLOTP");
    fields[32] = fieldE02LCLLON =
    new DecimalField(message, HEADERSIZE + 224, 4, 0, "E02LCLLON");
    fields[33] = fieldE02LCLTMS =
    new CharacterField(message, HEADERSIZE + 228, 26, "E02LCLTMS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02LCLACC using a String value.
  */
  public void setE02LCLACC(String newvalue)
  {
    fieldE02LCLACC.setString(newvalue);
  }

  /**
  * Get value of field E02LCLACC as a String.
  */
  public String getE02LCLACC()
  {
    return fieldE02LCLACC.getString();
  }

  /**
  * Set numeric field E02LCLACC using a BigDecimal value.
  */
  public void setE02LCLACC(BigDecimal newvalue)
  {
    fieldE02LCLACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLACC()
  {
    return fieldE02LCLACC.getBigDecimal();
  }

  /**
  * Set field E02LCLTNO using a String value.
  */
  public void setE02LCLTNO(String newvalue)
  {
    fieldE02LCLTNO.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTNO as a String.
  */
  public String getE02LCLTNO()
  {
    return fieldE02LCLTNO.getString();
  }

  /**
  * Set numeric field E02LCLTNO using a BigDecimal value.
  */
  public void setE02LCLTNO(BigDecimal newvalue)
  {
    fieldE02LCLTNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLTNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLTNO()
  {
    return fieldE02LCLTNO.getBigDecimal();
  }

  /**
  * Set field E02LCMBNK using a String value.
  */
  public void setE02LCMBNK(String newvalue)
  {
    fieldE02LCMBNK.setString(newvalue);
  }

  /**
  * Get value of field E02LCMBNK as a String.
  */
  public String getE02LCMBNK()
  {
    return fieldE02LCMBNK.getString();
  }

  /**
  * Set field E02LCMBRN using a String value.
  */
  public void setE02LCMBRN(String newvalue)
  {
    fieldE02LCMBRN.setString(newvalue);
  }

  /**
  * Get value of field E02LCMBRN as a String.
  */
  public String getE02LCMBRN()
  {
    return fieldE02LCMBRN.getString();
  }

  /**
  * Set numeric field E02LCMBRN using a BigDecimal value.
  */
  public void setE02LCMBRN(BigDecimal newvalue)
  {
    fieldE02LCMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCMBRN()
  {
    return fieldE02LCMBRN.getBigDecimal();
  }

  /**
  * Set field E02LCMCCY using a String value.
  */
  public void setE02LCMCCY(String newvalue)
  {
    fieldE02LCMCCY.setString(newvalue);
  }

  /**
  * Get value of field E02LCMCCY as a String.
  */
  public String getE02LCMCCY()
  {
    return fieldE02LCMCCY.getString();
  }

  /**
  * Set field E02LCMPRO using a String value.
  */
  public void setE02LCMPRO(String newvalue)
  {
    fieldE02LCMPRO.setString(newvalue);
  }

  /**
  * Get value of field E02LCMPRO as a String.
  */
  public String getE02LCMPRO()
  {
    return fieldE02LCMPRO.getString();
  }

  /**
  * Set field E02DSCPRO using a String value.
  */
  public void setE02DSCPRO(String newvalue)
  {
    fieldE02DSCPRO.setString(newvalue);
  }

  /**
  * Get value of field E02DSCPRO as a String.
  */
  public String getE02DSCPRO()
  {
    return fieldE02DSCPRO.getString();
  }

  /**
  * Set field E02LCLACD using a String value.
  */
  public void setE02LCLACD(String newvalue)
  {
    fieldE02LCLACD.setString(newvalue);
  }

  /**
  * Get value of field E02LCLACD as a String.
  */
  public String getE02LCLACD()
  {
    return fieldE02LCLACD.getString();
  }

  /**
  * Set field E02LCLOPR using a String value.
  */
  public void setE02LCLOPR(String newvalue)
  {
    fieldE02LCLOPR.setString(newvalue);
  }

  /**
  * Get value of field E02LCLOPR as a String.
  */
  public String getE02LCLOPR()
  {
    return fieldE02LCLOPR.getString();
  }

  /**
  * Set field E02LCLTDY using a String value.
  */
  public void setE02LCLTDY(String newvalue)
  {
    fieldE02LCLTDY.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTDY as a String.
  */
  public String getE02LCLTDY()
  {
    return fieldE02LCLTDY.getString();
  }

  /**
  * Set numeric field E02LCLTDY using a BigDecimal value.
  */
  public void setE02LCLTDY(BigDecimal newvalue)
  {
    fieldE02LCLTDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLTDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLTDY()
  {
    return fieldE02LCLTDY.getBigDecimal();
  }

  /**
  * Set field E02LCLTDM using a String value.
  */
  public void setE02LCLTDM(String newvalue)
  {
    fieldE02LCLTDM.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTDM as a String.
  */
  public String getE02LCLTDM()
  {
    return fieldE02LCLTDM.getString();
  }

  /**
  * Set numeric field E02LCLTDM using a BigDecimal value.
  */
  public void setE02LCLTDM(BigDecimal newvalue)
  {
    fieldE02LCLTDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLTDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLTDM()
  {
    return fieldE02LCLTDM.getBigDecimal();
  }

  /**
  * Set field E02LCLTDD using a String value.
  */
  public void setE02LCLTDD(String newvalue)
  {
    fieldE02LCLTDD.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTDD as a String.
  */
  public String getE02LCLTDD()
  {
    return fieldE02LCLTDD.getString();
  }

  /**
  * Set numeric field E02LCLTDD using a BigDecimal value.
  */
  public void setE02LCLTDD(BigDecimal newvalue)
  {
    fieldE02LCLTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLTDD()
  {
    return fieldE02LCLTDD.getBigDecimal();
  }

  /**
  * Set field E02LCLTTM using a String value.
  */
  public void setE02LCLTTM(String newvalue)
  {
    fieldE02LCLTTM.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTTM as a String.
  */
  public String getE02LCLTTM()
  {
    return fieldE02LCLTTM.getString();
  }

  /**
  * Set numeric field E02LCLTTM using a BigDecimal value.
  */
  public void setE02LCLTTM(BigDecimal newvalue)
  {
    fieldE02LCLTTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLTTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLTTM()
  {
    return fieldE02LCLTTM.getBigDecimal();
  }

  /**
  * Set field E02LCLTTP using a String value.
  */
  public void setE02LCLTTP(String newvalue)
  {
    fieldE02LCLTTP.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTTP as a String.
  */
  public String getE02LCLTTP()
  {
    return fieldE02LCLTTP.getString();
  }

  /**
  * Set field E02DSCTTP using a String value.
  */
  public void setE02DSCTTP(String newvalue)
  {
    fieldE02DSCTTP.setString(newvalue);
  }

  /**
  * Get value of field E02DSCTTP as a String.
  */
  public String getE02DSCTTP()
  {
    return fieldE02DSCTTP.getString();
  }

  /**
  * Set field E02LCLARF using a String value.
  */
  public void setE02LCLARF(String newvalue)
  {
    fieldE02LCLARF.setString(newvalue);
  }

  /**
  * Get value of field E02LCLARF as a String.
  */
  public String getE02LCLARF()
  {
    return fieldE02LCLARF.getString();
  }

  /**
  * Set field E02APPREJ using a String value.
  */
  public void setE02APPREJ(String newvalue)
  {
    fieldE02APPREJ.setString(newvalue);
  }

  /**
  * Get value of field E02APPREJ as a String.
  */
  public String getE02APPREJ()
  {
    return fieldE02APPREJ.getString();
  }

  /**
  * Set field E02LCLSUP using a String value.
  */
  public void setE02LCLSUP(String newvalue)
  {
    fieldE02LCLSUP.setString(newvalue);
  }

  /**
  * Get value of field E02LCLSUP as a String.
  */
  public String getE02LCLSUP()
  {
    return fieldE02LCLSUP.getString();
  }

  /**
  * Set field E02LCLADM using a String value.
  */
  public void setE02LCLADM(String newvalue)
  {
    fieldE02LCLADM.setString(newvalue);
  }

  /**
  * Get value of field E02LCLADM as a String.
  */
  public String getE02LCLADM()
  {
    return fieldE02LCLADM.getString();
  }

  /**
  * Set numeric field E02LCLADM using a BigDecimal value.
  */
  public void setE02LCLADM(BigDecimal newvalue)
  {
    fieldE02LCLADM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLADM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLADM()
  {
    return fieldE02LCLADM.getBigDecimal();
  }

  /**
  * Set field E02LCLADD using a String value.
  */
  public void setE02LCLADD(String newvalue)
  {
    fieldE02LCLADD.setString(newvalue);
  }

  /**
  * Get value of field E02LCLADD as a String.
  */
  public String getE02LCLADD()
  {
    return fieldE02LCLADD.getString();
  }

  /**
  * Set numeric field E02LCLADD using a BigDecimal value.
  */
  public void setE02LCLADD(BigDecimal newvalue)
  {
    fieldE02LCLADD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLADD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLADD()
  {
    return fieldE02LCLADD.getBigDecimal();
  }

  /**
  * Set field E02LCLADY using a String value.
  */
  public void setE02LCLADY(String newvalue)
  {
    fieldE02LCLADY.setString(newvalue);
  }

  /**
  * Get value of field E02LCLADY as a String.
  */
  public String getE02LCLADY()
  {
    return fieldE02LCLADY.getString();
  }

  /**
  * Set numeric field E02LCLADY using a BigDecimal value.
  */
  public void setE02LCLADY(BigDecimal newvalue)
  {
    fieldE02LCLADY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLADY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLADY()
  {
    return fieldE02LCLADY.getBigDecimal();
  }

  /**
  * Set field E02LCLATM using a String value.
  */
  public void setE02LCLATM(String newvalue)
  {
    fieldE02LCLATM.setString(newvalue);
  }

  /**
  * Get value of field E02LCLATM as a String.
  */
  public String getE02LCLATM()
  {
    return fieldE02LCLATM.getString();
  }

  /**
  * Set numeric field E02LCLATM using a BigDecimal value.
  */
  public void setE02LCLATM(BigDecimal newvalue)
  {
    fieldE02LCLATM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLATM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLATM()
  {
    return fieldE02LCLATM.getBigDecimal();
  }

  /**
  * Set field E02LCLOTP using a String value.
  */
  public void setE02LCLOTP(String newvalue)
  {
    fieldE02LCLOTP.setString(newvalue);
  }

  /**
  * Get value of field E02LCLOTP as a String.
  */
  public String getE02LCLOTP()
  {
    return fieldE02LCLOTP.getString();
  }

  /**
  * Set field E02LCLLON using a String value.
  */
  public void setE02LCLLON(String newvalue)
  {
    fieldE02LCLLON.setString(newvalue);
  }

  /**
  * Get value of field E02LCLLON as a String.
  */
  public String getE02LCLLON()
  {
    return fieldE02LCLLON.getString();
  }

  /**
  * Set numeric field E02LCLLON using a BigDecimal value.
  */
  public void setE02LCLLON(BigDecimal newvalue)
  {
    fieldE02LCLLON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02LCLLON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02LCLLON()
  {
    return fieldE02LCLLON.getBigDecimal();
  }

  /**
  * Set field E02LCLTMS using a String value.
  */
  public void setE02LCLTMS(String newvalue)
  {
    fieldE02LCLTMS.setString(newvalue);
  }

  /**
  * Get value of field E02LCLTMS as a String.
  */
  public String getE02LCLTMS()
  {
    return fieldE02LCLTMS.getString();
  }

}
