package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM00066 physical file definition.
* 
* File level identifier is 1170202115308.
* Record format level identifier is 4240EFE6B9847.
*/

public class EFRM00066Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "E66NUMOPE",
                                     "E66NUMCLI",
                                     "E66NOMBRE",
                                     "E66DESGPR",
                                     "E66CESAPR",
                                     "E66INVTPR",
                                     "E66EGRAPR",
                                     "E66HOSPPR",
                                     "E66VI23PR",
                                     "E66OTROPR"
                                   };
  final static String tnames[] = {
                                   "Num.Cuenta",
                                   "Num.Cliente",
                                   "Nombre.cliente",
                                   "Prima.Desgravamen",
                                   "Prima.Cesantias",
                                   "Prima.Inval.Total",
                                   "Prima.Enfer.Graves",
                                   "Prima.Hospitalizacn",
                                   "Prima.Vida.Inval",
                                   "Prima.Otros"
                                 };
  final static String fid = "1170202115308";
  final static String rid = "4240EFE6B9847";
  final static String fmtname = "EFRM00066";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldE66NUMOPE = null;
  private DecimalField fieldE66NUMCLI = null;
  private CharacterField fieldE66NOMBRE = null;
  private DecimalField fieldE66DESGPR = null;
  private DecimalField fieldE66CESAPR = null;
  private DecimalField fieldE66INVTPR = null;
  private DecimalField fieldE66EGRAPR = null;
  private DecimalField fieldE66HOSPPR = null;
  private DecimalField fieldE66VI23PR = null;
  private DecimalField fieldE66OTROPR = null;

  /**
  * Constructor for EFRM00066Message.
  */
  public EFRM00066Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 202;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldE66NUMOPE =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "Num.Cuenta");
    fields[1] = fieldE66NUMCLI =
    new DecimalField(message, HEADERSIZE + 13, 10, 0, "Num.Cliente");
    fields[2] = fieldE66NOMBRE =
    new CharacterField(message, HEADERSIZE + 23, 60, "Nombre.cliente");
    fields[3] = fieldE66DESGPR =
    new DecimalField(message, HEADERSIZE + 83, 17, 2, "Prima.Desgravamen");
    fields[4] = fieldE66CESAPR =
    new DecimalField(message, HEADERSIZE + 100, 17, 2, "Prima.Cesantias");
    fields[5] = fieldE66INVTPR =
    new DecimalField(message, HEADERSIZE + 117, 17, 2, "Prima.Inval.Total");
    fields[6] = fieldE66EGRAPR =
    new DecimalField(message, HEADERSIZE + 134, 17, 2, "Prima.Enfer.Graves");
    fields[7] = fieldE66HOSPPR =
    new DecimalField(message, HEADERSIZE + 151, 17, 2, "Prima.Hospitalizacn");
    fields[8] = fieldE66VI23PR =
    new DecimalField(message, HEADERSIZE + 168, 17, 2, "Prima.Vida.Inval");
    fields[9] = fieldE66OTROPR =
    new DecimalField(message, HEADERSIZE + 185, 17, 2, "Prima.Otros");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field E66NUMOPE using a String value.
  */
  public void setE66NUMOPE(String newvalue)
  {
    fieldE66NUMOPE.setString(newvalue);
  }

  /**
  * Get value of field E66NUMOPE as a String.
  */
  public String getE66NUMOPE()
  {
    return fieldE66NUMOPE.getString();
  }

  /**
  * Set numeric field E66NUMOPE using a BigDecimal value.
  */
  public void setE66NUMOPE(BigDecimal newvalue)
  {
    fieldE66NUMOPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66NUMOPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66NUMOPE()
  {
    return fieldE66NUMOPE.getBigDecimal();
  }

  /**
  * Set field E66NUMCLI using a String value.
  */
  public void setE66NUMCLI(String newvalue)
  {
    fieldE66NUMCLI.setString(newvalue);
  }

  /**
  * Get value of field E66NUMCLI as a String.
  */
  public String getE66NUMCLI()
  {
    return fieldE66NUMCLI.getString();
  }

  /**
  * Set numeric field E66NUMCLI using a BigDecimal value.
  */
  public void setE66NUMCLI(BigDecimal newvalue)
  {
    fieldE66NUMCLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66NUMCLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66NUMCLI()
  {
    return fieldE66NUMCLI.getBigDecimal();
  }

  /**
  * Set field E66NOMBRE using a String value.
  */
  public void setE66NOMBRE(String newvalue)
  {
    fieldE66NOMBRE.setString(newvalue);
  }

  /**
  * Get value of field E66NOMBRE as a String.
  */
  public String getE66NOMBRE()
  {
    return fieldE66NOMBRE.getString();
  }

  /**
  * Set field E66DESGPR using a String value.
  */
  public void setE66DESGPR(String newvalue)
  {
    fieldE66DESGPR.setString(newvalue);
  }

  /**
  * Get value of field E66DESGPR as a String.
  */
  public String getE66DESGPR()
  {
    return fieldE66DESGPR.getString();
  }

  /**
  * Set numeric field E66DESGPR using a BigDecimal value.
  */
  public void setE66DESGPR(BigDecimal newvalue)
  {
    fieldE66DESGPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66DESGPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66DESGPR()
  {
    return fieldE66DESGPR.getBigDecimal();
  }

  /**
  * Set field E66CESAPR using a String value.
  */
  public void setE66CESAPR(String newvalue)
  {
    fieldE66CESAPR.setString(newvalue);
  }

  /**
  * Get value of field E66CESAPR as a String.
  */
  public String getE66CESAPR()
  {
    return fieldE66CESAPR.getString();
  }

  /**
  * Set numeric field E66CESAPR using a BigDecimal value.
  */
  public void setE66CESAPR(BigDecimal newvalue)
  {
    fieldE66CESAPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66CESAPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66CESAPR()
  {
    return fieldE66CESAPR.getBigDecimal();
  }

  /**
  * Set field E66INVTPR using a String value.
  */
  public void setE66INVTPR(String newvalue)
  {
    fieldE66INVTPR.setString(newvalue);
  }

  /**
  * Get value of field E66INVTPR as a String.
  */
  public String getE66INVTPR()
  {
    return fieldE66INVTPR.getString();
  }

  /**
  * Set numeric field E66INVTPR using a BigDecimal value.
  */
  public void setE66INVTPR(BigDecimal newvalue)
  {
    fieldE66INVTPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66INVTPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66INVTPR()
  {
    return fieldE66INVTPR.getBigDecimal();
  }

  /**
  * Set field E66EGRAPR using a String value.
  */
  public void setE66EGRAPR(String newvalue)
  {
    fieldE66EGRAPR.setString(newvalue);
  }

  /**
  * Get value of field E66EGRAPR as a String.
  */
  public String getE66EGRAPR()
  {
    return fieldE66EGRAPR.getString();
  }

  /**
  * Set numeric field E66EGRAPR using a BigDecimal value.
  */
  public void setE66EGRAPR(BigDecimal newvalue)
  {
    fieldE66EGRAPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66EGRAPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66EGRAPR()
  {
    return fieldE66EGRAPR.getBigDecimal();
  }

  /**
  * Set field E66HOSPPR using a String value.
  */
  public void setE66HOSPPR(String newvalue)
  {
    fieldE66HOSPPR.setString(newvalue);
  }

  /**
  * Get value of field E66HOSPPR as a String.
  */
  public String getE66HOSPPR()
  {
    return fieldE66HOSPPR.getString();
  }

  /**
  * Set numeric field E66HOSPPR using a BigDecimal value.
  */
  public void setE66HOSPPR(BigDecimal newvalue)
  {
    fieldE66HOSPPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66HOSPPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66HOSPPR()
  {
    return fieldE66HOSPPR.getBigDecimal();
  }

  /**
  * Set field E66VI23PR using a String value.
  */
  public void setE66VI23PR(String newvalue)
  {
    fieldE66VI23PR.setString(newvalue);
  }

  /**
  * Get value of field E66VI23PR as a String.
  */
  public String getE66VI23PR()
  {
    return fieldE66VI23PR.getString();
  }

  /**
  * Set numeric field E66VI23PR using a BigDecimal value.
  */
  public void setE66VI23PR(BigDecimal newvalue)
  {
    fieldE66VI23PR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66VI23PR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66VI23PR()
  {
    return fieldE66VI23PR.getBigDecimal();
  }

  /**
  * Set field E66OTROPR using a String value.
  */
  public void setE66OTROPR(String newvalue)
  {
    fieldE66OTROPR.setString(newvalue);
  }

  /**
  * Get value of field E66OTROPR as a String.
  */
  public String getE66OTROPR()
  {
    return fieldE66OTROPR.getString();
  }

  /**
  * Set numeric field E66OTROPR using a BigDecimal value.
  */
  public void setE66OTROPR(BigDecimal newvalue)
  {
    fieldE66OTROPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E66OTROPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE66OTROPR()
  {
    return fieldE66OTROPR.getBigDecimal();
  }

}
