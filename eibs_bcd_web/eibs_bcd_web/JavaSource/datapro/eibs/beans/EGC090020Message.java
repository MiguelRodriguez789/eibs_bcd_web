package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC090020 physical file definition.
* 
* File level identifier is 1100706173620.
* Record format level identifier is 51AC72F128C94.
*/

public class EGC090020Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "EGCUSR",
                                     "EGCATY",
                                     "EGCXAA",
                                     "EGCXMM",
                                     "CRMOPM",
                                     "CRMOPD",
                                     "CRMOPY",
                                     "EGCTIT",
                                     "CRMATY",
                                     "CUSIDN",
                                     "CUSSHN",
                                     "CRMNXN",
                                     "CRMRPA",
                                     "CRMLBC",
                                     "CRMLFC",
                                     "PVMSLC",
                                     "EGCXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "EGCUSR",
                                   "EGCATY",
                                   "EGCXAA",
                                   "EGCXMM",
                                   "CRMOPM",
                                   "CRMOPD",
                                   "CRMOPY",
                                   "EGCTIT",
                                   "CRMATY",
                                   "CUSIDN",
                                   "CUSSHN",
                                   "CRMNXN",
                                   "CRMRPA",
                                   "CRMLBC",
                                   "CRMLFC",
                                   "PVMSLC",
                                   "EGCXRT"
                                 };
  final static String fid = "1100706173620";
  final static String rid = "51AC72F128C94";
  final static String fmtname = "EGC090020";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldEGCUSR = null;
  private CharacterField fieldEGCATY = null;
  private DecimalField fieldEGCXAA = null;
  private DecimalField fieldEGCXMM = null;
  private DecimalField fieldCRMOPM = null;
  private DecimalField fieldCRMOPD = null;
  private DecimalField fieldCRMOPY = null;
  private CharacterField fieldEGCTIT = null;
  private CharacterField fieldCRMATY = null;
  private CharacterField fieldCUSIDN = null;
  private CharacterField fieldCUSSHN = null;
  private CharacterField fieldCRMNXN = null;
  private DecimalField fieldCRMRPA = null;
  private DecimalField fieldCRMLBC = null;
  private DecimalField fieldCRMLFC = null;
  private CharacterField fieldPVMSLC = null;
  private DecimalField fieldEGCXRT = null;

  /**
  * Constructor for EGC090020Message.
  */
  public EGC090020Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 182;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldEGCUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "EGCUSR");
    fields[10] = fieldEGCATY =
    new CharacterField(message, HEADERSIZE + 52, 4, "EGCATY");
    fields[11] = fieldEGCXAA =
    new DecimalField(message, HEADERSIZE + 56, 5, 0, "EGCXAA");
    fields[12] = fieldEGCXMM =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "EGCXMM");
    fields[13] = fieldCRMOPM =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "CRMOPM");
    fields[14] = fieldCRMOPD =
    new DecimalField(message, HEADERSIZE + 67, 3, 0, "CRMOPD");
    fields[15] = fieldCRMOPY =
    new DecimalField(message, HEADERSIZE + 70, 5, 0, "CRMOPY");
    fields[16] = fieldEGCTIT =
    new CharacterField(message, HEADERSIZE + 75, 1, "EGCTIT");
    fields[17] = fieldCRMATY =
    new CharacterField(message, HEADERSIZE + 76, 4, "CRMATY");
    fields[18] = fieldCUSIDN =
    new CharacterField(message, HEADERSIZE + 80, 15, "CUSIDN");
    fields[19] = fieldCUSSHN =
    new CharacterField(message, HEADERSIZE + 95, 15, "CUSSHN");
    fields[20] = fieldCRMNXN =
    new CharacterField(message, HEADERSIZE + 110, 19, "CRMNXN");
    fields[21] = fieldCRMRPA =
    new DecimalField(message, HEADERSIZE + 129, 13, 0, "CRMRPA");
    fields[22] = fieldCRMLBC =
    new DecimalField(message, HEADERSIZE + 142, 17, 2, "CRMLBC");
    fields[23] = fieldCRMLFC =
    new DecimalField(message, HEADERSIZE + 159, 17, 2, "CRMLFC");
    fields[24] = fieldPVMSLC =
    new CharacterField(message, HEADERSIZE + 176, 4, "PVMSLC");
    fields[25] = fieldEGCXRT =
    new DecimalField(message, HEADERSIZE + 180, 2, 0, "EGCXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field EGCUSR using a String value.
  */
  public void setEGCUSR(String newvalue)
  {
    fieldEGCUSR.setString(newvalue);
  }

  /**
  * Get value of field EGCUSR as a String.
  */
  public String getEGCUSR()
  {
    return fieldEGCUSR.getString();
  }

  /**
  * Set field EGCATY using a String value.
  */
  public void setEGCATY(String newvalue)
  {
    fieldEGCATY.setString(newvalue);
  }

  /**
  * Get value of field EGCATY as a String.
  */
  public String getEGCATY()
  {
    return fieldEGCATY.getString();
  }

  /**
  * Set field EGCXAA using a String value.
  */
  public void setEGCXAA(String newvalue)
  {
    fieldEGCXAA.setString(newvalue);
  }

  /**
  * Get value of field EGCXAA as a String.
  */
  public String getEGCXAA()
  {
    return fieldEGCXAA.getString();
  }

  /**
  * Set numeric field EGCXAA using a BigDecimal value.
  */
  public void setEGCXAA(BigDecimal newvalue)
  {
    fieldEGCXAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXAA()
  {
    return fieldEGCXAA.getBigDecimal();
  }

  /**
  * Set field EGCXMM using a String value.
  */
  public void setEGCXMM(String newvalue)
  {
    fieldEGCXMM.setString(newvalue);
  }

  /**
  * Get value of field EGCXMM as a String.
  */
  public String getEGCXMM()
  {
    return fieldEGCXMM.getString();
  }

  /**
  * Set numeric field EGCXMM using a BigDecimal value.
  */
  public void setEGCXMM(BigDecimal newvalue)
  {
    fieldEGCXMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXMM()
  {
    return fieldEGCXMM.getBigDecimal();
  }

  /**
  * Set field CRMOPM using a String value.
  */
  public void setCRMOPM(String newvalue)
  {
    fieldCRMOPM.setString(newvalue);
  }

  /**
  * Get value of field CRMOPM as a String.
  */
  public String getCRMOPM()
  {
    return fieldCRMOPM.getString();
  }

  /**
  * Set numeric field CRMOPM using a BigDecimal value.
  */
  public void setCRMOPM(BigDecimal newvalue)
  {
    fieldCRMOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMOPM()
  {
    return fieldCRMOPM.getBigDecimal();
  }

  /**
  * Set field CRMOPD using a String value.
  */
  public void setCRMOPD(String newvalue)
  {
    fieldCRMOPD.setString(newvalue);
  }

  /**
  * Get value of field CRMOPD as a String.
  */
  public String getCRMOPD()
  {
    return fieldCRMOPD.getString();
  }

  /**
  * Set numeric field CRMOPD using a BigDecimal value.
  */
  public void setCRMOPD(BigDecimal newvalue)
  {
    fieldCRMOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMOPD()
  {
    return fieldCRMOPD.getBigDecimal();
  }

  /**
  * Set field CRMOPY using a String value.
  */
  public void setCRMOPY(String newvalue)
  {
    fieldCRMOPY.setString(newvalue);
  }

  /**
  * Get value of field CRMOPY as a String.
  */
  public String getCRMOPY()
  {
    return fieldCRMOPY.getString();
  }

  /**
  * Set numeric field CRMOPY using a BigDecimal value.
  */
  public void setCRMOPY(BigDecimal newvalue)
  {
    fieldCRMOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMOPY()
  {
    return fieldCRMOPY.getBigDecimal();
  }

  /**
  * Set field EGCTIT using a String value.
  */
  public void setEGCTIT(String newvalue)
  {
    fieldEGCTIT.setString(newvalue);
  }

  /**
  * Get value of field EGCTIT as a String.
  */
  public String getEGCTIT()
  {
    return fieldEGCTIT.getString();
  }

  /**
  * Set field CRMATY using a String value.
  */
  public void setCRMATY(String newvalue)
  {
    fieldCRMATY.setString(newvalue);
  }

  /**
  * Get value of field CRMATY as a String.
  */
  public String getCRMATY()
  {
    return fieldCRMATY.getString();
  }

  /**
  * Set field CUSIDN using a String value.
  */
  public void setCUSIDN(String newvalue)
  {
    fieldCUSIDN.setString(newvalue);
  }

  /**
  * Get value of field CUSIDN as a String.
  */
  public String getCUSIDN()
  {
    return fieldCUSIDN.getString();
  }

  /**
  * Set field CUSSHN using a String value.
  */
  public void setCUSSHN(String newvalue)
  {
    fieldCUSSHN.setString(newvalue);
  }

  /**
  * Get value of field CUSSHN as a String.
  */
  public String getCUSSHN()
  {
    return fieldCUSSHN.getString();
  }

  /**
  * Set field CRMNXN using a String value.
  */
  public void setCRMNXN(String newvalue)
  {
    fieldCRMNXN.setString(newvalue);
  }

  /**
  * Get value of field CRMNXN as a String.
  */
  public String getCRMNXN()
  {
    return fieldCRMNXN.getString();
  }

  /**
  * Set field CRMRPA using a String value.
  */
  public void setCRMRPA(String newvalue)
  {
    fieldCRMRPA.setString(newvalue);
  }

  /**
  * Get value of field CRMRPA as a String.
  */
  public String getCRMRPA()
  {
    return fieldCRMRPA.getString();
  }

  /**
  * Set numeric field CRMRPA using a BigDecimal value.
  */
  public void setCRMRPA(BigDecimal newvalue)
  {
    fieldCRMRPA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMRPA as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMRPA()
  {
    return fieldCRMRPA.getBigDecimal();
  }

  /**
  * Set field CRMLBC using a String value.
  */
  public void setCRMLBC(String newvalue)
  {
    fieldCRMLBC.setString(newvalue);
  }

  /**
  * Get value of field CRMLBC as a String.
  */
  public String getCRMLBC()
  {
    return fieldCRMLBC.getString();
  }

  /**
  * Set numeric field CRMLBC using a BigDecimal value.
  */
  public void setCRMLBC(BigDecimal newvalue)
  {
    fieldCRMLBC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMLBC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMLBC()
  {
    return fieldCRMLBC.getBigDecimal();
  }

  /**
  * Set field CRMLFC using a String value.
  */
  public void setCRMLFC(String newvalue)
  {
    fieldCRMLFC.setString(newvalue);
  }

  /**
  * Get value of field CRMLFC as a String.
  */
  public String getCRMLFC()
  {
    return fieldCRMLFC.getString();
  }

  /**
  * Set numeric field CRMLFC using a BigDecimal value.
  */
  public void setCRMLFC(BigDecimal newvalue)
  {
    fieldCRMLFC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CRMLFC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCRMLFC()
  {
    return fieldCRMLFC.getBigDecimal();
  }

  /**
  * Set field PVMSLC using a String value.
  */
  public void setPVMSLC(String newvalue)
  {
    fieldPVMSLC.setString(newvalue);
  }

  /**
  * Get value of field PVMSLC as a String.
  */
  public String getPVMSLC()
  {
    return fieldPVMSLC.getString();
  }

  /**
  * Set field EGCXRT using a String value.
  */
  public void setEGCXRT(String newvalue)
  {
    fieldEGCXRT.setString(newvalue);
  }

  /**
  * Get value of field EGCXRT as a String.
  */
  public String getEGCXRT()
  {
    return fieldEGCXRT.getString();
  }

  /**
  * Set numeric field EGCXRT using a BigDecimal value.
  */
  public void setEGCXRT(BigDecimal newvalue)
  {
    fieldEGCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXRT()
  {
    return fieldEGCXRT.getBigDecimal();
  }

}
