package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERC000003 physical file definition.
* 
* File level identifier is 1161013153551.
* Record format level identifier is 4F1D34E6B2D57.
*/

public class ERC000003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03RCIRBK",
                                     "E03RCICTA",
                                     "E03RCISTN",
                                     "E03RCISDM",
                                     "E03RCISDD",
                                     "E03RCISDY",
                                     "E03CUSNA1",
                                     "E03DSCRBK",
                                     "E03RCIACC"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03RCIRBK",
                                   "E03RCICTA",
                                   "E03RCISTN",
                                   "E03RCISDM",
                                   "E03RCISDD",
                                   "E03RCISDY",
                                   "E03CUSNA1",
                                   "E03DSCRBK",
                                   "E03RCIACC"
                                 };
  final static String fid = "1161013153551";
  final static String rid = "4F1D34E6B2D57";
  final static String fmtname = "ERC000003";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03RCIRBK = null;
  private CharacterField fieldE03RCICTA = null;
  private DecimalField fieldE03RCISTN = null;
  private DecimalField fieldE03RCISDM = null;
  private DecimalField fieldE03RCISDD = null;
  private DecimalField fieldE03RCISDY = null;
  private CharacterField fieldE03CUSNA1 = null;
  private CharacterField fieldE03DSCRBK = null;
  private DecimalField fieldE03RCIACC = null;

  /**
  * Constructor for ERC000003Message.
  */
  public ERC000003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 208;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03RCIRBK =
    new CharacterField(message, HEADERSIZE + 42, 4, "E03RCIRBK");
    fields[10] = fieldE03RCICTA =
    new CharacterField(message, HEADERSIZE + 46, 20, "E03RCICTA");
    fields[11] = fieldE03RCISTN =
    new DecimalField(message, HEADERSIZE + 66, 13, 0, "E03RCISTN");
    fields[12] = fieldE03RCISDM =
    new DecimalField(message, HEADERSIZE + 79, 3, 0, "E03RCISDM");
    fields[13] = fieldE03RCISDD =
    new DecimalField(message, HEADERSIZE + 82, 3, 0, "E03RCISDD");
    fields[14] = fieldE03RCISDY =
    new DecimalField(message, HEADERSIZE + 85, 5, 0, "E03RCISDY");
    fields[15] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 90, 60, "E03CUSNA1");
    fields[16] = fieldE03DSCRBK =
    new CharacterField(message, HEADERSIZE + 150, 45, "E03DSCRBK");
    fields[17] = fieldE03RCIACC =
    new DecimalField(message, HEADERSIZE + 195, 13, 0, "E03RCIACC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03RCIRBK using a String value.
  */
  public void setE03RCIRBK(String newvalue)
  {
    fieldE03RCIRBK.setString(newvalue);
  }

  /**
  * Get value of field E03RCIRBK as a String.
  */
  public String getE03RCIRBK()
  {
    return fieldE03RCIRBK.getString();
  }

  /**
  * Set field E03RCICTA using a String value.
  */
  public void setE03RCICTA(String newvalue)
  {
    fieldE03RCICTA.setString(newvalue);
  }

  /**
  * Get value of field E03RCICTA as a String.
  */
  public String getE03RCICTA()
  {
    return fieldE03RCICTA.getString();
  }

  /**
  * Set field E03RCISTN using a String value.
  */
  public void setE03RCISTN(String newvalue)
  {
    fieldE03RCISTN.setString(newvalue);
  }

  /**
  * Get value of field E03RCISTN as a String.
  */
  public String getE03RCISTN()
  {
    return fieldE03RCISTN.getString();
  }

  /**
  * Set numeric field E03RCISTN using a BigDecimal value.
  */
  public void setE03RCISTN(BigDecimal newvalue)
  {
    fieldE03RCISTN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03RCISTN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03RCISTN()
  {
    return fieldE03RCISTN.getBigDecimal();
  }

  /**
  * Set field E03RCISDM using a String value.
  */
  public void setE03RCISDM(String newvalue)
  {
    fieldE03RCISDM.setString(newvalue);
  }

  /**
  * Get value of field E03RCISDM as a String.
  */
  public String getE03RCISDM()
  {
    return fieldE03RCISDM.getString();
  }

  /**
  * Set numeric field E03RCISDM using a BigDecimal value.
  */
  public void setE03RCISDM(BigDecimal newvalue)
  {
    fieldE03RCISDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03RCISDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03RCISDM()
  {
    return fieldE03RCISDM.getBigDecimal();
  }

  /**
  * Set field E03RCISDD using a String value.
  */
  public void setE03RCISDD(String newvalue)
  {
    fieldE03RCISDD.setString(newvalue);
  }

  /**
  * Get value of field E03RCISDD as a String.
  */
  public String getE03RCISDD()
  {
    return fieldE03RCISDD.getString();
  }

  /**
  * Set numeric field E03RCISDD using a BigDecimal value.
  */
  public void setE03RCISDD(BigDecimal newvalue)
  {
    fieldE03RCISDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03RCISDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03RCISDD()
  {
    return fieldE03RCISDD.getBigDecimal();
  }

  /**
  * Set field E03RCISDY using a String value.
  */
  public void setE03RCISDY(String newvalue)
  {
    fieldE03RCISDY.setString(newvalue);
  }

  /**
  * Get value of field E03RCISDY as a String.
  */
  public String getE03RCISDY()
  {
    return fieldE03RCISDY.getString();
  }

  /**
  * Set numeric field E03RCISDY using a BigDecimal value.
  */
  public void setE03RCISDY(BigDecimal newvalue)
  {
    fieldE03RCISDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03RCISDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03RCISDY()
  {
    return fieldE03RCISDY.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

  /**
  * Set field E03DSCRBK using a String value.
  */
  public void setE03DSCRBK(String newvalue)
  {
    fieldE03DSCRBK.setString(newvalue);
  }

  /**
  * Get value of field E03DSCRBK as a String.
  */
  public String getE03DSCRBK()
  {
    return fieldE03DSCRBK.getString();
  }

  /**
  * Set field E03RCIACC using a String value.
  */
  public void setE03RCIACC(String newvalue)
  {
    fieldE03RCIACC.setString(newvalue);
  }

  /**
  * Get value of field E03RCIACC as a String.
  */
  public String getE03RCIACC()
  {
    return fieldE03RCIACC.getString();
  }

  /**
  * Set numeric field E03RCIACC using a BigDecimal value.
  */
  public void setE03RCIACC(BigDecimal newvalue)
  {
    fieldE03RCIACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03RCIACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03RCIACC()
  {
    return fieldE03RCIACC.getBigDecimal();
  }

}
