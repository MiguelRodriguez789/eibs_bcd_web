package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS560001 physical file definition.
* 
* File level identifier is 1090430120153.
* Record format level identifier is 34D586DDFEED9.
*/

public class ESS560001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "IMDUNQ",
                                     "IMDDSC",
                                     "IMDSTYY",
                                     "IMDSTMM",
                                     "IMDSTDD",
                                     "IMDENDY",
                                     "IMDENDM",
                                     "IMDENDD",
                                     "IMDVIA",
                                     "IMDFMT",
                                     "IMDFRQ",
                                     "IMDNUM",
                                     "IMDTYP",
                                     "IMDLGT",
                                     "IMDEDU",
                                     "IMDUC9",
                                     "IMDUC1",
                                     "IMDINC",
                                     "IMDINL",
                                     "IMDPRD",
                                     "IMDRSL",
                                     "IMDAMT",
                                     "IMDSEX",
                                     "IMDOFC",
                                     "IMDAST",
                                     "IMDDTCY",
                                     "IMDDTCM",
                                     "IMDDTCD",
                                     "IMDTEXT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "IMDUNQ",
                                   "IMDDSC",
                                   "IMDSTYY",
                                   "IMDSTMM",
                                   "IMDSTDD",
                                   "IMDENDY",
                                   "IMDENDM",
                                   "IMDENDD",
                                   "IMDVIA",
                                   "IMDFMT",
                                   "IMDFRQ",
                                   "IMDNUM",
                                   "IMDTYP",
                                   "IMDLGT",
                                   "IMDEDU",
                                   "IMDUC9",
                                   "IMDUC1",
                                   "IMDINC",
                                   "IMDINL",
                                   "IMDPRD",
                                   "IMDRSL",
                                   "IMDAMT",
                                   "IMDSEX",
                                   "IMDOFC",
                                   "IMDAST",
                                   "IMDDTCY",
                                   "IMDDTCM",
                                   "IMDDTCD",
                                   "IMDTEXT"
                                 };
  final static String fid = "1090430120153";
  final static String rid = "34D586DDFEED9";
  final static String fmtname = "ESS560001";
  final int FIELDCOUNT = 36;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldIMDUNQ = null;
  private CharacterField fieldIMDDSC = null;
  private DecimalField fieldIMDSTYY = null;
  private DecimalField fieldIMDSTMM = null;
  private DecimalField fieldIMDSTDD = null;
  private DecimalField fieldIMDENDY = null;
  private DecimalField fieldIMDENDM = null;
  private DecimalField fieldIMDENDD = null;
  private CharacterField fieldIMDVIA = null;
  private DecimalField fieldIMDFMT = null;
  private CharacterField fieldIMDFRQ = null;
  private DecimalField fieldIMDNUM = null;
  private CharacterField fieldIMDTYP = null;
  private CharacterField fieldIMDLGT = null;
  private CharacterField fieldIMDEDU = null;
  private CharacterField fieldIMDUC9 = null;
  private CharacterField fieldIMDUC1 = null;
  private CharacterField fieldIMDINC = null;
  private CharacterField fieldIMDINL = null;
  private CharacterField fieldIMDPRD = null;
  private CharacterField fieldIMDRSL = null;
  private DecimalField fieldIMDAMT = null;
  private CharacterField fieldIMDSEX = null;
  private CharacterField fieldIMDOFC = null;
  private CharacterField fieldIMDAST = null;
  private DecimalField fieldIMDDTCY = null;
  private DecimalField fieldIMDDTCM = null;
  private DecimalField fieldIMDDTCD = null;
  private CharacterField fieldIMDTEXT = null;

  /**
  * Constructor for ESS560001Message.
  */
  public ESS560001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 276;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 20, 4, "H01OPECOD");
    fields[3] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 24, 1, "H01FLGMAS");
    fields[4] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 25, 1, "H01FLGWK1");
    fields[5] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 26, 1, "H01FLGWK2");
    fields[6] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 27, 1, "H01FLGWK3");
    fields[7] = fieldIMDUNQ =
    new CharacterField(message, HEADERSIZE + 28, 14, "IMDUNQ");
    fields[8] = fieldIMDDSC =
    new CharacterField(message, HEADERSIZE + 42, 60, "IMDDSC");
    fields[9] = fieldIMDSTYY =
    new DecimalField(message, HEADERSIZE + 102, 5, 0, "IMDSTYY");
    fields[10] = fieldIMDSTMM =
    new DecimalField(message, HEADERSIZE + 107, 3, 0, "IMDSTMM");
    fields[11] = fieldIMDSTDD =
    new DecimalField(message, HEADERSIZE + 110, 3, 0, "IMDSTDD");
    fields[12] = fieldIMDENDY =
    new DecimalField(message, HEADERSIZE + 113, 5, 0, "IMDENDY");
    fields[13] = fieldIMDENDM =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "IMDENDM");
    fields[14] = fieldIMDENDD =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "IMDENDD");
    fields[15] = fieldIMDVIA =
    new CharacterField(message, HEADERSIZE + 124, 1, "IMDVIA");
    fields[16] = fieldIMDFMT =
    new DecimalField(message, HEADERSIZE + 125, 5, 0, "IMDFMT");
    fields[17] = fieldIMDFRQ =
    new CharacterField(message, HEADERSIZE + 130, 1, "IMDFRQ");
    fields[18] = fieldIMDNUM =
    new DecimalField(message, HEADERSIZE + 131, 4, 0, "IMDNUM");
    fields[19] = fieldIMDTYP =
    new CharacterField(message, HEADERSIZE + 135, 4, "IMDTYP");
    fields[20] = fieldIMDLGT =
    new CharacterField(message, HEADERSIZE + 139, 1, "IMDLGT");
    fields[21] = fieldIMDEDU =
    new CharacterField(message, HEADERSIZE + 140, 4, "IMDEDU");
    fields[22] = fieldIMDUC9 =
    new CharacterField(message, HEADERSIZE + 144, 4, "IMDUC9");
    fields[23] = fieldIMDUC1 =
    new CharacterField(message, HEADERSIZE + 148, 4, "IMDUC1");
    fields[24] = fieldIMDINC =
    new CharacterField(message, HEADERSIZE + 152, 4, "IMDINC");
    fields[25] = fieldIMDINL =
    new CharacterField(message, HEADERSIZE + 156, 4, "IMDINL");
    fields[26] = fieldIMDPRD =
    new CharacterField(message, HEADERSIZE + 160, 4, "IMDPRD");
    fields[27] = fieldIMDRSL =
    new CharacterField(message, HEADERSIZE + 164, 4, "IMDRSL");
    fields[28] = fieldIMDAMT =
    new DecimalField(message, HEADERSIZE + 168, 11, 2, "IMDAMT");
    fields[29] = fieldIMDSEX =
    new CharacterField(message, HEADERSIZE + 179, 1, "IMDSEX");
    fields[30] = fieldIMDOFC =
    new CharacterField(message, HEADERSIZE + 180, 4, "IMDOFC");
    fields[31] = fieldIMDAST =
    new CharacterField(message, HEADERSIZE + 184, 1, "IMDAST");
    fields[32] = fieldIMDDTCY =
    new DecimalField(message, HEADERSIZE + 185, 5, 0, "IMDDTCY");
    fields[33] = fieldIMDDTCM =
    new DecimalField(message, HEADERSIZE + 190, 3, 0, "IMDDTCM");
    fields[34] = fieldIMDDTCD =
    new DecimalField(message, HEADERSIZE + 193, 3, 0, "IMDDTCD");
    fields[35] = fieldIMDTEXT =
    new CharacterField(message, HEADERSIZE + 196, 80, "IMDTEXT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field IMDUNQ using a String value.
  */
  public void setIMDUNQ(String newvalue)
  {
    fieldIMDUNQ.setString(newvalue);
  }

  /**
  * Get value of field IMDUNQ as a String.
  */
  public String getIMDUNQ()
  {
    return fieldIMDUNQ.getString();
  }

  /**
  * Set field IMDDSC using a String value.
  */
  public void setIMDDSC(String newvalue)
  {
    fieldIMDDSC.setString(newvalue);
  }

  /**
  * Get value of field IMDDSC as a String.
  */
  public String getIMDDSC()
  {
    return fieldIMDDSC.getString();
  }

  /**
  * Set field IMDSTYY using a String value.
  */
  public void setIMDSTYY(String newvalue)
  {
    fieldIMDSTYY.setString(newvalue);
  }

  /**
  * Get value of field IMDSTYY as a String.
  */
  public String getIMDSTYY()
  {
    return fieldIMDSTYY.getString();
  }

  /**
  * Set numeric field IMDSTYY using a BigDecimal value.
  */
  public void setIMDSTYY(BigDecimal newvalue)
  {
    fieldIMDSTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDSTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDSTYY()
  {
    return fieldIMDSTYY.getBigDecimal();
  }

  /**
  * Set field IMDSTMM using a String value.
  */
  public void setIMDSTMM(String newvalue)
  {
    fieldIMDSTMM.setString(newvalue);
  }

  /**
  * Get value of field IMDSTMM as a String.
  */
  public String getIMDSTMM()
  {
    return fieldIMDSTMM.getString();
  }

  /**
  * Set numeric field IMDSTMM using a BigDecimal value.
  */
  public void setIMDSTMM(BigDecimal newvalue)
  {
    fieldIMDSTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDSTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDSTMM()
  {
    return fieldIMDSTMM.getBigDecimal();
  }

  /**
  * Set field IMDSTDD using a String value.
  */
  public void setIMDSTDD(String newvalue)
  {
    fieldIMDSTDD.setString(newvalue);
  }

  /**
  * Get value of field IMDSTDD as a String.
  */
  public String getIMDSTDD()
  {
    return fieldIMDSTDD.getString();
  }

  /**
  * Set numeric field IMDSTDD using a BigDecimal value.
  */
  public void setIMDSTDD(BigDecimal newvalue)
  {
    fieldIMDSTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDSTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDSTDD()
  {
    return fieldIMDSTDD.getBigDecimal();
  }

  /**
  * Set field IMDENDY using a String value.
  */
  public void setIMDENDY(String newvalue)
  {
    fieldIMDENDY.setString(newvalue);
  }

  /**
  * Get value of field IMDENDY as a String.
  */
  public String getIMDENDY()
  {
    return fieldIMDENDY.getString();
  }

  /**
  * Set numeric field IMDENDY using a BigDecimal value.
  */
  public void setIMDENDY(BigDecimal newvalue)
  {
    fieldIMDENDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDENDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDENDY()
  {
    return fieldIMDENDY.getBigDecimal();
  }

  /**
  * Set field IMDENDM using a String value.
  */
  public void setIMDENDM(String newvalue)
  {
    fieldIMDENDM.setString(newvalue);
  }

  /**
  * Get value of field IMDENDM as a String.
  */
  public String getIMDENDM()
  {
    return fieldIMDENDM.getString();
  }

  /**
  * Set numeric field IMDENDM using a BigDecimal value.
  */
  public void setIMDENDM(BigDecimal newvalue)
  {
    fieldIMDENDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDENDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDENDM()
  {
    return fieldIMDENDM.getBigDecimal();
  }

  /**
  * Set field IMDENDD using a String value.
  */
  public void setIMDENDD(String newvalue)
  {
    fieldIMDENDD.setString(newvalue);
  }

  /**
  * Get value of field IMDENDD as a String.
  */
  public String getIMDENDD()
  {
    return fieldIMDENDD.getString();
  }

  /**
  * Set numeric field IMDENDD using a BigDecimal value.
  */
  public void setIMDENDD(BigDecimal newvalue)
  {
    fieldIMDENDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDENDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDENDD()
  {
    return fieldIMDENDD.getBigDecimal();
  }

  /**
  * Set field IMDVIA using a String value.
  */
  public void setIMDVIA(String newvalue)
  {
    fieldIMDVIA.setString(newvalue);
  }

  /**
  * Get value of field IMDVIA as a String.
  */
  public String getIMDVIA()
  {
    return fieldIMDVIA.getString();
  }

  /**
  * Set field IMDFMT using a String value.
  */
  public void setIMDFMT(String newvalue)
  {
    fieldIMDFMT.setString(newvalue);
  }

  /**
  * Get value of field IMDFMT as a String.
  */
  public String getIMDFMT()
  {
    return fieldIMDFMT.getString();
  }

  /**
  * Set numeric field IMDFMT using a BigDecimal value.
  */
  public void setIMDFMT(BigDecimal newvalue)
  {
    fieldIMDFMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDFMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDFMT()
  {
    return fieldIMDFMT.getBigDecimal();
  }

  /**
  * Set field IMDFRQ using a String value.
  */
  public void setIMDFRQ(String newvalue)
  {
    fieldIMDFRQ.setString(newvalue);
  }

  /**
  * Get value of field IMDFRQ as a String.
  */
  public String getIMDFRQ()
  {
    return fieldIMDFRQ.getString();
  }

  /**
  * Set field IMDNUM using a String value.
  */
  public void setIMDNUM(String newvalue)
  {
    fieldIMDNUM.setString(newvalue);
  }

  /**
  * Get value of field IMDNUM as a String.
  */
  public String getIMDNUM()
  {
    return fieldIMDNUM.getString();
  }

  /**
  * Set numeric field IMDNUM using a BigDecimal value.
  */
  public void setIMDNUM(BigDecimal newvalue)
  {
    fieldIMDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDNUM()
  {
    return fieldIMDNUM.getBigDecimal();
  }

  /**
  * Set field IMDTYP using a String value.
  */
  public void setIMDTYP(String newvalue)
  {
    fieldIMDTYP.setString(newvalue);
  }

  /**
  * Get value of field IMDTYP as a String.
  */
  public String getIMDTYP()
  {
    return fieldIMDTYP.getString();
  }

  /**
  * Set field IMDLGT using a String value.
  */
  public void setIMDLGT(String newvalue)
  {
    fieldIMDLGT.setString(newvalue);
  }

  /**
  * Get value of field IMDLGT as a String.
  */
  public String getIMDLGT()
  {
    return fieldIMDLGT.getString();
  }

  /**
  * Set field IMDEDU using a String value.
  */
  public void setIMDEDU(String newvalue)
  {
    fieldIMDEDU.setString(newvalue);
  }

  /**
  * Get value of field IMDEDU as a String.
  */
  public String getIMDEDU()
  {
    return fieldIMDEDU.getString();
  }

  /**
  * Set field IMDUC9 using a String value.
  */
  public void setIMDUC9(String newvalue)
  {
    fieldIMDUC9.setString(newvalue);
  }

  /**
  * Get value of field IMDUC9 as a String.
  */
  public String getIMDUC9()
  {
    return fieldIMDUC9.getString();
  }

  /**
  * Set field IMDUC1 using a String value.
  */
  public void setIMDUC1(String newvalue)
  {
    fieldIMDUC1.setString(newvalue);
  }

  /**
  * Get value of field IMDUC1 as a String.
  */
  public String getIMDUC1()
  {
    return fieldIMDUC1.getString();
  }

  /**
  * Set field IMDINC using a String value.
  */
  public void setIMDINC(String newvalue)
  {
    fieldIMDINC.setString(newvalue);
  }

  /**
  * Get value of field IMDINC as a String.
  */
  public String getIMDINC()
  {
    return fieldIMDINC.getString();
  }

  /**
  * Set field IMDINL using a String value.
  */
  public void setIMDINL(String newvalue)
  {
    fieldIMDINL.setString(newvalue);
  }

  /**
  * Get value of field IMDINL as a String.
  */
  public String getIMDINL()
  {
    return fieldIMDINL.getString();
  }

  /**
  * Set field IMDPRD using a String value.
  */
  public void setIMDPRD(String newvalue)
  {
    fieldIMDPRD.setString(newvalue);
  }

  /**
  * Get value of field IMDPRD as a String.
  */
  public String getIMDPRD()
  {
    return fieldIMDPRD.getString();
  }

  /**
  * Set field IMDRSL using a String value.
  */
  public void setIMDRSL(String newvalue)
  {
    fieldIMDRSL.setString(newvalue);
  }

  /**
  * Get value of field IMDRSL as a String.
  */
  public String getIMDRSL()
  {
    return fieldIMDRSL.getString();
  }

  /**
  * Set field IMDAMT using a String value.
  */
  public void setIMDAMT(String newvalue)
  {
    fieldIMDAMT.setString(newvalue);
  }

  /**
  * Get value of field IMDAMT as a String.
  */
  public String getIMDAMT()
  {
    return fieldIMDAMT.getString();
  }

  /**
  * Set numeric field IMDAMT using a BigDecimal value.
  */
  public void setIMDAMT(BigDecimal newvalue)
  {
    fieldIMDAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDAMT()
  {
    return fieldIMDAMT.getBigDecimal();
  }

  /**
  * Set field IMDSEX using a String value.
  */
  public void setIMDSEX(String newvalue)
  {
    fieldIMDSEX.setString(newvalue);
  }

  /**
  * Get value of field IMDSEX as a String.
  */
  public String getIMDSEX()
  {
    return fieldIMDSEX.getString();
  }

  /**
  * Set field IMDOFC using a String value.
  */
  public void setIMDOFC(String newvalue)
  {
    fieldIMDOFC.setString(newvalue);
  }

  /**
  * Get value of field IMDOFC as a String.
  */
  public String getIMDOFC()
  {
    return fieldIMDOFC.getString();
  }

  /**
  * Set field IMDAST using a String value.
  */
  public void setIMDAST(String newvalue)
  {
    fieldIMDAST.setString(newvalue);
  }

  /**
  * Get value of field IMDAST as a String.
  */
  public String getIMDAST()
  {
    return fieldIMDAST.getString();
  }

  /**
  * Set field IMDDTCY using a String value.
  */
  public void setIMDDTCY(String newvalue)
  {
    fieldIMDDTCY.setString(newvalue);
  }

  /**
  * Get value of field IMDDTCY as a String.
  */
  public String getIMDDTCY()
  {
    return fieldIMDDTCY.getString();
  }

  /**
  * Set numeric field IMDDTCY using a BigDecimal value.
  */
  public void setIMDDTCY(BigDecimal newvalue)
  {
    fieldIMDDTCY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDDTCY as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDDTCY()
  {
    return fieldIMDDTCY.getBigDecimal();
  }

  /**
  * Set field IMDDTCM using a String value.
  */
  public void setIMDDTCM(String newvalue)
  {
    fieldIMDDTCM.setString(newvalue);
  }

  /**
  * Get value of field IMDDTCM as a String.
  */
  public String getIMDDTCM()
  {
    return fieldIMDDTCM.getString();
  }

  /**
  * Set numeric field IMDDTCM using a BigDecimal value.
  */
  public void setIMDDTCM(BigDecimal newvalue)
  {
    fieldIMDDTCM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDDTCM as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDDTCM()
  {
    return fieldIMDDTCM.getBigDecimal();
  }

  /**
  * Set field IMDDTCD using a String value.
  */
  public void setIMDDTCD(String newvalue)
  {
    fieldIMDDTCD.setString(newvalue);
  }

  /**
  * Get value of field IMDDTCD as a String.
  */
  public String getIMDDTCD()
  {
    return fieldIMDDTCD.getString();
  }

  /**
  * Set numeric field IMDDTCD using a BigDecimal value.
  */
  public void setIMDDTCD(BigDecimal newvalue)
  {
    fieldIMDDTCD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field IMDDTCD as a BigDecimal.
  */
  public BigDecimal getBigDecimalIMDDTCD()
  {
    return fieldIMDDTCD.getBigDecimal();
  }

  /**
  * Set field IMDTEXT using a String value.
  */
  public void setIMDTEXT(String newvalue)
  {
    fieldIMDTEXT.setString(newvalue);
  }

  /**
  * Get value of field IMDTEXT as a String.
  */
  public String getIMDTEXT()
  {
    return fieldIMDTEXT.getString();
  }

}
