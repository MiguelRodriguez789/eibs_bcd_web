package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM00064 physical file definition.
* 
* File level identifier is 1170202115307.
* Record format level identifier is 3B309ACA0F625.
*/

public class EFRM00064Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "E64TVINUM",
                                     "E64TVICUN",
                                     "E64TVICAM",
                                     "E64TVINCA",
                                     "E64TVINME",
                                     "E64TVIVAU",
                                     "E64TVICAN",
                                     "E64TVICEN",
                                     "E64TVIPTO",
                                     "E64FLGMAS"
                                   };
  final static String tnames[] = {
                                   "Num.Propuesta",
                                   "Num.Cliente",
                                   "Codigo.Campana",
                                   "Nombre.Campana",
                                   "Nombre.Producto",
                                   "Valor.Unit",
                                   "Cantidad",
                                   "Costo.Envio",
                                   "Precio.Total",
                                   "*flgMas"
                                 };
  final static String fid = "1170202115307";
  final static String rid = "3B309ACA0F625";
  final static String fmtname = "EFRM00064";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldE64TVINUM = null;
  private DecimalField fieldE64TVICUN = null;
  private CharacterField fieldE64TVICAM = null;
  private CharacterField fieldE64TVINCA = null;
  private CharacterField fieldE64TVINME = null;
  private DecimalField fieldE64TVIVAU = null;
  private DecimalField fieldE64TVICAN = null;
  private DecimalField fieldE64TVICEN = null;
  private DecimalField fieldE64TVIPTO = null;
  private CharacterField fieldE64FLGMAS = null;

  /**
  * Constructor for EFRM00064Message.
  */
  public EFRM00064Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 196;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldE64TVINUM =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "Num.Propuesta");
    fields[1] = fieldE64TVICUN =
    new DecimalField(message, HEADERSIZE + 13, 10, 0, "Num.Cliente");
    fields[2] = fieldE64TVICAM =
    new CharacterField(message, HEADERSIZE + 23, 10, "Codigo.Campana");
    fields[3] = fieldE64TVINCA =
    new CharacterField(message, HEADERSIZE + 33, 45, "Nombre.Campana");
    fields[4] = fieldE64TVINME =
    new CharacterField(message, HEADERSIZE + 78, 60, "Nombre.Producto");
    fields[5] = fieldE64TVIVAU =
    new DecimalField(message, HEADERSIZE + 138, 17, 2, "Valor.Unit");
    fields[6] = fieldE64TVICAN =
    new DecimalField(message, HEADERSIZE + 155, 6, 0, "Cantidad");
    fields[7] = fieldE64TVICEN =
    new DecimalField(message, HEADERSIZE + 161, 17, 2, "Costo.Envio");
    fields[8] = fieldE64TVIPTO =
    new DecimalField(message, HEADERSIZE + 178, 17, 2, "Precio.Total");
    fields[9] = fieldE64FLGMAS =
    new CharacterField(message, HEADERSIZE + 195, 1, "*flgMas");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field E64TVINUM using a String value.
  */
  public void setE64TVINUM(String newvalue)
  {
    fieldE64TVINUM.setString(newvalue);
  }

  /**
  * Get value of field E64TVINUM as a String.
  */
  public String getE64TVINUM()
  {
    return fieldE64TVINUM.getString();
  }

  /**
  * Set numeric field E64TVINUM using a BigDecimal value.
  */
  public void setE64TVINUM(BigDecimal newvalue)
  {
    fieldE64TVINUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVINUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVINUM()
  {
    return fieldE64TVINUM.getBigDecimal();
  }

  /**
  * Set field E64TVICUN using a String value.
  */
  public void setE64TVICUN(String newvalue)
  {
    fieldE64TVICUN.setString(newvalue);
  }

  /**
  * Get value of field E64TVICUN as a String.
  */
  public String getE64TVICUN()
  {
    return fieldE64TVICUN.getString();
  }

  /**
  * Set numeric field E64TVICUN using a BigDecimal value.
  */
  public void setE64TVICUN(BigDecimal newvalue)
  {
    fieldE64TVICUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVICUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVICUN()
  {
    return fieldE64TVICUN.getBigDecimal();
  }

  /**
  * Set field E64TVICAM using a String value.
  */
  public void setE64TVICAM(String newvalue)
  {
    fieldE64TVICAM.setString(newvalue);
  }

  /**
  * Get value of field E64TVICAM as a String.
  */
  public String getE64TVICAM()
  {
    return fieldE64TVICAM.getString();
  }

  /**
  * Set field E64TVINCA using a String value.
  */
  public void setE64TVINCA(String newvalue)
  {
    fieldE64TVINCA.setString(newvalue);
  }

  /**
  * Get value of field E64TVINCA as a String.
  */
  public String getE64TVINCA()
  {
    return fieldE64TVINCA.getString();
  }

  /**
  * Set field E64TVINME using a String value.
  */
  public void setE64TVINME(String newvalue)
  {
    fieldE64TVINME.setString(newvalue);
  }

  /**
  * Get value of field E64TVINME as a String.
  */
  public String getE64TVINME()
  {
    return fieldE64TVINME.getString();
  }

  /**
  * Set field E64TVIVAU using a String value.
  */
  public void setE64TVIVAU(String newvalue)
  {
    fieldE64TVIVAU.setString(newvalue);
  }

  /**
  * Get value of field E64TVIVAU as a String.
  */
  public String getE64TVIVAU()
  {
    return fieldE64TVIVAU.getString();
  }

  /**
  * Set numeric field E64TVIVAU using a BigDecimal value.
  */
  public void setE64TVIVAU(BigDecimal newvalue)
  {
    fieldE64TVIVAU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVIVAU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVIVAU()
  {
    return fieldE64TVIVAU.getBigDecimal();
  }

  /**
  * Set field E64TVICAN using a String value.
  */
  public void setE64TVICAN(String newvalue)
  {
    fieldE64TVICAN.setString(newvalue);
  }

  /**
  * Get value of field E64TVICAN as a String.
  */
  public String getE64TVICAN()
  {
    return fieldE64TVICAN.getString();
  }

  /**
  * Set numeric field E64TVICAN using a BigDecimal value.
  */
  public void setE64TVICAN(BigDecimal newvalue)
  {
    fieldE64TVICAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVICAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVICAN()
  {
    return fieldE64TVICAN.getBigDecimal();
  }

  /**
  * Set field E64TVICEN using a String value.
  */
  public void setE64TVICEN(String newvalue)
  {
    fieldE64TVICEN.setString(newvalue);
  }

  /**
  * Get value of field E64TVICEN as a String.
  */
  public String getE64TVICEN()
  {
    return fieldE64TVICEN.getString();
  }

  /**
  * Set numeric field E64TVICEN using a BigDecimal value.
  */
  public void setE64TVICEN(BigDecimal newvalue)
  {
    fieldE64TVICEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVICEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVICEN()
  {
    return fieldE64TVICEN.getBigDecimal();
  }

  /**
  * Set field E64TVIPTO using a String value.
  */
  public void setE64TVIPTO(String newvalue)
  {
    fieldE64TVIPTO.setString(newvalue);
  }

  /**
  * Get value of field E64TVIPTO as a String.
  */
  public String getE64TVIPTO()
  {
    return fieldE64TVIPTO.getString();
  }

  /**
  * Set numeric field E64TVIPTO using a BigDecimal value.
  */
  public void setE64TVIPTO(BigDecimal newvalue)
  {
    fieldE64TVIPTO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E64TVIPTO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE64TVIPTO()
  {
    return fieldE64TVIPTO.getBigDecimal();
  }

  /**
  * Set field E64FLGMAS using a String value.
  */
  public void setE64FLGMAS(String newvalue)
  {
    fieldE64FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field E64FLGMAS as a String.
  */
  public String getE64FLGMAS()
  {
    return fieldE64FLGMAS.getString();
  }

}
