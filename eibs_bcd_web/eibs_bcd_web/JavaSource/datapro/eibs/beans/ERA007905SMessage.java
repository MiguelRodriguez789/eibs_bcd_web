package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA007905S physical file definition.
* 
* File level identifier is 1150507151758.
* Record format level identifier is 5C61CF85152A6.
*/

public class ERA007905SMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H05USERID",
                                     "H05PROGRM",
                                     "H05TIMSYS",
                                     "H05SCRCOD",
                                     "H05OPECOD",
                                     "H05FLGMAS",
                                     "H05FLGWK1",
                                     "H05FLGWK2",
                                     "H05FLGWK3",
                                     "E05ROCCUN",
                                     "E05ROCIDN",
                                     "E05NUMCOR",
                                     "E05NUMREF",
                                     "E05NUMIDN",
                                     "E05PERCOR",
                                     "E05TIPDOC",
                                     "E05FECINI",
                                     "E05FECFIN",
                                     "E05DESDOC",
                                     "E05ESTDOC",
                                     "E05ESTGEN"
                                   };
  final static String tnames[] = {
                                   "H05USERID",
                                   "H05PROGRM",
                                   "H05TIMSYS",
                                   "H05SCRCOD",
                                   "H05OPECOD",
                                   "H05FLGMAS",
                                   "H05FLGWK1",
                                   "H05FLGWK2",
                                   "H05FLGWK3",
                                   "E05ROCCUN",
                                   "E05ROCIDN",
                                   "E05NUMCOR",
                                   "E05NUMREF",
                                   "E05NUMIDN",
                                   "E05PERCOR",
                                   "E05TIPDOC",
                                   "E05FECINI",
                                   "E05FECFIN",
                                   "E05DESDOC",
                                   "E05ESTDOC",
                                   "E05ESTGEN"
                                 };
  final static String fid = "1150507151758";
  final static String rid = "5C61CF85152A6";
  final static String fmtname = "ERA007905S";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH05USERID = null;
  private CharacterField fieldH05PROGRM = null;
  private CharacterField fieldH05TIMSYS = null;
  private CharacterField fieldH05SCRCOD = null;
  private CharacterField fieldH05OPECOD = null;
  private CharacterField fieldH05FLGMAS = null;
  private CharacterField fieldH05FLGWK1 = null;
  private CharacterField fieldH05FLGWK2 = null;
  private CharacterField fieldH05FLGWK3 = null;
  private DecimalField fieldE05ROCCUN = null;
  private CharacterField fieldE05ROCIDN = null;
  private DecimalField fieldE05NUMCOR = null;
  private DecimalField fieldE05NUMREF = null;
  private CharacterField fieldE05NUMIDN = null;
  private CharacterField fieldE05PERCOR = null;
  private CharacterField fieldE05TIPDOC = null;
  private DecimalField fieldE05FECINI = null;
  private DecimalField fieldE05FECFIN = null;
  private CharacterField fieldE05DESDOC = null;
  private CharacterField fieldE05ESTDOC = null;
  private CharacterField fieldE05ESTGEN = null;

  /**
  * Constructor for ERA007905SMessage.
  */
  public ERA007905SMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 532;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH05USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H05USERID");
    fields[1] = fieldH05PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H05PROGRM");
    fields[2] = fieldH05TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H05TIMSYS");
    fields[3] = fieldH05SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H05SCRCOD");
    fields[4] = fieldH05OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H05OPECOD");
    fields[5] = fieldH05FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H05FLGMAS");
    fields[6] = fieldH05FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H05FLGWK1");
    fields[7] = fieldH05FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H05FLGWK2");
    fields[8] = fieldH05FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H05FLGWK3");
    fields[9] = fieldE05ROCCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E05ROCCUN");
    fields[10] = fieldE05ROCIDN =
    new CharacterField(message, HEADERSIZE + 52, 25, "E05ROCIDN");
    fields[11] = fieldE05NUMCOR =
    new DecimalField(message, HEADERSIZE + 77, 5, 0, "E05NUMCOR");
    fields[12] = fieldE05NUMREF =
    new DecimalField(message, HEADERSIZE + 82, 14, 0, "E05NUMREF");
    fields[13] = fieldE05NUMIDN =
    new CharacterField(message, HEADERSIZE + 96, 12, "E05NUMIDN");
    fields[14] = fieldE05PERCOR =
    new CharacterField(message, HEADERSIZE + 108, 6, "E05PERCOR");
    fields[15] = fieldE05TIPDOC =
    new CharacterField(message, HEADERSIZE + 114, 100, "E05TIPDOC");
    fields[16] = fieldE05FECINI =
    new DecimalField(message, HEADERSIZE + 214, 9, 0, "E05FECINI");
    fields[17] = fieldE05FECFIN =
    new DecimalField(message, HEADERSIZE + 223, 9, 0, "E05FECFIN");
    fields[18] = fieldE05DESDOC =
    new CharacterField(message, HEADERSIZE + 232, 100, "E05DESDOC");
    fields[19] = fieldE05ESTDOC =
    new CharacterField(message, HEADERSIZE + 332, 100, "E05ESTDOC");
    fields[20] = fieldE05ESTGEN =
    new CharacterField(message, HEADERSIZE + 432, 100, "E05ESTGEN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H05USERID using a String value.
  */
  public void setH05USERID(String newvalue)
  {
    fieldH05USERID.setString(newvalue);
  }

  /**
  * Get value of field H05USERID as a String.
  */
  public String getH05USERID()
  {
    return fieldH05USERID.getString();
  }

  /**
  * Set field H05PROGRM using a String value.
  */
  public void setH05PROGRM(String newvalue)
  {
    fieldH05PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H05PROGRM as a String.
  */
  public String getH05PROGRM()
  {
    return fieldH05PROGRM.getString();
  }

  /**
  * Set field H05TIMSYS using a String value.
  */
  public void setH05TIMSYS(String newvalue)
  {
    fieldH05TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H05TIMSYS as a String.
  */
  public String getH05TIMSYS()
  {
    return fieldH05TIMSYS.getString();
  }

  /**
  * Set field H05SCRCOD using a String value.
  */
  public void setH05SCRCOD(String newvalue)
  {
    fieldH05SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H05SCRCOD as a String.
  */
  public String getH05SCRCOD()
  {
    return fieldH05SCRCOD.getString();
  }

  /**
  * Set field H05OPECOD using a String value.
  */
  public void setH05OPECOD(String newvalue)
  {
    fieldH05OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H05OPECOD as a String.
  */
  public String getH05OPECOD()
  {
    return fieldH05OPECOD.getString();
  }

  /**
  * Set field H05FLGMAS using a String value.
  */
  public void setH05FLGMAS(String newvalue)
  {
    fieldH05FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H05FLGMAS as a String.
  */
  public String getH05FLGMAS()
  {
    return fieldH05FLGMAS.getString();
  }

  /**
  * Set field H05FLGWK1 using a String value.
  */
  public void setH05FLGWK1(String newvalue)
  {
    fieldH05FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK1 as a String.
  */
  public String getH05FLGWK1()
  {
    return fieldH05FLGWK1.getString();
  }

  /**
  * Set field H05FLGWK2 using a String value.
  */
  public void setH05FLGWK2(String newvalue)
  {
    fieldH05FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK2 as a String.
  */
  public String getH05FLGWK2()
  {
    return fieldH05FLGWK2.getString();
  }

  /**
  * Set field H05FLGWK3 using a String value.
  */
  public void setH05FLGWK3(String newvalue)
  {
    fieldH05FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK3 as a String.
  */
  public String getH05FLGWK3()
  {
    return fieldH05FLGWK3.getString();
  }

  /**
  * Set field E05ROCCUN using a String value.
  */
  public void setE05ROCCUN(String newvalue)
  {
    fieldE05ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E05ROCCUN as a String.
  */
  public String getE05ROCCUN()
  {
    return fieldE05ROCCUN.getString();
  }

  /**
  * Set numeric field E05ROCCUN using a BigDecimal value.
  */
  public void setE05ROCCUN(BigDecimal newvalue)
  {
    fieldE05ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05ROCCUN()
  {
    return fieldE05ROCCUN.getBigDecimal();
  }

  /**
  * Set field E05ROCIDN using a String value.
  */
  public void setE05ROCIDN(String newvalue)
  {
    fieldE05ROCIDN.setString(newvalue);
  }

  /**
  * Get value of field E05ROCIDN as a String.
  */
  public String getE05ROCIDN()
  {
    return fieldE05ROCIDN.getString();
  }

  /**
  * Set field E05NUMCOR using a String value.
  */
  public void setE05NUMCOR(String newvalue)
  {
    fieldE05NUMCOR.setString(newvalue);
  }

  /**
  * Get value of field E05NUMCOR as a String.
  */
  public String getE05NUMCOR()
  {
    return fieldE05NUMCOR.getString();
  }

  /**
  * Set numeric field E05NUMCOR using a BigDecimal value.
  */
  public void setE05NUMCOR(BigDecimal newvalue)
  {
    fieldE05NUMCOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05NUMCOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05NUMCOR()
  {
    return fieldE05NUMCOR.getBigDecimal();
  }

  /**
  * Set field E05NUMREF using a String value.
  */
  public void setE05NUMREF(String newvalue)
  {
    fieldE05NUMREF.setString(newvalue);
  }

  /**
  * Get value of field E05NUMREF as a String.
  */
  public String getE05NUMREF()
  {
    return fieldE05NUMREF.getString();
  }

  /**
  * Set numeric field E05NUMREF using a BigDecimal value.
  */
  public void setE05NUMREF(BigDecimal newvalue)
  {
    fieldE05NUMREF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05NUMREF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05NUMREF()
  {
    return fieldE05NUMREF.getBigDecimal();
  }

  /**
  * Set field E05NUMIDN using a String value.
  */
  public void setE05NUMIDN(String newvalue)
  {
    fieldE05NUMIDN.setString(newvalue);
  }

  /**
  * Get value of field E05NUMIDN as a String.
  */
  public String getE05NUMIDN()
  {
    return fieldE05NUMIDN.getString();
  }

  /**
  * Set field E05PERCOR using a String value.
  */
  public void setE05PERCOR(String newvalue)
  {
    fieldE05PERCOR.setString(newvalue);
  }

  /**
  * Get value of field E05PERCOR as a String.
  */
  public String getE05PERCOR()
  {
    return fieldE05PERCOR.getString();
  }

  /**
  * Set field E05TIPDOC using a String value.
  */
  public void setE05TIPDOC(String newvalue)
  {
    fieldE05TIPDOC.setString(newvalue);
  }

  /**
  * Get value of field E05TIPDOC as a String.
  */
  public String getE05TIPDOC()
  {
    return fieldE05TIPDOC.getString();
  }

  /**
  * Set field E05FECINI using a String value.
  */
  public void setE05FECINI(String newvalue)
  {
    fieldE05FECINI.setString(newvalue);
  }

  /**
  * Get value of field E05FECINI as a String.
  */
  public String getE05FECINI()
  {
    return fieldE05FECINI.getString();
  }

  /**
  * Set numeric field E05FECINI using a BigDecimal value.
  */
  public void setE05FECINI(BigDecimal newvalue)
  {
    fieldE05FECINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05FECINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05FECINI()
  {
    return fieldE05FECINI.getBigDecimal();
  }

  /**
  * Set field E05FECFIN using a String value.
  */
  public void setE05FECFIN(String newvalue)
  {
    fieldE05FECFIN.setString(newvalue);
  }

  /**
  * Get value of field E05FECFIN as a String.
  */
  public String getE05FECFIN()
  {
    return fieldE05FECFIN.getString();
  }

  /**
  * Set numeric field E05FECFIN using a BigDecimal value.
  */
  public void setE05FECFIN(BigDecimal newvalue)
  {
    fieldE05FECFIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05FECFIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05FECFIN()
  {
    return fieldE05FECFIN.getBigDecimal();
  }

  /**
  * Set field E05DESDOC using a String value.
  */
  public void setE05DESDOC(String newvalue)
  {
    fieldE05DESDOC.setString(newvalue);
  }

  /**
  * Get value of field E05DESDOC as a String.
  */
  public String getE05DESDOC()
  {
    return fieldE05DESDOC.getString();
  }

  /**
  * Set field E05ESTDOC using a String value.
  */
  public void setE05ESTDOC(String newvalue)
  {
    fieldE05ESTDOC.setString(newvalue);
  }

  /**
  * Get value of field E05ESTDOC as a String.
  */
  public String getE05ESTDOC()
  {
    return fieldE05ESTDOC.getString();
  }

  /**
  * Set field E05ESTGEN using a String value.
  */
  public void setE05ESTGEN(String newvalue)
  {
    fieldE05ESTGEN.setString(newvalue);
  }

  /**
  * Get value of field E05ESTGEN as a String.
  */
  public String getE05ESTGEN()
  {
    return fieldE05ESTGEN.getString();
  }

}
