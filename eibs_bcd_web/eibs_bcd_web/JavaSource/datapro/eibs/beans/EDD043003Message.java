package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD043003 physical file definition.
* 
* File level identifier is 1170113120221.
* Record format level identifier is 483254355F896.
*/

public class EDD043003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03ACMACC",
                                     "E03ACMPRO",
                                     "E03ACMCUN",
                                     "E03CUSNA1",
                                     "E03INVRBK",
                                     "E03INVRBR",
                                     "E03INVRCY",
                                     "E03INVRGL",
                                     "E03INVRAC",
                                     "E03INVSDM",
                                     "E03INVSDD",
                                     "E03INVSDY",
                                     "E03INVMDM",
                                     "E03INVMDD",
                                     "E03INVMDY"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03ACMACC",
                                   "E03ACMPRO",
                                   "E03ACMCUN",
                                   "E03CUSNA1",
                                   "E03INVRBK",
                                   "E03INVRBR",
                                   "E03INVRCY",
                                   "E03INVRGL",
                                   "E03INVRAC",
                                   "E03INVSDM",
                                   "E03INVSDD",
                                   "E03INVSDY",
                                   "E03INVMDM",
                                   "E03INVMDD",
                                   "E03INVMDY"
                                 };
  final static String fid = "1170113120221";
  final static String rid = "483254355F896";
  final static String fmtname = "EDD043003";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03ACMACC = null;
  private CharacterField fieldE03ACMPRO = null;
  private DecimalField fieldE03ACMCUN = null;
  private CharacterField fieldE03CUSNA1 = null;
  private CharacterField fieldE03INVRBK = null;
  private DecimalField fieldE03INVRBR = null;
  private CharacterField fieldE03INVRCY = null;
  private DecimalField fieldE03INVRGL = null;
  private DecimalField fieldE03INVRAC = null;
  private DecimalField fieldE03INVSDM = null;
  private DecimalField fieldE03INVSDD = null;
  private DecimalField fieldE03INVSDY = null;
  private DecimalField fieldE03INVMDM = null;
  private DecimalField fieldE03INVMDD = null;
  private DecimalField fieldE03INVMDY = null;

  /**
  * Constructor for EDD043003Message.
  */
  public EDD043003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 191;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03ACMACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E03ACMACC");
    fields[10] = fieldE03ACMPRO =
    new CharacterField(message, HEADERSIZE + 55, 4, "E03ACMPRO");
    fields[11] = fieldE03ACMCUN =
    new DecimalField(message, HEADERSIZE + 59, 10, 0, "E03ACMCUN");
    fields[12] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 69, 60, "E03CUSNA1");
    fields[13] = fieldE03INVRBK =
    new CharacterField(message, HEADERSIZE + 129, 2, "E03INVRBK");
    fields[14] = fieldE03INVRBR =
    new DecimalField(message, HEADERSIZE + 131, 5, 0, "E03INVRBR");
    fields[15] = fieldE03INVRCY =
    new CharacterField(message, HEADERSIZE + 136, 3, "E03INVRCY");
    fields[16] = fieldE03INVRGL =
    new DecimalField(message, HEADERSIZE + 139, 17, 0, "E03INVRGL");
    fields[17] = fieldE03INVRAC =
    new DecimalField(message, HEADERSIZE + 156, 13, 0, "E03INVRAC");
    fields[18] = fieldE03INVSDM =
    new DecimalField(message, HEADERSIZE + 169, 3, 0, "E03INVSDM");
    fields[19] = fieldE03INVSDD =
    new DecimalField(message, HEADERSIZE + 172, 3, 0, "E03INVSDD");
    fields[20] = fieldE03INVSDY =
    new DecimalField(message, HEADERSIZE + 175, 5, 0, "E03INVSDY");
    fields[21] = fieldE03INVMDM =
    new DecimalField(message, HEADERSIZE + 180, 3, 0, "E03INVMDM");
    fields[22] = fieldE03INVMDD =
    new DecimalField(message, HEADERSIZE + 183, 3, 0, "E03INVMDD");
    fields[23] = fieldE03INVMDY =
    new DecimalField(message, HEADERSIZE + 186, 5, 0, "E03INVMDY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03ACMACC using a String value.
  */
  public void setE03ACMACC(String newvalue)
  {
    fieldE03ACMACC.setString(newvalue);
  }

  /**
  * Get value of field E03ACMACC as a String.
  */
  public String getE03ACMACC()
  {
    return fieldE03ACMACC.getString();
  }

  /**
  * Set numeric field E03ACMACC using a BigDecimal value.
  */
  public void setE03ACMACC(BigDecimal newvalue)
  {
    fieldE03ACMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACMACC()
  {
    return fieldE03ACMACC.getBigDecimal();
  }

  /**
  * Set field E03ACMPRO using a String value.
  */
  public void setE03ACMPRO(String newvalue)
  {
    fieldE03ACMPRO.setString(newvalue);
  }

  /**
  * Get value of field E03ACMPRO as a String.
  */
  public String getE03ACMPRO()
  {
    return fieldE03ACMPRO.getString();
  }

  /**
  * Set field E03ACMCUN using a String value.
  */
  public void setE03ACMCUN(String newvalue)
  {
    fieldE03ACMCUN.setString(newvalue);
  }

  /**
  * Get value of field E03ACMCUN as a String.
  */
  public String getE03ACMCUN()
  {
    return fieldE03ACMCUN.getString();
  }

  /**
  * Set numeric field E03ACMCUN using a BigDecimal value.
  */
  public void setE03ACMCUN(BigDecimal newvalue)
  {
    fieldE03ACMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACMCUN()
  {
    return fieldE03ACMCUN.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

  /**
  * Set field E03INVRBK using a String value.
  */
  public void setE03INVRBK(String newvalue)
  {
    fieldE03INVRBK.setString(newvalue);
  }

  /**
  * Get value of field E03INVRBK as a String.
  */
  public String getE03INVRBK()
  {
    return fieldE03INVRBK.getString();
  }

  /**
  * Set field E03INVRBR using a String value.
  */
  public void setE03INVRBR(String newvalue)
  {
    fieldE03INVRBR.setString(newvalue);
  }

  /**
  * Get value of field E03INVRBR as a String.
  */
  public String getE03INVRBR()
  {
    return fieldE03INVRBR.getString();
  }

  /**
  * Set numeric field E03INVRBR using a BigDecimal value.
  */
  public void setE03INVRBR(BigDecimal newvalue)
  {
    fieldE03INVRBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVRBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVRBR()
  {
    return fieldE03INVRBR.getBigDecimal();
  }

  /**
  * Set field E03INVRCY using a String value.
  */
  public void setE03INVRCY(String newvalue)
  {
    fieldE03INVRCY.setString(newvalue);
  }

  /**
  * Get value of field E03INVRCY as a String.
  */
  public String getE03INVRCY()
  {
    return fieldE03INVRCY.getString();
  }

  /**
  * Set field E03INVRGL using a String value.
  */
  public void setE03INVRGL(String newvalue)
  {
    fieldE03INVRGL.setString(newvalue);
  }

  /**
  * Get value of field E03INVRGL as a String.
  */
  public String getE03INVRGL()
  {
    return fieldE03INVRGL.getString();
  }

  /**
  * Set numeric field E03INVRGL using a BigDecimal value.
  */
  public void setE03INVRGL(BigDecimal newvalue)
  {
    fieldE03INVRGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVRGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVRGL()
  {
    return fieldE03INVRGL.getBigDecimal();
  }

  /**
  * Set field E03INVRAC using a String value.
  */
  public void setE03INVRAC(String newvalue)
  {
    fieldE03INVRAC.setString(newvalue);
  }

  /**
  * Get value of field E03INVRAC as a String.
  */
  public String getE03INVRAC()
  {
    return fieldE03INVRAC.getString();
  }

  /**
  * Set numeric field E03INVRAC using a BigDecimal value.
  */
  public void setE03INVRAC(BigDecimal newvalue)
  {
    fieldE03INVRAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVRAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVRAC()
  {
    return fieldE03INVRAC.getBigDecimal();
  }

  /**
  * Set field E03INVSDM using a String value.
  */
  public void setE03INVSDM(String newvalue)
  {
    fieldE03INVSDM.setString(newvalue);
  }

  /**
  * Get value of field E03INVSDM as a String.
  */
  public String getE03INVSDM()
  {
    return fieldE03INVSDM.getString();
  }

  /**
  * Set numeric field E03INVSDM using a BigDecimal value.
  */
  public void setE03INVSDM(BigDecimal newvalue)
  {
    fieldE03INVSDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVSDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVSDM()
  {
    return fieldE03INVSDM.getBigDecimal();
  }

  /**
  * Set field E03INVSDD using a String value.
  */
  public void setE03INVSDD(String newvalue)
  {
    fieldE03INVSDD.setString(newvalue);
  }

  /**
  * Get value of field E03INVSDD as a String.
  */
  public String getE03INVSDD()
  {
    return fieldE03INVSDD.getString();
  }

  /**
  * Set numeric field E03INVSDD using a BigDecimal value.
  */
  public void setE03INVSDD(BigDecimal newvalue)
  {
    fieldE03INVSDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVSDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVSDD()
  {
    return fieldE03INVSDD.getBigDecimal();
  }

  /**
  * Set field E03INVSDY using a String value.
  */
  public void setE03INVSDY(String newvalue)
  {
    fieldE03INVSDY.setString(newvalue);
  }

  /**
  * Get value of field E03INVSDY as a String.
  */
  public String getE03INVSDY()
  {
    return fieldE03INVSDY.getString();
  }

  /**
  * Set numeric field E03INVSDY using a BigDecimal value.
  */
  public void setE03INVSDY(BigDecimal newvalue)
  {
    fieldE03INVSDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVSDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVSDY()
  {
    return fieldE03INVSDY.getBigDecimal();
  }

  /**
  * Set field E03INVMDM using a String value.
  */
  public void setE03INVMDM(String newvalue)
  {
    fieldE03INVMDM.setString(newvalue);
  }

  /**
  * Get value of field E03INVMDM as a String.
  */
  public String getE03INVMDM()
  {
    return fieldE03INVMDM.getString();
  }

  /**
  * Set numeric field E03INVMDM using a BigDecimal value.
  */
  public void setE03INVMDM(BigDecimal newvalue)
  {
    fieldE03INVMDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVMDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVMDM()
  {
    return fieldE03INVMDM.getBigDecimal();
  }

  /**
  * Set field E03INVMDD using a String value.
  */
  public void setE03INVMDD(String newvalue)
  {
    fieldE03INVMDD.setString(newvalue);
  }

  /**
  * Get value of field E03INVMDD as a String.
  */
  public String getE03INVMDD()
  {
    return fieldE03INVMDD.getString();
  }

  /**
  * Set numeric field E03INVMDD using a BigDecimal value.
  */
  public void setE03INVMDD(BigDecimal newvalue)
  {
    fieldE03INVMDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVMDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVMDD()
  {
    return fieldE03INVMDD.getBigDecimal();
  }

  /**
  * Set field E03INVMDY using a String value.
  */
  public void setE03INVMDY(String newvalue)
  {
    fieldE03INVMDY.setString(newvalue);
  }

  /**
  * Get value of field E03INVMDY as a String.
  */
  public String getE03INVMDY()
  {
    return fieldE03INVMDY.getString();
  }

  /**
  * Set numeric field E03INVMDY using a BigDecimal value.
  */
  public void setE03INVMDY(BigDecimal newvalue)
  {
    fieldE03INVMDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03INVMDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03INVMDY()
  {
    return fieldE03INVMDY.getBigDecimal();
  }

}
