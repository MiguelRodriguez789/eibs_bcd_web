package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESG050001 physical file definition.
* 
* File level identifier is 1151125123754.
* Record format level identifier is 54D75BE85F030.
*/

public class ESG050001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FTTCOD",
                                     "E01FTTSFL",
                                     "E01FTTDSC",
                                     "E01FTTTRW",
                                     "E01FTTNRW",
                                     "E01FTTTCL",
                                     "E01FTTNCL",
                                     "E01FTTNTT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FTTCOD",
                                   "E01FTTSFL",
                                   "E01FTTDSC",
                                   "E01FTTTRW",
                                   "E01FTTNRW",
                                   "E01FTTTCL",
                                   "E01FTTNCL",
                                   "E01FTTNTT"
                                 };
  final static String fid = "1151125123754";
  final static String rid = "54D75BE85F030";
  final static String fmtname = "ESG050001";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FTTCOD = null;
  private CharacterField fieldE01FTTSFL = null;
  private CharacterField fieldE01FTTDSC = null;
  private CharacterField fieldE01FTTTRW = null;
  private DecimalField fieldE01FTTNRW = null;
  private CharacterField fieldE01FTTTCL = null;
  private DecimalField fieldE01FTTNCL = null;
  private DecimalField fieldE01FTTNTT = null;

  /**
  * Constructor for ESG050001Message.
  */
  public ESG050001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 118;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FTTCOD =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01FTTCOD");
    fields[10] = fieldE01FTTSFL =
    new CharacterField(message, HEADERSIZE + 44, 1, "E01FTTSFL");
    fields[11] = fieldE01FTTDSC =
    new CharacterField(message, HEADERSIZE + 45, 60, "E01FTTDSC");
    fields[12] = fieldE01FTTTRW =
    new CharacterField(message, HEADERSIZE + 105, 1, "E01FTTTRW");
    fields[13] = fieldE01FTTNRW =
    new DecimalField(message, HEADERSIZE + 106, 4, 0, "E01FTTNRW");
    fields[14] = fieldE01FTTTCL =
    new CharacterField(message, HEADERSIZE + 110, 1, "E01FTTTCL");
    fields[15] = fieldE01FTTNCL =
    new DecimalField(message, HEADERSIZE + 111, 4, 0, "E01FTTNCL");
    fields[16] = fieldE01FTTNTT =
    new DecimalField(message, HEADERSIZE + 115, 3, 0, "E01FTTNTT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FTTCOD using a String value.
  */
  public void setE01FTTCOD(String newvalue)
  {
    fieldE01FTTCOD.setString(newvalue);
  }

  /**
  * Get value of field E01FTTCOD as a String.
  */
  public String getE01FTTCOD()
  {
    return fieldE01FTTCOD.getString();
  }

  /**
  * Set field E01FTTSFL using a String value.
  */
  public void setE01FTTSFL(String newvalue)
  {
    fieldE01FTTSFL.setString(newvalue);
  }

  /**
  * Get value of field E01FTTSFL as a String.
  */
  public String getE01FTTSFL()
  {
    return fieldE01FTTSFL.getString();
  }

  /**
  * Set field E01FTTDSC using a String value.
  */
  public void setE01FTTDSC(String newvalue)
  {
    fieldE01FTTDSC.setString(newvalue);
  }

  /**
  * Get value of field E01FTTDSC as a String.
  */
  public String getE01FTTDSC()
  {
    return fieldE01FTTDSC.getString();
  }

  /**
  * Set field E01FTTTRW using a String value.
  */
  public void setE01FTTTRW(String newvalue)
  {
    fieldE01FTTTRW.setString(newvalue);
  }

  /**
  * Get value of field E01FTTTRW as a String.
  */
  public String getE01FTTTRW()
  {
    return fieldE01FTTTRW.getString();
  }

  /**
  * Set field E01FTTNRW using a String value.
  */
  public void setE01FTTNRW(String newvalue)
  {
    fieldE01FTTNRW.setString(newvalue);
  }

  /**
  * Get value of field E01FTTNRW as a String.
  */
  public String getE01FTTNRW()
  {
    return fieldE01FTTNRW.getString();
  }

  /**
  * Set numeric field E01FTTNRW using a BigDecimal value.
  */
  public void setE01FTTNRW(BigDecimal newvalue)
  {
    fieldE01FTTNRW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FTTNRW as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FTTNRW()
  {
    return fieldE01FTTNRW.getBigDecimal();
  }

  /**
  * Set field E01FTTTCL using a String value.
  */
  public void setE01FTTTCL(String newvalue)
  {
    fieldE01FTTTCL.setString(newvalue);
  }

  /**
  * Get value of field E01FTTTCL as a String.
  */
  public String getE01FTTTCL()
  {
    return fieldE01FTTTCL.getString();
  }

  /**
  * Set field E01FTTNCL using a String value.
  */
  public void setE01FTTNCL(String newvalue)
  {
    fieldE01FTTNCL.setString(newvalue);
  }

  /**
  * Get value of field E01FTTNCL as a String.
  */
  public String getE01FTTNCL()
  {
    return fieldE01FTTNCL.getString();
  }

  /**
  * Set numeric field E01FTTNCL using a BigDecimal value.
  */
  public void setE01FTTNCL(BigDecimal newvalue)
  {
    fieldE01FTTNCL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FTTNCL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FTTNCL()
  {
    return fieldE01FTTNCL.getBigDecimal();
  }

  /**
  * Set field E01FTTNTT using a String value.
  */
  public void setE01FTTNTT(String newvalue)
  {
    fieldE01FTTNTT.setString(newvalue);
  }

  /**
  * Get value of field E01FTTNTT as a String.
  */
  public String getE01FTTNTT()
  {
    return fieldE01FTTNTT.getString();
  }

  /**
  * Set numeric field E01FTTNTT using a BigDecimal value.
  */
  public void setE01FTTNTT(BigDecimal newvalue)
  {
    fieldE01FTTNTT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FTTNTT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FTTNTT()
  {
    return fieldE01FTTNTT.getBigDecimal();
  }

}
