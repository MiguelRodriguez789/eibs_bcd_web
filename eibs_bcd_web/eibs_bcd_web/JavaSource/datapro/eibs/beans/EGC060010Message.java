package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC060010 physical file definition.
* 
* File level identifier is 1100706173619.
* Record format level identifier is 536AA6E8D8619.
*/

public class EGC060010Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H10USERID",
                                     "H10PROGRM",
                                     "H10TIMSYS",
                                     "H10SCRCOD",
                                     "H10OPECOD",
                                     "H10FLGMAS",
                                     "H10FLGWK1",
                                     "H10FLGWK2",
                                     "H10FLGWK3",
                                     "E10GCNTAR",
                                     "E10GCDIRE",
                                     "E10GCCOMU",
                                     "E10GCFONO",
                                     "E10GCCUPN",
                                     "E10GCCUPI",
                                     "E10GCCOBR",
                                     "E10GCRETO"
                                   };
  final static String tnames[] = {
                                   "H10USERID",
                                   "H10PROGRM",
                                   "H10TIMSYS",
                                   "H10SCRCOD",
                                   "H10OPECOD",
                                   "H10FLGMAS",
                                   "H10FLGWK1",
                                   "H10FLGWK2",
                                   "H10FLGWK3",
                                   "E10GCNTAR",
                                   "E10GCDIRE",
                                   "E10GCCOMU",
                                   "E10GCFONO",
                                   "E10GCCUPN",
                                   "E10GCCUPI",
                                   "E10GCCOBR",
                                   "E10GCRETO"
                                 };
  final static String fid = "1100706173619";
  final static String rid = "536AA6E8D8619";
  final static String fmtname = "EGC060010";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH10USERID = null;
  private CharacterField fieldH10PROGRM = null;
  private CharacterField fieldH10TIMSYS = null;
  private CharacterField fieldH10SCRCOD = null;
  private CharacterField fieldH10OPECOD = null;
  private CharacterField fieldH10FLGMAS = null;
  private CharacterField fieldH10FLGWK1 = null;
  private CharacterField fieldH10FLGWK2 = null;
  private CharacterField fieldH10FLGWK3 = null;
  private CharacterField fieldE10GCNTAR = null;
  private CharacterField fieldE10GCDIRE = null;
  private CharacterField fieldE10GCCOMU = null;
  private DecimalField fieldE10GCFONO = null;
  private DecimalField fieldE10GCCUPN = null;
  private DecimalField fieldE10GCCUPI = null;
  private CharacterField fieldE10GCCOBR = null;
  private DecimalField fieldE10GCRETO = null;

  /**
  * Constructor for EGC060010Message.
  */
  public EGC060010Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 193;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH10USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H10USERID");
    fields[1] = fieldH10PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H10PROGRM");
    fields[2] = fieldH10TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H10TIMSYS");
    fields[3] = fieldH10SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H10SCRCOD");
    fields[4] = fieldH10OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H10OPECOD");
    fields[5] = fieldH10FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H10FLGMAS");
    fields[6] = fieldH10FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H10FLGWK1");
    fields[7] = fieldH10FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H10FLGWK2");
    fields[8] = fieldH10FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H10FLGWK3");
    fields[9] = fieldE10GCNTAR =
    new CharacterField(message, HEADERSIZE + 42, 19, "E10GCNTAR");
    fields[10] = fieldE10GCDIRE =
    new CharacterField(message, HEADERSIZE + 61, 45, "E10GCDIRE");
    fields[11] = fieldE10GCCOMU =
    new CharacterField(message, HEADERSIZE + 106, 25, "E10GCCOMU");
    fields[12] = fieldE10GCFONO =
    new DecimalField(message, HEADERSIZE + 131, 12, 0, "E10GCFONO");
    fields[13] = fieldE10GCCUPN =
    new DecimalField(message, HEADERSIZE + 143, 11, 0, "E10GCCUPN");
    fields[14] = fieldE10GCCUPI =
    new DecimalField(message, HEADERSIZE + 154, 11, 0, "E10GCCUPI");
    fields[15] = fieldE10GCCOBR =
    new CharacterField(message, HEADERSIZE + 165, 25, "E10GCCOBR");
    fields[16] = fieldE10GCRETO =
    new DecimalField(message, HEADERSIZE + 190, 3, 0, "E10GCRETO");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H10USERID using a String value.
  */
  public void setH10USERID(String newvalue)
  {
    fieldH10USERID.setString(newvalue);
  }

  /**
  * Get value of field H10USERID as a String.
  */
  public String getH10USERID()
  {
    return fieldH10USERID.getString();
  }

  /**
  * Set field H10PROGRM using a String value.
  */
  public void setH10PROGRM(String newvalue)
  {
    fieldH10PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H10PROGRM as a String.
  */
  public String getH10PROGRM()
  {
    return fieldH10PROGRM.getString();
  }

  /**
  * Set field H10TIMSYS using a String value.
  */
  public void setH10TIMSYS(String newvalue)
  {
    fieldH10TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H10TIMSYS as a String.
  */
  public String getH10TIMSYS()
  {
    return fieldH10TIMSYS.getString();
  }

  /**
  * Set field H10SCRCOD using a String value.
  */
  public void setH10SCRCOD(String newvalue)
  {
    fieldH10SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H10SCRCOD as a String.
  */
  public String getH10SCRCOD()
  {
    return fieldH10SCRCOD.getString();
  }

  /**
  * Set field H10OPECOD using a String value.
  */
  public void setH10OPECOD(String newvalue)
  {
    fieldH10OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H10OPECOD as a String.
  */
  public String getH10OPECOD()
  {
    return fieldH10OPECOD.getString();
  }

  /**
  * Set field H10FLGMAS using a String value.
  */
  public void setH10FLGMAS(String newvalue)
  {
    fieldH10FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H10FLGMAS as a String.
  */
  public String getH10FLGMAS()
  {
    return fieldH10FLGMAS.getString();
  }

  /**
  * Set field H10FLGWK1 using a String value.
  */
  public void setH10FLGWK1(String newvalue)
  {
    fieldH10FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H10FLGWK1 as a String.
  */
  public String getH10FLGWK1()
  {
    return fieldH10FLGWK1.getString();
  }

  /**
  * Set field H10FLGWK2 using a String value.
  */
  public void setH10FLGWK2(String newvalue)
  {
    fieldH10FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H10FLGWK2 as a String.
  */
  public String getH10FLGWK2()
  {
    return fieldH10FLGWK2.getString();
  }

  /**
  * Set field H10FLGWK3 using a String value.
  */
  public void setH10FLGWK3(String newvalue)
  {
    fieldH10FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H10FLGWK3 as a String.
  */
  public String getH10FLGWK3()
  {
    return fieldH10FLGWK3.getString();
  }

  /**
  * Set field E10GCNTAR using a String value.
  */
  public void setE10GCNTAR(String newvalue)
  {
    fieldE10GCNTAR.setString(newvalue);
  }

  /**
  * Get value of field E10GCNTAR as a String.
  */
  public String getE10GCNTAR()
  {
    return fieldE10GCNTAR.getString();
  }

  /**
  * Set field E10GCDIRE using a String value.
  */
  public void setE10GCDIRE(String newvalue)
  {
    fieldE10GCDIRE.setString(newvalue);
  }

  /**
  * Get value of field E10GCDIRE as a String.
  */
  public String getE10GCDIRE()
  {
    return fieldE10GCDIRE.getString();
  }

  /**
  * Set field E10GCCOMU using a String value.
  */
  public void setE10GCCOMU(String newvalue)
  {
    fieldE10GCCOMU.setString(newvalue);
  }

  /**
  * Get value of field E10GCCOMU as a String.
  */
  public String getE10GCCOMU()
  {
    return fieldE10GCCOMU.getString();
  }

  /**
  * Set field E10GCFONO using a String value.
  */
  public void setE10GCFONO(String newvalue)
  {
    fieldE10GCFONO.setString(newvalue);
  }

  /**
  * Get value of field E10GCFONO as a String.
  */
  public String getE10GCFONO()
  {
    return fieldE10GCFONO.getString();
  }

  /**
  * Set numeric field E10GCFONO using a BigDecimal value.
  */
  public void setE10GCFONO(BigDecimal newvalue)
  {
    fieldE10GCFONO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E10GCFONO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE10GCFONO()
  {
    return fieldE10GCFONO.getBigDecimal();
  }

  /**
  * Set field E10GCCUPN using a String value.
  */
  public void setE10GCCUPN(String newvalue)
  {
    fieldE10GCCUPN.setString(newvalue);
  }

  /**
  * Get value of field E10GCCUPN as a String.
  */
  public String getE10GCCUPN()
  {
    return fieldE10GCCUPN.getString();
  }

  /**
  * Set numeric field E10GCCUPN using a BigDecimal value.
  */
  public void setE10GCCUPN(BigDecimal newvalue)
  {
    fieldE10GCCUPN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E10GCCUPN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE10GCCUPN()
  {
    return fieldE10GCCUPN.getBigDecimal();
  }

  /**
  * Set field E10GCCUPI using a String value.
  */
  public void setE10GCCUPI(String newvalue)
  {
    fieldE10GCCUPI.setString(newvalue);
  }

  /**
  * Get value of field E10GCCUPI as a String.
  */
  public String getE10GCCUPI()
  {
    return fieldE10GCCUPI.getString();
  }

  /**
  * Set numeric field E10GCCUPI using a BigDecimal value.
  */
  public void setE10GCCUPI(BigDecimal newvalue)
  {
    fieldE10GCCUPI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E10GCCUPI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE10GCCUPI()
  {
    return fieldE10GCCUPI.getBigDecimal();
  }

  /**
  * Set field E10GCCOBR using a String value.
  */
  public void setE10GCCOBR(String newvalue)
  {
    fieldE10GCCOBR.setString(newvalue);
  }

  /**
  * Get value of field E10GCCOBR as a String.
  */
  public String getE10GCCOBR()
  {
    return fieldE10GCCOBR.getString();
  }

  /**
  * Set field E10GCRETO using a String value.
  */
  public void setE10GCRETO(String newvalue)
  {
    fieldE10GCRETO.setString(newvalue);
  }

  /**
  * Get value of field E10GCRETO as a String.
  */
  public String getE10GCRETO()
  {
    return fieldE10GCRETO.getString();
  }

  /**
  * Set numeric field E10GCRETO using a BigDecimal value.
  */
  public void setE10GCRETO(BigDecimal newvalue)
  {
    fieldE10GCRETO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E10GCRETO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE10GCRETO()
  {
    return fieldE10GCRETO.getBigDecimal();
  }

}
