package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD009502 physical file definition.
* 
* File level identifier is 1100706173546.
* Record format level identifier is 30031CD1629B7.
*/

public class EDD009502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02ACMACC",
                                     "E02ACMPRO",
                                     "E02ACMCUN",
                                     "E02CUSNA1",
                                     "E02ACMBNK",
                                     "E02ACMBRN",
                                     "E02ACMCCY",
                                     "E02ACMGLN",
                                     "E02ACMCCN",
                                     "E02CPRDTY",
                                     "E02CPRDTM",
                                     "E02CPRAVG",
                                     "E02CPRINT",
                                     "E02CPRMBL",
                                     "E02CPRBAL",
                                     "E02CPROTH",
                                     "E02CPRCFN",
                                     "E02CPRACS",
                                     "E02CPRIDC",
                                     "E02CPRNDR",
                                     "E02CPRNCR",
                                     "E02CPRNCK",
                                     "E02CPRNDP"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02ACMACC",
                                   "E02ACMPRO",
                                   "E02ACMCUN",
                                   "E02CUSNA1",
                                   "E02ACMBNK",
                                   "E02ACMBRN",
                                   "E02ACMCCY",
                                   "E02ACMGLN",
                                   "E02ACMCCN",
                                   "E02CPRDTY",
                                   "E02CPRDTM",
                                   "E02CPRAVG",
                                   "E02CPRINT",
                                   "E02CPRMBL",
                                   "E02CPRBAL",
                                   "E02CPROTH",
                                   "E02CPRCFN",
                                   "E02CPRACS",
                                   "E02CPRIDC",
                                   "E02CPRNDR",
                                   "E02CPRNCR",
                                   "E02CPRNCK",
                                   "E02CPRNDP"
                                 };
  final static String fid = "1100706173546";
  final static String rid = "30031CD1629B7";
  final static String fmtname = "EDD009502";
  final int FIELDCOUNT = 32;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02ACMACC = null;
  private CharacterField fieldE02ACMPRO = null;
  private DecimalField fieldE02ACMCUN = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02ACMBNK = null;
  private DecimalField fieldE02ACMBRN = null;
  private CharacterField fieldE02ACMCCY = null;
  private DecimalField fieldE02ACMGLN = null;
  private DecimalField fieldE02ACMCCN = null;
  private DecimalField fieldE02CPRDTY = null;
  private DecimalField fieldE02CPRDTM = null;
  private DecimalField fieldE02CPRAVG = null;
  private DecimalField fieldE02CPRINT = null;
  private DecimalField fieldE02CPRMBL = null;
  private DecimalField fieldE02CPRBAL = null;
  private DecimalField fieldE02CPROTH = null;
  private DecimalField fieldE02CPRCFN = null;
  private DecimalField fieldE02CPRACS = null;
  private DecimalField fieldE02CPRIDC = null;
  private DecimalField fieldE02CPRNDR = null;
  private DecimalField fieldE02CPRNCR = null;
  private DecimalField fieldE02CPRNCK = null;
  private DecimalField fieldE02CPRNDP = null;

  /**
  * Constructor for EDD009502Message.
  */
  public EDD009502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 306;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02ACMACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02ACMACC");
    fields[10] = fieldE02ACMPRO =
    new CharacterField(message, HEADERSIZE + 55, 4, "E02ACMPRO");
    fields[11] = fieldE02ACMCUN =
    new DecimalField(message, HEADERSIZE + 59, 10, 0, "E02ACMCUN");
    fields[12] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 69, 45, "E02CUSNA1");
    fields[13] = fieldE02ACMBNK =
    new CharacterField(message, HEADERSIZE + 114, 2, "E02ACMBNK");
    fields[14] = fieldE02ACMBRN =
    new DecimalField(message, HEADERSIZE + 116, 4, 0, "E02ACMBRN");
    fields[15] = fieldE02ACMCCY =
    new CharacterField(message, HEADERSIZE + 120, 3, "E02ACMCCY");
    fields[16] = fieldE02ACMGLN =
    new DecimalField(message, HEADERSIZE + 123, 17, 0, "E02ACMGLN");
    fields[17] = fieldE02ACMCCN =
    new DecimalField(message, HEADERSIZE + 140, 9, 0, "E02ACMCCN");
    fields[18] = fieldE02CPRDTY =
    new DecimalField(message, HEADERSIZE + 149, 3, 0, "E02CPRDTY");
    fields[19] = fieldE02CPRDTM =
    new DecimalField(message, HEADERSIZE + 152, 3, 0, "E02CPRDTM");
    fields[20] = fieldE02CPRAVG =
    new DecimalField(message, HEADERSIZE + 155, 19, 2, "E02CPRAVG");
    fields[21] = fieldE02CPRINT =
    new DecimalField(message, HEADERSIZE + 174, 17, 2, "E02CPRINT");
    fields[22] = fieldE02CPRMBL =
    new DecimalField(message, HEADERSIZE + 191, 17, 2, "E02CPRMBL");
    fields[23] = fieldE02CPRBAL =
    new DecimalField(message, HEADERSIZE + 208, 17, 2, "E02CPRBAL");
    fields[24] = fieldE02CPROTH =
    new DecimalField(message, HEADERSIZE + 225, 17, 2, "E02CPROTH");
    fields[25] = fieldE02CPRCFN =
    new DecimalField(message, HEADERSIZE + 242, 17, 2, "E02CPRCFN");
    fields[26] = fieldE02CPRACS =
    new DecimalField(message, HEADERSIZE + 259, 17, 2, "E02CPRACS");
    fields[27] = fieldE02CPRIDC =
    new DecimalField(message, HEADERSIZE + 276, 6, 0, "E02CPRIDC");
    fields[28] = fieldE02CPRNDR =
    new DecimalField(message, HEADERSIZE + 282, 6, 0, "E02CPRNDR");
    fields[29] = fieldE02CPRNCR =
    new DecimalField(message, HEADERSIZE + 288, 6, 0, "E02CPRNCR");
    fields[30] = fieldE02CPRNCK =
    new DecimalField(message, HEADERSIZE + 294, 6, 0, "E02CPRNCK");
    fields[31] = fieldE02CPRNDP =
    new DecimalField(message, HEADERSIZE + 300, 6, 0, "E02CPRNDP");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02ACMACC using a String value.
  */
  public void setE02ACMACC(String newvalue)
  {
    fieldE02ACMACC.setString(newvalue);
  }

  /**
  * Get value of field E02ACMACC as a String.
  */
  public String getE02ACMACC()
  {
    return fieldE02ACMACC.getString();
  }

  /**
  * Set numeric field E02ACMACC using a BigDecimal value.
  */
  public void setE02ACMACC(BigDecimal newvalue)
  {
    fieldE02ACMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACMACC()
  {
    return fieldE02ACMACC.getBigDecimal();
  }

  /**
  * Set field E02ACMPRO using a String value.
  */
  public void setE02ACMPRO(String newvalue)
  {
    fieldE02ACMPRO.setString(newvalue);
  }

  /**
  * Get value of field E02ACMPRO as a String.
  */
  public String getE02ACMPRO()
  {
    return fieldE02ACMPRO.getString();
  }

  /**
  * Set field E02ACMCUN using a String value.
  */
  public void setE02ACMCUN(String newvalue)
  {
    fieldE02ACMCUN.setString(newvalue);
  }

  /**
  * Get value of field E02ACMCUN as a String.
  */
  public String getE02ACMCUN()
  {
    return fieldE02ACMCUN.getString();
  }

  /**
  * Set numeric field E02ACMCUN using a BigDecimal value.
  */
  public void setE02ACMCUN(BigDecimal newvalue)
  {
    fieldE02ACMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACMCUN()
  {
    return fieldE02ACMCUN.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02ACMBNK using a String value.
  */
  public void setE02ACMBNK(String newvalue)
  {
    fieldE02ACMBNK.setString(newvalue);
  }

  /**
  * Get value of field E02ACMBNK as a String.
  */
  public String getE02ACMBNK()
  {
    return fieldE02ACMBNK.getString();
  }

  /**
  * Set field E02ACMBRN using a String value.
  */
  public void setE02ACMBRN(String newvalue)
  {
    fieldE02ACMBRN.setString(newvalue);
  }

  /**
  * Get value of field E02ACMBRN as a String.
  */
  public String getE02ACMBRN()
  {
    return fieldE02ACMBRN.getString();
  }

  /**
  * Set numeric field E02ACMBRN using a BigDecimal value.
  */
  public void setE02ACMBRN(BigDecimal newvalue)
  {
    fieldE02ACMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACMBRN()
  {
    return fieldE02ACMBRN.getBigDecimal();
  }

  /**
  * Set field E02ACMCCY using a String value.
  */
  public void setE02ACMCCY(String newvalue)
  {
    fieldE02ACMCCY.setString(newvalue);
  }

  /**
  * Get value of field E02ACMCCY as a String.
  */
  public String getE02ACMCCY()
  {
    return fieldE02ACMCCY.getString();
  }

  /**
  * Set field E02ACMGLN using a String value.
  */
  public void setE02ACMGLN(String newvalue)
  {
    fieldE02ACMGLN.setString(newvalue);
  }

  /**
  * Get value of field E02ACMGLN as a String.
  */
  public String getE02ACMGLN()
  {
    return fieldE02ACMGLN.getString();
  }

  /**
  * Set numeric field E02ACMGLN using a BigDecimal value.
  */
  public void setE02ACMGLN(BigDecimal newvalue)
  {
    fieldE02ACMGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACMGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACMGLN()
  {
    return fieldE02ACMGLN.getBigDecimal();
  }

  /**
  * Set field E02ACMCCN using a String value.
  */
  public void setE02ACMCCN(String newvalue)
  {
    fieldE02ACMCCN.setString(newvalue);
  }

  /**
  * Get value of field E02ACMCCN as a String.
  */
  public String getE02ACMCCN()
  {
    return fieldE02ACMCCN.getString();
  }

  /**
  * Set numeric field E02ACMCCN using a BigDecimal value.
  */
  public void setE02ACMCCN(BigDecimal newvalue)
  {
    fieldE02ACMCCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ACMCCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ACMCCN()
  {
    return fieldE02ACMCCN.getBigDecimal();
  }

  /**
  * Set field E02CPRDTY using a String value.
  */
  public void setE02CPRDTY(String newvalue)
  {
    fieldE02CPRDTY.setString(newvalue);
  }

  /**
  * Get value of field E02CPRDTY as a String.
  */
  public String getE02CPRDTY()
  {
    return fieldE02CPRDTY.getString();
  }

  /**
  * Set numeric field E02CPRDTY using a BigDecimal value.
  */
  public void setE02CPRDTY(BigDecimal newvalue)
  {
    fieldE02CPRDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRDTY()
  {
    return fieldE02CPRDTY.getBigDecimal();
  }

  /**
  * Set field E02CPRDTM using a String value.
  */
  public void setE02CPRDTM(String newvalue)
  {
    fieldE02CPRDTM.setString(newvalue);
  }

  /**
  * Get value of field E02CPRDTM as a String.
  */
  public String getE02CPRDTM()
  {
    return fieldE02CPRDTM.getString();
  }

  /**
  * Set numeric field E02CPRDTM using a BigDecimal value.
  */
  public void setE02CPRDTM(BigDecimal newvalue)
  {
    fieldE02CPRDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRDTM()
  {
    return fieldE02CPRDTM.getBigDecimal();
  }

  /**
  * Set field E02CPRAVG using a String value.
  */
  public void setE02CPRAVG(String newvalue)
  {
    fieldE02CPRAVG.setString(newvalue);
  }

  /**
  * Get value of field E02CPRAVG as a String.
  */
  public String getE02CPRAVG()
  {
    return fieldE02CPRAVG.getString();
  }

  /**
  * Set numeric field E02CPRAVG using a BigDecimal value.
  */
  public void setE02CPRAVG(BigDecimal newvalue)
  {
    fieldE02CPRAVG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRAVG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRAVG()
  {
    return fieldE02CPRAVG.getBigDecimal();
  }

  /**
  * Set field E02CPRINT using a String value.
  */
  public void setE02CPRINT(String newvalue)
  {
    fieldE02CPRINT.setString(newvalue);
  }

  /**
  * Get value of field E02CPRINT as a String.
  */
  public String getE02CPRINT()
  {
    return fieldE02CPRINT.getString();
  }

  /**
  * Set numeric field E02CPRINT using a BigDecimal value.
  */
  public void setE02CPRINT(BigDecimal newvalue)
  {
    fieldE02CPRINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRINT()
  {
    return fieldE02CPRINT.getBigDecimal();
  }

  /**
  * Set field E02CPRMBL using a String value.
  */
  public void setE02CPRMBL(String newvalue)
  {
    fieldE02CPRMBL.setString(newvalue);
  }

  /**
  * Get value of field E02CPRMBL as a String.
  */
  public String getE02CPRMBL()
  {
    return fieldE02CPRMBL.getString();
  }

  /**
  * Set numeric field E02CPRMBL using a BigDecimal value.
  */
  public void setE02CPRMBL(BigDecimal newvalue)
  {
    fieldE02CPRMBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRMBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRMBL()
  {
    return fieldE02CPRMBL.getBigDecimal();
  }

  /**
  * Set field E02CPRBAL using a String value.
  */
  public void setE02CPRBAL(String newvalue)
  {
    fieldE02CPRBAL.setString(newvalue);
  }

  /**
  * Get value of field E02CPRBAL as a String.
  */
  public String getE02CPRBAL()
  {
    return fieldE02CPRBAL.getString();
  }

  /**
  * Set numeric field E02CPRBAL using a BigDecimal value.
  */
  public void setE02CPRBAL(BigDecimal newvalue)
  {
    fieldE02CPRBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRBAL()
  {
    return fieldE02CPRBAL.getBigDecimal();
  }

  /**
  * Set field E02CPROTH using a String value.
  */
  public void setE02CPROTH(String newvalue)
  {
    fieldE02CPROTH.setString(newvalue);
  }

  /**
  * Get value of field E02CPROTH as a String.
  */
  public String getE02CPROTH()
  {
    return fieldE02CPROTH.getString();
  }

  /**
  * Set numeric field E02CPROTH using a BigDecimal value.
  */
  public void setE02CPROTH(BigDecimal newvalue)
  {
    fieldE02CPROTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPROTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPROTH()
  {
    return fieldE02CPROTH.getBigDecimal();
  }

  /**
  * Set field E02CPRCFN using a String value.
  */
  public void setE02CPRCFN(String newvalue)
  {
    fieldE02CPRCFN.setString(newvalue);
  }

  /**
  * Get value of field E02CPRCFN as a String.
  */
  public String getE02CPRCFN()
  {
    return fieldE02CPRCFN.getString();
  }

  /**
  * Set numeric field E02CPRCFN using a BigDecimal value.
  */
  public void setE02CPRCFN(BigDecimal newvalue)
  {
    fieldE02CPRCFN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRCFN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRCFN()
  {
    return fieldE02CPRCFN.getBigDecimal();
  }

  /**
  * Set field E02CPRACS using a String value.
  */
  public void setE02CPRACS(String newvalue)
  {
    fieldE02CPRACS.setString(newvalue);
  }

  /**
  * Get value of field E02CPRACS as a String.
  */
  public String getE02CPRACS()
  {
    return fieldE02CPRACS.getString();
  }

  /**
  * Set numeric field E02CPRACS using a BigDecimal value.
  */
  public void setE02CPRACS(BigDecimal newvalue)
  {
    fieldE02CPRACS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRACS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRACS()
  {
    return fieldE02CPRACS.getBigDecimal();
  }

  /**
  * Set field E02CPRIDC using a String value.
  */
  public void setE02CPRIDC(String newvalue)
  {
    fieldE02CPRIDC.setString(newvalue);
  }

  /**
  * Get value of field E02CPRIDC as a String.
  */
  public String getE02CPRIDC()
  {
    return fieldE02CPRIDC.getString();
  }

  /**
  * Set numeric field E02CPRIDC using a BigDecimal value.
  */
  public void setE02CPRIDC(BigDecimal newvalue)
  {
    fieldE02CPRIDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRIDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRIDC()
  {
    return fieldE02CPRIDC.getBigDecimal();
  }

  /**
  * Set field E02CPRNDR using a String value.
  */
  public void setE02CPRNDR(String newvalue)
  {
    fieldE02CPRNDR.setString(newvalue);
  }

  /**
  * Get value of field E02CPRNDR as a String.
  */
  public String getE02CPRNDR()
  {
    return fieldE02CPRNDR.getString();
  }

  /**
  * Set numeric field E02CPRNDR using a BigDecimal value.
  */
  public void setE02CPRNDR(BigDecimal newvalue)
  {
    fieldE02CPRNDR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRNDR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRNDR()
  {
    return fieldE02CPRNDR.getBigDecimal();
  }

  /**
  * Set field E02CPRNCR using a String value.
  */
  public void setE02CPRNCR(String newvalue)
  {
    fieldE02CPRNCR.setString(newvalue);
  }

  /**
  * Get value of field E02CPRNCR as a String.
  */
  public String getE02CPRNCR()
  {
    return fieldE02CPRNCR.getString();
  }

  /**
  * Set numeric field E02CPRNCR using a BigDecimal value.
  */
  public void setE02CPRNCR(BigDecimal newvalue)
  {
    fieldE02CPRNCR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRNCR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRNCR()
  {
    return fieldE02CPRNCR.getBigDecimal();
  }

  /**
  * Set field E02CPRNCK using a String value.
  */
  public void setE02CPRNCK(String newvalue)
  {
    fieldE02CPRNCK.setString(newvalue);
  }

  /**
  * Get value of field E02CPRNCK as a String.
  */
  public String getE02CPRNCK()
  {
    return fieldE02CPRNCK.getString();
  }

  /**
  * Set numeric field E02CPRNCK using a BigDecimal value.
  */
  public void setE02CPRNCK(BigDecimal newvalue)
  {
    fieldE02CPRNCK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRNCK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRNCK()
  {
    return fieldE02CPRNCK.getBigDecimal();
  }

  /**
  * Set field E02CPRNDP using a String value.
  */
  public void setE02CPRNDP(String newvalue)
  {
    fieldE02CPRNDP.setString(newvalue);
  }

  /**
  * Get value of field E02CPRNDP as a String.
  */
  public String getE02CPRNDP()
  {
    return fieldE02CPRNDP.getString();
  }

  /**
  * Set numeric field E02CPRNDP using a BigDecimal value.
  */
  public void setE02CPRNDP(BigDecimal newvalue)
  {
    fieldE02CPRNDP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CPRNDP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CPRNDP()
  {
    return fieldE02CPRNDP.getBigDecimal();
  }

}
