package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP073702 physical file definition.
* 
* File level identifier is 1130611113113.
* Record format level identifier is 36DC6A5B234CA.
*/

public class EDP073702Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CNTLAN",
                                     "E02PLPBNK",
                                     "E02PLTNPR",
                                     "E02PLTPTY",
                                     "E02PLTCUN",
                                     "E02PLTPRO",
                                     "E02PLTPRD",
                                     "E02PLTTYP",
                                     "E02PLTTYR",
                                     "E02DPACO1",
                                     "E02DPACO2",
                                     "E02OPECDE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CNTLAN",
                                   "E02PLPBNK",
                                   "E02PLTNPR",
                                   "E02PLTPTY",
                                   "E02PLTCUN",
                                   "E02PLTPRO",
                                   "E02PLTPRD",
                                   "E02PLTTYP",
                                   "E02PLTTYR",
                                   "E02DPACO1",
                                   "E02DPACO2",
                                   "E02OPECDE"
                                 };
  final static String fid = "1130611113113";
  final static String rid = "36DC6A5B234CA";
  final static String fmtname = "EDP073702";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02CNTLAN = null;
  private CharacterField fieldE02PLPBNK = null;
  private DecimalField fieldE02PLTNPR = null;
  private CharacterField fieldE02PLTPTY = null;
  private DecimalField fieldE02PLTCUN = null;
  private CharacterField fieldE02PLTPRO = null;
  private CharacterField fieldE02PLTPRD = null;
  private CharacterField fieldE02PLTTYP = null;
  private CharacterField fieldE02PLTTYR = null;
  private CharacterField fieldE02DPACO1 = null;
  private CharacterField fieldE02DPACO2 = null;
  private CharacterField fieldE02OPECDE = null;

  /**
  * Constructor for EDP073702Message.
  */
  public EDP073702Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1148;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E02CNTLAN");
    fields[10] = fieldE02PLPBNK =
    new CharacterField(message, HEADERSIZE + 43, 2, "E02PLPBNK");
    fields[11] = fieldE02PLTNPR =
    new DecimalField(message, HEADERSIZE + 45, 13, 0, "E02PLTNPR");
    fields[12] = fieldE02PLTPTY =
    new CharacterField(message, HEADERSIZE + 58, 1, "E02PLTPTY");
    fields[13] = fieldE02PLTCUN =
    new DecimalField(message, HEADERSIZE + 59, 10, 0, "E02PLTCUN");
    fields[14] = fieldE02PLTPRO =
    new CharacterField(message, HEADERSIZE + 69, 4, "E02PLTPRO");
    fields[15] = fieldE02PLTPRD =
    new CharacterField(message, HEADERSIZE + 73, 45, "E02PLTPRD");
    fields[16] = fieldE02PLTTYP =
    new CharacterField(message, HEADERSIZE + 118, 4, "E02PLTTYP");
    fields[17] = fieldE02PLTTYR =
    new CharacterField(message, HEADERSIZE + 122, 1, "E02PLTTYR");
    fields[18] = fieldE02DPACO1 =
    new CharacterField(message, HEADERSIZE + 123, 512, "E02DPACO1");
    fields[19] = fieldE02DPACO2 =
    new CharacterField(message, HEADERSIZE + 635, 512, "E02DPACO2");
    fields[20] = fieldE02OPECDE =
    new CharacterField(message, HEADERSIZE + 1147, 1, "E02OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CNTLAN using a String value.
  */
  public void setE02CNTLAN(String newvalue)
  {
    fieldE02CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E02CNTLAN as a String.
  */
  public String getE02CNTLAN()
  {
    return fieldE02CNTLAN.getString();
  }

  /**
  * Set field E02PLPBNK using a String value.
  */
  public void setE02PLPBNK(String newvalue)
  {
    fieldE02PLPBNK.setString(newvalue);
  }

  /**
  * Get value of field E02PLPBNK as a String.
  */
  public String getE02PLPBNK()
  {
    return fieldE02PLPBNK.getString();
  }

  /**
  * Set field E02PLTNPR using a String value.
  */
  public void setE02PLTNPR(String newvalue)
  {
    fieldE02PLTNPR.setString(newvalue);
  }

  /**
  * Get value of field E02PLTNPR as a String.
  */
  public String getE02PLTNPR()
  {
    return fieldE02PLTNPR.getString();
  }

  /**
  * Set numeric field E02PLTNPR using a BigDecimal value.
  */
  public void setE02PLTNPR(BigDecimal newvalue)
  {
    fieldE02PLTNPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PLTNPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PLTNPR()
  {
    return fieldE02PLTNPR.getBigDecimal();
  }

  /**
  * Set field E02PLTPTY using a String value.
  */
  public void setE02PLTPTY(String newvalue)
  {
    fieldE02PLTPTY.setString(newvalue);
  }

  /**
  * Get value of field E02PLTPTY as a String.
  */
  public String getE02PLTPTY()
  {
    return fieldE02PLTPTY.getString();
  }

  /**
  * Set field E02PLTCUN using a String value.
  */
  public void setE02PLTCUN(String newvalue)
  {
    fieldE02PLTCUN.setString(newvalue);
  }

  /**
  * Get value of field E02PLTCUN as a String.
  */
  public String getE02PLTCUN()
  {
    return fieldE02PLTCUN.getString();
  }

  /**
  * Set numeric field E02PLTCUN using a BigDecimal value.
  */
  public void setE02PLTCUN(BigDecimal newvalue)
  {
    fieldE02PLTCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02PLTCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02PLTCUN()
  {
    return fieldE02PLTCUN.getBigDecimal();
  }

  /**
  * Set field E02PLTPRO using a String value.
  */
  public void setE02PLTPRO(String newvalue)
  {
    fieldE02PLTPRO.setString(newvalue);
  }

  /**
  * Get value of field E02PLTPRO as a String.
  */
  public String getE02PLTPRO()
  {
    return fieldE02PLTPRO.getString();
  }

  /**
  * Set field E02PLTPRD using a String value.
  */
  public void setE02PLTPRD(String newvalue)
  {
    fieldE02PLTPRD.setString(newvalue);
  }

  /**
  * Get value of field E02PLTPRD as a String.
  */
  public String getE02PLTPRD()
  {
    return fieldE02PLTPRD.getString();
  }

  /**
  * Set field E02PLTTYP using a String value.
  */
  public void setE02PLTTYP(String newvalue)
  {
    fieldE02PLTTYP.setString(newvalue);
  }

  /**
  * Get value of field E02PLTTYP as a String.
  */
  public String getE02PLTTYP()
  {
    return fieldE02PLTTYP.getString();
  }

  /**
  * Set field E02PLTTYR using a String value.
  */
  public void setE02PLTTYR(String newvalue)
  {
    fieldE02PLTTYR.setString(newvalue);
  }

  /**
  * Get value of field E02PLTTYR as a String.
  */
  public String getE02PLTTYR()
  {
    return fieldE02PLTTYR.getString();
  }

  /**
  * Set field E02DPACO1 using a String value.
  */
  public void setE02DPACO1(String newvalue)
  {
    fieldE02DPACO1.setString(newvalue);
  }

  /**
  * Get value of field E02DPACO1 as a String.
  */
  public String getE02DPACO1()
  {
    return fieldE02DPACO1.getString();
  }

  /**
  * Set field E02DPACO2 using a String value.
  */
  public void setE02DPACO2(String newvalue)
  {
    fieldE02DPACO2.setString(newvalue);
  }

  /**
  * Get value of field E02DPACO2 as a String.
  */
  public String getE02DPACO2()
  {
    return fieldE02DPACO2.getString();
  }

  /**
  * Set field E02OPECDE using a String value.
  */
  public void setE02OPECDE(String newvalue)
  {
    fieldE02OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E02OPECDE as a String.
  */
  public String getE02OPECDE()
  {
    return fieldE02OPECDE.getString();
  }

}
