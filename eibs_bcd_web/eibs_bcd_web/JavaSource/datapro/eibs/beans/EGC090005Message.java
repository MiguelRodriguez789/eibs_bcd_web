package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC090005 physical file definition.
* 
* File level identifier is 1100706173620.
* Record format level identifier is 3267F288F91C4.
*/

public class EGC090005Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "EGCUSR",
                                     "EGCXAA",
                                     "EGCXMM",
                                     "EGCATY",
                                     "EGCATD",
                                     "EGCOPN",
                                     "EGCOPM",
                                     "EGCOPU",
                                     "EGCCIN",
                                     "EGCCIM",
                                     "EGCCIU",
                                     "EGCSTN",
                                     "EGCSTM",
                                     "EGCSTU",
                                     "EGCXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "EGCUSR",
                                   "EGCXAA",
                                   "EGCXMM",
                                   "EGCATY",
                                   "EGCATD",
                                   "EGCOPN",
                                   "EGCOPM",
                                   "EGCOPU",
                                   "EGCCIN",
                                   "EGCCIM",
                                   "EGCCIU",
                                   "EGCSTN",
                                   "EGCSTM",
                                   "EGCSTU",
                                   "EGCXRT"
                                 };
  final static String fid = "1100706173620";
  final static String rid = "3267F288F91C4";
  final static String fmtname = "EGC090005";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldEGCUSR = null;
  private DecimalField fieldEGCXAA = null;
  private DecimalField fieldEGCXMM = null;
  private CharacterField fieldEGCATY = null;
  private CharacterField fieldEGCATD = null;
  private DecimalField fieldEGCOPN = null;
  private DecimalField fieldEGCOPM = null;
  private DecimalField fieldEGCOPU = null;
  private DecimalField fieldEGCCIN = null;
  private DecimalField fieldEGCCIM = null;
  private DecimalField fieldEGCCIU = null;
  private DecimalField fieldEGCSTN = null;
  private DecimalField fieldEGCSTM = null;
  private DecimalField fieldEGCSTU = null;
  private DecimalField fieldEGCXRT = null;

  /**
  * Constructor for EGC090005Message.
  */
  public EGC090005Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 222;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldEGCUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "EGCUSR");
    fields[10] = fieldEGCXAA =
    new DecimalField(message, HEADERSIZE + 52, 5, 0, "EGCXAA");
    fields[11] = fieldEGCXMM =
    new DecimalField(message, HEADERSIZE + 57, 3, 0, "EGCXMM");
    fields[12] = fieldEGCATY =
    new CharacterField(message, HEADERSIZE + 60, 4, "EGCATY");
    fields[13] = fieldEGCATD =
    new CharacterField(message, HEADERSIZE + 64, 30, "EGCATD");
    fields[14] = fieldEGCOPN =
    new DecimalField(message, HEADERSIZE + 94, 10, 0, "EGCOPN");
    fields[15] = fieldEGCOPM =
    new DecimalField(message, HEADERSIZE + 104, 20, 4, "EGCOPM");
    fields[16] = fieldEGCOPU =
    new DecimalField(message, HEADERSIZE + 124, 12, 2, "EGCOPU");
    fields[17] = fieldEGCCIN =
    new DecimalField(message, HEADERSIZE + 136, 10, 0, "EGCCIN");
    fields[18] = fieldEGCCIM =
    new DecimalField(message, HEADERSIZE + 146, 20, 4, "EGCCIM");
    fields[19] = fieldEGCCIU =
    new DecimalField(message, HEADERSIZE + 166, 12, 2, "EGCCIU");
    fields[20] = fieldEGCSTN =
    new DecimalField(message, HEADERSIZE + 178, 10, 0, "EGCSTN");
    fields[21] = fieldEGCSTM =
    new DecimalField(message, HEADERSIZE + 188, 20, 4, "EGCSTM");
    fields[22] = fieldEGCSTU =
    new DecimalField(message, HEADERSIZE + 208, 12, 2, "EGCSTU");
    fields[23] = fieldEGCXRT =
    new DecimalField(message, HEADERSIZE + 220, 2, 0, "EGCXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field EGCUSR using a String value.
  */
  public void setEGCUSR(String newvalue)
  {
    fieldEGCUSR.setString(newvalue);
  }

  /**
  * Get value of field EGCUSR as a String.
  */
  public String getEGCUSR()
  {
    return fieldEGCUSR.getString();
  }

  /**
  * Set field EGCXAA using a String value.
  */
  public void setEGCXAA(String newvalue)
  {
    fieldEGCXAA.setString(newvalue);
  }

  /**
  * Get value of field EGCXAA as a String.
  */
  public String getEGCXAA()
  {
    return fieldEGCXAA.getString();
  }

  /**
  * Set numeric field EGCXAA using a BigDecimal value.
  */
  public void setEGCXAA(BigDecimal newvalue)
  {
    fieldEGCXAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXAA()
  {
    return fieldEGCXAA.getBigDecimal();
  }

  /**
  * Set field EGCXMM using a String value.
  */
  public void setEGCXMM(String newvalue)
  {
    fieldEGCXMM.setString(newvalue);
  }

  /**
  * Get value of field EGCXMM as a String.
  */
  public String getEGCXMM()
  {
    return fieldEGCXMM.getString();
  }

  /**
  * Set numeric field EGCXMM using a BigDecimal value.
  */
  public void setEGCXMM(BigDecimal newvalue)
  {
    fieldEGCXMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXMM()
  {
    return fieldEGCXMM.getBigDecimal();
  }

  /**
  * Set field EGCATY using a String value.
  */
  public void setEGCATY(String newvalue)
  {
    fieldEGCATY.setString(newvalue);
  }

  /**
  * Get value of field EGCATY as a String.
  */
  public String getEGCATY()
  {
    return fieldEGCATY.getString();
  }

  /**
  * Set field EGCATD using a String value.
  */
  public void setEGCATD(String newvalue)
  {
    fieldEGCATD.setString(newvalue);
  }

  /**
  * Get value of field EGCATD as a String.
  */
  public String getEGCATD()
  {
    return fieldEGCATD.getString();
  }

  /**
  * Set field EGCOPN using a String value.
  */
  public void setEGCOPN(String newvalue)
  {
    fieldEGCOPN.setString(newvalue);
  }

  /**
  * Get value of field EGCOPN as a String.
  */
  public String getEGCOPN()
  {
    return fieldEGCOPN.getString();
  }

  /**
  * Set numeric field EGCOPN using a BigDecimal value.
  */
  public void setEGCOPN(BigDecimal newvalue)
  {
    fieldEGCOPN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCOPN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCOPN()
  {
    return fieldEGCOPN.getBigDecimal();
  }

  /**
  * Set field EGCOPM using a String value.
  */
  public void setEGCOPM(String newvalue)
  {
    fieldEGCOPM.setString(newvalue);
  }

  /**
  * Get value of field EGCOPM as a String.
  */
  public String getEGCOPM()
  {
    return fieldEGCOPM.getString();
  }

  /**
  * Set numeric field EGCOPM using a BigDecimal value.
  */
  public void setEGCOPM(BigDecimal newvalue)
  {
    fieldEGCOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCOPM()
  {
    return fieldEGCOPM.getBigDecimal();
  }

  /**
  * Set field EGCOPU using a String value.
  */
  public void setEGCOPU(String newvalue)
  {
    fieldEGCOPU.setString(newvalue);
  }

  /**
  * Get value of field EGCOPU as a String.
  */
  public String getEGCOPU()
  {
    return fieldEGCOPU.getString();
  }

  /**
  * Set numeric field EGCOPU using a BigDecimal value.
  */
  public void setEGCOPU(BigDecimal newvalue)
  {
    fieldEGCOPU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCOPU as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCOPU()
  {
    return fieldEGCOPU.getBigDecimal();
  }

  /**
  * Set field EGCCIN using a String value.
  */
  public void setEGCCIN(String newvalue)
  {
    fieldEGCCIN.setString(newvalue);
  }

  /**
  * Get value of field EGCCIN as a String.
  */
  public String getEGCCIN()
  {
    return fieldEGCCIN.getString();
  }

  /**
  * Set numeric field EGCCIN using a BigDecimal value.
  */
  public void setEGCCIN(BigDecimal newvalue)
  {
    fieldEGCCIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCCIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCCIN()
  {
    return fieldEGCCIN.getBigDecimal();
  }

  /**
  * Set field EGCCIM using a String value.
  */
  public void setEGCCIM(String newvalue)
  {
    fieldEGCCIM.setString(newvalue);
  }

  /**
  * Get value of field EGCCIM as a String.
  */
  public String getEGCCIM()
  {
    return fieldEGCCIM.getString();
  }

  /**
  * Set numeric field EGCCIM using a BigDecimal value.
  */
  public void setEGCCIM(BigDecimal newvalue)
  {
    fieldEGCCIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCCIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCCIM()
  {
    return fieldEGCCIM.getBigDecimal();
  }

  /**
  * Set field EGCCIU using a String value.
  */
  public void setEGCCIU(String newvalue)
  {
    fieldEGCCIU.setString(newvalue);
  }

  /**
  * Get value of field EGCCIU as a String.
  */
  public String getEGCCIU()
  {
    return fieldEGCCIU.getString();
  }

  /**
  * Set numeric field EGCCIU using a BigDecimal value.
  */
  public void setEGCCIU(BigDecimal newvalue)
  {
    fieldEGCCIU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCCIU as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCCIU()
  {
    return fieldEGCCIU.getBigDecimal();
  }

  /**
  * Set field EGCSTN using a String value.
  */
  public void setEGCSTN(String newvalue)
  {
    fieldEGCSTN.setString(newvalue);
  }

  /**
  * Get value of field EGCSTN as a String.
  */
  public String getEGCSTN()
  {
    return fieldEGCSTN.getString();
  }

  /**
  * Set numeric field EGCSTN using a BigDecimal value.
  */
  public void setEGCSTN(BigDecimal newvalue)
  {
    fieldEGCSTN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCSTN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCSTN()
  {
    return fieldEGCSTN.getBigDecimal();
  }

  /**
  * Set field EGCSTM using a String value.
  */
  public void setEGCSTM(String newvalue)
  {
    fieldEGCSTM.setString(newvalue);
  }

  /**
  * Get value of field EGCSTM as a String.
  */
  public String getEGCSTM()
  {
    return fieldEGCSTM.getString();
  }

  /**
  * Set numeric field EGCSTM using a BigDecimal value.
  */
  public void setEGCSTM(BigDecimal newvalue)
  {
    fieldEGCSTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCSTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCSTM()
  {
    return fieldEGCSTM.getBigDecimal();
  }

  /**
  * Set field EGCSTU using a String value.
  */
  public void setEGCSTU(String newvalue)
  {
    fieldEGCSTU.setString(newvalue);
  }

  /**
  * Get value of field EGCSTU as a String.
  */
  public String getEGCSTU()
  {
    return fieldEGCSTU.getString();
  }

  /**
  * Set numeric field EGCSTU using a BigDecimal value.
  */
  public void setEGCSTU(BigDecimal newvalue)
  {
    fieldEGCSTU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCSTU as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCSTU()
  {
    return fieldEGCSTU.getBigDecimal();
  }

  /**
  * Set field EGCXRT using a String value.
  */
  public void setEGCXRT(String newvalue)
  {
    fieldEGCXRT.setString(newvalue);
  }

  /**
  * Get value of field EGCXRT as a String.
  */
  public String getEGCXRT()
  {
    return fieldEGCXRT.getString();
  }

  /**
  * Set numeric field EGCXRT using a BigDecimal value.
  */
  public void setEGCXRT(BigDecimal newvalue)
  {
    fieldEGCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXRT()
  {
    return fieldEGCXRT.getBigDecimal();
  }

}
