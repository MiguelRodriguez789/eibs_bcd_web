package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EST050003 physical file definition.
* 
* File level identifier is 1100706173659.
* Record format level identifier is 2CE900E8C257B.
*/

public class EST050003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03CRTTTA",
                                     "E03CRTTPL",
                                     "E03CRTCEM",
                                     "E03CRTSEC",
                                     "E03CRTALT",
                                     "E03CRTCUF",
                                     "E03CRTRAL",
                                     "E03CRTSUC",
                                     "E03CRTREC",
                                     "E03CRTCTE",
                                     "E03CRTACT",
                                     "E03CRTSTT",
                                     "E03CRTSTP",
                                     "E03CRTGSE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03CRTTTA",
                                   "E03CRTTPL",
                                   "E03CRTCEM",
                                   "E03CRTSEC",
                                   "E03CRTALT",
                                   "E03CRTCUF",
                                   "E03CRTRAL",
                                   "E03CRTSUC",
                                   "E03CRTREC",
                                   "E03CRTCTE",
                                   "E03CRTACT",
                                   "E03CRTSTT",
                                   "E03CRTSTP",
                                   "E03CRTGSE"
                                 };
  final static String fid = "1100706173659";
  final static String rid = "2CE900E8C257B";
  final static String fmtname = "EST050003";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03CRTTTA = null;
  private CharacterField fieldE03CRTTPL = null;
  private CharacterField fieldE03CRTCEM = null;
  private DecimalField fieldE03CRTSEC = null;
  private CharacterField fieldE03CRTALT = null;
  private DecimalField fieldE03CRTCUF = null;
  private DecimalField fieldE03CRTRAL = null;
  private CharacterField fieldE03CRTSUC = null;
  private CharacterField fieldE03CRTREC = null;
  private CharacterField fieldE03CRTCTE = null;
  private CharacterField fieldE03CRTACT = null;
  private CharacterField fieldE03CRTSTT = null;
  private CharacterField fieldE03CRTSTP = null;
  private CharacterField fieldE03CRTGSE = null;

  /**
  * Constructor for EST050003Message.
  */
  public EST050003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 109;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03CRTTTA =
    new CharacterField(message, HEADERSIZE + 42, 4, "E03CRTTTA");
    fields[10] = fieldE03CRTTPL =
    new CharacterField(message, HEADERSIZE + 46, 4, "E03CRTTPL");
    fields[11] = fieldE03CRTCEM =
    new CharacterField(message, HEADERSIZE + 50, 4, "E03CRTCEM");
    fields[12] = fieldE03CRTSEC =
    new DecimalField(message, HEADERSIZE + 54, 4, 0, "E03CRTSEC");
    fields[13] = fieldE03CRTALT =
    new CharacterField(message, HEADERSIZE + 58, 1, "E03CRTALT");
    fields[14] = fieldE03CRTCUF =
    new DecimalField(message, HEADERSIZE + 59, 4, 0, "E03CRTCUF");
    fields[15] = fieldE03CRTRAL =
    new DecimalField(message, HEADERSIZE + 63, 4, 0, "E03CRTRAL");
    fields[16] = fieldE03CRTSUC =
    new CharacterField(message, HEADERSIZE + 67, 1, "E03CRTSUC");
    fields[17] = fieldE03CRTREC =
    new CharacterField(message, HEADERSIZE + 68, 1, "E03CRTREC");
    fields[18] = fieldE03CRTCTE =
    new CharacterField(message, HEADERSIZE + 69, 1, "E03CRTCTE");
    fields[19] = fieldE03CRTACT =
    new CharacterField(message, HEADERSIZE + 70, 1, "E03CRTACT");
    fields[20] = fieldE03CRTSTT =
    new CharacterField(message, HEADERSIZE + 71, 4, "E03CRTSTT");
    fields[21] = fieldE03CRTSTP =
    new CharacterField(message, HEADERSIZE + 75, 4, "E03CRTSTP");
    fields[22] = fieldE03CRTGSE =
    new CharacterField(message, HEADERSIZE + 79, 30, "E03CRTGSE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03CRTTTA using a String value.
  */
  public void setE03CRTTTA(String newvalue)
  {
    fieldE03CRTTTA.setString(newvalue);
  }

  /**
  * Get value of field E03CRTTTA as a String.
  */
  public String getE03CRTTTA()
  {
    return fieldE03CRTTTA.getString();
  }

  /**
  * Set field E03CRTTPL using a String value.
  */
  public void setE03CRTTPL(String newvalue)
  {
    fieldE03CRTTPL.setString(newvalue);
  }

  /**
  * Get value of field E03CRTTPL as a String.
  */
  public String getE03CRTTPL()
  {
    return fieldE03CRTTPL.getString();
  }

  /**
  * Set field E03CRTCEM using a String value.
  */
  public void setE03CRTCEM(String newvalue)
  {
    fieldE03CRTCEM.setString(newvalue);
  }

  /**
  * Get value of field E03CRTCEM as a String.
  */
  public String getE03CRTCEM()
  {
    return fieldE03CRTCEM.getString();
  }

  /**
  * Set field E03CRTSEC using a String value.
  */
  public void setE03CRTSEC(String newvalue)
  {
    fieldE03CRTSEC.setString(newvalue);
  }

  /**
  * Get value of field E03CRTSEC as a String.
  */
  public String getE03CRTSEC()
  {
    return fieldE03CRTSEC.getString();
  }

  /**
  * Set numeric field E03CRTSEC using a BigDecimal value.
  */
  public void setE03CRTSEC(BigDecimal newvalue)
  {
    fieldE03CRTSEC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CRTSEC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CRTSEC()
  {
    return fieldE03CRTSEC.getBigDecimal();
  }

  /**
  * Set field E03CRTALT using a String value.
  */
  public void setE03CRTALT(String newvalue)
  {
    fieldE03CRTALT.setString(newvalue);
  }

  /**
  * Get value of field E03CRTALT as a String.
  */
  public String getE03CRTALT()
  {
    return fieldE03CRTALT.getString();
  }

  /**
  * Set field E03CRTCUF using a String value.
  */
  public void setE03CRTCUF(String newvalue)
  {
    fieldE03CRTCUF.setString(newvalue);
  }

  /**
  * Get value of field E03CRTCUF as a String.
  */
  public String getE03CRTCUF()
  {
    return fieldE03CRTCUF.getString();
  }

  /**
  * Set numeric field E03CRTCUF using a BigDecimal value.
  */
  public void setE03CRTCUF(BigDecimal newvalue)
  {
    fieldE03CRTCUF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CRTCUF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CRTCUF()
  {
    return fieldE03CRTCUF.getBigDecimal();
  }

  /**
  * Set field E03CRTRAL using a String value.
  */
  public void setE03CRTRAL(String newvalue)
  {
    fieldE03CRTRAL.setString(newvalue);
  }

  /**
  * Get value of field E03CRTRAL as a String.
  */
  public String getE03CRTRAL()
  {
    return fieldE03CRTRAL.getString();
  }

  /**
  * Set numeric field E03CRTRAL using a BigDecimal value.
  */
  public void setE03CRTRAL(BigDecimal newvalue)
  {
    fieldE03CRTRAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CRTRAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CRTRAL()
  {
    return fieldE03CRTRAL.getBigDecimal();
  }

  /**
  * Set field E03CRTSUC using a String value.
  */
  public void setE03CRTSUC(String newvalue)
  {
    fieldE03CRTSUC.setString(newvalue);
  }

  /**
  * Get value of field E03CRTSUC as a String.
  */
  public String getE03CRTSUC()
  {
    return fieldE03CRTSUC.getString();
  }

  /**
  * Set field E03CRTREC using a String value.
  */
  public void setE03CRTREC(String newvalue)
  {
    fieldE03CRTREC.setString(newvalue);
  }

  /**
  * Get value of field E03CRTREC as a String.
  */
  public String getE03CRTREC()
  {
    return fieldE03CRTREC.getString();
  }

  /**
  * Set field E03CRTCTE using a String value.
  */
  public void setE03CRTCTE(String newvalue)
  {
    fieldE03CRTCTE.setString(newvalue);
  }

  /**
  * Get value of field E03CRTCTE as a String.
  */
  public String getE03CRTCTE()
  {
    return fieldE03CRTCTE.getString();
  }

  /**
  * Set field E03CRTACT using a String value.
  */
  public void setE03CRTACT(String newvalue)
  {
    fieldE03CRTACT.setString(newvalue);
  }

  /**
  * Get value of field E03CRTACT as a String.
  */
  public String getE03CRTACT()
  {
    return fieldE03CRTACT.getString();
  }

  /**
  * Set field E03CRTSTT using a String value.
  */
  public void setE03CRTSTT(String newvalue)
  {
    fieldE03CRTSTT.setString(newvalue);
  }

  /**
  * Get value of field E03CRTSTT as a String.
  */
  public String getE03CRTSTT()
  {
    return fieldE03CRTSTT.getString();
  }

  /**
  * Set field E03CRTSTP using a String value.
  */
  public void setE03CRTSTP(String newvalue)
  {
    fieldE03CRTSTP.setString(newvalue);
  }

  /**
  * Get value of field E03CRTSTP as a String.
  */
  public String getE03CRTSTP()
  {
    return fieldE03CRTSTP.getString();
  }

  /**
  * Set field E03CRTGSE using a String value.
  */
  public void setE03CRTGSE(String newvalue)
  {
    fieldE03CRTGSE.setString(newvalue);
  }

  /**
  * Get value of field E03CRTGSE as a String.
  */
  public String getE03CRTGSE()
  {
    return fieldE03CRTGSE.getString();
  }

}
