package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERC000002 physical file definition.
* 
* File level identifier is 1161013153551.
* Record format level identifier is 4A67568522A87.
*/

public class ERC000002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02RCSRBK",
                                     "E02RCSCTA",
                                     "E02RCSSTN",
                                     "E02RCSSDM",
                                     "E02RCSSDD",
                                     "E02RCSSDY",
                                     "E02RCSBBL",
                                     "E02RCSTRG"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02RCSRBK",
                                   "E02RCSCTA",
                                   "E02RCSSTN",
                                   "E02RCSSDM",
                                   "E02RCSSDD",
                                   "E02RCSSDY",
                                   "E02RCSBBL",
                                   "E02RCSTRG"
                                 };
  final static String fid = "1161013153551";
  final static String rid = "4A67568522A87";
  final static String fmtname = "ERC000002";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02RCSRBK = null;
  private CharacterField fieldE02RCSCTA = null;
  private DecimalField fieldE02RCSSTN = null;
  private DecimalField fieldE02RCSSDM = null;
  private DecimalField fieldE02RCSSDD = null;
  private DecimalField fieldE02RCSSDY = null;
  private DecimalField fieldE02RCSBBL = null;
  private DecimalField fieldE02RCSTRG = null;

  /**
  * Constructor for ERC000002Message.
  */
  public ERC000002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 115;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02RCSRBK =
    new CharacterField(message, HEADERSIZE + 42, 4, "E02RCSRBK");
    fields[10] = fieldE02RCSCTA =
    new CharacterField(message, HEADERSIZE + 46, 20, "E02RCSCTA");
    fields[11] = fieldE02RCSSTN =
    new DecimalField(message, HEADERSIZE + 66, 13, 0, "E02RCSSTN");
    fields[12] = fieldE02RCSSDM =
    new DecimalField(message, HEADERSIZE + 79, 3, 0, "E02RCSSDM");
    fields[13] = fieldE02RCSSDD =
    new DecimalField(message, HEADERSIZE + 82, 3, 0, "E02RCSSDD");
    fields[14] = fieldE02RCSSDY =
    new DecimalField(message, HEADERSIZE + 85, 5, 0, "E02RCSSDY");
    fields[15] = fieldE02RCSBBL =
    new DecimalField(message, HEADERSIZE + 90, 17, 2, "E02RCSBBL");
    fields[16] = fieldE02RCSTRG =
    new DecimalField(message, HEADERSIZE + 107, 8, 0, "E02RCSTRG");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02RCSRBK using a String value.
  */
  public void setE02RCSRBK(String newvalue)
  {
    fieldE02RCSRBK.setString(newvalue);
  }

  /**
  * Get value of field E02RCSRBK as a String.
  */
  public String getE02RCSRBK()
  {
    return fieldE02RCSRBK.getString();
  }

  /**
  * Set field E02RCSCTA using a String value.
  */
  public void setE02RCSCTA(String newvalue)
  {
    fieldE02RCSCTA.setString(newvalue);
  }

  /**
  * Get value of field E02RCSCTA as a String.
  */
  public String getE02RCSCTA()
  {
    return fieldE02RCSCTA.getString();
  }

  /**
  * Set field E02RCSSTN using a String value.
  */
  public void setE02RCSSTN(String newvalue)
  {
    fieldE02RCSSTN.setString(newvalue);
  }

  /**
  * Get value of field E02RCSSTN as a String.
  */
  public String getE02RCSSTN()
  {
    return fieldE02RCSSTN.getString();
  }

  /**
  * Set numeric field E02RCSSTN using a BigDecimal value.
  */
  public void setE02RCSSTN(BigDecimal newvalue)
  {
    fieldE02RCSSTN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSSTN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSSTN()
  {
    return fieldE02RCSSTN.getBigDecimal();
  }

  /**
  * Set field E02RCSSDM using a String value.
  */
  public void setE02RCSSDM(String newvalue)
  {
    fieldE02RCSSDM.setString(newvalue);
  }

  /**
  * Get value of field E02RCSSDM as a String.
  */
  public String getE02RCSSDM()
  {
    return fieldE02RCSSDM.getString();
  }

  /**
  * Set numeric field E02RCSSDM using a BigDecimal value.
  */
  public void setE02RCSSDM(BigDecimal newvalue)
  {
    fieldE02RCSSDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSSDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSSDM()
  {
    return fieldE02RCSSDM.getBigDecimal();
  }

  /**
  * Set field E02RCSSDD using a String value.
  */
  public void setE02RCSSDD(String newvalue)
  {
    fieldE02RCSSDD.setString(newvalue);
  }

  /**
  * Get value of field E02RCSSDD as a String.
  */
  public String getE02RCSSDD()
  {
    return fieldE02RCSSDD.getString();
  }

  /**
  * Set numeric field E02RCSSDD using a BigDecimal value.
  */
  public void setE02RCSSDD(BigDecimal newvalue)
  {
    fieldE02RCSSDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSSDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSSDD()
  {
    return fieldE02RCSSDD.getBigDecimal();
  }

  /**
  * Set field E02RCSSDY using a String value.
  */
  public void setE02RCSSDY(String newvalue)
  {
    fieldE02RCSSDY.setString(newvalue);
  }

  /**
  * Get value of field E02RCSSDY as a String.
  */
  public String getE02RCSSDY()
  {
    return fieldE02RCSSDY.getString();
  }

  /**
  * Set numeric field E02RCSSDY using a BigDecimal value.
  */
  public void setE02RCSSDY(BigDecimal newvalue)
  {
    fieldE02RCSSDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSSDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSSDY()
  {
    return fieldE02RCSSDY.getBigDecimal();
  }

  /**
  * Set field E02RCSBBL using a String value.
  */
  public void setE02RCSBBL(String newvalue)
  {
    fieldE02RCSBBL.setString(newvalue);
  }

  /**
  * Get value of field E02RCSBBL as a String.
  */
  public String getE02RCSBBL()
  {
    return fieldE02RCSBBL.getString();
  }

  /**
  * Set numeric field E02RCSBBL using a BigDecimal value.
  */
  public void setE02RCSBBL(BigDecimal newvalue)
  {
    fieldE02RCSBBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSBBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSBBL()
  {
    return fieldE02RCSBBL.getBigDecimal();
  }

  /**
  * Set field E02RCSTRG using a String value.
  */
  public void setE02RCSTRG(String newvalue)
  {
    fieldE02RCSTRG.setString(newvalue);
  }

  /**
  * Get value of field E02RCSTRG as a String.
  */
  public String getE02RCSTRG()
  {
    return fieldE02RCSTRG.getString();
  }

  /**
  * Set numeric field E02RCSTRG using a BigDecimal value.
  */
  public void setE02RCSTRG(BigDecimal newvalue)
  {
    fieldE02RCSTRG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCSTRG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCSTRG()
  {
    return fieldE02RCSTRG.getBigDecimal();
  }

}
