package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD093501 physical file definition.
* 
* File level identifier is 1161123142637.
* Record format level identifier is 2A928E46C513D.
*/

public class EDD093501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNDOFC",
                                     "E01CNDBRN",
                                     "E01CNDRDY",
                                     "E01CNDRDM",
                                     "E01CNDRDD",
                                     "E01CNDLMM",
                                     "E01CNDLMD",
                                     "E01CNDLMY",
                                     "E01CNDLMT",
                                     "E01CNDLMU",
                                     "D01CNDOFC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNDOFC",
                                   "E01CNDBRN",
                                   "E01CNDRDY",
                                   "E01CNDRDM",
                                   "E01CNDRDD",
                                   "E01CNDLMM",
                                   "E01CNDLMD",
                                   "E01CNDLMY",
                                   "E01CNDLMT",
                                   "E01CNDLMU",
                                   "D01CNDOFC"
                                 };
  final static String fid = "1161123142637";
  final static String rid = "2A928E46C513D";
  final static String fmtname = "EDD093501";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNDOFC = null;
  private DecimalField fieldE01CNDBRN = null;
  private DecimalField fieldE01CNDRDY = null;
  private DecimalField fieldE01CNDRDM = null;
  private DecimalField fieldE01CNDRDD = null;
  private DecimalField fieldE01CNDLMM = null;
  private DecimalField fieldE01CNDLMD = null;
  private DecimalField fieldE01CNDLMY = null;
  private CharacterField fieldE01CNDLMT = null;
  private CharacterField fieldE01CNDLMU = null;
  private CharacterField fieldD01CNDOFC = null;

  /**
  * Constructor for EDD093501Message.
  */
  public EDD093501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 154;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNDOFC =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01CNDOFC");
    fields[10] = fieldE01CNDBRN =
    new DecimalField(message, HEADERSIZE + 46, 5, 0, "E01CNDBRN");
    fields[11] = fieldE01CNDRDY =
    new DecimalField(message, HEADERSIZE + 51, 5, 0, "E01CNDRDY");
    fields[12] = fieldE01CNDRDM =
    new DecimalField(message, HEADERSIZE + 56, 3, 0, "E01CNDRDM");
    fields[13] = fieldE01CNDRDD =
    new DecimalField(message, HEADERSIZE + 59, 3, 0, "E01CNDRDD");
    fields[14] = fieldE01CNDLMM =
    new DecimalField(message, HEADERSIZE + 62, 3, 0, "E01CNDLMM");
    fields[15] = fieldE01CNDLMD =
    new DecimalField(message, HEADERSIZE + 65, 3, 0, "E01CNDLMD");
    fields[16] = fieldE01CNDLMY =
    new DecimalField(message, HEADERSIZE + 68, 5, 0, "E01CNDLMY");
    fields[17] = fieldE01CNDLMT =
    new CharacterField(message, HEADERSIZE + 73, 26, "E01CNDLMT");
    fields[18] = fieldE01CNDLMU =
    new CharacterField(message, HEADERSIZE + 99, 10, "E01CNDLMU");
    fields[19] = fieldD01CNDOFC =
    new CharacterField(message, HEADERSIZE + 109, 45, "D01CNDOFC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNDOFC using a String value.
  */
  public void setE01CNDOFC(String newvalue)
  {
    fieldE01CNDOFC.setString(newvalue);
  }

  /**
  * Get value of field E01CNDOFC as a String.
  */
  public String getE01CNDOFC()
  {
    return fieldE01CNDOFC.getString();
  }

  /**
  * Set field E01CNDBRN using a String value.
  */
  public void setE01CNDBRN(String newvalue)
  {
    fieldE01CNDBRN.setString(newvalue);
  }

  /**
  * Get value of field E01CNDBRN as a String.
  */
  public String getE01CNDBRN()
  {
    return fieldE01CNDBRN.getString();
  }

  /**
  * Set numeric field E01CNDBRN using a BigDecimal value.
  */
  public void setE01CNDBRN(BigDecimal newvalue)
  {
    fieldE01CNDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDBRN()
  {
    return fieldE01CNDBRN.getBigDecimal();
  }

  /**
  * Set field E01CNDRDY using a String value.
  */
  public void setE01CNDRDY(String newvalue)
  {
    fieldE01CNDRDY.setString(newvalue);
  }

  /**
  * Get value of field E01CNDRDY as a String.
  */
  public String getE01CNDRDY()
  {
    return fieldE01CNDRDY.getString();
  }

  /**
  * Set numeric field E01CNDRDY using a BigDecimal value.
  */
  public void setE01CNDRDY(BigDecimal newvalue)
  {
    fieldE01CNDRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDRDY()
  {
    return fieldE01CNDRDY.getBigDecimal();
  }

  /**
  * Set field E01CNDRDM using a String value.
  */
  public void setE01CNDRDM(String newvalue)
  {
    fieldE01CNDRDM.setString(newvalue);
  }

  /**
  * Get value of field E01CNDRDM as a String.
  */
  public String getE01CNDRDM()
  {
    return fieldE01CNDRDM.getString();
  }

  /**
  * Set numeric field E01CNDRDM using a BigDecimal value.
  */
  public void setE01CNDRDM(BigDecimal newvalue)
  {
    fieldE01CNDRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDRDM()
  {
    return fieldE01CNDRDM.getBigDecimal();
  }

  /**
  * Set field E01CNDRDD using a String value.
  */
  public void setE01CNDRDD(String newvalue)
  {
    fieldE01CNDRDD.setString(newvalue);
  }

  /**
  * Get value of field E01CNDRDD as a String.
  */
  public String getE01CNDRDD()
  {
    return fieldE01CNDRDD.getString();
  }

  /**
  * Set numeric field E01CNDRDD using a BigDecimal value.
  */
  public void setE01CNDRDD(BigDecimal newvalue)
  {
    fieldE01CNDRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDRDD()
  {
    return fieldE01CNDRDD.getBigDecimal();
  }

  /**
  * Set field E01CNDLMM using a String value.
  */
  public void setE01CNDLMM(String newvalue)
  {
    fieldE01CNDLMM.setString(newvalue);
  }

  /**
  * Get value of field E01CNDLMM as a String.
  */
  public String getE01CNDLMM()
  {
    return fieldE01CNDLMM.getString();
  }

  /**
  * Set numeric field E01CNDLMM using a BigDecimal value.
  */
  public void setE01CNDLMM(BigDecimal newvalue)
  {
    fieldE01CNDLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDLMM()
  {
    return fieldE01CNDLMM.getBigDecimal();
  }

  /**
  * Set field E01CNDLMD using a String value.
  */
  public void setE01CNDLMD(String newvalue)
  {
    fieldE01CNDLMD.setString(newvalue);
  }

  /**
  * Get value of field E01CNDLMD as a String.
  */
  public String getE01CNDLMD()
  {
    return fieldE01CNDLMD.getString();
  }

  /**
  * Set numeric field E01CNDLMD using a BigDecimal value.
  */
  public void setE01CNDLMD(BigDecimal newvalue)
  {
    fieldE01CNDLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDLMD()
  {
    return fieldE01CNDLMD.getBigDecimal();
  }

  /**
  * Set field E01CNDLMY using a String value.
  */
  public void setE01CNDLMY(String newvalue)
  {
    fieldE01CNDLMY.setString(newvalue);
  }

  /**
  * Get value of field E01CNDLMY as a String.
  */
  public String getE01CNDLMY()
  {
    return fieldE01CNDLMY.getString();
  }

  /**
  * Set numeric field E01CNDLMY using a BigDecimal value.
  */
  public void setE01CNDLMY(BigDecimal newvalue)
  {
    fieldE01CNDLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNDLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNDLMY()
  {
    return fieldE01CNDLMY.getBigDecimal();
  }

  /**
  * Set field E01CNDLMT using a String value.
  */
  public void setE01CNDLMT(String newvalue)
  {
    fieldE01CNDLMT.setString(newvalue);
  }

  /**
  * Get value of field E01CNDLMT as a String.
  */
  public String getE01CNDLMT()
  {
    return fieldE01CNDLMT.getString();
  }

  /**
  * Set field E01CNDLMU using a String value.
  */
  public void setE01CNDLMU(String newvalue)
  {
    fieldE01CNDLMU.setString(newvalue);
  }

  /**
  * Get value of field E01CNDLMU as a String.
  */
  public String getE01CNDLMU()
  {
    return fieldE01CNDLMU.getString();
  }

  /**
  * Set field D01CNDOFC using a String value.
  */
  public void setD01CNDOFC(String newvalue)
  {
    fieldD01CNDOFC.setString(newvalue);
  }

  /**
  * Get value of field D01CNDOFC as a String.
  */
  public String getD01CNDOFC()
  {
    return fieldD01CNDOFC.getString();
  }

}
