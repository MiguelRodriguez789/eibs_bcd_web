package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD020303 physical file definition.
* 
* File level identifier is 1150113185745.
* Record format level identifier is 3D5EBDDE330C4.
*/

public class ESD020303Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03DDHBNK",
                                     "E03DDHCHN",
                                     "E03DDHDSC",
                                     "E03DDHCDE",
                                     "E03DDHPRV",
                                     "E03DDHNTE",
                                     "E03DDHNPE",
                                     "E03DDHTPE",
                                     "E03DDHCOA",
                                     "E03DDHCOP",
                                     "E03DDHPDE",
                                     "E03DDHSTS",
                                     "E03DDHOMM",
                                     "E03DDHODD",
                                     "E03DDHOYY",
                                     "E03DDHSTD",
                                     "E03DDHCDD",
                                     "E03DDHPRD",
                                     "E03NUMREC",
                                     "E03INDOPE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03DDHBNK",
                                   "E03DDHCHN",
                                   "E03DDHDSC",
                                   "E03DDHCDE",
                                   "E03DDHPRV",
                                   "E03DDHNTE",
                                   "E03DDHNPE",
                                   "E03DDHTPE",
                                   "E03DDHCOA",
                                   "E03DDHCOP",
                                   "E03DDHPDE",
                                   "E03DDHSTS",
                                   "E03DDHOMM",
                                   "E03DDHODD",
                                   "E03DDHOYY",
                                   "E03DDHSTD",
                                   "E03DDHCDD",
                                   "E03DDHPRD",
                                   "E03NUMREC",
                                   "E03INDOPE"
                                 };
  final static String fid = "1150113185745";
  final static String rid = "3D5EBDDE330C4";
  final static String fmtname = "ESD020303";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03DDHBNK = null;
  private CharacterField fieldE03DDHCHN = null;
  private CharacterField fieldE03DDHDSC = null;
  private CharacterField fieldE03DDHCDE = null;
  private CharacterField fieldE03DDHPRV = null;
  private DecimalField fieldE03DDHNTE = null;
  private DecimalField fieldE03DDHNPE = null;
  private CharacterField fieldE03DDHTPE = null;
  private DecimalField fieldE03DDHCOA = null;
  private DecimalField fieldE03DDHCOP = null;
  private DecimalField fieldE03DDHPDE = null;
  private CharacterField fieldE03DDHSTS = null;
  private DecimalField fieldE03DDHOMM = null;
  private DecimalField fieldE03DDHODD = null;
  private DecimalField fieldE03DDHOYY = null;
  private CharacterField fieldE03DDHSTD = null;
  private CharacterField fieldE03DDHCDD = null;
  private CharacterField fieldE03DDHPRD = null;
  private DecimalField fieldE03NUMREC = null;
  private CharacterField fieldE03INDOPE = null;

  /**
  * Constructor for ESD020303Message.
  */
  public ESD020303Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 322;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03DDHBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03DDHBNK");
    fields[10] = fieldE03DDHCHN =
    new CharacterField(message, HEADERSIZE + 44, 4, "E03DDHCHN");
    fields[11] = fieldE03DDHDSC =
    new CharacterField(message, HEADERSIZE + 48, 60, "E03DDHDSC");
    fields[12] = fieldE03DDHCDE =
    new CharacterField(message, HEADERSIZE + 108, 4, "E03DDHCDE");
    fields[13] = fieldE03DDHPRV =
    new CharacterField(message, HEADERSIZE + 112, 4, "E03DDHPRV");
    fields[14] = fieldE03DDHNTE =
    new DecimalField(message, HEADERSIZE + 116, 6, 0, "E03DDHNTE");
    fields[15] = fieldE03DDHNPE =
    new DecimalField(message, HEADERSIZE + 122, 6, 0, "E03DDHNPE");
    fields[16] = fieldE03DDHTPE =
    new CharacterField(message, HEADERSIZE + 128, 1, "E03DDHTPE");
    fields[17] = fieldE03DDHCOA =
    new DecimalField(message, HEADERSIZE + 129, 15, 2, "E03DDHCOA");
    fields[18] = fieldE03DDHCOP =
    new DecimalField(message, HEADERSIZE + 144, 11, 6, "E03DDHCOP");
    fields[19] = fieldE03DDHPDE =
    new DecimalField(message, HEADERSIZE + 155, 11, 6, "E03DDHPDE");
    fields[20] = fieldE03DDHSTS =
    new CharacterField(message, HEADERSIZE + 166, 1, "E03DDHSTS");
    fields[21] = fieldE03DDHOMM =
    new DecimalField(message, HEADERSIZE + 167, 3, 0, "E03DDHOMM");
    fields[22] = fieldE03DDHODD =
    new DecimalField(message, HEADERSIZE + 170, 3, 0, "E03DDHODD");
    fields[23] = fieldE03DDHOYY =
    new DecimalField(message, HEADERSIZE + 173, 5, 0, "E03DDHOYY");
    fields[24] = fieldE03DDHSTD =
    new CharacterField(message, HEADERSIZE + 178, 15, "E03DDHSTD");
    fields[25] = fieldE03DDHCDD =
    new CharacterField(message, HEADERSIZE + 193, 60, "E03DDHCDD");
    fields[26] = fieldE03DDHPRD =
    new CharacterField(message, HEADERSIZE + 253, 60, "E03DDHPRD");
    fields[27] = fieldE03NUMREC =
    new DecimalField(message, HEADERSIZE + 313, 8, 0, "E03NUMREC");
    fields[28] = fieldE03INDOPE =
    new CharacterField(message, HEADERSIZE + 321, 1, "E03INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03DDHBNK using a String value.
  */
  public void setE03DDHBNK(String newvalue)
  {
    fieldE03DDHBNK.setString(newvalue);
  }

  /**
  * Get value of field E03DDHBNK as a String.
  */
  public String getE03DDHBNK()
  {
    return fieldE03DDHBNK.getString();
  }

  /**
  * Set field E03DDHCHN using a String value.
  */
  public void setE03DDHCHN(String newvalue)
  {
    fieldE03DDHCHN.setString(newvalue);
  }

  /**
  * Get value of field E03DDHCHN as a String.
  */
  public String getE03DDHCHN()
  {
    return fieldE03DDHCHN.getString();
  }

  /**
  * Set field E03DDHDSC using a String value.
  */
  public void setE03DDHDSC(String newvalue)
  {
    fieldE03DDHDSC.setString(newvalue);
  }

  /**
  * Get value of field E03DDHDSC as a String.
  */
  public String getE03DDHDSC()
  {
    return fieldE03DDHDSC.getString();
  }

  /**
  * Set field E03DDHCDE using a String value.
  */
  public void setE03DDHCDE(String newvalue)
  {
    fieldE03DDHCDE.setString(newvalue);
  }

  /**
  * Get value of field E03DDHCDE as a String.
  */
  public String getE03DDHCDE()
  {
    return fieldE03DDHCDE.getString();
  }

  /**
  * Set field E03DDHPRV using a String value.
  */
  public void setE03DDHPRV(String newvalue)
  {
    fieldE03DDHPRV.setString(newvalue);
  }

  /**
  * Get value of field E03DDHPRV as a String.
  */
  public String getE03DDHPRV()
  {
    return fieldE03DDHPRV.getString();
  }

  /**
  * Set field E03DDHNTE using a String value.
  */
  public void setE03DDHNTE(String newvalue)
  {
    fieldE03DDHNTE.setString(newvalue);
  }

  /**
  * Get value of field E03DDHNTE as a String.
  */
  public String getE03DDHNTE()
  {
    return fieldE03DDHNTE.getString();
  }

  /**
  * Set numeric field E03DDHNTE using a BigDecimal value.
  */
  public void setE03DDHNTE(BigDecimal newvalue)
  {
    fieldE03DDHNTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHNTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHNTE()
  {
    return fieldE03DDHNTE.getBigDecimal();
  }

  /**
  * Set field E03DDHNPE using a String value.
  */
  public void setE03DDHNPE(String newvalue)
  {
    fieldE03DDHNPE.setString(newvalue);
  }

  /**
  * Get value of field E03DDHNPE as a String.
  */
  public String getE03DDHNPE()
  {
    return fieldE03DDHNPE.getString();
  }

  /**
  * Set numeric field E03DDHNPE using a BigDecimal value.
  */
  public void setE03DDHNPE(BigDecimal newvalue)
  {
    fieldE03DDHNPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHNPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHNPE()
  {
    return fieldE03DDHNPE.getBigDecimal();
  }

  /**
  * Set field E03DDHTPE using a String value.
  */
  public void setE03DDHTPE(String newvalue)
  {
    fieldE03DDHTPE.setString(newvalue);
  }

  /**
  * Get value of field E03DDHTPE as a String.
  */
  public String getE03DDHTPE()
  {
    return fieldE03DDHTPE.getString();
  }

  /**
  * Set field E03DDHCOA using a String value.
  */
  public void setE03DDHCOA(String newvalue)
  {
    fieldE03DDHCOA.setString(newvalue);
  }

  /**
  * Get value of field E03DDHCOA as a String.
  */
  public String getE03DDHCOA()
  {
    return fieldE03DDHCOA.getString();
  }

  /**
  * Set numeric field E03DDHCOA using a BigDecimal value.
  */
  public void setE03DDHCOA(BigDecimal newvalue)
  {
    fieldE03DDHCOA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHCOA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHCOA()
  {
    return fieldE03DDHCOA.getBigDecimal();
  }

  /**
  * Set field E03DDHCOP using a String value.
  */
  public void setE03DDHCOP(String newvalue)
  {
    fieldE03DDHCOP.setString(newvalue);
  }

  /**
  * Get value of field E03DDHCOP as a String.
  */
  public String getE03DDHCOP()
  {
    return fieldE03DDHCOP.getString();
  }

  /**
  * Set numeric field E03DDHCOP using a BigDecimal value.
  */
  public void setE03DDHCOP(BigDecimal newvalue)
  {
    fieldE03DDHCOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHCOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHCOP()
  {
    return fieldE03DDHCOP.getBigDecimal();
  }

  /**
  * Set field E03DDHPDE using a String value.
  */
  public void setE03DDHPDE(String newvalue)
  {
    fieldE03DDHPDE.setString(newvalue);
  }

  /**
  * Get value of field E03DDHPDE as a String.
  */
  public String getE03DDHPDE()
  {
    return fieldE03DDHPDE.getString();
  }

  /**
  * Set numeric field E03DDHPDE using a BigDecimal value.
  */
  public void setE03DDHPDE(BigDecimal newvalue)
  {
    fieldE03DDHPDE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHPDE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHPDE()
  {
    return fieldE03DDHPDE.getBigDecimal();
  }

  /**
  * Set field E03DDHSTS using a String value.
  */
  public void setE03DDHSTS(String newvalue)
  {
    fieldE03DDHSTS.setString(newvalue);
  }

  /**
  * Get value of field E03DDHSTS as a String.
  */
  public String getE03DDHSTS()
  {
    return fieldE03DDHSTS.getString();
  }

  /**
  * Set field E03DDHOMM using a String value.
  */
  public void setE03DDHOMM(String newvalue)
  {
    fieldE03DDHOMM.setString(newvalue);
  }

  /**
  * Get value of field E03DDHOMM as a String.
  */
  public String getE03DDHOMM()
  {
    return fieldE03DDHOMM.getString();
  }

  /**
  * Set numeric field E03DDHOMM using a BigDecimal value.
  */
  public void setE03DDHOMM(BigDecimal newvalue)
  {
    fieldE03DDHOMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHOMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHOMM()
  {
    return fieldE03DDHOMM.getBigDecimal();
  }

  /**
  * Set field E03DDHODD using a String value.
  */
  public void setE03DDHODD(String newvalue)
  {
    fieldE03DDHODD.setString(newvalue);
  }

  /**
  * Get value of field E03DDHODD as a String.
  */
  public String getE03DDHODD()
  {
    return fieldE03DDHODD.getString();
  }

  /**
  * Set numeric field E03DDHODD using a BigDecimal value.
  */
  public void setE03DDHODD(BigDecimal newvalue)
  {
    fieldE03DDHODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHODD()
  {
    return fieldE03DDHODD.getBigDecimal();
  }

  /**
  * Set field E03DDHOYY using a String value.
  */
  public void setE03DDHOYY(String newvalue)
  {
    fieldE03DDHOYY.setString(newvalue);
  }

  /**
  * Get value of field E03DDHOYY as a String.
  */
  public String getE03DDHOYY()
  {
    return fieldE03DDHOYY.getString();
  }

  /**
  * Set numeric field E03DDHOYY using a BigDecimal value.
  */
  public void setE03DDHOYY(BigDecimal newvalue)
  {
    fieldE03DDHOYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DDHOYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DDHOYY()
  {
    return fieldE03DDHOYY.getBigDecimal();
  }

  /**
  * Set field E03DDHSTD using a String value.
  */
  public void setE03DDHSTD(String newvalue)
  {
    fieldE03DDHSTD.setString(newvalue);
  }

  /**
  * Get value of field E03DDHSTD as a String.
  */
  public String getE03DDHSTD()
  {
    return fieldE03DDHSTD.getString();
  }

  /**
  * Set field E03DDHCDD using a String value.
  */
  public void setE03DDHCDD(String newvalue)
  {
    fieldE03DDHCDD.setString(newvalue);
  }

  /**
  * Get value of field E03DDHCDD as a String.
  */
  public String getE03DDHCDD()
  {
    return fieldE03DDHCDD.getString();
  }

  /**
  * Set field E03DDHPRD using a String value.
  */
  public void setE03DDHPRD(String newvalue)
  {
    fieldE03DDHPRD.setString(newvalue);
  }

  /**
  * Get value of field E03DDHPRD as a String.
  */
  public String getE03DDHPRD()
  {
    return fieldE03DDHPRD.getString();
  }

  /**
  * Set field E03NUMREC using a String value.
  */
  public void setE03NUMREC(String newvalue)
  {
    fieldE03NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E03NUMREC as a String.
  */
  public String getE03NUMREC()
  {
    return fieldE03NUMREC.getString();
  }

  /**
  * Set numeric field E03NUMREC using a BigDecimal value.
  */
  public void setE03NUMREC(BigDecimal newvalue)
  {
    fieldE03NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NUMREC()
  {
    return fieldE03NUMREC.getBigDecimal();
  }

  /**
  * Set field E03INDOPE using a String value.
  */
  public void setE03INDOPE(String newvalue)
  {
    fieldE03INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E03INDOPE as a String.
  */
  public String getE03INDOPE()
  {
    return fieldE03INDOPE.getString();
  }

}
