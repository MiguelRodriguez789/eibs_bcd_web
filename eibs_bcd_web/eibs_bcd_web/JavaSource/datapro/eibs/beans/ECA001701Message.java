package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECA001701 physical file definition.
* 
* File level identifier is 1180903172742.
* Record format level identifier is 3BDC098EA1E25.
*/

public class ECA001701Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CORBNK",
                                     "E01CORCUN",
                                     "D01CORCUN",
                                     "E01CORSTS",
                                     "E01CORTIP",
                                     "E01CORACC",
                                     "E01CORLNE",
                                     "E01CORTCC",
                                     "E01CORCBK",
                                     "E01CORCCY",
                                     "E01CORCLN",
                                     "E01CORCAC",
                                     "E01CORDMX",
                                     "E01CORPMX",
                                     "E01CORBTH",
                                     "E01CORCMM",
                                     "E01CORCDD",
                                     "E01CORCYY",
                                     "E01CORCMU",
                                     "E01CORLMM",
                                     "E01CORLDD",
                                     "E01CORLYY",
                                     "E01CORLMU",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CORBNK",
                                   "E01CORCUN",
                                   "D01CORCUN",
                                   "E01CORSTS",
                                   "E01CORTIP",
                                   "E01CORACC",
                                   "E01CORLNE",
                                   "E01CORTCC",
                                   "E01CORCBK",
                                   "E01CORCCY",
                                   "E01CORCLN",
                                   "E01CORCAC",
                                   "E01CORDMX",
                                   "E01CORPMX",
                                   "E01CORBTH",
                                   "E01CORCMM",
                                   "E01CORCDD",
                                   "E01CORCYY",
                                   "E01CORCMU",
                                   "E01CORLMM",
                                   "E01CORLDD",
                                   "E01CORLYY",
                                   "E01CORLMU",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1180903172742";
  final static String rid = "3BDC098EA1E25";
  final static String fmtname = "ECA001701";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CORBNK = null;
  private DecimalField fieldE01CORCUN = null;
  private CharacterField fieldD01CORCUN = null;
  private CharacterField fieldE01CORSTS = null;
  private CharacterField fieldE01CORTIP = null;
  private DecimalField fieldE01CORACC = null;
  private DecimalField fieldE01CORLNE = null;
  private CharacterField fieldE01CORTCC = null;
  private CharacterField fieldE01CORCBK = null;
  private CharacterField fieldE01CORCCY = null;
  private DecimalField fieldE01CORCLN = null;
  private DecimalField fieldE01CORCAC = null;
  private DecimalField fieldE01CORDMX = null;
  private DecimalField fieldE01CORPMX = null;
  private DecimalField fieldE01CORBTH = null;
  private DecimalField fieldE01CORCMM = null;
  private DecimalField fieldE01CORCDD = null;
  private DecimalField fieldE01CORCYY = null;
  private CharacterField fieldE01CORCMU = null;
  private DecimalField fieldE01CORLMM = null;
  private DecimalField fieldE01CORLDD = null;
  private DecimalField fieldE01CORLYY = null;
  private CharacterField fieldE01CORLMU = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ECA001701Message.
  */
  public ECA001701Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 244;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CORBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CORBNK");
    fields[10] = fieldE01CORCUN =
    new DecimalField(message, HEADERSIZE + 44, 10, 0, "E01CORCUN");
    fields[11] = fieldD01CORCUN =
    new CharacterField(message, HEADERSIZE + 54, 60, "D01CORCUN");
    fields[12] = fieldE01CORSTS =
    new CharacterField(message, HEADERSIZE + 114, 1, "E01CORSTS");
    fields[13] = fieldE01CORTIP =
    new CharacterField(message, HEADERSIZE + 115, 1, "E01CORTIP");
    fields[14] = fieldE01CORACC =
    new DecimalField(message, HEADERSIZE + 116, 13, 0, "E01CORACC");
    fields[15] = fieldE01CORLNE =
    new DecimalField(message, HEADERSIZE + 129, 5, 0, "E01CORLNE");
    fields[16] = fieldE01CORTCC =
    new CharacterField(message, HEADERSIZE + 134, 1, "E01CORTCC");
    fields[17] = fieldE01CORCBK =
    new CharacterField(message, HEADERSIZE + 135, 2, "E01CORCBK");
    fields[18] = fieldE01CORCCY =
    new CharacterField(message, HEADERSIZE + 137, 3, "E01CORCCY");
    fields[19] = fieldE01CORCLN =
    new DecimalField(message, HEADERSIZE + 140, 17, 0, "E01CORCLN");
    fields[20] = fieldE01CORCAC =
    new DecimalField(message, HEADERSIZE + 157, 13, 0, "E01CORCAC");
    fields[21] = fieldE01CORDMX =
    new DecimalField(message, HEADERSIZE + 170, 6, 0, "E01CORDMX");
    fields[22] = fieldE01CORPMX =
    new DecimalField(message, HEADERSIZE + 176, 11, 6, "E01CORPMX");
    fields[23] = fieldE01CORBTH =
    new DecimalField(message, HEADERSIZE + 187, 6, 0, "E01CORBTH");
    fields[24] = fieldE01CORCMM =
    new DecimalField(message, HEADERSIZE + 193, 3, 0, "E01CORCMM");
    fields[25] = fieldE01CORCDD =
    new DecimalField(message, HEADERSIZE + 196, 3, 0, "E01CORCDD");
    fields[26] = fieldE01CORCYY =
    new DecimalField(message, HEADERSIZE + 199, 5, 0, "E01CORCYY");
    fields[27] = fieldE01CORCMU =
    new CharacterField(message, HEADERSIZE + 204, 10, "E01CORCMU");
    fields[28] = fieldE01CORLMM =
    new DecimalField(message, HEADERSIZE + 214, 3, 0, "E01CORLMM");
    fields[29] = fieldE01CORLDD =
    new DecimalField(message, HEADERSIZE + 217, 3, 0, "E01CORLDD");
    fields[30] = fieldE01CORLYY =
    new DecimalField(message, HEADERSIZE + 220, 5, 0, "E01CORLYY");
    fields[31] = fieldE01CORLMU =
    new CharacterField(message, HEADERSIZE + 225, 10, "E01CORLMU");
    fields[32] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 235, 8, 0, "E01NUMREC");
    fields[33] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 243, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CORBNK using a String value.
  */
  public void setE01CORBNK(String newvalue)
  {
    fieldE01CORBNK.setString(newvalue);
  }

  /**
  * Get value of field E01CORBNK as a String.
  */
  public String getE01CORBNK()
  {
    return fieldE01CORBNK.getString();
  }

  /**
  * Set field E01CORCUN using a String value.
  */
  public void setE01CORCUN(String newvalue)
  {
    fieldE01CORCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CORCUN as a String.
  */
  public String getE01CORCUN()
  {
    return fieldE01CORCUN.getString();
  }

  /**
  * Set numeric field E01CORCUN using a BigDecimal value.
  */
  public void setE01CORCUN(BigDecimal newvalue)
  {
    fieldE01CORCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCUN()
  {
    return fieldE01CORCUN.getBigDecimal();
  }

  /**
  * Set field D01CORCUN using a String value.
  */
  public void setD01CORCUN(String newvalue)
  {
    fieldD01CORCUN.setString(newvalue);
  }

  /**
  * Get value of field D01CORCUN as a String.
  */
  public String getD01CORCUN()
  {
    return fieldD01CORCUN.getString();
  }

  /**
  * Set field E01CORSTS using a String value.
  */
  public void setE01CORSTS(String newvalue)
  {
    fieldE01CORSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CORSTS as a String.
  */
  public String getE01CORSTS()
  {
    return fieldE01CORSTS.getString();
  }

  /**
  * Set field E01CORTIP using a String value.
  */
  public void setE01CORTIP(String newvalue)
  {
    fieldE01CORTIP.setString(newvalue);
  }

  /**
  * Get value of field E01CORTIP as a String.
  */
  public String getE01CORTIP()
  {
    return fieldE01CORTIP.getString();
  }

  /**
  * Set field E01CORACC using a String value.
  */
  public void setE01CORACC(String newvalue)
  {
    fieldE01CORACC.setString(newvalue);
  }

  /**
  * Get value of field E01CORACC as a String.
  */
  public String getE01CORACC()
  {
    return fieldE01CORACC.getString();
  }

  /**
  * Set numeric field E01CORACC using a BigDecimal value.
  */
  public void setE01CORACC(BigDecimal newvalue)
  {
    fieldE01CORACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORACC()
  {
    return fieldE01CORACC.getBigDecimal();
  }

  /**
  * Set field E01CORLNE using a String value.
  */
  public void setE01CORLNE(String newvalue)
  {
    fieldE01CORLNE.setString(newvalue);
  }

  /**
  * Get value of field E01CORLNE as a String.
  */
  public String getE01CORLNE()
  {
    return fieldE01CORLNE.getString();
  }

  /**
  * Set numeric field E01CORLNE using a BigDecimal value.
  */
  public void setE01CORLNE(BigDecimal newvalue)
  {
    fieldE01CORLNE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORLNE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORLNE()
  {
    return fieldE01CORLNE.getBigDecimal();
  }

  /**
  * Set field E01CORTCC using a String value.
  */
  public void setE01CORTCC(String newvalue)
  {
    fieldE01CORTCC.setString(newvalue);
  }

  /**
  * Get value of field E01CORTCC as a String.
  */
  public String getE01CORTCC()
  {
    return fieldE01CORTCC.getString();
  }

  /**
  * Set field E01CORCBK using a String value.
  */
  public void setE01CORCBK(String newvalue)
  {
    fieldE01CORCBK.setString(newvalue);
  }

  /**
  * Get value of field E01CORCBK as a String.
  */
  public String getE01CORCBK()
  {
    return fieldE01CORCBK.getString();
  }

  /**
  * Set field E01CORCCY using a String value.
  */
  public void setE01CORCCY(String newvalue)
  {
    fieldE01CORCCY.setString(newvalue);
  }

  /**
  * Get value of field E01CORCCY as a String.
  */
  public String getE01CORCCY()
  {
    return fieldE01CORCCY.getString();
  }

  /**
  * Set field E01CORCLN using a String value.
  */
  public void setE01CORCLN(String newvalue)
  {
    fieldE01CORCLN.setString(newvalue);
  }

  /**
  * Get value of field E01CORCLN as a String.
  */
  public String getE01CORCLN()
  {
    return fieldE01CORCLN.getString();
  }

  /**
  * Set numeric field E01CORCLN using a BigDecimal value.
  */
  public void setE01CORCLN(BigDecimal newvalue)
  {
    fieldE01CORCLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCLN()
  {
    return fieldE01CORCLN.getBigDecimal();
  }

  /**
  * Set field E01CORCAC using a String value.
  */
  public void setE01CORCAC(String newvalue)
  {
    fieldE01CORCAC.setString(newvalue);
  }

  /**
  * Get value of field E01CORCAC as a String.
  */
  public String getE01CORCAC()
  {
    return fieldE01CORCAC.getString();
  }

  /**
  * Set numeric field E01CORCAC using a BigDecimal value.
  */
  public void setE01CORCAC(BigDecimal newvalue)
  {
    fieldE01CORCAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCAC()
  {
    return fieldE01CORCAC.getBigDecimal();
  }

  /**
  * Set field E01CORDMX using a String value.
  */
  public void setE01CORDMX(String newvalue)
  {
    fieldE01CORDMX.setString(newvalue);
  }

  /**
  * Get value of field E01CORDMX as a String.
  */
  public String getE01CORDMX()
  {
    return fieldE01CORDMX.getString();
  }

  /**
  * Set numeric field E01CORDMX using a BigDecimal value.
  */
  public void setE01CORDMX(BigDecimal newvalue)
  {
    fieldE01CORDMX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORDMX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORDMX()
  {
    return fieldE01CORDMX.getBigDecimal();
  }

  /**
  * Set field E01CORPMX using a String value.
  */
  public void setE01CORPMX(String newvalue)
  {
    fieldE01CORPMX.setString(newvalue);
  }

  /**
  * Get value of field E01CORPMX as a String.
  */
  public String getE01CORPMX()
  {
    return fieldE01CORPMX.getString();
  }

  /**
  * Set numeric field E01CORPMX using a BigDecimal value.
  */
  public void setE01CORPMX(BigDecimal newvalue)
  {
    fieldE01CORPMX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORPMX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORPMX()
  {
    return fieldE01CORPMX.getBigDecimal();
  }

  /**
  * Set field E01CORBTH using a String value.
  */
  public void setE01CORBTH(String newvalue)
  {
    fieldE01CORBTH.setString(newvalue);
  }

  /**
  * Get value of field E01CORBTH as a String.
  */
  public String getE01CORBTH()
  {
    return fieldE01CORBTH.getString();
  }

  /**
  * Set numeric field E01CORBTH using a BigDecimal value.
  */
  public void setE01CORBTH(BigDecimal newvalue)
  {
    fieldE01CORBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORBTH()
  {
    return fieldE01CORBTH.getBigDecimal();
  }

  /**
  * Set field E01CORCMM using a String value.
  */
  public void setE01CORCMM(String newvalue)
  {
    fieldE01CORCMM.setString(newvalue);
  }

  /**
  * Get value of field E01CORCMM as a String.
  */
  public String getE01CORCMM()
  {
    return fieldE01CORCMM.getString();
  }

  /**
  * Set numeric field E01CORCMM using a BigDecimal value.
  */
  public void setE01CORCMM(BigDecimal newvalue)
  {
    fieldE01CORCMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCMM()
  {
    return fieldE01CORCMM.getBigDecimal();
  }

  /**
  * Set field E01CORCDD using a String value.
  */
  public void setE01CORCDD(String newvalue)
  {
    fieldE01CORCDD.setString(newvalue);
  }

  /**
  * Get value of field E01CORCDD as a String.
  */
  public String getE01CORCDD()
  {
    return fieldE01CORCDD.getString();
  }

  /**
  * Set numeric field E01CORCDD using a BigDecimal value.
  */
  public void setE01CORCDD(BigDecimal newvalue)
  {
    fieldE01CORCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCDD()
  {
    return fieldE01CORCDD.getBigDecimal();
  }

  /**
  * Set field E01CORCYY using a String value.
  */
  public void setE01CORCYY(String newvalue)
  {
    fieldE01CORCYY.setString(newvalue);
  }

  /**
  * Get value of field E01CORCYY as a String.
  */
  public String getE01CORCYY()
  {
    return fieldE01CORCYY.getString();
  }

  /**
  * Set numeric field E01CORCYY using a BigDecimal value.
  */
  public void setE01CORCYY(BigDecimal newvalue)
  {
    fieldE01CORCYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORCYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORCYY()
  {
    return fieldE01CORCYY.getBigDecimal();
  }

  /**
  * Set field E01CORCMU using a String value.
  */
  public void setE01CORCMU(String newvalue)
  {
    fieldE01CORCMU.setString(newvalue);
  }

  /**
  * Get value of field E01CORCMU as a String.
  */
  public String getE01CORCMU()
  {
    return fieldE01CORCMU.getString();
  }

  /**
  * Set field E01CORLMM using a String value.
  */
  public void setE01CORLMM(String newvalue)
  {
    fieldE01CORLMM.setString(newvalue);
  }

  /**
  * Get value of field E01CORLMM as a String.
  */
  public String getE01CORLMM()
  {
    return fieldE01CORLMM.getString();
  }

  /**
  * Set numeric field E01CORLMM using a BigDecimal value.
  */
  public void setE01CORLMM(BigDecimal newvalue)
  {
    fieldE01CORLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORLMM()
  {
    return fieldE01CORLMM.getBigDecimal();
  }

  /**
  * Set field E01CORLDD using a String value.
  */
  public void setE01CORLDD(String newvalue)
  {
    fieldE01CORLDD.setString(newvalue);
  }

  /**
  * Get value of field E01CORLDD as a String.
  */
  public String getE01CORLDD()
  {
    return fieldE01CORLDD.getString();
  }

  /**
  * Set numeric field E01CORLDD using a BigDecimal value.
  */
  public void setE01CORLDD(BigDecimal newvalue)
  {
    fieldE01CORLDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORLDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORLDD()
  {
    return fieldE01CORLDD.getBigDecimal();
  }

  /**
  * Set field E01CORLYY using a String value.
  */
  public void setE01CORLYY(String newvalue)
  {
    fieldE01CORLYY.setString(newvalue);
  }

  /**
  * Get value of field E01CORLYY as a String.
  */
  public String getE01CORLYY()
  {
    return fieldE01CORLYY.getString();
  }

  /**
  * Set numeric field E01CORLYY using a BigDecimal value.
  */
  public void setE01CORLYY(BigDecimal newvalue)
  {
    fieldE01CORLYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CORLYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CORLYY()
  {
    return fieldE01CORLYY.getBigDecimal();
  }

  /**
  * Set field E01CORLMU using a String value.
  */
  public void setE01CORLMU(String newvalue)
  {
    fieldE01CORLMU.setString(newvalue);
  }

  /**
  * Get value of field E01CORLMU as a String.
  */
  public String getE01CORLMU()
  {
    return fieldE01CORLMU.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
