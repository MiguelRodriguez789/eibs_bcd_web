package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL099802 physical file definition.
* 
* File level identifier is 1170804052141.
* Record format level identifier is 41957E358DE3E.
*/

public class EDL099802Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02INDCDE",
                                     "E02INDVDY",
                                     "E02INDVDM",
                                     "E02INDVDD",
                                     "E02INDPRC",
                                     "E02INDCMM",
                                     "E02INDCMD",
                                     "E02INDCMY",
                                     "E02INDCTM",
                                     "E02INDCUS",
                                     "E02INDLMM",
                                     "E02INDLMD",
                                     "E02INDLMY",
                                     "E02INDLMT",
                                     "E02INDLMU",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02INDCDE",
                                   "E02INDVDY",
                                   "E02INDVDM",
                                   "E02INDVDD",
                                   "E02INDPRC",
                                   "E02INDCMM",
                                   "E02INDCMD",
                                   "E02INDCMY",
                                   "E02INDCTM",
                                   "E02INDCUS",
                                   "E02INDLMM",
                                   "E02INDLMD",
                                   "E02INDLMY",
                                   "E02INDLMT",
                                   "E02INDLMU",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1170804052141";
  final static String rid = "41957E358DE3E";
  final static String fmtname = "EDL099802";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02INDCDE = null;
  private DecimalField fieldE02INDVDY = null;
  private DecimalField fieldE02INDVDM = null;
  private DecimalField fieldE02INDVDD = null;
  private DecimalField fieldE02INDPRC = null;
  private DecimalField fieldE02INDCMM = null;
  private DecimalField fieldE02INDCMD = null;
  private DecimalField fieldE02INDCMY = null;
  private CharacterField fieldE02INDCTM = null;
  private CharacterField fieldE02INDCUS = null;
  private DecimalField fieldE02INDLMM = null;
  private DecimalField fieldE02INDLMD = null;
  private DecimalField fieldE02INDLMY = null;
  private CharacterField fieldE02INDLMT = null;
  private CharacterField fieldE02INDLMU = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EDL099802Message.
  */
  public EDL099802Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 177;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02INDCDE =
    new CharacterField(message, HEADERSIZE + 42, 4, "E02INDCDE");
    fields[10] = fieldE02INDVDY =
    new DecimalField(message, HEADERSIZE + 46, 5, 0, "E02INDVDY");
    fields[11] = fieldE02INDVDM =
    new DecimalField(message, HEADERSIZE + 51, 3, 0, "E02INDVDM");
    fields[12] = fieldE02INDVDD =
    new DecimalField(message, HEADERSIZE + 54, 3, 0, "E02INDVDD");
    fields[13] = fieldE02INDPRC =
    new DecimalField(message, HEADERSIZE + 57, 17, 6, "E02INDPRC");
    fields[14] = fieldE02INDCMM =
    new DecimalField(message, HEADERSIZE + 74, 3, 0, "E02INDCMM");
    fields[15] = fieldE02INDCMD =
    new DecimalField(message, HEADERSIZE + 77, 3, 0, "E02INDCMD");
    fields[16] = fieldE02INDCMY =
    new DecimalField(message, HEADERSIZE + 80, 5, 0, "E02INDCMY");
    fields[17] = fieldE02INDCTM =
    new CharacterField(message, HEADERSIZE + 85, 26, "E02INDCTM");
    fields[18] = fieldE02INDCUS =
    new CharacterField(message, HEADERSIZE + 111, 10, "E02INDCUS");
    fields[19] = fieldE02INDLMM =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "E02INDLMM");
    fields[20] = fieldE02INDLMD =
    new DecimalField(message, HEADERSIZE + 124, 3, 0, "E02INDLMD");
    fields[21] = fieldE02INDLMY =
    new DecimalField(message, HEADERSIZE + 127, 5, 0, "E02INDLMY");
    fields[22] = fieldE02INDLMT =
    new CharacterField(message, HEADERSIZE + 132, 26, "E02INDLMT");
    fields[23] = fieldE02INDLMU =
    new CharacterField(message, HEADERSIZE + 158, 10, "E02INDLMU");
    fields[24] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 168, 8, 0, "E02NUMREC");
    fields[25] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 176, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02INDCDE using a String value.
  */
  public void setE02INDCDE(String newvalue)
  {
    fieldE02INDCDE.setString(newvalue);
  }

  /**
  * Get value of field E02INDCDE as a String.
  */
  public String getE02INDCDE()
  {
    return fieldE02INDCDE.getString();
  }

  /**
  * Set field E02INDVDY using a String value.
  */
  public void setE02INDVDY(String newvalue)
  {
    fieldE02INDVDY.setString(newvalue);
  }

  /**
  * Get value of field E02INDVDY as a String.
  */
  public String getE02INDVDY()
  {
    return fieldE02INDVDY.getString();
  }

  /**
  * Set numeric field E02INDVDY using a BigDecimal value.
  */
  public void setE02INDVDY(BigDecimal newvalue)
  {
    fieldE02INDVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDVDY()
  {
    return fieldE02INDVDY.getBigDecimal();
  }

  /**
  * Set field E02INDVDM using a String value.
  */
  public void setE02INDVDM(String newvalue)
  {
    fieldE02INDVDM.setString(newvalue);
  }

  /**
  * Get value of field E02INDVDM as a String.
  */
  public String getE02INDVDM()
  {
    return fieldE02INDVDM.getString();
  }

  /**
  * Set numeric field E02INDVDM using a BigDecimal value.
  */
  public void setE02INDVDM(BigDecimal newvalue)
  {
    fieldE02INDVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDVDM()
  {
    return fieldE02INDVDM.getBigDecimal();
  }

  /**
  * Set field E02INDVDD using a String value.
  */
  public void setE02INDVDD(String newvalue)
  {
    fieldE02INDVDD.setString(newvalue);
  }

  /**
  * Get value of field E02INDVDD as a String.
  */
  public String getE02INDVDD()
  {
    return fieldE02INDVDD.getString();
  }

  /**
  * Set numeric field E02INDVDD using a BigDecimal value.
  */
  public void setE02INDVDD(BigDecimal newvalue)
  {
    fieldE02INDVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDVDD()
  {
    return fieldE02INDVDD.getBigDecimal();
  }

  /**
  * Set field E02INDPRC using a String value.
  */
  public void setE02INDPRC(String newvalue)
  {
    fieldE02INDPRC.setString(newvalue);
  }

  /**
  * Get value of field E02INDPRC as a String.
  */
  public String getE02INDPRC()
  {
    return fieldE02INDPRC.getString();
  }

  /**
  * Set numeric field E02INDPRC using a BigDecimal value.
  */
  public void setE02INDPRC(BigDecimal newvalue)
  {
    fieldE02INDPRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDPRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDPRC()
  {
    return fieldE02INDPRC.getBigDecimal();
  }

  /**
  * Set field E02INDCMM using a String value.
  */
  public void setE02INDCMM(String newvalue)
  {
    fieldE02INDCMM.setString(newvalue);
  }

  /**
  * Get value of field E02INDCMM as a String.
  */
  public String getE02INDCMM()
  {
    return fieldE02INDCMM.getString();
  }

  /**
  * Set numeric field E02INDCMM using a BigDecimal value.
  */
  public void setE02INDCMM(BigDecimal newvalue)
  {
    fieldE02INDCMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDCMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDCMM()
  {
    return fieldE02INDCMM.getBigDecimal();
  }

  /**
  * Set field E02INDCMD using a String value.
  */
  public void setE02INDCMD(String newvalue)
  {
    fieldE02INDCMD.setString(newvalue);
  }

  /**
  * Get value of field E02INDCMD as a String.
  */
  public String getE02INDCMD()
  {
    return fieldE02INDCMD.getString();
  }

  /**
  * Set numeric field E02INDCMD using a BigDecimal value.
  */
  public void setE02INDCMD(BigDecimal newvalue)
  {
    fieldE02INDCMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDCMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDCMD()
  {
    return fieldE02INDCMD.getBigDecimal();
  }

  /**
  * Set field E02INDCMY using a String value.
  */
  public void setE02INDCMY(String newvalue)
  {
    fieldE02INDCMY.setString(newvalue);
  }

  /**
  * Get value of field E02INDCMY as a String.
  */
  public String getE02INDCMY()
  {
    return fieldE02INDCMY.getString();
  }

  /**
  * Set numeric field E02INDCMY using a BigDecimal value.
  */
  public void setE02INDCMY(BigDecimal newvalue)
  {
    fieldE02INDCMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDCMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDCMY()
  {
    return fieldE02INDCMY.getBigDecimal();
  }

  /**
  * Set field E02INDCTM using a String value.
  */
  public void setE02INDCTM(String newvalue)
  {
    fieldE02INDCTM.setString(newvalue);
  }

  /**
  * Get value of field E02INDCTM as a String.
  */
  public String getE02INDCTM()
  {
    return fieldE02INDCTM.getString();
  }

  /**
  * Set field E02INDCUS using a String value.
  */
  public void setE02INDCUS(String newvalue)
  {
    fieldE02INDCUS.setString(newvalue);
  }

  /**
  * Get value of field E02INDCUS as a String.
  */
  public String getE02INDCUS()
  {
    return fieldE02INDCUS.getString();
  }

  /**
  * Set field E02INDLMM using a String value.
  */
  public void setE02INDLMM(String newvalue)
  {
    fieldE02INDLMM.setString(newvalue);
  }

  /**
  * Get value of field E02INDLMM as a String.
  */
  public String getE02INDLMM()
  {
    return fieldE02INDLMM.getString();
  }

  /**
  * Set numeric field E02INDLMM using a BigDecimal value.
  */
  public void setE02INDLMM(BigDecimal newvalue)
  {
    fieldE02INDLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDLMM()
  {
    return fieldE02INDLMM.getBigDecimal();
  }

  /**
  * Set field E02INDLMD using a String value.
  */
  public void setE02INDLMD(String newvalue)
  {
    fieldE02INDLMD.setString(newvalue);
  }

  /**
  * Get value of field E02INDLMD as a String.
  */
  public String getE02INDLMD()
  {
    return fieldE02INDLMD.getString();
  }

  /**
  * Set numeric field E02INDLMD using a BigDecimal value.
  */
  public void setE02INDLMD(BigDecimal newvalue)
  {
    fieldE02INDLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDLMD()
  {
    return fieldE02INDLMD.getBigDecimal();
  }

  /**
  * Set field E02INDLMY using a String value.
  */
  public void setE02INDLMY(String newvalue)
  {
    fieldE02INDLMY.setString(newvalue);
  }

  /**
  * Get value of field E02INDLMY as a String.
  */
  public String getE02INDLMY()
  {
    return fieldE02INDLMY.getString();
  }

  /**
  * Set numeric field E02INDLMY using a BigDecimal value.
  */
  public void setE02INDLMY(BigDecimal newvalue)
  {
    fieldE02INDLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02INDLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02INDLMY()
  {
    return fieldE02INDLMY.getBigDecimal();
  }

  /**
  * Set field E02INDLMT using a String value.
  */
  public void setE02INDLMT(String newvalue)
  {
    fieldE02INDLMT.setString(newvalue);
  }

  /**
  * Get value of field E02INDLMT as a String.
  */
  public String getE02INDLMT()
  {
    return fieldE02INDLMT.getString();
  }

  /**
  * Set field E02INDLMU using a String value.
  */
  public void setE02INDLMU(String newvalue)
  {
    fieldE02INDLMU.setString(newvalue);
  }

  /**
  * Get value of field E02INDLMU as a String.
  */
  public String getE02INDLMU()
  {
    return fieldE02INDLMU.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
