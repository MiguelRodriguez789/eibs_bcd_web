package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO105901 physical file definition.
* 
* File level identifier is 1150701111006.
* Record format level identifier is 421B554C49723.
*/

public class ECO105901Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01MOVBNK",
                                     "E01MOVBNN",
                                     "E01MOVBRN",
                                     "E01MOVBRM",
                                     "E01MOVBRS",
                                     "E01MOVBNS",
                                     "E01MOVTIP",
                                     "E01MOVTIN",
                                     "E01MOVSUB",
                                     "E01MOVSUN",
                                     "E01MOVCSN",
                                     "E01MOVCSM",
                                     "E01MOVSER",
                                     "E01MOVINI",
                                     "E01MOVFIN",
                                     "E01MOVQTY",
                                     "E01MOVFDM",
                                     "E01MOVFDD",
                                     "E01MOVFDY",
                                     "E01MOVTDM",
                                     "E01MOVTDD",
                                     "E01MOVTDY",
                                     "E01MOVCDM",
                                     "E01MOVCDD",
                                     "E01MOVCDY"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01MOVBNK",
                                   "E01MOVBNN",
                                   "E01MOVBRN",
                                   "E01MOVBRM",
                                   "E01MOVBRS",
                                   "E01MOVBNS",
                                   "E01MOVTIP",
                                   "E01MOVTIN",
                                   "E01MOVSUB",
                                   "E01MOVSUN",
                                   "E01MOVCSN",
                                   "E01MOVCSM",
                                   "E01MOVSER",
                                   "E01MOVINI",
                                   "E01MOVFIN",
                                   "E01MOVQTY",
                                   "E01MOVFDM",
                                   "E01MOVFDD",
                                   "E01MOVFDY",
                                   "E01MOVTDM",
                                   "E01MOVTDD",
                                   "E01MOVTDY",
                                   "E01MOVCDM",
                                   "E01MOVCDD",
                                   "E01MOVCDY"
                                 };
  final static String fid = "1150701111006";
  final static String rid = "421B554C49723";
  final static String fmtname = "ECO105901";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01MOVBNK = null;
  private CharacterField fieldE01MOVBNN = null;
  private DecimalField fieldE01MOVBRN = null;
  private CharacterField fieldE01MOVBRM = null;
  private DecimalField fieldE01MOVBRS = null;
  private CharacterField fieldE01MOVBNS = null;
  private CharacterField fieldE01MOVTIP = null;
  private CharacterField fieldE01MOVTIN = null;
  private CharacterField fieldE01MOVSUB = null;
  private CharacterField fieldE01MOVSUN = null;
  private DecimalField fieldE01MOVCSN = null;
  private CharacterField fieldE01MOVCSM = null;
  private DecimalField fieldE01MOVSER = null;
  private DecimalField fieldE01MOVINI = null;
  private DecimalField fieldE01MOVFIN = null;
  private DecimalField fieldE01MOVQTY = null;
  private DecimalField fieldE01MOVFDM = null;
  private DecimalField fieldE01MOVFDD = null;
  private DecimalField fieldE01MOVFDY = null;
  private DecimalField fieldE01MOVTDM = null;
  private DecimalField fieldE01MOVTDD = null;
  private DecimalField fieldE01MOVTDY = null;
  private DecimalField fieldE01MOVCDM = null;
  private DecimalField fieldE01MOVCDD = null;
  private DecimalField fieldE01MOVCDY = null;

  /**
  * Constructor for ECO105901Message.
  */
  public ECO105901Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 428;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01MOVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01MOVBNK");
    fields[10] = fieldE01MOVBNN =
    new CharacterField(message, HEADERSIZE + 44, 45, "E01MOVBNN");
    fields[11] = fieldE01MOVBRN =
    new DecimalField(message, HEADERSIZE + 89, 5, 0, "E01MOVBRN");
    fields[12] = fieldE01MOVBRM =
    new CharacterField(message, HEADERSIZE + 94, 45, "E01MOVBRM");
    fields[13] = fieldE01MOVBRS =
    new DecimalField(message, HEADERSIZE + 139, 5, 0, "E01MOVBRS");
    fields[14] = fieldE01MOVBNS =
    new CharacterField(message, HEADERSIZE + 144, 45, "E01MOVBNS");
    fields[15] = fieldE01MOVTIP =
    new CharacterField(message, HEADERSIZE + 189, 4, "E01MOVTIP");
    fields[16] = fieldE01MOVTIN =
    new CharacterField(message, HEADERSIZE + 193, 45, "E01MOVTIN");
    fields[17] = fieldE01MOVSUB =
    new CharacterField(message, HEADERSIZE + 238, 4, "E01MOVSUB");
    fields[18] = fieldE01MOVSUN =
    new CharacterField(message, HEADERSIZE + 242, 45, "E01MOVSUN");
    fields[19] = fieldE01MOVCSN =
    new DecimalField(message, HEADERSIZE + 287, 3, 0, "E01MOVCSN");
    fields[20] = fieldE01MOVCSM =
    new CharacterField(message, HEADERSIZE + 290, 45, "E01MOVCSM");
    fields[21] = fieldE01MOVSER =
    new DecimalField(message, HEADERSIZE + 335, 13, 0, "E01MOVSER");
    fields[22] = fieldE01MOVINI =
    new DecimalField(message, HEADERSIZE + 348, 17, 0, "E01MOVINI");
    fields[23] = fieldE01MOVFIN =
    new DecimalField(message, HEADERSIZE + 365, 17, 0, "E01MOVFIN");
    fields[24] = fieldE01MOVQTY =
    new DecimalField(message, HEADERSIZE + 382, 13, 0, "E01MOVQTY");
    fields[25] = fieldE01MOVFDM =
    new DecimalField(message, HEADERSIZE + 395, 3, 0, "E01MOVFDM");
    fields[26] = fieldE01MOVFDD =
    new DecimalField(message, HEADERSIZE + 398, 3, 0, "E01MOVFDD");
    fields[27] = fieldE01MOVFDY =
    new DecimalField(message, HEADERSIZE + 401, 5, 0, "E01MOVFDY");
    fields[28] = fieldE01MOVTDM =
    new DecimalField(message, HEADERSIZE + 406, 3, 0, "E01MOVTDM");
    fields[29] = fieldE01MOVTDD =
    new DecimalField(message, HEADERSIZE + 409, 3, 0, "E01MOVTDD");
    fields[30] = fieldE01MOVTDY =
    new DecimalField(message, HEADERSIZE + 412, 5, 0, "E01MOVTDY");
    fields[31] = fieldE01MOVCDM =
    new DecimalField(message, HEADERSIZE + 417, 3, 0, "E01MOVCDM");
    fields[32] = fieldE01MOVCDD =
    new DecimalField(message, HEADERSIZE + 420, 3, 0, "E01MOVCDD");
    fields[33] = fieldE01MOVCDY =
    new DecimalField(message, HEADERSIZE + 423, 5, 0, "E01MOVCDY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01MOVBNK using a String value.
  */
  public void setE01MOVBNK(String newvalue)
  {
    fieldE01MOVBNK.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBNK as a String.
  */
  public String getE01MOVBNK()
  {
    return fieldE01MOVBNK.getString();
  }

  /**
  * Set field E01MOVBNN using a String value.
  */
  public void setE01MOVBNN(String newvalue)
  {
    fieldE01MOVBNN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBNN as a String.
  */
  public String getE01MOVBNN()
  {
    return fieldE01MOVBNN.getString();
  }

  /**
  * Set field E01MOVBRN using a String value.
  */
  public void setE01MOVBRN(String newvalue)
  {
    fieldE01MOVBRN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBRN as a String.
  */
  public String getE01MOVBRN()
  {
    return fieldE01MOVBRN.getString();
  }

  /**
  * Set numeric field E01MOVBRN using a BigDecimal value.
  */
  public void setE01MOVBRN(BigDecimal newvalue)
  {
    fieldE01MOVBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVBRN()
  {
    return fieldE01MOVBRN.getBigDecimal();
  }

  /**
  * Set field E01MOVBRM using a String value.
  */
  public void setE01MOVBRM(String newvalue)
  {
    fieldE01MOVBRM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBRM as a String.
  */
  public String getE01MOVBRM()
  {
    return fieldE01MOVBRM.getString();
  }

  /**
  * Set field E01MOVBRS using a String value.
  */
  public void setE01MOVBRS(String newvalue)
  {
    fieldE01MOVBRS.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBRS as a String.
  */
  public String getE01MOVBRS()
  {
    return fieldE01MOVBRS.getString();
  }

  /**
  * Set numeric field E01MOVBRS using a BigDecimal value.
  */
  public void setE01MOVBRS(BigDecimal newvalue)
  {
    fieldE01MOVBRS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVBRS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVBRS()
  {
    return fieldE01MOVBRS.getBigDecimal();
  }

  /**
  * Set field E01MOVBNS using a String value.
  */
  public void setE01MOVBNS(String newvalue)
  {
    fieldE01MOVBNS.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBNS as a String.
  */
  public String getE01MOVBNS()
  {
    return fieldE01MOVBNS.getString();
  }

  /**
  * Set field E01MOVTIP using a String value.
  */
  public void setE01MOVTIP(String newvalue)
  {
    fieldE01MOVTIP.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTIP as a String.
  */
  public String getE01MOVTIP()
  {
    return fieldE01MOVTIP.getString();
  }

  /**
  * Set field E01MOVTIN using a String value.
  */
  public void setE01MOVTIN(String newvalue)
  {
    fieldE01MOVTIN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTIN as a String.
  */
  public String getE01MOVTIN()
  {
    return fieldE01MOVTIN.getString();
  }

  /**
  * Set field E01MOVSUB using a String value.
  */
  public void setE01MOVSUB(String newvalue)
  {
    fieldE01MOVSUB.setString(newvalue);
  }

  /**
  * Get value of field E01MOVSUB as a String.
  */
  public String getE01MOVSUB()
  {
    return fieldE01MOVSUB.getString();
  }

  /**
  * Set field E01MOVSUN using a String value.
  */
  public void setE01MOVSUN(String newvalue)
  {
    fieldE01MOVSUN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVSUN as a String.
  */
  public String getE01MOVSUN()
  {
    return fieldE01MOVSUN.getString();
  }

  /**
  * Set field E01MOVCSN using a String value.
  */
  public void setE01MOVCSN(String newvalue)
  {
    fieldE01MOVCSN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCSN as a String.
  */
  public String getE01MOVCSN()
  {
    return fieldE01MOVCSN.getString();
  }

  /**
  * Set numeric field E01MOVCSN using a BigDecimal value.
  */
  public void setE01MOVCSN(BigDecimal newvalue)
  {
    fieldE01MOVCSN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVCSN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVCSN()
  {
    return fieldE01MOVCSN.getBigDecimal();
  }

  /**
  * Set field E01MOVCSM using a String value.
  */
  public void setE01MOVCSM(String newvalue)
  {
    fieldE01MOVCSM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCSM as a String.
  */
  public String getE01MOVCSM()
  {
    return fieldE01MOVCSM.getString();
  }

  /**
  * Set field E01MOVSER using a String value.
  */
  public void setE01MOVSER(String newvalue)
  {
    fieldE01MOVSER.setString(newvalue);
  }

  /**
  * Get value of field E01MOVSER as a String.
  */
  public String getE01MOVSER()
  {
    return fieldE01MOVSER.getString();
  }

  /**
  * Set numeric field E01MOVSER using a BigDecimal value.
  */
  public void setE01MOVSER(BigDecimal newvalue)
  {
    fieldE01MOVSER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVSER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVSER()
  {
    return fieldE01MOVSER.getBigDecimal();
  }

  /**
  * Set field E01MOVINI using a String value.
  */
  public void setE01MOVINI(String newvalue)
  {
    fieldE01MOVINI.setString(newvalue);
  }

  /**
  * Get value of field E01MOVINI as a String.
  */
  public String getE01MOVINI()
  {
    return fieldE01MOVINI.getString();
  }

  /**
  * Set numeric field E01MOVINI using a BigDecimal value.
  */
  public void setE01MOVINI(BigDecimal newvalue)
  {
    fieldE01MOVINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVINI()
  {
    return fieldE01MOVINI.getBigDecimal();
  }

  /**
  * Set field E01MOVFIN using a String value.
  */
  public void setE01MOVFIN(String newvalue)
  {
    fieldE01MOVFIN.setString(newvalue);
  }

  /**
  * Get value of field E01MOVFIN as a String.
  */
  public String getE01MOVFIN()
  {
    return fieldE01MOVFIN.getString();
  }

  /**
  * Set numeric field E01MOVFIN using a BigDecimal value.
  */
  public void setE01MOVFIN(BigDecimal newvalue)
  {
    fieldE01MOVFIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVFIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVFIN()
  {
    return fieldE01MOVFIN.getBigDecimal();
  }

  /**
  * Set field E01MOVQTY using a String value.
  */
  public void setE01MOVQTY(String newvalue)
  {
    fieldE01MOVQTY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVQTY as a String.
  */
  public String getE01MOVQTY()
  {
    return fieldE01MOVQTY.getString();
  }

  /**
  * Set numeric field E01MOVQTY using a BigDecimal value.
  */
  public void setE01MOVQTY(BigDecimal newvalue)
  {
    fieldE01MOVQTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVQTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVQTY()
  {
    return fieldE01MOVQTY.getBigDecimal();
  }

  /**
  * Set field E01MOVFDM using a String value.
  */
  public void setE01MOVFDM(String newvalue)
  {
    fieldE01MOVFDM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVFDM as a String.
  */
  public String getE01MOVFDM()
  {
    return fieldE01MOVFDM.getString();
  }

  /**
  * Set numeric field E01MOVFDM using a BigDecimal value.
  */
  public void setE01MOVFDM(BigDecimal newvalue)
  {
    fieldE01MOVFDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVFDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVFDM()
  {
    return fieldE01MOVFDM.getBigDecimal();
  }

  /**
  * Set field E01MOVFDD using a String value.
  */
  public void setE01MOVFDD(String newvalue)
  {
    fieldE01MOVFDD.setString(newvalue);
  }

  /**
  * Get value of field E01MOVFDD as a String.
  */
  public String getE01MOVFDD()
  {
    return fieldE01MOVFDD.getString();
  }

  /**
  * Set numeric field E01MOVFDD using a BigDecimal value.
  */
  public void setE01MOVFDD(BigDecimal newvalue)
  {
    fieldE01MOVFDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVFDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVFDD()
  {
    return fieldE01MOVFDD.getBigDecimal();
  }

  /**
  * Set field E01MOVFDY using a String value.
  */
  public void setE01MOVFDY(String newvalue)
  {
    fieldE01MOVFDY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVFDY as a String.
  */
  public String getE01MOVFDY()
  {
    return fieldE01MOVFDY.getString();
  }

  /**
  * Set numeric field E01MOVFDY using a BigDecimal value.
  */
  public void setE01MOVFDY(BigDecimal newvalue)
  {
    fieldE01MOVFDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVFDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVFDY()
  {
    return fieldE01MOVFDY.getBigDecimal();
  }

  /**
  * Set field E01MOVTDM using a String value.
  */
  public void setE01MOVTDM(String newvalue)
  {
    fieldE01MOVTDM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTDM as a String.
  */
  public String getE01MOVTDM()
  {
    return fieldE01MOVTDM.getString();
  }

  /**
  * Set numeric field E01MOVTDM using a BigDecimal value.
  */
  public void setE01MOVTDM(BigDecimal newvalue)
  {
    fieldE01MOVTDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTDM()
  {
    return fieldE01MOVTDM.getBigDecimal();
  }

  /**
  * Set field E01MOVTDD using a String value.
  */
  public void setE01MOVTDD(String newvalue)
  {
    fieldE01MOVTDD.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTDD as a String.
  */
  public String getE01MOVTDD()
  {
    return fieldE01MOVTDD.getString();
  }

  /**
  * Set numeric field E01MOVTDD using a BigDecimal value.
  */
  public void setE01MOVTDD(BigDecimal newvalue)
  {
    fieldE01MOVTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTDD()
  {
    return fieldE01MOVTDD.getBigDecimal();
  }

  /**
  * Set field E01MOVTDY using a String value.
  */
  public void setE01MOVTDY(String newvalue)
  {
    fieldE01MOVTDY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTDY as a String.
  */
  public String getE01MOVTDY()
  {
    return fieldE01MOVTDY.getString();
  }

  /**
  * Set numeric field E01MOVTDY using a BigDecimal value.
  */
  public void setE01MOVTDY(BigDecimal newvalue)
  {
    fieldE01MOVTDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTDY()
  {
    return fieldE01MOVTDY.getBigDecimal();
  }

  /**
  * Set field E01MOVCDM using a String value.
  */
  public void setE01MOVCDM(String newvalue)
  {
    fieldE01MOVCDM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCDM as a String.
  */
  public String getE01MOVCDM()
  {
    return fieldE01MOVCDM.getString();
  }

  /**
  * Set numeric field E01MOVCDM using a BigDecimal value.
  */
  public void setE01MOVCDM(BigDecimal newvalue)
  {
    fieldE01MOVCDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVCDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVCDM()
  {
    return fieldE01MOVCDM.getBigDecimal();
  }

  /**
  * Set field E01MOVCDD using a String value.
  */
  public void setE01MOVCDD(String newvalue)
  {
    fieldE01MOVCDD.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCDD as a String.
  */
  public String getE01MOVCDD()
  {
    return fieldE01MOVCDD.getString();
  }

  /**
  * Set numeric field E01MOVCDD using a BigDecimal value.
  */
  public void setE01MOVCDD(BigDecimal newvalue)
  {
    fieldE01MOVCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVCDD()
  {
    return fieldE01MOVCDD.getBigDecimal();
  }

  /**
  * Set field E01MOVCDY using a String value.
  */
  public void setE01MOVCDY(String newvalue)
  {
    fieldE01MOVCDY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCDY as a String.
  */
  public String getE01MOVCDY()
  {
    return fieldE01MOVCDY.getString();
  }

  /**
  * Set numeric field E01MOVCDY using a BigDecimal value.
  */
  public void setE01MOVCDY(BigDecimal newvalue)
  {
    fieldE01MOVCDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVCDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVCDY()
  {
    return fieldE01MOVCDY.getBigDecimal();
  }

}
