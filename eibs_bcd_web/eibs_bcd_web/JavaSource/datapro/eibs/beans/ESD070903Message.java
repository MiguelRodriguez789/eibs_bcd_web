package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD070903 physical file definition.
* 
* File level identifier is 1100706173652.
* Record format level identifier is 39F0105DDDF95.
*/

public class ESD070903Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03APCTYP",
                                     "E03TYPDES",
                                     "E03APCCDE",
                                     "E03DESCRI",
                                     "E03MERCAD",
                                     "E03APCBNK",
                                     "E03APCCCY",
                                     "E03APCGLN",
                                     "E03GLMDSC",
                                     "E03APCFRT",
                                     "E03APCFTY",
                                     "E03VARRTE",
                                     "E03APCRRD",
                                     "E03APCCDT",
                                     "E03APCPPD",
                                     "E03APCROY",
                                     "E03APCIPD",
                                     "E03APCRES",
                                     "E03APCFTF"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03APCTYP",
                                   "E03TYPDES",
                                   "E03APCCDE",
                                   "E03DESCRI",
                                   "E03MERCAD",
                                   "E03APCBNK",
                                   "E03APCCCY",
                                   "E03APCGLN",
                                   "E03GLMDSC",
                                   "E03APCFRT",
                                   "E03APCFTY",
                                   "E03VARRTE",
                                   "E03APCRRD",
                                   "E03APCCDT",
                                   "E03APCPPD",
                                   "E03APCROY",
                                   "E03APCIPD",
                                   "E03APCRES",
                                   "E03APCFTF"
                                 };
  final static String fid = "1100706173652";
  final static String rid = "39F0105DDDF95";
  final static String fmtname = "ESD070903";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03APCTYP = null;
  private CharacterField fieldE03TYPDES = null;
  private CharacterField fieldE03APCCDE = null;
  private CharacterField fieldE03DESCRI = null;
  private CharacterField fieldE03MERCAD = null;
  private CharacterField fieldE03APCBNK = null;
  private CharacterField fieldE03APCCCY = null;
  private DecimalField fieldE03APCGLN = null;
  private CharacterField fieldE03GLMDSC = null;
  private CharacterField fieldE03APCFRT = null;
  private CharacterField fieldE03APCFTY = null;
  private DecimalField fieldE03VARRTE = null;
  private CharacterField fieldE03APCRRD = null;
  private CharacterField fieldE03APCCDT = null;
  private CharacterField fieldE03APCPPD = null;
  private CharacterField fieldE03APCROY = null;
  private CharacterField fieldE03APCIPD = null;
  private CharacterField fieldE03APCRES = null;
  private CharacterField fieldE03APCFTF = null;

  /**
  * Constructor for ESD070903Message.
  */
  public ESD070903Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 251;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03APCTYP =
    new CharacterField(message, HEADERSIZE + 42, 4, "E03APCTYP");
    fields[10] = fieldE03TYPDES =
    new CharacterField(message, HEADERSIZE + 46, 35, "E03TYPDES");
    fields[11] = fieldE03APCCDE =
    new CharacterField(message, HEADERSIZE + 81, 4, "E03APCCDE");
    fields[12] = fieldE03DESCRI =
    new CharacterField(message, HEADERSIZE + 85, 63, "E03DESCRI");
    fields[13] = fieldE03MERCAD =
    new CharacterField(message, HEADERSIZE + 148, 15, "E03MERCAD");
    fields[14] = fieldE03APCBNK =
    new CharacterField(message, HEADERSIZE + 163, 2, "E03APCBNK");
    fields[15] = fieldE03APCCCY =
    new CharacterField(message, HEADERSIZE + 165, 3, "E03APCCCY");
    fields[16] = fieldE03APCGLN =
    new DecimalField(message, HEADERSIZE + 168, 17, 0, "E03APCGLN");
    fields[17] = fieldE03GLMDSC =
    new CharacterField(message, HEADERSIZE + 185, 35, "E03GLMDSC");
    fields[18] = fieldE03APCFRT =
    new CharacterField(message, HEADERSIZE + 220, 2, "E03APCFRT");
    fields[19] = fieldE03APCFTY =
    new CharacterField(message, HEADERSIZE + 222, 2, "E03APCFTY");
    fields[20] = fieldE03VARRTE =
    new DecimalField(message, HEADERSIZE + 224, 11, 6, "E03VARRTE");
    fields[21] = fieldE03APCRRD =
    new CharacterField(message, HEADERSIZE + 235, 3, "E03APCRRD");
    fields[22] = fieldE03APCCDT =
    new CharacterField(message, HEADERSIZE + 238, 1, "E03APCCDT");
    fields[23] = fieldE03APCPPD =
    new CharacterField(message, HEADERSIZE + 239, 3, "E03APCPPD");
    fields[24] = fieldE03APCROY =
    new CharacterField(message, HEADERSIZE + 242, 3, "E03APCROY");
    fields[25] = fieldE03APCIPD =
    new CharacterField(message, HEADERSIZE + 245, 3, "E03APCIPD");
    fields[26] = fieldE03APCRES =
    new CharacterField(message, HEADERSIZE + 248, 1, "E03APCRES");
    fields[27] = fieldE03APCFTF =
    new CharacterField(message, HEADERSIZE + 249, 2, "E03APCFTF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03APCTYP using a String value.
  */
  public void setE03APCTYP(String newvalue)
  {
    fieldE03APCTYP.setString(newvalue);
  }

  /**
  * Get value of field E03APCTYP as a String.
  */
  public String getE03APCTYP()
  {
    return fieldE03APCTYP.getString();
  }

  /**
  * Set field E03TYPDES using a String value.
  */
  public void setE03TYPDES(String newvalue)
  {
    fieldE03TYPDES.setString(newvalue);
  }

  /**
  * Get value of field E03TYPDES as a String.
  */
  public String getE03TYPDES()
  {
    return fieldE03TYPDES.getString();
  }

  /**
  * Set field E03APCCDE using a String value.
  */
  public void setE03APCCDE(String newvalue)
  {
    fieldE03APCCDE.setString(newvalue);
  }

  /**
  * Get value of field E03APCCDE as a String.
  */
  public String getE03APCCDE()
  {
    return fieldE03APCCDE.getString();
  }

  /**
  * Set field E03DESCRI using a String value.
  */
  public void setE03DESCRI(String newvalue)
  {
    fieldE03DESCRI.setString(newvalue);
  }

  /**
  * Get value of field E03DESCRI as a String.
  */
  public String getE03DESCRI()
  {
    return fieldE03DESCRI.getString();
  }

  /**
  * Set field E03MERCAD using a String value.
  */
  public void setE03MERCAD(String newvalue)
  {
    fieldE03MERCAD.setString(newvalue);
  }

  /**
  * Get value of field E03MERCAD as a String.
  */
  public String getE03MERCAD()
  {
    return fieldE03MERCAD.getString();
  }

  /**
  * Set field E03APCBNK using a String value.
  */
  public void setE03APCBNK(String newvalue)
  {
    fieldE03APCBNK.setString(newvalue);
  }

  /**
  * Get value of field E03APCBNK as a String.
  */
  public String getE03APCBNK()
  {
    return fieldE03APCBNK.getString();
  }

  /**
  * Set field E03APCCCY using a String value.
  */
  public void setE03APCCCY(String newvalue)
  {
    fieldE03APCCCY.setString(newvalue);
  }

  /**
  * Get value of field E03APCCCY as a String.
  */
  public String getE03APCCCY()
  {
    return fieldE03APCCCY.getString();
  }

  /**
  * Set field E03APCGLN using a String value.
  */
  public void setE03APCGLN(String newvalue)
  {
    fieldE03APCGLN.setString(newvalue);
  }

  /**
  * Get value of field E03APCGLN as a String.
  */
  public String getE03APCGLN()
  {
    return fieldE03APCGLN.getString();
  }

  /**
  * Set numeric field E03APCGLN using a BigDecimal value.
  */
  public void setE03APCGLN(BigDecimal newvalue)
  {
    fieldE03APCGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03APCGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03APCGLN()
  {
    return fieldE03APCGLN.getBigDecimal();
  }

  /**
  * Set field E03GLMDSC using a String value.
  */
  public void setE03GLMDSC(String newvalue)
  {
    fieldE03GLMDSC.setString(newvalue);
  }

  /**
  * Get value of field E03GLMDSC as a String.
  */
  public String getE03GLMDSC()
  {
    return fieldE03GLMDSC.getString();
  }

  /**
  * Set field E03APCFRT using a String value.
  */
  public void setE03APCFRT(String newvalue)
  {
    fieldE03APCFRT.setString(newvalue);
  }

  /**
  * Get value of field E03APCFRT as a String.
  */
  public String getE03APCFRT()
  {
    return fieldE03APCFRT.getString();
  }

  /**
  * Set field E03APCFTY using a String value.
  */
  public void setE03APCFTY(String newvalue)
  {
    fieldE03APCFTY.setString(newvalue);
  }

  /**
  * Get value of field E03APCFTY as a String.
  */
  public String getE03APCFTY()
  {
    return fieldE03APCFTY.getString();
  }

  /**
  * Set field E03VARRTE using a String value.
  */
  public void setE03VARRTE(String newvalue)
  {
    fieldE03VARRTE.setString(newvalue);
  }

  /**
  * Get value of field E03VARRTE as a String.
  */
  public String getE03VARRTE()
  {
    return fieldE03VARRTE.getString();
  }

  /**
  * Set numeric field E03VARRTE using a BigDecimal value.
  */
  public void setE03VARRTE(BigDecimal newvalue)
  {
    fieldE03VARRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03VARRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03VARRTE()
  {
    return fieldE03VARRTE.getBigDecimal();
  }

  /**
  * Set field E03APCRRD using a String value.
  */
  public void setE03APCRRD(String newvalue)
  {
    fieldE03APCRRD.setString(newvalue);
  }

  /**
  * Get value of field E03APCRRD as a String.
  */
  public String getE03APCRRD()
  {
    return fieldE03APCRRD.getString();
  }

  /**
  * Set field E03APCCDT using a String value.
  */
  public void setE03APCCDT(String newvalue)
  {
    fieldE03APCCDT.setString(newvalue);
  }

  /**
  * Get value of field E03APCCDT as a String.
  */
  public String getE03APCCDT()
  {
    return fieldE03APCCDT.getString();
  }

  /**
  * Set field E03APCPPD using a String value.
  */
  public void setE03APCPPD(String newvalue)
  {
    fieldE03APCPPD.setString(newvalue);
  }

  /**
  * Get value of field E03APCPPD as a String.
  */
  public String getE03APCPPD()
  {
    return fieldE03APCPPD.getString();
  }

  /**
  * Set field E03APCROY using a String value.
  */
  public void setE03APCROY(String newvalue)
  {
    fieldE03APCROY.setString(newvalue);
  }

  /**
  * Get value of field E03APCROY as a String.
  */
  public String getE03APCROY()
  {
    return fieldE03APCROY.getString();
  }

  /**
  * Set field E03APCIPD using a String value.
  */
  public void setE03APCIPD(String newvalue)
  {
    fieldE03APCIPD.setString(newvalue);
  }

  /**
  * Get value of field E03APCIPD as a String.
  */
  public String getE03APCIPD()
  {
    return fieldE03APCIPD.getString();
  }

  /**
  * Set field E03APCRES using a String value.
  */
  public void setE03APCRES(String newvalue)
  {
    fieldE03APCRES.setString(newvalue);
  }

  /**
  * Get value of field E03APCRES as a String.
  */
  public String getE03APCRES()
  {
    return fieldE03APCRES.getString();
  }

  /**
  * Set field E03APCFTF using a String value.
  */
  public void setE03APCFTF(String newvalue)
  {
    fieldE03APCFTF.setString(newvalue);
  }

  /**
  * Get value of field E03APCFTF as a String.
  */
  public String getE03APCFTF()
  {
    return fieldE03APCFTF.getString();
  }

}
