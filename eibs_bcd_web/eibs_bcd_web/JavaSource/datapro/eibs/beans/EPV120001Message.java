package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV120001 physical file definition.
* 
* File level identifier is 1130611113308.
* Record format level identifier is 5A853681CA356.
*/

public class EPV120001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PVVICU",
                                     "E01PVVDOP",
                                     "E01PVVCAR",
                                     "E01PVVLNO",
                                     "E01PVVLCC",
                                     "E01PVVLTR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PVVICU",
                                   "E01PVVDOP",
                                   "E01PVVCAR",
                                   "E01PVVLNO",
                                   "E01PVVLCC",
                                   "E01PVVLTR"
                                 };
  final static String fid = "1130611113308";
  final static String rid = "5A853681CA356";
  final static String fmtname = "EPV120001";
  final int FIELDCOUNT = 15;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PVVICU = null;
  private CharacterField fieldE01PVVDOP = null;
  private DecimalField fieldE01PVVCAR = null;
  private DecimalField fieldE01PVVLNO = null;
  private DecimalField fieldE01PVVLCC = null;
  private DecimalField fieldE01PVVLTR = null;

  /**
  * Constructor for EPV120001Message.
  */
  public EPV120001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 92;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PVVICU =
    new DecimalField(message, HEADERSIZE + 42, 17, 2, "E01PVVICU");
    fields[10] = fieldE01PVVDOP =
    new CharacterField(message, HEADERSIZE + 59, 1, "E01PVVDOP");
    fields[11] = fieldE01PVVCAR =
    new DecimalField(message, HEADERSIZE + 60, 8, 3, "E01PVVCAR");
    fields[12] = fieldE01PVVLNO =
    new DecimalField(message, HEADERSIZE + 68, 8, 3, "E01PVVLNO");
    fields[13] = fieldE01PVVLCC =
    new DecimalField(message, HEADERSIZE + 76, 8, 3, "E01PVVLCC");
    fields[14] = fieldE01PVVLTR =
    new DecimalField(message, HEADERSIZE + 84, 8, 3, "E01PVVLTR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PVVICU using a String value.
  */
  public void setE01PVVICU(String newvalue)
  {
    fieldE01PVVICU.setString(newvalue);
  }

  /**
  * Get value of field E01PVVICU as a String.
  */
  public String getE01PVVICU()
  {
    return fieldE01PVVICU.getString();
  }

  /**
  * Set numeric field E01PVVICU using a BigDecimal value.
  */
  public void setE01PVVICU(BigDecimal newvalue)
  {
    fieldE01PVVICU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVVICU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVVICU()
  {
    return fieldE01PVVICU.getBigDecimal();
  }

  /**
  * Set field E01PVVDOP using a String value.
  */
  public void setE01PVVDOP(String newvalue)
  {
    fieldE01PVVDOP.setString(newvalue);
  }

  /**
  * Get value of field E01PVVDOP as a String.
  */
  public String getE01PVVDOP()
  {
    return fieldE01PVVDOP.getString();
  }

  /**
  * Set field E01PVVCAR using a String value.
  */
  public void setE01PVVCAR(String newvalue)
  {
    fieldE01PVVCAR.setString(newvalue);
  }

  /**
  * Get value of field E01PVVCAR as a String.
  */
  public String getE01PVVCAR()
  {
    return fieldE01PVVCAR.getString();
  }

  /**
  * Set numeric field E01PVVCAR using a BigDecimal value.
  */
  public void setE01PVVCAR(BigDecimal newvalue)
  {
    fieldE01PVVCAR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVVCAR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVVCAR()
  {
    return fieldE01PVVCAR.getBigDecimal();
  }

  /**
  * Set field E01PVVLNO using a String value.
  */
  public void setE01PVVLNO(String newvalue)
  {
    fieldE01PVVLNO.setString(newvalue);
  }

  /**
  * Get value of field E01PVVLNO as a String.
  */
  public String getE01PVVLNO()
  {
    return fieldE01PVVLNO.getString();
  }

  /**
  * Set numeric field E01PVVLNO using a BigDecimal value.
  */
  public void setE01PVVLNO(BigDecimal newvalue)
  {
    fieldE01PVVLNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVVLNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVVLNO()
  {
    return fieldE01PVVLNO.getBigDecimal();
  }

  /**
  * Set field E01PVVLCC using a String value.
  */
  public void setE01PVVLCC(String newvalue)
  {
    fieldE01PVVLCC.setString(newvalue);
  }

  /**
  * Get value of field E01PVVLCC as a String.
  */
  public String getE01PVVLCC()
  {
    return fieldE01PVVLCC.getString();
  }

  /**
  * Set numeric field E01PVVLCC using a BigDecimal value.
  */
  public void setE01PVVLCC(BigDecimal newvalue)
  {
    fieldE01PVVLCC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVVLCC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVVLCC()
  {
    return fieldE01PVVLCC.getBigDecimal();
  }

  /**
  * Set field E01PVVLTR using a String value.
  */
  public void setE01PVVLTR(String newvalue)
  {
    fieldE01PVVLTR.setString(newvalue);
  }

  /**
  * Get value of field E01PVVLTR as a String.
  */
  public String getE01PVVLTR()
  {
    return fieldE01PVVLTR.getString();
  }

  /**
  * Set numeric field E01PVVLTR using a BigDecimal value.
  */
  public void setE01PVVLTR(BigDecimal newvalue)
  {
    fieldE01PVVLTR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVVLTR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVVLTR()
  {
    return fieldE01PVVLTR.getBigDecimal();
  }

}
