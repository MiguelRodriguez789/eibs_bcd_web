package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EVFEVENT physical file definition.
* 
* File level identifier is 1101223110134.
* Record format level identifier is 2B99394B2B9DC.
*/

public class EVFEVENTMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EVFEVENT"
                                   };
  final static String tnames[] = {
                                   "EVFEVENT"
                                 };
  final static String fid = "1101223110134";
  final static String rid = "2B99394B2B9DC";
  final static String fmtname = "EVFEVENT";
  final int FIELDCOUNT = 1;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEVFEVENT = null;

  /**
  * Constructor for EVFEVENTMessage.
  */
  public EVFEVENTMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 300;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEVFEVENT =
    new CharacterField(message, HEADERSIZE + 0, 300, "EVFEVENT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EVFEVENT using a String value.
  */
  public void setEVFEVENT(String newvalue)
  {
    fieldEVFEVENT.setString(newvalue);
  }

  /**
  * Get value of field EVFEVENT as a String.
  */
  public String getEVFEVENT()
  {
    return fieldEVFEVENT.getString();
  }

}
