package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL054801 physical file definition.
* 
* File level identifier is 1180504120919.
* Record format level identifier is 5500FA446141C.
*/

public class EDL054801Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CTPNUM",
                                     "E01CTPCNV",
                                     "E01DSCCNV",
                                     "E01CTPTYP",
                                     "E01CTPDSC",
                                     "E01CTPOPM",
                                     "E01CTPOPD",
                                     "E01CTPOPY",
                                     "E01CTPAPV",
                                     "E01CTPUNI",
                                     "E01CTPRSV",
                                     "E01CTPURV",
                                     "E01CTPUTI",
                                     "E01CTPUUT",
                                     "E01CTPMDI",
                                     "E01CTPUDI",
                                     "E01CTPFL1",
                                     "E01CTPFL2",
                                     "E01CTPFL3",
                                     "E01CTPFL4",
                                     "E01CTPFL5",
                                     "E01CTPAM1",
                                     "E01CTPAM2",
                                     "E01CTPAM3",
                                     "E01CTPOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CTPNUM",
                                   "E01CTPCNV",
                                   "E01DSCCNV",
                                   "E01CTPTYP",
                                   "E01CTPDSC",
                                   "E01CTPOPM",
                                   "E01CTPOPD",
                                   "E01CTPOPY",
                                   "E01CTPAPV",
                                   "E01CTPUNI",
                                   "E01CTPRSV",
                                   "E01CTPURV",
                                   "E01CTPUTI",
                                   "E01CTPUUT",
                                   "E01CTPMDI",
                                   "E01CTPUDI",
                                   "E01CTPFL1",
                                   "E01CTPFL2",
                                   "E01CTPFL3",
                                   "E01CTPFL4",
                                   "E01CTPFL5",
                                   "E01CTPAM1",
                                   "E01CTPAM2",
                                   "E01CTPAM3",
                                   "E01CTPOPE"
                                 };
  final static String fid = "1180504120919";
  final static String rid = "5500FA446141C";
  final static String fmtname = "EDL054801";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CTPNUM = null;
  private CharacterField fieldE01CTPCNV = null;
  private CharacterField fieldE01DSCCNV = null;
  private CharacterField fieldE01CTPTYP = null;
  private CharacterField fieldE01CTPDSC = null;
  private DecimalField fieldE01CTPOPM = null;
  private DecimalField fieldE01CTPOPD = null;
  private DecimalField fieldE01CTPOPY = null;
  private DecimalField fieldE01CTPAPV = null;
  private DecimalField fieldE01CTPUNI = null;
  private DecimalField fieldE01CTPRSV = null;
  private DecimalField fieldE01CTPURV = null;
  private DecimalField fieldE01CTPUTI = null;
  private DecimalField fieldE01CTPUUT = null;
  private DecimalField fieldE01CTPMDI = null;
  private DecimalField fieldE01CTPUDI = null;
  private CharacterField fieldE01CTPFL1 = null;
  private CharacterField fieldE01CTPFL2 = null;
  private CharacterField fieldE01CTPFL3 = null;
  private CharacterField fieldE01CTPFL4 = null;
  private CharacterField fieldE01CTPFL5 = null;
  private DecimalField fieldE01CTPAM1 = null;
  private DecimalField fieldE01CTPAM2 = null;
  private DecimalField fieldE01CTPAM3 = null;
  private CharacterField fieldE01CTPOPE = null;

  /**
  * Constructor for EDL054801Message.
  */
  public EDL054801Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 311;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CTPNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CTPNUM");
    fields[10] = fieldE01CTPCNV =
    new CharacterField(message, HEADERSIZE + 55, 4, "E01CTPCNV");
    fields[11] = fieldE01DSCCNV =
    new CharacterField(message, HEADERSIZE + 59, 45, "E01DSCCNV");
    fields[12] = fieldE01CTPTYP =
    new CharacterField(message, HEADERSIZE + 104, 2, "E01CTPTYP");
    fields[13] = fieldE01CTPDSC =
    new CharacterField(message, HEADERSIZE + 106, 45, "E01CTPDSC");
    fields[14] = fieldE01CTPOPM =
    new DecimalField(message, HEADERSIZE + 151, 3, 0, "E01CTPOPM");
    fields[15] = fieldE01CTPOPD =
    new DecimalField(message, HEADERSIZE + 154, 3, 0, "E01CTPOPD");
    fields[16] = fieldE01CTPOPY =
    new DecimalField(message, HEADERSIZE + 157, 5, 0, "E01CTPOPY");
    fields[17] = fieldE01CTPAPV =
    new DecimalField(message, HEADERSIZE + 162, 17, 2, "E01CTPAPV");
    fields[18] = fieldE01CTPUNI =
    new DecimalField(message, HEADERSIZE + 179, 6, 0, "E01CTPUNI");
    fields[19] = fieldE01CTPRSV =
    new DecimalField(message, HEADERSIZE + 185, 17, 2, "E01CTPRSV");
    fields[20] = fieldE01CTPURV =
    new DecimalField(message, HEADERSIZE + 202, 6, 0, "E01CTPURV");
    fields[21] = fieldE01CTPUTI =
    new DecimalField(message, HEADERSIZE + 208, 17, 2, "E01CTPUTI");
    fields[22] = fieldE01CTPUUT =
    new DecimalField(message, HEADERSIZE + 225, 6, 0, "E01CTPUUT");
    fields[23] = fieldE01CTPMDI =
    new DecimalField(message, HEADERSIZE + 231, 17, 2, "E01CTPMDI");
    fields[24] = fieldE01CTPUDI =
    new DecimalField(message, HEADERSIZE + 248, 6, 0, "E01CTPUDI");
    fields[25] = fieldE01CTPFL1 =
    new CharacterField(message, HEADERSIZE + 254, 1, "E01CTPFL1");
    fields[26] = fieldE01CTPFL2 =
    new CharacterField(message, HEADERSIZE + 255, 1, "E01CTPFL2");
    fields[27] = fieldE01CTPFL3 =
    new CharacterField(message, HEADERSIZE + 256, 1, "E01CTPFL3");
    fields[28] = fieldE01CTPFL4 =
    new CharacterField(message, HEADERSIZE + 257, 1, "E01CTPFL4");
    fields[29] = fieldE01CTPFL5 =
    new CharacterField(message, HEADERSIZE + 258, 1, "E01CTPFL5");
    fields[30] = fieldE01CTPAM1 =
    new DecimalField(message, HEADERSIZE + 259, 17, 2, "E01CTPAM1");
    fields[31] = fieldE01CTPAM2 =
    new DecimalField(message, HEADERSIZE + 276, 17, 2, "E01CTPAM2");
    fields[32] = fieldE01CTPAM3 =
    new DecimalField(message, HEADERSIZE + 293, 17, 2, "E01CTPAM3");
    fields[33] = fieldE01CTPOPE =
    new CharacterField(message, HEADERSIZE + 310, 1, "E01CTPOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CTPNUM using a String value.
  */
  public void setE01CTPNUM(String newvalue)
  {
    fieldE01CTPNUM.setString(newvalue);
  }

  /**
  * Get value of field E01CTPNUM as a String.
  */
  public String getE01CTPNUM()
  {
    return fieldE01CTPNUM.getString();
  }

  /**
  * Set numeric field E01CTPNUM using a BigDecimal value.
  */
  public void setE01CTPNUM(BigDecimal newvalue)
  {
    fieldE01CTPNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPNUM()
  {
    return fieldE01CTPNUM.getBigDecimal();
  }

  /**
  * Set field E01CTPCNV using a String value.
  */
  public void setE01CTPCNV(String newvalue)
  {
    fieldE01CTPCNV.setString(newvalue);
  }

  /**
  * Get value of field E01CTPCNV as a String.
  */
  public String getE01CTPCNV()
  {
    return fieldE01CTPCNV.getString();
  }

  /**
  * Set field E01DSCCNV using a String value.
  */
  public void setE01DSCCNV(String newvalue)
  {
    fieldE01DSCCNV.setString(newvalue);
  }

  /**
  * Get value of field E01DSCCNV as a String.
  */
  public String getE01DSCCNV()
  {
    return fieldE01DSCCNV.getString();
  }

  /**
  * Set field E01CTPTYP using a String value.
  */
  public void setE01CTPTYP(String newvalue)
  {
    fieldE01CTPTYP.setString(newvalue);
  }

  /**
  * Get value of field E01CTPTYP as a String.
  */
  public String getE01CTPTYP()
  {
    return fieldE01CTPTYP.getString();
  }

  /**
  * Set field E01CTPDSC using a String value.
  */
  public void setE01CTPDSC(String newvalue)
  {
    fieldE01CTPDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CTPDSC as a String.
  */
  public String getE01CTPDSC()
  {
    return fieldE01CTPDSC.getString();
  }

  /**
  * Set field E01CTPOPM using a String value.
  */
  public void setE01CTPOPM(String newvalue)
  {
    fieldE01CTPOPM.setString(newvalue);
  }

  /**
  * Get value of field E01CTPOPM as a String.
  */
  public String getE01CTPOPM()
  {
    return fieldE01CTPOPM.getString();
  }

  /**
  * Set numeric field E01CTPOPM using a BigDecimal value.
  */
  public void setE01CTPOPM(BigDecimal newvalue)
  {
    fieldE01CTPOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPOPM()
  {
    return fieldE01CTPOPM.getBigDecimal();
  }

  /**
  * Set field E01CTPOPD using a String value.
  */
  public void setE01CTPOPD(String newvalue)
  {
    fieldE01CTPOPD.setString(newvalue);
  }

  /**
  * Get value of field E01CTPOPD as a String.
  */
  public String getE01CTPOPD()
  {
    return fieldE01CTPOPD.getString();
  }

  /**
  * Set numeric field E01CTPOPD using a BigDecimal value.
  */
  public void setE01CTPOPD(BigDecimal newvalue)
  {
    fieldE01CTPOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPOPD()
  {
    return fieldE01CTPOPD.getBigDecimal();
  }

  /**
  * Set field E01CTPOPY using a String value.
  */
  public void setE01CTPOPY(String newvalue)
  {
    fieldE01CTPOPY.setString(newvalue);
  }

  /**
  * Get value of field E01CTPOPY as a String.
  */
  public String getE01CTPOPY()
  {
    return fieldE01CTPOPY.getString();
  }

  /**
  * Set numeric field E01CTPOPY using a BigDecimal value.
  */
  public void setE01CTPOPY(BigDecimal newvalue)
  {
    fieldE01CTPOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPOPY()
  {
    return fieldE01CTPOPY.getBigDecimal();
  }

  /**
  * Set field E01CTPAPV using a String value.
  */
  public void setE01CTPAPV(String newvalue)
  {
    fieldE01CTPAPV.setString(newvalue);
  }

  /**
  * Get value of field E01CTPAPV as a String.
  */
  public String getE01CTPAPV()
  {
    return fieldE01CTPAPV.getString();
  }

  /**
  * Set numeric field E01CTPAPV using a BigDecimal value.
  */
  public void setE01CTPAPV(BigDecimal newvalue)
  {
    fieldE01CTPAPV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPAPV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPAPV()
  {
    return fieldE01CTPAPV.getBigDecimal();
  }

  /**
  * Set field E01CTPUNI using a String value.
  */
  public void setE01CTPUNI(String newvalue)
  {
    fieldE01CTPUNI.setString(newvalue);
  }

  /**
  * Get value of field E01CTPUNI as a String.
  */
  public String getE01CTPUNI()
  {
    return fieldE01CTPUNI.getString();
  }

  /**
  * Set numeric field E01CTPUNI using a BigDecimal value.
  */
  public void setE01CTPUNI(BigDecimal newvalue)
  {
    fieldE01CTPUNI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPUNI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPUNI()
  {
    return fieldE01CTPUNI.getBigDecimal();
  }

  /**
  * Set field E01CTPRSV using a String value.
  */
  public void setE01CTPRSV(String newvalue)
  {
    fieldE01CTPRSV.setString(newvalue);
  }

  /**
  * Get value of field E01CTPRSV as a String.
  */
  public String getE01CTPRSV()
  {
    return fieldE01CTPRSV.getString();
  }

  /**
  * Set numeric field E01CTPRSV using a BigDecimal value.
  */
  public void setE01CTPRSV(BigDecimal newvalue)
  {
    fieldE01CTPRSV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPRSV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPRSV()
  {
    return fieldE01CTPRSV.getBigDecimal();
  }

  /**
  * Set field E01CTPURV using a String value.
  */
  public void setE01CTPURV(String newvalue)
  {
    fieldE01CTPURV.setString(newvalue);
  }

  /**
  * Get value of field E01CTPURV as a String.
  */
  public String getE01CTPURV()
  {
    return fieldE01CTPURV.getString();
  }

  /**
  * Set numeric field E01CTPURV using a BigDecimal value.
  */
  public void setE01CTPURV(BigDecimal newvalue)
  {
    fieldE01CTPURV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPURV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPURV()
  {
    return fieldE01CTPURV.getBigDecimal();
  }

  /**
  * Set field E01CTPUTI using a String value.
  */
  public void setE01CTPUTI(String newvalue)
  {
    fieldE01CTPUTI.setString(newvalue);
  }

  /**
  * Get value of field E01CTPUTI as a String.
  */
  public String getE01CTPUTI()
  {
    return fieldE01CTPUTI.getString();
  }

  /**
  * Set numeric field E01CTPUTI using a BigDecimal value.
  */
  public void setE01CTPUTI(BigDecimal newvalue)
  {
    fieldE01CTPUTI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPUTI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPUTI()
  {
    return fieldE01CTPUTI.getBigDecimal();
  }

  /**
  * Set field E01CTPUUT using a String value.
  */
  public void setE01CTPUUT(String newvalue)
  {
    fieldE01CTPUUT.setString(newvalue);
  }

  /**
  * Get value of field E01CTPUUT as a String.
  */
  public String getE01CTPUUT()
  {
    return fieldE01CTPUUT.getString();
  }

  /**
  * Set numeric field E01CTPUUT using a BigDecimal value.
  */
  public void setE01CTPUUT(BigDecimal newvalue)
  {
    fieldE01CTPUUT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPUUT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPUUT()
  {
    return fieldE01CTPUUT.getBigDecimal();
  }

  /**
  * Set field E01CTPMDI using a String value.
  */
  public void setE01CTPMDI(String newvalue)
  {
    fieldE01CTPMDI.setString(newvalue);
  }

  /**
  * Get value of field E01CTPMDI as a String.
  */
  public String getE01CTPMDI()
  {
    return fieldE01CTPMDI.getString();
  }

  /**
  * Set numeric field E01CTPMDI using a BigDecimal value.
  */
  public void setE01CTPMDI(BigDecimal newvalue)
  {
    fieldE01CTPMDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPMDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPMDI()
  {
    return fieldE01CTPMDI.getBigDecimal();
  }

  /**
  * Set field E01CTPUDI using a String value.
  */
  public void setE01CTPUDI(String newvalue)
  {
    fieldE01CTPUDI.setString(newvalue);
  }

  /**
  * Get value of field E01CTPUDI as a String.
  */
  public String getE01CTPUDI()
  {
    return fieldE01CTPUDI.getString();
  }

  /**
  * Set numeric field E01CTPUDI using a BigDecimal value.
  */
  public void setE01CTPUDI(BigDecimal newvalue)
  {
    fieldE01CTPUDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPUDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPUDI()
  {
    return fieldE01CTPUDI.getBigDecimal();
  }

  /**
  * Set field E01CTPFL1 using a String value.
  */
  public void setE01CTPFL1(String newvalue)
  {
    fieldE01CTPFL1.setString(newvalue);
  }

  /**
  * Get value of field E01CTPFL1 as a String.
  */
  public String getE01CTPFL1()
  {
    return fieldE01CTPFL1.getString();
  }

  /**
  * Set field E01CTPFL2 using a String value.
  */
  public void setE01CTPFL2(String newvalue)
  {
    fieldE01CTPFL2.setString(newvalue);
  }

  /**
  * Get value of field E01CTPFL2 as a String.
  */
  public String getE01CTPFL2()
  {
    return fieldE01CTPFL2.getString();
  }

  /**
  * Set field E01CTPFL3 using a String value.
  */
  public void setE01CTPFL3(String newvalue)
  {
    fieldE01CTPFL3.setString(newvalue);
  }

  /**
  * Get value of field E01CTPFL3 as a String.
  */
  public String getE01CTPFL3()
  {
    return fieldE01CTPFL3.getString();
  }

  /**
  * Set field E01CTPFL4 using a String value.
  */
  public void setE01CTPFL4(String newvalue)
  {
    fieldE01CTPFL4.setString(newvalue);
  }

  /**
  * Get value of field E01CTPFL4 as a String.
  */
  public String getE01CTPFL4()
  {
    return fieldE01CTPFL4.getString();
  }

  /**
  * Set field E01CTPFL5 using a String value.
  */
  public void setE01CTPFL5(String newvalue)
  {
    fieldE01CTPFL5.setString(newvalue);
  }

  /**
  * Get value of field E01CTPFL5 as a String.
  */
  public String getE01CTPFL5()
  {
    return fieldE01CTPFL5.getString();
  }

  /**
  * Set field E01CTPAM1 using a String value.
  */
  public void setE01CTPAM1(String newvalue)
  {
    fieldE01CTPAM1.setString(newvalue);
  }

  /**
  * Get value of field E01CTPAM1 as a String.
  */
  public String getE01CTPAM1()
  {
    return fieldE01CTPAM1.getString();
  }

  /**
  * Set numeric field E01CTPAM1 using a BigDecimal value.
  */
  public void setE01CTPAM1(BigDecimal newvalue)
  {
    fieldE01CTPAM1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPAM1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPAM1()
  {
    return fieldE01CTPAM1.getBigDecimal();
  }

  /**
  * Set field E01CTPAM2 using a String value.
  */
  public void setE01CTPAM2(String newvalue)
  {
    fieldE01CTPAM2.setString(newvalue);
  }

  /**
  * Get value of field E01CTPAM2 as a String.
  */
  public String getE01CTPAM2()
  {
    return fieldE01CTPAM2.getString();
  }

  /**
  * Set numeric field E01CTPAM2 using a BigDecimal value.
  */
  public void setE01CTPAM2(BigDecimal newvalue)
  {
    fieldE01CTPAM2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPAM2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPAM2()
  {
    return fieldE01CTPAM2.getBigDecimal();
  }

  /**
  * Set field E01CTPAM3 using a String value.
  */
  public void setE01CTPAM3(String newvalue)
  {
    fieldE01CTPAM3.setString(newvalue);
  }

  /**
  * Get value of field E01CTPAM3 as a String.
  */
  public String getE01CTPAM3()
  {
    return fieldE01CTPAM3.getString();
  }

  /**
  * Set numeric field E01CTPAM3 using a BigDecimal value.
  */
  public void setE01CTPAM3(BigDecimal newvalue)
  {
    fieldE01CTPAM3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CTPAM3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CTPAM3()
  {
    return fieldE01CTPAM3.getBigDecimal();
  }

  /**
  * Set field E01CTPOPE using a String value.
  */
  public void setE01CTPOPE(String newvalue)
  {
    fieldE01CTPOPE.setString(newvalue);
  }

  /**
  * Get value of field E01CTPOPE as a String.
  */
  public String getE01CTPOPE()
  {
    return fieldE01CTPOPE.getString();
  }

}
