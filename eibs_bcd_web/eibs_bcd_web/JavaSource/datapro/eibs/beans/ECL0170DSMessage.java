package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL0170DS physical file definition.
* 
* File level identifier is 1130611112848.
* Record format level identifier is 34EF2BE5509AB.
*/

public class ECL0170DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CODCLI",
                                     "E01CTAORI",
                                     "E01TARCRE",
                                     "E01MTOPAG",
                                     "E01CODSEG",
                                     "E01FECHAV",
                                     "E01TIIDCL",
                                     "E01IDNCLI",
                                     "E01NOMCLI",
                                     "E01REFERE",
                                     "E01AUTORI"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CODCLI",
                                   "E01CTAORI",
                                   "E01TARCRE",
                                   "E01MTOPAG",
                                   "E01CODSEG",
                                   "E01FECHAV",
                                   "E01TIIDCL",
                                   "E01IDNCLI",
                                   "E01NOMCLI",
                                   "E01REFERE",
                                   "E01AUTORI"
                                 };
  final static String fid = "1130611112848";
  final static String rid = "34EF2BE5509AB";
  final static String fmtname = "ECL0170DS";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CODCLI = null;
  private CharacterField fieldE01CTAORI = null;
  private CharacterField fieldE01TARCRE = null;
  private DecimalField fieldE01MTOPAG = null;
  private DecimalField fieldE01CODSEG = null;
  private CharacterField fieldE01FECHAV = null;
  private CharacterField fieldE01TIIDCL = null;
  private CharacterField fieldE01IDNCLI = null;
  private CharacterField fieldE01NOMCLI = null;
  private DecimalField fieldE01REFERE = null;
  private CharacterField fieldE01AUTORI = null;

  /**
  * Constructor for ECL0170DSMessage.
  */
  public ECL0170DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 205;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CODCLI =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01CODCLI");
    fields[10] = fieldE01CTAORI =
    new CharacterField(message, HEADERSIZE + 52, 20, "E01CTAORI");
    fields[11] = fieldE01TARCRE =
    new CharacterField(message, HEADERSIZE + 72, 20, "E01TARCRE");
    fields[12] = fieldE01MTOPAG =
    new DecimalField(message, HEADERSIZE + 92, 17, 2, "E01MTOPAG");
    fields[13] = fieldE01CODSEG =
    new DecimalField(message, HEADERSIZE + 109, 4, 0, "E01CODSEG");
    fields[14] = fieldE01FECHAV =
    new CharacterField(message, HEADERSIZE + 113, 8, "E01FECHAV");
    fields[15] = fieldE01TIIDCL =
    new CharacterField(message, HEADERSIZE + 121, 1, "E01TIIDCL");
    fields[16] = fieldE01IDNCLI =
    new CharacterField(message, HEADERSIZE + 122, 15, "E01IDNCLI");
    fields[17] = fieldE01NOMCLI =
    new CharacterField(message, HEADERSIZE + 137, 45, "E01NOMCLI");
    fields[18] = fieldE01REFERE =
    new DecimalField(message, HEADERSIZE + 182, 13, 0, "E01REFERE");
    fields[19] = fieldE01AUTORI =
    new CharacterField(message, HEADERSIZE + 195, 10, "E01AUTORI");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CODCLI using a String value.
  */
  public void setE01CODCLI(String newvalue)
  {
    fieldE01CODCLI.setString(newvalue);
  }

  /**
  * Get value of field E01CODCLI as a String.
  */
  public String getE01CODCLI()
  {
    return fieldE01CODCLI.getString();
  }

  /**
  * Set field E01CTAORI using a String value.
  */
  public void setE01CTAORI(String newvalue)
  {
    fieldE01CTAORI.setString(newvalue);
  }

  /**
  * Get value of field E01CTAORI as a String.
  */
  public String getE01CTAORI()
  {
    return fieldE01CTAORI.getString();
  }

  /**
  * Set field E01TARCRE using a String value.
  */
  public void setE01TARCRE(String newvalue)
  {
    fieldE01TARCRE.setString(newvalue);
  }

  /**
  * Get value of field E01TARCRE as a String.
  */
  public String getE01TARCRE()
  {
    return fieldE01TARCRE.getString();
  }

  /**
  * Set field E01MTOPAG using a String value.
  */
  public void setE01MTOPAG(String newvalue)
  {
    fieldE01MTOPAG.setString(newvalue);
  }

  /**
  * Get value of field E01MTOPAG as a String.
  */
  public String getE01MTOPAG()
  {
    return fieldE01MTOPAG.getString();
  }

  /**
  * Set numeric field E01MTOPAG using a BigDecimal value.
  */
  public void setE01MTOPAG(BigDecimal newvalue)
  {
    fieldE01MTOPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MTOPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MTOPAG()
  {
    return fieldE01MTOPAG.getBigDecimal();
  }

  /**
  * Set field E01CODSEG using a String value.
  */
  public void setE01CODSEG(String newvalue)
  {
    fieldE01CODSEG.setString(newvalue);
  }

  /**
  * Get value of field E01CODSEG as a String.
  */
  public String getE01CODSEG()
  {
    return fieldE01CODSEG.getString();
  }

  /**
  * Set numeric field E01CODSEG using a BigDecimal value.
  */
  public void setE01CODSEG(BigDecimal newvalue)
  {
    fieldE01CODSEG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CODSEG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CODSEG()
  {
    return fieldE01CODSEG.getBigDecimal();
  }

  /**
  * Set field E01FECHAV using a String value.
  */
  public void setE01FECHAV(String newvalue)
  {
    fieldE01FECHAV.setString(newvalue);
  }

  /**
  * Get value of field E01FECHAV as a String.
  */
  public String getE01FECHAV()
  {
    return fieldE01FECHAV.getString();
  }

  /**
  * Set field E01TIIDCL using a String value.
  */
  public void setE01TIIDCL(String newvalue)
  {
    fieldE01TIIDCL.setString(newvalue);
  }

  /**
  * Get value of field E01TIIDCL as a String.
  */
  public String getE01TIIDCL()
  {
    return fieldE01TIIDCL.getString();
  }

  /**
  * Set field E01IDNCLI using a String value.
  */
  public void setE01IDNCLI(String newvalue)
  {
    fieldE01IDNCLI.setString(newvalue);
  }

  /**
  * Get value of field E01IDNCLI as a String.
  */
  public String getE01IDNCLI()
  {
    return fieldE01IDNCLI.getString();
  }

  /**
  * Set field E01NOMCLI using a String value.
  */
  public void setE01NOMCLI(String newvalue)
  {
    fieldE01NOMCLI.setString(newvalue);
  }

  /**
  * Get value of field E01NOMCLI as a String.
  */
  public String getE01NOMCLI()
  {
    return fieldE01NOMCLI.getString();
  }

  /**
  * Set field E01REFERE using a String value.
  */
  public void setE01REFERE(String newvalue)
  {
    fieldE01REFERE.setString(newvalue);
  }

  /**
  * Get value of field E01REFERE as a String.
  */
  public String getE01REFERE()
  {
    return fieldE01REFERE.getString();
  }

  /**
  * Set numeric field E01REFERE using a BigDecimal value.
  */
  public void setE01REFERE(BigDecimal newvalue)
  {
    fieldE01REFERE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01REFERE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01REFERE()
  {
    return fieldE01REFERE.getBigDecimal();
  }

  /**
  * Set field E01AUTORI using a String value.
  */
  public void setE01AUTORI(String newvalue)
  {
    fieldE01AUTORI.setString(newvalue);
  }

  /**
  * Get value of field E01AUTORI as a String.
  */
  public String getE01AUTORI()
  {
    return fieldE01AUTORI.getString();
  }

}
