package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL037203 physical file definition.
* 
* File level identifier is 1190420002138.
* Record format level identifier is 44FAC878E5E4A.
*/

public class EDL037203Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03DEAACC",
                                     "E03DEAACD",
                                     "E03DEAPRO",
                                     "E03DEATYP",
                                     "E03DEACUN",
                                     "E03DEABNK",
                                     "E03DEABRN",
                                     "E03DEACCY",
                                     "E03DEAGLN",
                                     "E03CUSNA1"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03DEAACC",
                                   "E03DEAACD",
                                   "E03DEAPRO",
                                   "E03DEATYP",
                                   "E03DEACUN",
                                   "E03DEABNK",
                                   "E03DEABRN",
                                   "E03DEACCY",
                                   "E03DEAGLN",
                                   "E03CUSNA1"
                                 };
  final static String fid = "1190420002138";
  final static String rid = "44FAC878E5E4A";
  final static String fmtname = "EDL037203";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldE03DEAACC = null;
  private CharacterField fieldE03DEAACD = null;
  private CharacterField fieldE03DEAPRO = null;
  private CharacterField fieldE03DEATYP = null;
  private DecimalField fieldE03DEACUN = null;
  private CharacterField fieldE03DEABNK = null;
  private DecimalField fieldE03DEABRN = null;
  private CharacterField fieldE03DEACCY = null;
  private DecimalField fieldE03DEAGLN = null;
  private CharacterField fieldE03CUSNA1 = null;

  /**
  * Constructor for EDL037203Message.
  */
  public EDL037203Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 162;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E03DEAACC");
    fields[10] = fieldE03DEAACD =
    new CharacterField(message, HEADERSIZE + 55, 2, "E03DEAACD");
    fields[11] = fieldE03DEAPRO =
    new CharacterField(message, HEADERSIZE + 57, 4, "E03DEAPRO");
    fields[12] = fieldE03DEATYP =
    new CharacterField(message, HEADERSIZE + 61, 4, "E03DEATYP");
    fields[13] = fieldE03DEACUN =
    new DecimalField(message, HEADERSIZE + 65, 10, 0, "E03DEACUN");
    fields[14] = fieldE03DEABNK =
    new CharacterField(message, HEADERSIZE + 75, 2, "E03DEABNK");
    fields[15] = fieldE03DEABRN =
    new DecimalField(message, HEADERSIZE + 77, 5, 0, "E03DEABRN");
    fields[16] = fieldE03DEACCY =
    new CharacterField(message, HEADERSIZE + 82, 3, "E03DEACCY");
    fields[17] = fieldE03DEAGLN =
    new DecimalField(message, HEADERSIZE + 85, 17, 0, "E03DEAGLN");
    fields[18] = fieldE03CUSNA1 =
    new CharacterField(message, HEADERSIZE + 102, 60, "E03CUSNA1");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03DEAACC using a String value.
  */
  public void setE03DEAACC(String newvalue)
  {
    fieldE03DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E03DEAACC as a String.
  */
  public String getE03DEAACC()
  {
    return fieldE03DEAACC.getString();
  }

  /**
  * Set numeric field E03DEAACC using a BigDecimal value.
  */
  public void setE03DEAACC(BigDecimal newvalue)
  {
    fieldE03DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEAACC()
  {
    return fieldE03DEAACC.getBigDecimal();
  }

  /**
  * Set field E03DEAACD using a String value.
  */
  public void setE03DEAACD(String newvalue)
  {
    fieldE03DEAACD.setString(newvalue);
  }

  /**
  * Get value of field E03DEAACD as a String.
  */
  public String getE03DEAACD()
  {
    return fieldE03DEAACD.getString();
  }

  /**
  * Set field E03DEAPRO using a String value.
  */
  public void setE03DEAPRO(String newvalue)
  {
    fieldE03DEAPRO.setString(newvalue);
  }

  /**
  * Get value of field E03DEAPRO as a String.
  */
  public String getE03DEAPRO()
  {
    return fieldE03DEAPRO.getString();
  }

  /**
  * Set field E03DEATYP using a String value.
  */
  public void setE03DEATYP(String newvalue)
  {
    fieldE03DEATYP.setString(newvalue);
  }

  /**
  * Get value of field E03DEATYP as a String.
  */
  public String getE03DEATYP()
  {
    return fieldE03DEATYP.getString();
  }

  /**
  * Set field E03DEACUN using a String value.
  */
  public void setE03DEACUN(String newvalue)
  {
    fieldE03DEACUN.setString(newvalue);
  }

  /**
  * Get value of field E03DEACUN as a String.
  */
  public String getE03DEACUN()
  {
    return fieldE03DEACUN.getString();
  }

  /**
  * Set numeric field E03DEACUN using a BigDecimal value.
  */
  public void setE03DEACUN(BigDecimal newvalue)
  {
    fieldE03DEACUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEACUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEACUN()
  {
    return fieldE03DEACUN.getBigDecimal();
  }

  /**
  * Set field E03DEABNK using a String value.
  */
  public void setE03DEABNK(String newvalue)
  {
    fieldE03DEABNK.setString(newvalue);
  }

  /**
  * Get value of field E03DEABNK as a String.
  */
  public String getE03DEABNK()
  {
    return fieldE03DEABNK.getString();
  }

  /**
  * Set field E03DEABRN using a String value.
  */
  public void setE03DEABRN(String newvalue)
  {
    fieldE03DEABRN.setString(newvalue);
  }

  /**
  * Get value of field E03DEABRN as a String.
  */
  public String getE03DEABRN()
  {
    return fieldE03DEABRN.getString();
  }

  /**
  * Set numeric field E03DEABRN using a BigDecimal value.
  */
  public void setE03DEABRN(BigDecimal newvalue)
  {
    fieldE03DEABRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEABRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEABRN()
  {
    return fieldE03DEABRN.getBigDecimal();
  }

  /**
  * Set field E03DEACCY using a String value.
  */
  public void setE03DEACCY(String newvalue)
  {
    fieldE03DEACCY.setString(newvalue);
  }

  /**
  * Get value of field E03DEACCY as a String.
  */
  public String getE03DEACCY()
  {
    return fieldE03DEACCY.getString();
  }

  /**
  * Set field E03DEAGLN using a String value.
  */
  public void setE03DEAGLN(String newvalue)
  {
    fieldE03DEAGLN.setString(newvalue);
  }

  /**
  * Get value of field E03DEAGLN as a String.
  */
  public String getE03DEAGLN()
  {
    return fieldE03DEAGLN.getString();
  }

  /**
  * Set numeric field E03DEAGLN using a BigDecimal value.
  */
  public void setE03DEAGLN(BigDecimal newvalue)
  {
    fieldE03DEAGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEAGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEAGLN()
  {
    return fieldE03DEAGLN.getBigDecimal();
  }

  /**
  * Set field E03CUSNA1 using a String value.
  */
  public void setE03CUSNA1(String newvalue)
  {
    fieldE03CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E03CUSNA1 as a String.
  */
  public String getE03CUSNA1()
  {
    return fieldE03CUSNA1.getString();
  }

}
