package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECA001003 physical file definition.
* 
* File level identifier is 1171114191108.
* Record format level identifier is 47FF3853FDCC4.
*/

public class ECA001003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03EXCBNK",
                                     "E03EXCATY",
                                     "E03EXCTBL",
                                     "E03EXCVND",
                                     "E03EXCNOE",
                                     "E03EXCQTY",
                                     "D03EXCTBL",
                                     "D03EXCNOE",
                                     "D03EXCVND",
                                     "E03EXCCMM",
                                     "E03EXCCDD",
                                     "E03EXCCYY",
                                     "E03EXCCTT",
                                     "E03EXCCMU",
                                     "E03EXCLMM",
                                     "E03EXCLDD",
                                     "E03EXCLYY",
                                     "E03EXCLTT",
                                     "E03EXCLMU",
                                     "E03NUMREC",
                                     "E03INDOPE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03EXCBNK",
                                   "E03EXCATY",
                                   "E03EXCTBL",
                                   "E03EXCVND",
                                   "E03EXCNOE",
                                   "E03EXCQTY",
                                   "D03EXCTBL",
                                   "D03EXCNOE",
                                   "D03EXCVND",
                                   "E03EXCCMM",
                                   "E03EXCCDD",
                                   "E03EXCCYY",
                                   "E03EXCCTT",
                                   "E03EXCCMU",
                                   "E03EXCLMM",
                                   "E03EXCLDD",
                                   "E03EXCLYY",
                                   "E03EXCLTT",
                                   "E03EXCLMU",
                                   "E03NUMREC",
                                   "E03INDOPE"
                                 };
  final static String fid = "1171114191108";
  final static String rid = "47FF3853FDCC4";
  final static String fmtname = "ECA001003";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03EXCBNK = null;
  private CharacterField fieldE03EXCATY = null;
  private CharacterField fieldE03EXCTBL = null;
  private CharacterField fieldE03EXCVND = null;
  private CharacterField fieldE03EXCNOE = null;
  private DecimalField fieldE03EXCQTY = null;
  private CharacterField fieldD03EXCTBL = null;
  private CharacterField fieldD03EXCNOE = null;
  private CharacterField fieldD03EXCVND = null;
  private DecimalField fieldE03EXCCMM = null;
  private DecimalField fieldE03EXCCDD = null;
  private DecimalField fieldE03EXCCYY = null;
  private CharacterField fieldE03EXCCTT = null;
  private CharacterField fieldE03EXCCMU = null;
  private DecimalField fieldE03EXCLMM = null;
  private DecimalField fieldE03EXCLDD = null;
  private DecimalField fieldE03EXCLYY = null;
  private CharacterField fieldE03EXCLTT = null;
  private CharacterField fieldE03EXCLMU = null;
  private DecimalField fieldE03NUMREC = null;
  private CharacterField fieldE03INDOPE = null;

  /**
  * Constructor for ECA001003Message.
  */
  public ECA001003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 308;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03EXCBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03EXCBNK");
    fields[10] = fieldE03EXCATY =
    new CharacterField(message, HEADERSIZE + 44, 4, "E03EXCATY");
    fields[11] = fieldE03EXCTBL =
    new CharacterField(message, HEADERSIZE + 48, 2, "E03EXCTBL");
    fields[12] = fieldE03EXCVND =
    new CharacterField(message, HEADERSIZE + 50, 4, "E03EXCVND");
    fields[13] = fieldE03EXCNOE =
    new CharacterField(message, HEADERSIZE + 54, 10, "E03EXCNOE");
    fields[14] = fieldE03EXCQTY =
    new DecimalField(message, HEADERSIZE + 64, 6, 0, "E03EXCQTY");
    fields[15] = fieldD03EXCTBL =
    new CharacterField(message, HEADERSIZE + 70, 45, "D03EXCTBL");
    fields[16] = fieldD03EXCNOE =
    new CharacterField(message, HEADERSIZE + 115, 45, "D03EXCNOE");
    fields[17] = fieldD03EXCVND =
    new CharacterField(message, HEADERSIZE + 160, 45, "D03EXCVND");
    fields[18] = fieldE03EXCCMM =
    new DecimalField(message, HEADERSIZE + 205, 3, 0, "E03EXCCMM");
    fields[19] = fieldE03EXCCDD =
    new DecimalField(message, HEADERSIZE + 208, 3, 0, "E03EXCCDD");
    fields[20] = fieldE03EXCCYY =
    new DecimalField(message, HEADERSIZE + 211, 5, 0, "E03EXCCYY");
    fields[21] = fieldE03EXCCTT =
    new CharacterField(message, HEADERSIZE + 216, 26, "E03EXCCTT");
    fields[22] = fieldE03EXCCMU =
    new CharacterField(message, HEADERSIZE + 242, 10, "E03EXCCMU");
    fields[23] = fieldE03EXCLMM =
    new DecimalField(message, HEADERSIZE + 252, 3, 0, "E03EXCLMM");
    fields[24] = fieldE03EXCLDD =
    new DecimalField(message, HEADERSIZE + 255, 3, 0, "E03EXCLDD");
    fields[25] = fieldE03EXCLYY =
    new DecimalField(message, HEADERSIZE + 258, 5, 0, "E03EXCLYY");
    fields[26] = fieldE03EXCLTT =
    new CharacterField(message, HEADERSIZE + 263, 26, "E03EXCLTT");
    fields[27] = fieldE03EXCLMU =
    new CharacterField(message, HEADERSIZE + 289, 10, "E03EXCLMU");
    fields[28] = fieldE03NUMREC =
    new DecimalField(message, HEADERSIZE + 299, 8, 0, "E03NUMREC");
    fields[29] = fieldE03INDOPE =
    new CharacterField(message, HEADERSIZE + 307, 1, "E03INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03EXCBNK using a String value.
  */
  public void setE03EXCBNK(String newvalue)
  {
    fieldE03EXCBNK.setString(newvalue);
  }

  /**
  * Get value of field E03EXCBNK as a String.
  */
  public String getE03EXCBNK()
  {
    return fieldE03EXCBNK.getString();
  }

  /**
  * Set field E03EXCATY using a String value.
  */
  public void setE03EXCATY(String newvalue)
  {
    fieldE03EXCATY.setString(newvalue);
  }

  /**
  * Get value of field E03EXCATY as a String.
  */
  public String getE03EXCATY()
  {
    return fieldE03EXCATY.getString();
  }

  /**
  * Set field E03EXCTBL using a String value.
  */
  public void setE03EXCTBL(String newvalue)
  {
    fieldE03EXCTBL.setString(newvalue);
  }

  /**
  * Get value of field E03EXCTBL as a String.
  */
  public String getE03EXCTBL()
  {
    return fieldE03EXCTBL.getString();
  }

  /**
  * Set field E03EXCVND using a String value.
  */
  public void setE03EXCVND(String newvalue)
  {
    fieldE03EXCVND.setString(newvalue);
  }

  /**
  * Get value of field E03EXCVND as a String.
  */
  public String getE03EXCVND()
  {
    return fieldE03EXCVND.getString();
  }

  /**
  * Set field E03EXCNOE using a String value.
  */
  public void setE03EXCNOE(String newvalue)
  {
    fieldE03EXCNOE.setString(newvalue);
  }

  /**
  * Get value of field E03EXCNOE as a String.
  */
  public String getE03EXCNOE()
  {
    return fieldE03EXCNOE.getString();
  }

  /**
  * Set field E03EXCQTY using a String value.
  */
  public void setE03EXCQTY(String newvalue)
  {
    fieldE03EXCQTY.setString(newvalue);
  }

  /**
  * Get value of field E03EXCQTY as a String.
  */
  public String getE03EXCQTY()
  {
    return fieldE03EXCQTY.getString();
  }

  /**
  * Set numeric field E03EXCQTY using a BigDecimal value.
  */
  public void setE03EXCQTY(BigDecimal newvalue)
  {
    fieldE03EXCQTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCQTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCQTY()
  {
    return fieldE03EXCQTY.getBigDecimal();
  }

  /**
  * Set field D03EXCTBL using a String value.
  */
  public void setD03EXCTBL(String newvalue)
  {
    fieldD03EXCTBL.setString(newvalue);
  }

  /**
  * Get value of field D03EXCTBL as a String.
  */
  public String getD03EXCTBL()
  {
    return fieldD03EXCTBL.getString();
  }

  /**
  * Set field D03EXCNOE using a String value.
  */
  public void setD03EXCNOE(String newvalue)
  {
    fieldD03EXCNOE.setString(newvalue);
  }

  /**
  * Get value of field D03EXCNOE as a String.
  */
  public String getD03EXCNOE()
  {
    return fieldD03EXCNOE.getString();
  }

  /**
  * Set field D03EXCVND using a String value.
  */
  public void setD03EXCVND(String newvalue)
  {
    fieldD03EXCVND.setString(newvalue);
  }

  /**
  * Get value of field D03EXCVND as a String.
  */
  public String getD03EXCVND()
  {
    return fieldD03EXCVND.getString();
  }

  /**
  * Set field E03EXCCMM using a String value.
  */
  public void setE03EXCCMM(String newvalue)
  {
    fieldE03EXCCMM.setString(newvalue);
  }

  /**
  * Get value of field E03EXCCMM as a String.
  */
  public String getE03EXCCMM()
  {
    return fieldE03EXCCMM.getString();
  }

  /**
  * Set numeric field E03EXCCMM using a BigDecimal value.
  */
  public void setE03EXCCMM(BigDecimal newvalue)
  {
    fieldE03EXCCMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCCMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCCMM()
  {
    return fieldE03EXCCMM.getBigDecimal();
  }

  /**
  * Set field E03EXCCDD using a String value.
  */
  public void setE03EXCCDD(String newvalue)
  {
    fieldE03EXCCDD.setString(newvalue);
  }

  /**
  * Get value of field E03EXCCDD as a String.
  */
  public String getE03EXCCDD()
  {
    return fieldE03EXCCDD.getString();
  }

  /**
  * Set numeric field E03EXCCDD using a BigDecimal value.
  */
  public void setE03EXCCDD(BigDecimal newvalue)
  {
    fieldE03EXCCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCCDD()
  {
    return fieldE03EXCCDD.getBigDecimal();
  }

  /**
  * Set field E03EXCCYY using a String value.
  */
  public void setE03EXCCYY(String newvalue)
  {
    fieldE03EXCCYY.setString(newvalue);
  }

  /**
  * Get value of field E03EXCCYY as a String.
  */
  public String getE03EXCCYY()
  {
    return fieldE03EXCCYY.getString();
  }

  /**
  * Set numeric field E03EXCCYY using a BigDecimal value.
  */
  public void setE03EXCCYY(BigDecimal newvalue)
  {
    fieldE03EXCCYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCCYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCCYY()
  {
    return fieldE03EXCCYY.getBigDecimal();
  }

  /**
  * Set field E03EXCCTT using a String value.
  */
  public void setE03EXCCTT(String newvalue)
  {
    fieldE03EXCCTT.setString(newvalue);
  }

  /**
  * Get value of field E03EXCCTT as a String.
  */
  public String getE03EXCCTT()
  {
    return fieldE03EXCCTT.getString();
  }

  /**
  * Set field E03EXCCMU using a String value.
  */
  public void setE03EXCCMU(String newvalue)
  {
    fieldE03EXCCMU.setString(newvalue);
  }

  /**
  * Get value of field E03EXCCMU as a String.
  */
  public String getE03EXCCMU()
  {
    return fieldE03EXCCMU.getString();
  }

  /**
  * Set field E03EXCLMM using a String value.
  */
  public void setE03EXCLMM(String newvalue)
  {
    fieldE03EXCLMM.setString(newvalue);
  }

  /**
  * Get value of field E03EXCLMM as a String.
  */
  public String getE03EXCLMM()
  {
    return fieldE03EXCLMM.getString();
  }

  /**
  * Set numeric field E03EXCLMM using a BigDecimal value.
  */
  public void setE03EXCLMM(BigDecimal newvalue)
  {
    fieldE03EXCLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCLMM()
  {
    return fieldE03EXCLMM.getBigDecimal();
  }

  /**
  * Set field E03EXCLDD using a String value.
  */
  public void setE03EXCLDD(String newvalue)
  {
    fieldE03EXCLDD.setString(newvalue);
  }

  /**
  * Get value of field E03EXCLDD as a String.
  */
  public String getE03EXCLDD()
  {
    return fieldE03EXCLDD.getString();
  }

  /**
  * Set numeric field E03EXCLDD using a BigDecimal value.
  */
  public void setE03EXCLDD(BigDecimal newvalue)
  {
    fieldE03EXCLDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCLDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCLDD()
  {
    return fieldE03EXCLDD.getBigDecimal();
  }

  /**
  * Set field E03EXCLYY using a String value.
  */
  public void setE03EXCLYY(String newvalue)
  {
    fieldE03EXCLYY.setString(newvalue);
  }

  /**
  * Get value of field E03EXCLYY as a String.
  */
  public String getE03EXCLYY()
  {
    return fieldE03EXCLYY.getString();
  }

  /**
  * Set numeric field E03EXCLYY using a BigDecimal value.
  */
  public void setE03EXCLYY(BigDecimal newvalue)
  {
    fieldE03EXCLYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03EXCLYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03EXCLYY()
  {
    return fieldE03EXCLYY.getBigDecimal();
  }

  /**
  * Set field E03EXCLTT using a String value.
  */
  public void setE03EXCLTT(String newvalue)
  {
    fieldE03EXCLTT.setString(newvalue);
  }

  /**
  * Get value of field E03EXCLTT as a String.
  */
  public String getE03EXCLTT()
  {
    return fieldE03EXCLTT.getString();
  }

  /**
  * Set field E03EXCLMU using a String value.
  */
  public void setE03EXCLMU(String newvalue)
  {
    fieldE03EXCLMU.setString(newvalue);
  }

  /**
  * Get value of field E03EXCLMU as a String.
  */
  public String getE03EXCLMU()
  {
    return fieldE03EXCLMU.getString();
  }

  /**
  * Set field E03NUMREC using a String value.
  */
  public void setE03NUMREC(String newvalue)
  {
    fieldE03NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E03NUMREC as a String.
  */
  public String getE03NUMREC()
  {
    return fieldE03NUMREC.getString();
  }

  /**
  * Set numeric field E03NUMREC using a BigDecimal value.
  */
  public void setE03NUMREC(BigDecimal newvalue)
  {
    fieldE03NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NUMREC()
  {
    return fieldE03NUMREC.getBigDecimal();
  }

  /**
  * Set field E03INDOPE using a String value.
  */
  public void setE03INDOPE(String newvalue)
  {
    fieldE03INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E03INDOPE as a String.
  */
  public String getE03INDOPE()
  {
    return fieldE03INDOPE.getString();
  }

}
