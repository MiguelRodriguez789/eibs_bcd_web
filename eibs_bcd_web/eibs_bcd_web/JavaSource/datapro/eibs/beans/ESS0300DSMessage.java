package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESS0300DS physical file definition.
* 
* File level identifier is 1150522154659.
* Record format level identifier is 3B67DC83DFB65.
*/

public class ESS0300DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USR",
                                     "H01PGM",
                                     "H01TIM",
                                     "H01SCR",
                                     "H01OPE",
                                     "H01MAS",
                                     "H01WK1",
                                     "H01WK2",
                                     "H01WK3",
                                     "E01PSW",
                                     "E01PSE",
                                     "E01SID",
                                     "E01DEN",
                                     "E01LGM"
                                   };
  final static String tnames[] = {
                                   "H01USR",
                                   "H01PGM",
                                   "H01TIM",
                                   "H01SCR",
                                   "H01OPE",
                                   "H01MAS",
                                   "H01WK1",
                                   "H01WK2",
                                   "H01WK3",
                                   "E01PSW",
                                   "E01PSE",
                                   "E01SID",
                                   "E01DEN",
                                   "E01LGM"
                                 };
  final static String fid = "1150522154659";
  final static String rid = "3B67DC83DFB65";
  final static String fmtname = "ESS0300DS";
  final int FIELDCOUNT = 14;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USR = null;
  private CharacterField fieldH01PGM = null;
  private CharacterField fieldH01TIM = null;
  private CharacterField fieldH01SCR = null;
  private CharacterField fieldH01OPE = null;
  private CharacterField fieldH01MAS = null;
  private CharacterField fieldH01WK1 = null;
  private CharacterField fieldH01WK2 = null;
  private CharacterField fieldH01WK3 = null;
  private CharacterField fieldE01PSW = null;
  private CharacterField fieldE01PSE = null;
  private CharacterField fieldE01SID = null;
  private CharacterField fieldE01DEN = null;
  private CharacterField fieldE01LGM = null;

  /**
  * Constructor for ESS0300DSMessage.
  */
  public ESS0300DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 180;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USR");
    fields[1] = fieldH01PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PGM");
    fields[2] = fieldH01TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIM");
    fields[3] = fieldH01SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCR");
    fields[4] = fieldH01OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPE");
    fields[5] = fieldH01MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01MAS");
    fields[6] = fieldH01WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01WK1");
    fields[7] = fieldH01WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01WK2");
    fields[8] = fieldH01WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01WK3");
    fields[9] = fieldE01PSW =
    new CharacterField(message, HEADERSIZE + 42, 64, "E01PSW");
    fields[10] = fieldE01PSE =
    new CharacterField(message, HEADERSIZE + 106, 64, "E01PSE");
    fields[11] = fieldE01SID =
    new CharacterField(message, HEADERSIZE + 170, 6, "E01SID");
    fields[12] = fieldE01DEN =
    new CharacterField(message, HEADERSIZE + 176, 3, "E01DEN");
    fields[13] = fieldE01LGM =
    new CharacterField(message, HEADERSIZE + 179, 1, "E01LGM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USR using a String value.
  */
  public void setH01USR(String newvalue)
  {
    fieldH01USR.setString(newvalue);
  }

  /**
  * Get value of field H01USR as a String.
  */
  public String getH01USR()
  {
    return fieldH01USR.getString();
  }

  /**
  * Set field H01PGM using a String value.
  */
  public void setH01PGM(String newvalue)
  {
    fieldH01PGM.setString(newvalue);
  }

  /**
  * Get value of field H01PGM as a String.
  */
  public String getH01PGM()
  {
    return fieldH01PGM.getString();
  }

  /**
  * Set field H01TIM using a String value.
  */
  public void setH01TIM(String newvalue)
  {
    fieldH01TIM.setString(newvalue);
  }

  /**
  * Get value of field H01TIM as a String.
  */
  public String getH01TIM()
  {
    return fieldH01TIM.getString();
  }

  /**
  * Set field H01SCR using a String value.
  */
  public void setH01SCR(String newvalue)
  {
    fieldH01SCR.setString(newvalue);
  }

  /**
  * Get value of field H01SCR as a String.
  */
  public String getH01SCR()
  {
    return fieldH01SCR.getString();
  }

  /**
  * Set field H01OPE using a String value.
  */
  public void setH01OPE(String newvalue)
  {
    fieldH01OPE.setString(newvalue);
  }

  /**
  * Get value of field H01OPE as a String.
  */
  public String getH01OPE()
  {
    return fieldH01OPE.getString();
  }

  /**
  * Set field H01MAS using a String value.
  */
  public void setH01MAS(String newvalue)
  {
    fieldH01MAS.setString(newvalue);
  }

  /**
  * Get value of field H01MAS as a String.
  */
  public String getH01MAS()
  {
    return fieldH01MAS.getString();
  }

  /**
  * Set field H01WK1 using a String value.
  */
  public void setH01WK1(String newvalue)
  {
    fieldH01WK1.setString(newvalue);
  }

  /**
  * Get value of field H01WK1 as a String.
  */
  public String getH01WK1()
  {
    return fieldH01WK1.getString();
  }

  /**
  * Set field H01WK2 using a String value.
  */
  public void setH01WK2(String newvalue)
  {
    fieldH01WK2.setString(newvalue);
  }

  /**
  * Get value of field H01WK2 as a String.
  */
  public String getH01WK2()
  {
    return fieldH01WK2.getString();
  }

  /**
  * Set field H01WK3 using a String value.
  */
  public void setH01WK3(String newvalue)
  {
    fieldH01WK3.setString(newvalue);
  }

  /**
  * Get value of field H01WK3 as a String.
  */
  public String getH01WK3()
  {
    return fieldH01WK3.getString();
  }

  /**
  * Set field E01PSW using a String value.
  */
  public void setE01PSW(String newvalue)
  {
    fieldE01PSW.setString(newvalue);
  }

  /**
  * Get value of field E01PSW as a String.
  */
  public String getE01PSW()
  {
    return fieldE01PSW.getString();
  }

  /**
  * Set field E01PSE using a String value.
  */
  public void setE01PSE(String newvalue)
  {
    fieldE01PSE.setString(newvalue);
  }

  /**
  * Get value of field E01PSE as a String.
  */
  public String getE01PSE()
  {
    return fieldE01PSE.getString();
  }

  /**
  * Set field E01SID using a String value.
  */
  public void setE01SID(String newvalue)
  {
    fieldE01SID.setString(newvalue);
  }

  /**
  * Get value of field E01SID as a String.
  */
  public String getE01SID()
  {
    return fieldE01SID.getString();
  }

  /**
  * Set field E01DEN using a String value.
  */
  public void setE01DEN(String newvalue)
  {
    fieldE01DEN.setString(newvalue);
  }

  /**
  * Get value of field E01DEN as a String.
  */
  public String getE01DEN()
  {
    return fieldE01DEN.getString();
  }

  /**
  * Set field E01LGM using a String value.
  */
  public void setE01LGM(String newvalue)
  {
    fieldE01LGM.setString(newvalue);
  }

  /**
  * Get value of field E01LGM as a String.
  */
  public String getE01LGM()
  {
    return fieldE01LGM.getString();
  }

}
