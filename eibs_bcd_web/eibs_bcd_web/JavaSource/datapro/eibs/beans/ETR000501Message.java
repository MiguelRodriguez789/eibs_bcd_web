package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ETR000501 physical file definition.
* 
* File level identifier is 1161102160601.
* Record format level identifier is 4736917A00816.
*/

public class ETR000501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01TRSBNK",
                                     "E01TRSNME",
                                     "E01TRSNDS",
                                     "E01TRSFIN",
                                     "E01TRSSET",
                                     "E01TRSTOR",
                                     "E01TRSPRF",
                                     "E01TRSFCP",
                                     "E01TRSFCL",
                                     "E01TRSICP",
                                     "E01TRSICL",
                                     "E01TRSNCP",
                                     "E01TRSNCL",
                                     "E01TRSLMM",
                                     "E01TRSLMD",
                                     "E01TRSLMY",
                                     "E01TRSLMT",
                                     "E01TRSLMU",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01TRSBNK",
                                   "E01TRSNME",
                                   "E01TRSNDS",
                                   "E01TRSFIN",
                                   "E01TRSSET",
                                   "E01TRSTOR",
                                   "E01TRSPRF",
                                   "E01TRSFCP",
                                   "E01TRSFCL",
                                   "E01TRSICP",
                                   "E01TRSICL",
                                   "E01TRSNCP",
                                   "E01TRSNCL",
                                   "E01TRSLMM",
                                   "E01TRSLMD",
                                   "E01TRSLMY",
                                   "E01TRSLMT",
                                   "E01TRSLMU",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1161102160601";
  final static String rid = "4736917A00816";
  final static String fmtname = "ETR000501";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01TRSBNK = null;
  private CharacterField fieldE01TRSNME = null;
  private DecimalField fieldE01TRSNDS = null;
  private CharacterField fieldE01TRSFIN = null;
  private CharacterField fieldE01TRSSET = null;
  private CharacterField fieldE01TRSTOR = null;
  private CharacterField fieldE01TRSPRF = null;
  private DecimalField fieldE01TRSFCP = null;
  private DecimalField fieldE01TRSFCL = null;
  private DecimalField fieldE01TRSICP = null;
  private DecimalField fieldE01TRSICL = null;
  private DecimalField fieldE01TRSNCP = null;
  private DecimalField fieldE01TRSNCL = null;
  private DecimalField fieldE01TRSLMM = null;
  private DecimalField fieldE01TRSLMD = null;
  private DecimalField fieldE01TRSLMY = null;
  private CharacterField fieldE01TRSLMT = null;
  private CharacterField fieldE01TRSLMU = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ETR000501Message.
  */
  public ETR000501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 255;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01TRSBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01TRSBNK");
    fields[10] = fieldE01TRSNME =
    new CharacterField(message, HEADERSIZE + 44, 45, "E01TRSNME");
    fields[11] = fieldE01TRSNDS =
    new DecimalField(message, HEADERSIZE + 89, 3, 0, "E01TRSNDS");
    fields[12] = fieldE01TRSFIN =
    new CharacterField(message, HEADERSIZE + 92, 1, "E01TRSFIN");
    fields[13] = fieldE01TRSSET =
    new CharacterField(message, HEADERSIZE + 93, 1, "E01TRSSET");
    fields[14] = fieldE01TRSTOR =
    new CharacterField(message, HEADERSIZE + 94, 1, "E01TRSTOR");
    fields[15] = fieldE01TRSPRF =
    new CharacterField(message, HEADERSIZE + 95, 1, "E01TRSPRF");
    fields[16] = fieldE01TRSFCP =
    new DecimalField(message, HEADERSIZE + 96, 17, 0, "E01TRSFCP");
    fields[17] = fieldE01TRSFCL =
    new DecimalField(message, HEADERSIZE + 113, 17, 0, "E01TRSFCL");
    fields[18] = fieldE01TRSICP =
    new DecimalField(message, HEADERSIZE + 130, 17, 0, "E01TRSICP");
    fields[19] = fieldE01TRSICL =
    new DecimalField(message, HEADERSIZE + 147, 17, 0, "E01TRSICL");
    fields[20] = fieldE01TRSNCP =
    new DecimalField(message, HEADERSIZE + 164, 17, 0, "E01TRSNCP");
    fields[21] = fieldE01TRSNCL =
    new DecimalField(message, HEADERSIZE + 181, 17, 0, "E01TRSNCL");
    fields[22] = fieldE01TRSLMM =
    new DecimalField(message, HEADERSIZE + 198, 3, 0, "E01TRSLMM");
    fields[23] = fieldE01TRSLMD =
    new DecimalField(message, HEADERSIZE + 201, 3, 0, "E01TRSLMD");
    fields[24] = fieldE01TRSLMY =
    new DecimalField(message, HEADERSIZE + 204, 5, 0, "E01TRSLMY");
    fields[25] = fieldE01TRSLMT =
    new CharacterField(message, HEADERSIZE + 209, 26, "E01TRSLMT");
    fields[26] = fieldE01TRSLMU =
    new CharacterField(message, HEADERSIZE + 235, 10, "E01TRSLMU");
    fields[27] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 245, 1, "E01ACT");
    fields[28] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 246, 8, 0, "E01NUMREC");
    fields[29] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 254, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01TRSBNK using a String value.
  */
  public void setE01TRSBNK(String newvalue)
  {
    fieldE01TRSBNK.setString(newvalue);
  }

  /**
  * Get value of field E01TRSBNK as a String.
  */
  public String getE01TRSBNK()
  {
    return fieldE01TRSBNK.getString();
  }

  /**
  * Set field E01TRSNME using a String value.
  */
  public void setE01TRSNME(String newvalue)
  {
    fieldE01TRSNME.setString(newvalue);
  }

  /**
  * Get value of field E01TRSNME as a String.
  */
  public String getE01TRSNME()
  {
    return fieldE01TRSNME.getString();
  }

  /**
  * Set field E01TRSNDS using a String value.
  */
  public void setE01TRSNDS(String newvalue)
  {
    fieldE01TRSNDS.setString(newvalue);
  }

  /**
  * Get value of field E01TRSNDS as a String.
  */
  public String getE01TRSNDS()
  {
    return fieldE01TRSNDS.getString();
  }

  /**
  * Set numeric field E01TRSNDS using a BigDecimal value.
  */
  public void setE01TRSNDS(BigDecimal newvalue)
  {
    fieldE01TRSNDS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSNDS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSNDS()
  {
    return fieldE01TRSNDS.getBigDecimal();
  }

  /**
  * Set field E01TRSFIN using a String value.
  */
  public void setE01TRSFIN(String newvalue)
  {
    fieldE01TRSFIN.setString(newvalue);
  }

  /**
  * Get value of field E01TRSFIN as a String.
  */
  public String getE01TRSFIN()
  {
    return fieldE01TRSFIN.getString();
  }

  /**
  * Set field E01TRSSET using a String value.
  */
  public void setE01TRSSET(String newvalue)
  {
    fieldE01TRSSET.setString(newvalue);
  }

  /**
  * Get value of field E01TRSSET as a String.
  */
  public String getE01TRSSET()
  {
    return fieldE01TRSSET.getString();
  }

  /**
  * Set field E01TRSTOR using a String value.
  */
  public void setE01TRSTOR(String newvalue)
  {
    fieldE01TRSTOR.setString(newvalue);
  }

  /**
  * Get value of field E01TRSTOR as a String.
  */
  public String getE01TRSTOR()
  {
    return fieldE01TRSTOR.getString();
  }

  /**
  * Set field E01TRSPRF using a String value.
  */
  public void setE01TRSPRF(String newvalue)
  {
    fieldE01TRSPRF.setString(newvalue);
  }

  /**
  * Get value of field E01TRSPRF as a String.
  */
  public String getE01TRSPRF()
  {
    return fieldE01TRSPRF.getString();
  }

  /**
  * Set field E01TRSFCP using a String value.
  */
  public void setE01TRSFCP(String newvalue)
  {
    fieldE01TRSFCP.setString(newvalue);
  }

  /**
  * Get value of field E01TRSFCP as a String.
  */
  public String getE01TRSFCP()
  {
    return fieldE01TRSFCP.getString();
  }

  /**
  * Set numeric field E01TRSFCP using a BigDecimal value.
  */
  public void setE01TRSFCP(BigDecimal newvalue)
  {
    fieldE01TRSFCP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSFCP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSFCP()
  {
    return fieldE01TRSFCP.getBigDecimal();
  }

  /**
  * Set field E01TRSFCL using a String value.
  */
  public void setE01TRSFCL(String newvalue)
  {
    fieldE01TRSFCL.setString(newvalue);
  }

  /**
  * Get value of field E01TRSFCL as a String.
  */
  public String getE01TRSFCL()
  {
    return fieldE01TRSFCL.getString();
  }

  /**
  * Set numeric field E01TRSFCL using a BigDecimal value.
  */
  public void setE01TRSFCL(BigDecimal newvalue)
  {
    fieldE01TRSFCL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSFCL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSFCL()
  {
    return fieldE01TRSFCL.getBigDecimal();
  }

  /**
  * Set field E01TRSICP using a String value.
  */
  public void setE01TRSICP(String newvalue)
  {
    fieldE01TRSICP.setString(newvalue);
  }

  /**
  * Get value of field E01TRSICP as a String.
  */
  public String getE01TRSICP()
  {
    return fieldE01TRSICP.getString();
  }

  /**
  * Set numeric field E01TRSICP using a BigDecimal value.
  */
  public void setE01TRSICP(BigDecimal newvalue)
  {
    fieldE01TRSICP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSICP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSICP()
  {
    return fieldE01TRSICP.getBigDecimal();
  }

  /**
  * Set field E01TRSICL using a String value.
  */
  public void setE01TRSICL(String newvalue)
  {
    fieldE01TRSICL.setString(newvalue);
  }

  /**
  * Get value of field E01TRSICL as a String.
  */
  public String getE01TRSICL()
  {
    return fieldE01TRSICL.getString();
  }

  /**
  * Set numeric field E01TRSICL using a BigDecimal value.
  */
  public void setE01TRSICL(BigDecimal newvalue)
  {
    fieldE01TRSICL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSICL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSICL()
  {
    return fieldE01TRSICL.getBigDecimal();
  }

  /**
  * Set field E01TRSNCP using a String value.
  */
  public void setE01TRSNCP(String newvalue)
  {
    fieldE01TRSNCP.setString(newvalue);
  }

  /**
  * Get value of field E01TRSNCP as a String.
  */
  public String getE01TRSNCP()
  {
    return fieldE01TRSNCP.getString();
  }

  /**
  * Set numeric field E01TRSNCP using a BigDecimal value.
  */
  public void setE01TRSNCP(BigDecimal newvalue)
  {
    fieldE01TRSNCP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSNCP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSNCP()
  {
    return fieldE01TRSNCP.getBigDecimal();
  }

  /**
  * Set field E01TRSNCL using a String value.
  */
  public void setE01TRSNCL(String newvalue)
  {
    fieldE01TRSNCL.setString(newvalue);
  }

  /**
  * Get value of field E01TRSNCL as a String.
  */
  public String getE01TRSNCL()
  {
    return fieldE01TRSNCL.getString();
  }

  /**
  * Set numeric field E01TRSNCL using a BigDecimal value.
  */
  public void setE01TRSNCL(BigDecimal newvalue)
  {
    fieldE01TRSNCL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSNCL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSNCL()
  {
    return fieldE01TRSNCL.getBigDecimal();
  }

  /**
  * Set field E01TRSLMM using a String value.
  */
  public void setE01TRSLMM(String newvalue)
  {
    fieldE01TRSLMM.setString(newvalue);
  }

  /**
  * Get value of field E01TRSLMM as a String.
  */
  public String getE01TRSLMM()
  {
    return fieldE01TRSLMM.getString();
  }

  /**
  * Set numeric field E01TRSLMM using a BigDecimal value.
  */
  public void setE01TRSLMM(BigDecimal newvalue)
  {
    fieldE01TRSLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSLMM()
  {
    return fieldE01TRSLMM.getBigDecimal();
  }

  /**
  * Set field E01TRSLMD using a String value.
  */
  public void setE01TRSLMD(String newvalue)
  {
    fieldE01TRSLMD.setString(newvalue);
  }

  /**
  * Get value of field E01TRSLMD as a String.
  */
  public String getE01TRSLMD()
  {
    return fieldE01TRSLMD.getString();
  }

  /**
  * Set numeric field E01TRSLMD using a BigDecimal value.
  */
  public void setE01TRSLMD(BigDecimal newvalue)
  {
    fieldE01TRSLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSLMD()
  {
    return fieldE01TRSLMD.getBigDecimal();
  }

  /**
  * Set field E01TRSLMY using a String value.
  */
  public void setE01TRSLMY(String newvalue)
  {
    fieldE01TRSLMY.setString(newvalue);
  }

  /**
  * Get value of field E01TRSLMY as a String.
  */
  public String getE01TRSLMY()
  {
    return fieldE01TRSLMY.getString();
  }

  /**
  * Set numeric field E01TRSLMY using a BigDecimal value.
  */
  public void setE01TRSLMY(BigDecimal newvalue)
  {
    fieldE01TRSLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRSLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRSLMY()
  {
    return fieldE01TRSLMY.getBigDecimal();
  }

  /**
  * Set field E01TRSLMT using a String value.
  */
  public void setE01TRSLMT(String newvalue)
  {
    fieldE01TRSLMT.setString(newvalue);
  }

  /**
  * Get value of field E01TRSLMT as a String.
  */
  public String getE01TRSLMT()
  {
    return fieldE01TRSLMT.getString();
  }

  /**
  * Set field E01TRSLMU using a String value.
  */
  public void setE01TRSLMU(String newvalue)
  {
    fieldE01TRSLMU.setString(newvalue);
  }

  /**
  * Get value of field E01TRSLMU as a String.
  */
  public String getE01TRSLMU()
  {
    return fieldE01TRSLMU.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
