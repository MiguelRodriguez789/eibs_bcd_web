package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD9010DS physical file definition.
* 
* File level identifier is 1141008143855.
* Record format level identifier is 3DC6A7C729ACA.
*/

public class EWD9010DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDFIL",
                                     "RWDFRC",
                                     "SWDFIL",
                                     "SWDFLD",
                                     "SWDDSC",
                                     "SWDTYP",
                                     "SWDLEN",
                                     "SWDDIG",
                                     "SWDDEC",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDFIL",
                                   "RWDFRC",
                                   "SWDFIL",
                                   "SWDFLD",
                                   "SWDDSC",
                                   "SWDTYP",
                                   "SWDLEN",
                                   "SWDDIG",
                                   "SWDDEC",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1141008143855";
  final static String rid = "3DC6A7C729ACA";
  final static String fmtname = "EWD9010DS";
  final int FIELDCOUNT = 12;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDFIL = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDFIL = null;
  private CharacterField fieldSWDFLD = null;
  private CharacterField fieldSWDDSC = null;
  private CharacterField fieldSWDTYP = null;
  private DecimalField fieldSWDLEN = null;
  private DecimalField fieldSWDDIG = null;
  private DecimalField fieldSWDDEC = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD9010DSMessage.
  */
  public EWD9010DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 163;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDFIL =
    new CharacterField(message, HEADERSIZE + 10, 10, "RWDFIL");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 20, 8, 0, "RWDFRC");
    fields[3] = fieldSWDFIL =
    new CharacterField(message, HEADERSIZE + 28, 10, "SWDFIL");
    fields[4] = fieldSWDFLD =
    new CharacterField(message, HEADERSIZE + 38, 20, "SWDFLD");
    fields[5] = fieldSWDDSC =
    new CharacterField(message, HEADERSIZE + 58, 80, "SWDDSC");
    fields[6] = fieldSWDTYP =
    new CharacterField(message, HEADERSIZE + 138, 1, "SWDTYP");
    fields[7] = fieldSWDLEN =
    new DecimalField(message, HEADERSIZE + 139, 6, 0, "SWDLEN");
    fields[8] = fieldSWDDIG =
    new DecimalField(message, HEADERSIZE + 145, 6, 0, "SWDDIG");
    fields[9] = fieldSWDDEC =
    new DecimalField(message, HEADERSIZE + 151, 3, 0, "SWDDEC");
    fields[10] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 154, 8, 0, "SWDREC");
    fields[11] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 162, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDFIL using a String value.
  */
  public void setRWDFIL(String newvalue)
  {
    fieldRWDFIL.setString(newvalue);
  }

  /**
  * Get value of field RWDFIL as a String.
  */
  public String getRWDFIL()
  {
    return fieldRWDFIL.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDFIL using a String value.
  */
  public void setSWDFIL(String newvalue)
  {
    fieldSWDFIL.setString(newvalue);
  }

  /**
  * Get value of field SWDFIL as a String.
  */
  public String getSWDFIL()
  {
    return fieldSWDFIL.getString();
  }

  /**
  * Set field SWDFLD using a String value.
  */
  public void setSWDFLD(String newvalue)
  {
    fieldSWDFLD.setString(newvalue);
  }

  /**
  * Get value of field SWDFLD as a String.
  */
  public String getSWDFLD()
  {
    return fieldSWDFLD.getString();
  }

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
    fieldSWDDSC.setString(newvalue);
  }

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
    return fieldSWDDSC.getString();
  }

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
    fieldSWDTYP.setString(newvalue);
  }

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
    return fieldSWDTYP.getString();
  }

  /**
  * Set field SWDLEN using a String value.
  */
  public void setSWDLEN(String newvalue)
  {
    fieldSWDLEN.setString(newvalue);
  }

  /**
  * Get value of field SWDLEN as a String.
  */
  public String getSWDLEN()
  {
    return fieldSWDLEN.getString();
  }

  /**
  * Set numeric field SWDLEN using a BigDecimal value.
  */
  public void setSWDLEN(BigDecimal newvalue)
  {
    fieldSWDLEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDLEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDLEN()
  {
    return fieldSWDLEN.getBigDecimal();
  }

  /**
  * Set field SWDDIG using a String value.
  */
  public void setSWDDIG(String newvalue)
  {
    fieldSWDDIG.setString(newvalue);
  }

  /**
  * Get value of field SWDDIG as a String.
  */
  public String getSWDDIG()
  {
    return fieldSWDDIG.getString();
  }

  /**
  * Set numeric field SWDDIG using a BigDecimal value.
  */
  public void setSWDDIG(BigDecimal newvalue)
  {
    fieldSWDDIG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDIG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDIG()
  {
    return fieldSWDDIG.getBigDecimal();
  }

  /**
  * Set field SWDDEC using a String value.
  */
  public void setSWDDEC(String newvalue)
  {
    fieldSWDDEC.setString(newvalue);
  }

  /**
  * Get value of field SWDDEC as a String.
  */
  public String getSWDDEC()
  {
    return fieldSWDDEC.getString();
  }

  /**
  * Set numeric field SWDDEC using a BigDecimal value.
  */
  public void setSWDDEC(BigDecimal newvalue)
  {
    fieldSWDDEC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDEC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDEC()
  {
    return fieldSWDDEC.getBigDecimal();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
 