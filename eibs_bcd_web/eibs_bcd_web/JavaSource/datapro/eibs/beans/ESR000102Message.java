package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESR000102 physical file definition.
* 
* File level identifier is 1100706173657.
* Record format level identifier is 4552D42F8FD48.
*/

public class ESR000102Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "ESRUSR",
                                     "ESRCOD",
                                     "ESRDES",
                                     "ESRCAT",
                                     "ESRCAL",
                                     "ESRORI",
                                     "ESRPRI",
                                     "ESRXRT"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "ESRUSR",
                                   "ESRCOD",
                                   "ESRDES",
                                   "ESRCAT",
                                   "ESRCAL",
                                   "ESRORI",
                                   "ESRPRI",
                                   "ESRXRT"
                                 };
  final static String fid = "1100706173657";
  final static String rid = "4552D42F8FD48";
  final static String fmtname = "ESR000102";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldESRUSR = null;
  private CharacterField fieldESRCOD = null;
  private CharacterField fieldESRDES = null;
  private CharacterField fieldESRCAT = null;
  private CharacterField fieldESRCAL = null;
  private CharacterField fieldESRORI = null;
  private DecimalField fieldESRPRI = null;
  private DecimalField fieldESRXRT = null;

  /**
  * Constructor for ESR000102Message.
  */
  public ESR000102Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 85;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldESRUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "ESRUSR");
    fields[10] = fieldESRCOD =
    new CharacterField(message, HEADERSIZE + 52, 4, "ESRCOD");
    fields[11] = fieldESRDES =
    new CharacterField(message, HEADERSIZE + 56, 20, "ESRDES");
    fields[12] = fieldESRCAT =
    new CharacterField(message, HEADERSIZE + 76, 2, "ESRCAT");
    fields[13] = fieldESRCAL =
    new CharacterField(message, HEADERSIZE + 78, 1, "ESRCAL");
    fields[14] = fieldESRORI =
    new CharacterField(message, HEADERSIZE + 79, 2, "ESRORI");
    fields[15] = fieldESRPRI =
    new DecimalField(message, HEADERSIZE + 81, 2, 0, "ESRPRI");
    fields[16] = fieldESRXRT =
    new DecimalField(message, HEADERSIZE + 83, 2, 0, "ESRXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field ESRUSR using a String value.
  */
  public void setESRUSR(String newvalue)
  {
    fieldESRUSR.setString(newvalue);
  }

  /**
  * Get value of field ESRUSR as a String.
  */
  public String getESRUSR()
  {
    return fieldESRUSR.getString();
  }

  /**
  * Set field ESRCOD using a String value.
  */
  public void setESRCOD(String newvalue)
  {
    fieldESRCOD.setString(newvalue);
  }

  /**
  * Get value of field ESRCOD as a String.
  */
  public String getESRCOD()
  {
    return fieldESRCOD.getString();
  }

  /**
  * Set field ESRDES using a String value.
  */
  public void setESRDES(String newvalue)
  {
    fieldESRDES.setString(newvalue);
  }

  /**
  * Get value of field ESRDES as a String.
  */
  public String getESRDES()
  {
    return fieldESRDES.getString();
  }

  /**
  * Set field ESRCAT using a String value.
  */
  public void setESRCAT(String newvalue)
  {
    fieldESRCAT.setString(newvalue);
  }

  /**
  * Get value of field ESRCAT as a String.
  */
  public String getESRCAT()
  {
    return fieldESRCAT.getString();
  }

  /**
  * Set field ESRCAL using a String value.
  */
  public void setESRCAL(String newvalue)
  {
    fieldESRCAL.setString(newvalue);
  }

  /**
  * Get value of field ESRCAL as a String.
  */
  public String getESRCAL()
  {
    return fieldESRCAL.getString();
  }

  /**
  * Set field ESRORI using a String value.
  */
  public void setESRORI(String newvalue)
  {
    fieldESRORI.setString(newvalue);
  }

  /**
  * Get value of field ESRORI as a String.
  */
  public String getESRORI()
  {
    return fieldESRORI.getString();
  }

  /**
  * Set field ESRPRI using a String value.
  */
  public void setESRPRI(String newvalue)
  {
    fieldESRPRI.setString(newvalue);
  }

  /**
  * Get value of field ESRPRI as a String.
  */
  public String getESRPRI()
  {
    return fieldESRPRI.getString();
  }

  /**
  * Set numeric field ESRPRI using a BigDecimal value.
  */
  public void setESRPRI(BigDecimal newvalue)
  {
    fieldESRPRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESRPRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalESRPRI()
  {
    return fieldESRPRI.getBigDecimal();
  }

  /**
  * Set field ESRXRT using a String value.
  */
  public void setESRXRT(String newvalue)
  {
    fieldESRXRT.setString(newvalue);
  }

  /**
  * Get value of field ESRXRT as a String.
  */
  public String getESRXRT()
  {
    return fieldESRXRT.getString();
  }

  /**
  * Set numeric field ESRXRT using a BigDecimal value.
  */
  public void setESRXRT(BigDecimal newvalue)
  {
    fieldESRXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ESRXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalESRXRT()
  {
    return fieldESRXRT.getBigDecimal();
  }

}
