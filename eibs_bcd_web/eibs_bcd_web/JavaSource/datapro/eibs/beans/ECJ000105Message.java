package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECJ000105 physical file definition.
* 
* File level identifier is 1100706173535.
* Record format level identifier is 595B4DEE2EF3C.
*/

public class ECJ000105Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "CMRBNK",
                                     "REMNOM",
                                     "CMRBRN",
                                     "BRNNME",
                                     "CMRRUT",
                                     "CMRSEQ",
                                     "CMRACC",
                                     "CMRCKN",
                                     "CMRAMT",
                                     "CMRCCY",
                                     "CMRCRM",
                                     "CMRDOC",
                                     "CMRCAU",
                                     "CMRBAN",
                                     "CMRGBD",
                                     "CMRFLG",
                                     "CMRDTM",
                                     "CMRDTD",
                                     "CMRDTY",
                                     "CMRFL1",
                                     "CMRBNI",
                                     "CMRFL2",
                                     "CMRNVF",
                                     "CMRTND",
                                     "CMRTMD",
                                     "CMRTDG",
                                     "CMRTDF",
                                     "CMROBS"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "CMRBNK",
                                   "REMNOM",
                                   "CMRBRN",
                                   "BRNNME",
                                   "CMRRUT",
                                   "CMRSEQ",
                                   "CMRACC",
                                   "CMRCKN",
                                   "CMRAMT",
                                   "CMRCCY",
                                   "CMRCRM",
                                   "CMRDOC",
                                   "CMRCAU",
                                   "CMRBAN",
                                   "CMRGBD",
                                   "CMRFLG",
                                   "CMRDTM",
                                   "CMRDTD",
                                   "CMRDTY",
                                   "CMRFL1",
                                   "CMRBNI",
                                   "CMRFL2",
                                   "CMRNVF",
                                   "CMRTND",
                                   "CMRTMD",
                                   "CMRTDG",
                                   "CMRTDF",
                                   "CMROBS"
                                 };
  final static String fid = "1100706173535";
  final static String rid = "595B4DEE2EF3C";
  final static String fmtname = "ECJ000105";
  final int FIELDCOUNT = 37;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldCMRBNK = null;
  private CharacterField fieldREMNOM = null;
  private DecimalField fieldCMRBRN = null;
  private CharacterField fieldBRNNME = null;
  private DecimalField fieldCMRRUT = null;
  private DecimalField fieldCMRSEQ = null;
  private DecimalField fieldCMRACC = null;
  private DecimalField fieldCMRCKN = null;
  private DecimalField fieldCMRAMT = null;
  private CharacterField fieldCMRCCY = null;
  private CharacterField fieldCMRCRM = null;
  private CharacterField fieldCMRDOC = null;
  private CharacterField fieldCMRCAU = null;
  private CharacterField fieldCMRBAN = null;
  private CharacterField fieldCMRGBD = null;
  private CharacterField fieldCMRFLG = null;
  private DecimalField fieldCMRDTM = null;
  private DecimalField fieldCMRDTD = null;
  private DecimalField fieldCMRDTY = null;
  private CharacterField fieldCMRFL1 = null;
  private CharacterField fieldCMRBNI = null;
  private DecimalField fieldCMRFL2 = null;
  private DecimalField fieldCMRNVF = null;
  private DecimalField fieldCMRTND = null;
  private DecimalField fieldCMRTMD = null;
  private DecimalField fieldCMRTDG = null;
  private DecimalField fieldCMRTDF = null;
  private CharacterField fieldCMROBS = null;

  /**
  * Constructor for ECJ000105Message.
  */
  public ECJ000105Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 352;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldCMRBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "CMRBNK");
    fields[10] = fieldREMNOM =
    new CharacterField(message, HEADERSIZE + 44, 35, "REMNOM");
    fields[11] = fieldCMRBRN =
    new DecimalField(message, HEADERSIZE + 79, 4, 0, "CMRBRN");
    fields[12] = fieldBRNNME =
    new CharacterField(message, HEADERSIZE + 83, 35, "BRNNME");
    fields[13] = fieldCMRRUT =
    new DecimalField(message, HEADERSIZE + 118, 10, 0, "CMRRUT");
    fields[14] = fieldCMRSEQ =
    new DecimalField(message, HEADERSIZE + 128, 5, 0, "CMRSEQ");
    fields[15] = fieldCMRACC =
    new DecimalField(message, HEADERSIZE + 133, 13, 0, "CMRACC");
    fields[16] = fieldCMRCKN =
    new DecimalField(message, HEADERSIZE + 146, 10, 0, "CMRCKN");
    fields[17] = fieldCMRAMT =
    new DecimalField(message, HEADERSIZE + 156, 17, 2, "CMRAMT");
    fields[18] = fieldCMRCCY =
    new CharacterField(message, HEADERSIZE + 173, 3, "CMRCCY");
    fields[19] = fieldCMRCRM =
    new CharacterField(message, HEADERSIZE + 176, 4, "CMRCRM");
    fields[20] = fieldCMRDOC =
    new CharacterField(message, HEADERSIZE + 180, 1, "CMRDOC");
    fields[21] = fieldCMRCAU =
    new CharacterField(message, HEADERSIZE + 181, 4, "CMRCAU");
    fields[22] = fieldCMRBAN =
    new CharacterField(message, HEADERSIZE + 185, 4, "CMRBAN");
    fields[23] = fieldCMRGBD =
    new CharacterField(message, HEADERSIZE + 189, 35, "CMRGBD");
    fields[24] = fieldCMRFLG =
    new CharacterField(message, HEADERSIZE + 224, 1, "CMRFLG");
    fields[25] = fieldCMRDTM =
    new DecimalField(message, HEADERSIZE + 225, 3, 0, "CMRDTM");
    fields[26] = fieldCMRDTD =
    new DecimalField(message, HEADERSIZE + 228, 3, 0, "CMRDTD");
    fields[27] = fieldCMRDTY =
    new DecimalField(message, HEADERSIZE + 231, 3, 0, "CMRDTY");
    fields[28] = fieldCMRFL1 =
    new CharacterField(message, HEADERSIZE + 234, 1, "CMRFL1");
    fields[29] = fieldCMRBNI =
    new CharacterField(message, HEADERSIZE + 235, 15, "CMRBNI");
    fields[30] = fieldCMRFL2 =
    new DecimalField(message, HEADERSIZE + 250, 2, 0, "CMRFL2");
    fields[31] = fieldCMRNVF =
    new DecimalField(message, HEADERSIZE + 252, 4, 0, "CMRNVF");
    fields[32] = fieldCMRTND =
    new DecimalField(message, HEADERSIZE + 256, 10, 0, "CMRTND");
    fields[33] = fieldCMRTMD =
    new DecimalField(message, HEADERSIZE + 266, 17, 2, "CMRTMD");
    fields[34] = fieldCMRTDG =
    new DecimalField(message, HEADERSIZE + 283, 17, 2, "CMRTDG");
    fields[35] = fieldCMRTDF =
    new DecimalField(message, HEADERSIZE + 300, 17, 2, "CMRTDF");
    fields[36] = fieldCMROBS =
    new CharacterField(message, HEADERSIZE + 317, 35, "CMROBS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field CMRBNK using a String value.
  */
  public void setCMRBNK(String newvalue)
  {
    fieldCMRBNK.setString(newvalue);
  }

  /**
  * Get value of field CMRBNK as a String.
  */
  public String getCMRBNK()
  {
    return fieldCMRBNK.getString();
  }

  /**
  * Set field REMNOM using a String value.
  */
  public void setREMNOM(String newvalue)
  {
    fieldREMNOM.setString(newvalue);
  }

  /**
  * Get value of field REMNOM as a String.
  */
  public String getREMNOM()
  {
    return fieldREMNOM.getString();
  }

  /**
  * Set field CMRBRN using a String value.
  */
  public void setCMRBRN(String newvalue)
  {
    fieldCMRBRN.setString(newvalue);
  }

  /**
  * Get value of field CMRBRN as a String.
  */
  public String getCMRBRN()
  {
    return fieldCMRBRN.getString();
  }

  /**
  * Set numeric field CMRBRN using a BigDecimal value.
  */
  public void setCMRBRN(BigDecimal newvalue)
  {
    fieldCMRBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRBRN()
  {
    return fieldCMRBRN.getBigDecimal();
  }

  /**
  * Set field BRNNME using a String value.
  */
  public void setBRNNME(String newvalue)
  {
    fieldBRNNME.setString(newvalue);
  }

  /**
  * Get value of field BRNNME as a String.
  */
  public String getBRNNME()
  {
    return fieldBRNNME.getString();
  }

  /**
  * Set field CMRRUT using a String value.
  */
  public void setCMRRUT(String newvalue)
  {
    fieldCMRRUT.setString(newvalue);
  }

  /**
  * Get value of field CMRRUT as a String.
  */
  public String getCMRRUT()
  {
    return fieldCMRRUT.getString();
  }

  /**
  * Set numeric field CMRRUT using a BigDecimal value.
  */
  public void setCMRRUT(BigDecimal newvalue)
  {
    fieldCMRRUT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRRUT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRRUT()
  {
    return fieldCMRRUT.getBigDecimal();
  }

  /**
  * Set field CMRSEQ using a String value.
  */
  public void setCMRSEQ(String newvalue)
  {
    fieldCMRSEQ.setString(newvalue);
  }

  /**
  * Get value of field CMRSEQ as a String.
  */
  public String getCMRSEQ()
  {
    return fieldCMRSEQ.getString();
  }

  /**
  * Set numeric field CMRSEQ using a BigDecimal value.
  */
  public void setCMRSEQ(BigDecimal newvalue)
  {
    fieldCMRSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRSEQ()
  {
    return fieldCMRSEQ.getBigDecimal();
  }

  /**
  * Set field CMRACC using a String value.
  */
  public void setCMRACC(String newvalue)
  {
    fieldCMRACC.setString(newvalue);
  }

  /**
  * Get value of field CMRACC as a String.
  */
  public String getCMRACC()
  {
    return fieldCMRACC.getString();
  }

  /**
  * Set numeric field CMRACC using a BigDecimal value.
  */
  public void setCMRACC(BigDecimal newvalue)
  {
    fieldCMRACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRACC()
  {
    return fieldCMRACC.getBigDecimal();
  }

  /**
  * Set field CMRCKN using a String value.
  */
  public void setCMRCKN(String newvalue)
  {
    fieldCMRCKN.setString(newvalue);
  }

  /**
  * Get value of field CMRCKN as a String.
  */
  public String getCMRCKN()
  {
    return fieldCMRCKN.getString();
  }

  /**
  * Set numeric field CMRCKN using a BigDecimal value.
  */
  public void setCMRCKN(BigDecimal newvalue)
  {
    fieldCMRCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRCKN()
  {
    return fieldCMRCKN.getBigDecimal();
  }

  /**
  * Set field CMRAMT using a String value.
  */
  public void setCMRAMT(String newvalue)
  {
    fieldCMRAMT.setString(newvalue);
  }

  /**
  * Get value of field CMRAMT as a String.
  */
  public String getCMRAMT()
  {
    return fieldCMRAMT.getString();
  }

  /**
  * Set numeric field CMRAMT using a BigDecimal value.
  */
  public void setCMRAMT(BigDecimal newvalue)
  {
    fieldCMRAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRAMT()
  {
    return fieldCMRAMT.getBigDecimal();
  }

  /**
  * Set field CMRCCY using a String value.
  */
  public void setCMRCCY(String newvalue)
  {
    fieldCMRCCY.setString(newvalue);
  }

  /**
  * Get value of field CMRCCY as a String.
  */
  public String getCMRCCY()
  {
    return fieldCMRCCY.getString();
  }

  /**
  * Set field CMRCRM using a String value.
  */
  public void setCMRCRM(String newvalue)
  {
    fieldCMRCRM.setString(newvalue);
  }

  /**
  * Get value of field CMRCRM as a String.
  */
  public String getCMRCRM()
  {
    return fieldCMRCRM.getString();
  }

  /**
  * Set field CMRDOC using a String value.
  */
  public void setCMRDOC(String newvalue)
  {
    fieldCMRDOC.setString(newvalue);
  }

  /**
  * Get value of field CMRDOC as a String.
  */
  public String getCMRDOC()
  {
    return fieldCMRDOC.getString();
  }

  /**
  * Set field CMRCAU using a String value.
  */
  public void setCMRCAU(String newvalue)
  {
    fieldCMRCAU.setString(newvalue);
  }

  /**
  * Get value of field CMRCAU as a String.
  */
  public String getCMRCAU()
  {
    return fieldCMRCAU.getString();
  }

  /**
  * Set field CMRBAN using a String value.
  */
  public void setCMRBAN(String newvalue)
  {
    fieldCMRBAN.setString(newvalue);
  }

  /**
  * Get value of field CMRBAN as a String.
  */
  public String getCMRBAN()
  {
    return fieldCMRBAN.getString();
  }

  /**
  * Set field CMRGBD using a String value.
  */
  public void setCMRGBD(String newvalue)
  {
    fieldCMRGBD.setString(newvalue);
  }

  /**
  * Get value of field CMRGBD as a String.
  */
  public String getCMRGBD()
  {
    return fieldCMRGBD.getString();
  }

  /**
  * Set field CMRFLG using a String value.
  */
  public void setCMRFLG(String newvalue)
  {
    fieldCMRFLG.setString(newvalue);
  }

  /**
  * Get value of field CMRFLG as a String.
  */
  public String getCMRFLG()
  {
    return fieldCMRFLG.getString();
  }

  /**
  * Set field CMRDTM using a String value.
  */
  public void setCMRDTM(String newvalue)
  {
    fieldCMRDTM.setString(newvalue);
  }

  /**
  * Get value of field CMRDTM as a String.
  */
  public String getCMRDTM()
  {
    return fieldCMRDTM.getString();
  }

  /**
  * Set numeric field CMRDTM using a BigDecimal value.
  */
  public void setCMRDTM(BigDecimal newvalue)
  {
    fieldCMRDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRDTM()
  {
    return fieldCMRDTM.getBigDecimal();
  }

  /**
  * Set field CMRDTD using a String value.
  */
  public void setCMRDTD(String newvalue)
  {
    fieldCMRDTD.setString(newvalue);
  }

  /**
  * Get value of field CMRDTD as a String.
  */
  public String getCMRDTD()
  {
    return fieldCMRDTD.getString();
  }

  /**
  * Set numeric field CMRDTD using a BigDecimal value.
  */
  public void setCMRDTD(BigDecimal newvalue)
  {
    fieldCMRDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRDTD()
  {
    return fieldCMRDTD.getBigDecimal();
  }

  /**
  * Set field CMRDTY using a String value.
  */
  public void setCMRDTY(String newvalue)
  {
    fieldCMRDTY.setString(newvalue);
  }

  /**
  * Get value of field CMRDTY as a String.
  */
  public String getCMRDTY()
  {
    return fieldCMRDTY.getString();
  }

  /**
  * Set numeric field CMRDTY using a BigDecimal value.
  */
  public void setCMRDTY(BigDecimal newvalue)
  {
    fieldCMRDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRDTY()
  {
    return fieldCMRDTY.getBigDecimal();
  }

  /**
  * Set field CMRFL1 using a String value.
  */
  public void setCMRFL1(String newvalue)
  {
    fieldCMRFL1.setString(newvalue);
  }

  /**
  * Get value of field CMRFL1 as a String.
  */
  public String getCMRFL1()
  {
    return fieldCMRFL1.getString();
  }

  /**
  * Set field CMRBNI using a String value.
  */
  public void setCMRBNI(String newvalue)
  {
    fieldCMRBNI.setString(newvalue);
  }

  /**
  * Get value of field CMRBNI as a String.
  */
  public String getCMRBNI()
  {
    return fieldCMRBNI.getString();
  }

  /**
  * Set field CMRFL2 using a String value.
  */
  public void setCMRFL2(String newvalue)
  {
    fieldCMRFL2.setString(newvalue);
  }

  /**
  * Get value of field CMRFL2 as a String.
  */
  public String getCMRFL2()
  {
    return fieldCMRFL2.getString();
  }

  /**
  * Set numeric field CMRFL2 using a BigDecimal value.
  */
  public void setCMRFL2(BigDecimal newvalue)
  {
    fieldCMRFL2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRFL2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRFL2()
  {
    return fieldCMRFL2.getBigDecimal();
  }

  /**
  * Set field CMRNVF using a String value.
  */
  public void setCMRNVF(String newvalue)
  {
    fieldCMRNVF.setString(newvalue);
  }

  /**
  * Get value of field CMRNVF as a String.
  */
  public String getCMRNVF()
  {
    return fieldCMRNVF.getString();
  }

  /**
  * Set numeric field CMRNVF using a BigDecimal value.
  */
  public void setCMRNVF(BigDecimal newvalue)
  {
    fieldCMRNVF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRNVF as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRNVF()
  {
    return fieldCMRNVF.getBigDecimal();
  }

  /**
  * Set field CMRTND using a String value.
  */
  public void setCMRTND(String newvalue)
  {
    fieldCMRTND.setString(newvalue);
  }

  /**
  * Get value of field CMRTND as a String.
  */
  public String getCMRTND()
  {
    return fieldCMRTND.getString();
  }

  /**
  * Set numeric field CMRTND using a BigDecimal value.
  */
  public void setCMRTND(BigDecimal newvalue)
  {
    fieldCMRTND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRTND as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRTND()
  {
    return fieldCMRTND.getBigDecimal();
  }

  /**
  * Set field CMRTMD using a String value.
  */
  public void setCMRTMD(String newvalue)
  {
    fieldCMRTMD.setString(newvalue);
  }

  /**
  * Get value of field CMRTMD as a String.
  */
  public String getCMRTMD()
  {
    return fieldCMRTMD.getString();
  }

  /**
  * Set numeric field CMRTMD using a BigDecimal value.
  */
  public void setCMRTMD(BigDecimal newvalue)
  {
    fieldCMRTMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRTMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRTMD()
  {
    return fieldCMRTMD.getBigDecimal();
  }

  /**
  * Set field CMRTDG using a String value.
  */
  public void setCMRTDG(String newvalue)
  {
    fieldCMRTDG.setString(newvalue);
  }

  /**
  * Get value of field CMRTDG as a String.
  */
  public String getCMRTDG()
  {
    return fieldCMRTDG.getString();
  }

  /**
  * Set numeric field CMRTDG using a BigDecimal value.
  */
  public void setCMRTDG(BigDecimal newvalue)
  {
    fieldCMRTDG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRTDG as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRTDG()
  {
    return fieldCMRTDG.getBigDecimal();
  }

  /**
  * Set field CMRTDF using a String value.
  */
  public void setCMRTDF(String newvalue)
  {
    fieldCMRTDF.setString(newvalue);
  }

  /**
  * Get value of field CMRTDF as a String.
  */
  public String getCMRTDF()
  {
    return fieldCMRTDF.getString();
  }

  /**
  * Set numeric field CMRTDF using a BigDecimal value.
  */
  public void setCMRTDF(BigDecimal newvalue)
  {
    fieldCMRTDF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMRTDF as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMRTDF()
  {
    return fieldCMRTDF.getBigDecimal();
  }

  /**
  * Set field CMROBS using a String value.
  */
  public void setCMROBS(String newvalue)
  {
    fieldCMROBS.setString(newvalue);
  }

  /**
  * Get value of field CMROBS as a String.
  */
  public String getCMROBS()
  {
    return fieldCMROBS.getString();
  }

}
