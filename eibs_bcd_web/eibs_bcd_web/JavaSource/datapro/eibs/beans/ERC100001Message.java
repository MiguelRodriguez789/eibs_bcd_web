package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERC100001 physical file definition.
* 
* File level identifier is 1161013153600.
* Record format level identifier is 41D19AF003C5F.
*/

public class ERC100001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BRMEID",
                                     "E01BRMNME",
                                     "E01BRMCTA",
                                     "E01NUMSTN",
                                     "E01BRMFNM",
                                     "E01BRMIPA",
                                     "E01BRMACC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BRMEID",
                                   "E01BRMNME",
                                   "E01BRMCTA",
                                   "E01NUMSTN",
                                   "E01BRMFNM",
                                   "E01BRMIPA",
                                   "E01BRMACC"
                                 };
  final static String fid = "1161013153600";
  final static String rid = "41D19AF003C5F";
  final static String fmtname = "ERC100001";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01BRMEID = null;
  private CharacterField fieldE01BRMNME = null;
  private CharacterField fieldE01BRMCTA = null;
  private DecimalField fieldE01NUMSTN = null;
  private CharacterField fieldE01BRMFNM = null;
  private CharacterField fieldE01BRMIPA = null;
  private DecimalField fieldE01BRMACC = null;

  /**
  * Constructor for ERC100001Message.
  */
  public ERC100001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 280;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BRMEID =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01BRMEID");
    fields[10] = fieldE01BRMNME =
    new CharacterField(message, HEADERSIZE + 46, 45, "E01BRMNME");
    fields[11] = fieldE01BRMCTA =
    new CharacterField(message, HEADERSIZE + 91, 20, "E01BRMCTA");
    fields[12] = fieldE01NUMSTN =
    new DecimalField(message, HEADERSIZE + 111, 13, 0, "E01NUMSTN");
    fields[13] = fieldE01BRMFNM =
    new CharacterField(message, HEADERSIZE + 124, 128, "E01BRMFNM");
    fields[14] = fieldE01BRMIPA =
    new CharacterField(message, HEADERSIZE + 252, 15, "E01BRMIPA");
    fields[15] = fieldE01BRMACC =
    new DecimalField(message, HEADERSIZE + 267, 13, 0, "E01BRMACC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BRMEID using a String value.
  */
  public void setE01BRMEID(String newvalue)
  {
    fieldE01BRMEID.setString(newvalue);
  }

  /**
  * Get value of field E01BRMEID as a String.
  */
  public String getE01BRMEID()
  {
    return fieldE01BRMEID.getString();
  }

  /**
  * Set field E01BRMNME using a String value.
  */
  public void setE01BRMNME(String newvalue)
  {
    fieldE01BRMNME.setString(newvalue);
  }

  /**
  * Get value of field E01BRMNME as a String.
  */
  public String getE01BRMNME()
  {
    return fieldE01BRMNME.getString();
  }

  /**
  * Set field E01BRMCTA using a String value.
  */
  public void setE01BRMCTA(String newvalue)
  {
    fieldE01BRMCTA.setString(newvalue);
  }

  /**
  * Get value of field E01BRMCTA as a String.
  */
  public String getE01BRMCTA()
  {
    return fieldE01BRMCTA.getString();
  }

  /**
  * Set field E01NUMSTN using a String value.
  */
  public void setE01NUMSTN(String newvalue)
  {
    fieldE01NUMSTN.setString(newvalue);
  }

  /**
  * Get value of field E01NUMSTN as a String.
  */
  public String getE01NUMSTN()
  {
    return fieldE01NUMSTN.getString();
  }

  /**
  * Set numeric field E01NUMSTN using a BigDecimal value.
  */
  public void setE01NUMSTN(BigDecimal newvalue)
  {
    fieldE01NUMSTN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMSTN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMSTN()
  {
    return fieldE01NUMSTN.getBigDecimal();
  }

  /**
  * Set field E01BRMFNM using a String value.
  */
  public void setE01BRMFNM(String newvalue)
  {
    fieldE01BRMFNM.setString(newvalue);
  }

  /**
  * Get value of field E01BRMFNM as a String.
  */
  public String getE01BRMFNM()
  {
    return fieldE01BRMFNM.getString();
  }

  /**
  * Set field E01BRMIPA using a String value.
  */
  public void setE01BRMIPA(String newvalue)
  {
    fieldE01BRMIPA.setString(newvalue);
  }

  /**
  * Get value of field E01BRMIPA as a String.
  */
  public String getE01BRMIPA()
  {
    return fieldE01BRMIPA.getString();
  }

  /**
  * Set field E01BRMACC using a String value.
  */
  public void setE01BRMACC(String newvalue)
  {
    fieldE01BRMACC.setString(newvalue);
  }

  /**
  * Get value of field E01BRMACC as a String.
  */
  public String getE01BRMACC()
  {
    return fieldE01BRMACC.getString();
  }

  /**
  * Set numeric field E01BRMACC using a BigDecimal value.
  */
  public void setE01BRMACC(BigDecimal newvalue)
  {
    fieldE01BRMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BRMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BRMACC()
  {
    return fieldE01BRMACC.getBigDecimal();
  }

}
