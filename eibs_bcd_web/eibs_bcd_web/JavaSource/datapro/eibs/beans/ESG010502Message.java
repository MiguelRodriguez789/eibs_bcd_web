package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESG010502 physical file definition.
* 
* File level identifier is 1151125123750.
* Record format level identifier is 4142FF8B95570.
*/

public class ESG010502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02SRECUN",
                                     "E02SREPAC",
                                     "E02SRECO1",
                                     "E02SRECO2",
                                     "E02SRECO3",
                                     "E02SRECO4",
                                     "E02SRECO5",
                                     "E02SRECO6",
                                     "E02SRECO7",
                                     "E02SRECO8",
                                     "E02SRECO9",
                                     "E02SRECO0"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02SRECUN",
                                   "E02SREPAC",
                                   "E02SRECO1",
                                   "E02SRECO2",
                                   "E02SRECO3",
                                   "E02SRECO4",
                                   "E02SRECO5",
                                   "E02SRECO6",
                                   "E02SRECO7",
                                   "E02SRECO8",
                                   "E02SRECO9",
                                   "E02SRECO0"
                                 };
  final static String fid = "1151125123750";
  final static String rid = "4142FF8B95570";
  final static String fmtname = "ESG010502";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02SRECUN = null;
  private DecimalField fieldE02SREPAC = null;
  private CharacterField fieldE02SRECO1 = null;
  private CharacterField fieldE02SRECO2 = null;
  private CharacterField fieldE02SRECO3 = null;
  private CharacterField fieldE02SRECO4 = null;
  private CharacterField fieldE02SRECO5 = null;
  private CharacterField fieldE02SRECO6 = null;
  private CharacterField fieldE02SRECO7 = null;
  private CharacterField fieldE02SRECO8 = null;
  private CharacterField fieldE02SRECO9 = null;
  private CharacterField fieldE02SRECO0 = null;

  /**
  * Constructor for ESG010502Message.
  */
  public ESG010502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 105;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02SRECUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E02SRECUN");
    fields[10] = fieldE02SREPAC =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "E02SREPAC");
    fields[11] = fieldE02SRECO1 =
    new CharacterField(message, HEADERSIZE + 65, 4, "E02SRECO1");
    fields[12] = fieldE02SRECO2 =
    new CharacterField(message, HEADERSIZE + 69, 4, "E02SRECO2");
    fields[13] = fieldE02SRECO3 =
    new CharacterField(message, HEADERSIZE + 73, 4, "E02SRECO3");
    fields[14] = fieldE02SRECO4 =
    new CharacterField(message, HEADERSIZE + 77, 4, "E02SRECO4");
    fields[15] = fieldE02SRECO5 =
    new CharacterField(message, HEADERSIZE + 81, 4, "E02SRECO5");
    fields[16] = fieldE02SRECO6 =
    new CharacterField(message, HEADERSIZE + 85, 4, "E02SRECO6");
    fields[17] = fieldE02SRECO7 =
    new CharacterField(message, HEADERSIZE + 89, 4, "E02SRECO7");
    fields[18] = fieldE02SRECO8 =
    new CharacterField(message, HEADERSIZE + 93, 4, "E02SRECO8");
    fields[19] = fieldE02SRECO9 =
    new CharacterField(message, HEADERSIZE + 97, 4, "E02SRECO9");
    fields[20] = fieldE02SRECO0 =
    new CharacterField(message, HEADERSIZE + 101, 4, "E02SRECO0");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02SRECUN using a String value.
  */
  public void setE02SRECUN(String newvalue)
  {
    fieldE02SRECUN.setString(newvalue);
  }

  /**
  * Get value of field E02SRECUN as a String.
  */
  public String getE02SRECUN()
  {
    return fieldE02SRECUN.getString();
  }

  /**
  * Set numeric field E02SRECUN using a BigDecimal value.
  */
  public void setE02SRECUN(BigDecimal newvalue)
  {
    fieldE02SRECUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SRECUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SRECUN()
  {
    return fieldE02SRECUN.getBigDecimal();
  }

  /**
  * Set field E02SREPAC using a String value.
  */
  public void setE02SREPAC(String newvalue)
  {
    fieldE02SREPAC.setString(newvalue);
  }

  /**
  * Get value of field E02SREPAC as a String.
  */
  public String getE02SREPAC()
  {
    return fieldE02SREPAC.getString();
  }

  /**
  * Set numeric field E02SREPAC using a BigDecimal value.
  */
  public void setE02SREPAC(BigDecimal newvalue)
  {
    fieldE02SREPAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02SREPAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02SREPAC()
  {
    return fieldE02SREPAC.getBigDecimal();
  }

  /**
  * Set field E02SRECO1 using a String value.
  */
  public void setE02SRECO1(String newvalue)
  {
    fieldE02SRECO1.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO1 as a String.
  */
  public String getE02SRECO1()
  {
    return fieldE02SRECO1.getString();
  }

  /**
  * Set field E02SRECO2 using a String value.
  */
  public void setE02SRECO2(String newvalue)
  {
    fieldE02SRECO2.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO2 as a String.
  */
  public String getE02SRECO2()
  {
    return fieldE02SRECO2.getString();
  }

  /**
  * Set field E02SRECO3 using a String value.
  */
  public void setE02SRECO3(String newvalue)
  {
    fieldE02SRECO3.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO3 as a String.
  */
  public String getE02SRECO3()
  {
    return fieldE02SRECO3.getString();
  }

  /**
  * Set field E02SRECO4 using a String value.
  */
  public void setE02SRECO4(String newvalue)
  {
    fieldE02SRECO4.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO4 as a String.
  */
  public String getE02SRECO4()
  {
    return fieldE02SRECO4.getString();
  }

  /**
  * Set field E02SRECO5 using a String value.
  */
  public void setE02SRECO5(String newvalue)
  {
    fieldE02SRECO5.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO5 as a String.
  */
  public String getE02SRECO5()
  {
    return fieldE02SRECO5.getString();
  }

  /**
  * Set field E02SRECO6 using a String value.
  */
  public void setE02SRECO6(String newvalue)
  {
    fieldE02SRECO6.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO6 as a String.
  */
  public String getE02SRECO6()
  {
    return fieldE02SRECO6.getString();
  }

  /**
  * Set field E02SRECO7 using a String value.
  */
  public void setE02SRECO7(String newvalue)
  {
    fieldE02SRECO7.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO7 as a String.
  */
  public String getE02SRECO7()
  {
    return fieldE02SRECO7.getString();
  }

  /**
  * Set field E02SRECO8 using a String value.
  */
  public void setE02SRECO8(String newvalue)
  {
    fieldE02SRECO8.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO8 as a String.
  */
  public String getE02SRECO8()
  {
    return fieldE02SRECO8.getString();
  }

  /**
  * Set field E02SRECO9 using a String value.
  */
  public void setE02SRECO9(String newvalue)
  {
    fieldE02SRECO9.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO9 as a String.
  */
  public String getE02SRECO9()
  {
    return fieldE02SRECO9.getString();
  }

  /**
  * Set field E02SRECO0 using a String value.
  */
  public void setE02SRECO0(String newvalue)
  {
    fieldE02SRECO0.setString(newvalue);
  }

  /**
  * Get value of field E02SRECO0 as a String.
  */
  public String getE02SRECO0()
  {
    return fieldE02SRECO0.getString();
  }

}
