package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL055802 physical file definition.
* 
* File level identifier is 1180830160841.
* Record format level identifier is 4C34B67BDCDA7.
*/

public class EDL055802Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DEAACC",
                                     "E02DEACUN",
                                     "E02CUSNA1",
                                     "E02DEAPRO",
                                     "E02DEATYP",
                                     "E02DEACCY",
                                     "E02MNHACC",
                                     "E02MNHRDY",
                                     "E02MNHRDM",
                                     "E02MNHRDD",
                                     "E02MNHPRC",
                                     "E02MNHSTS",
                                     "E02MNHTYP",
                                     "E02MNHMTV",
                                     "E02MNHRMK",
                                     "E02DSCMTV",
                                     "E02FMDTMM",
                                     "E02FMDTDD",
                                     "E02FMDTYY",
                                     "E02TODTMM",
                                     "E02TODTDD",
                                     "E02TODTYY"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DEAACC",
                                   "E02DEACUN",
                                   "E02CUSNA1",
                                   "E02DEAPRO",
                                   "E02DEATYP",
                                   "E02DEACCY",
                                   "E02MNHACC",
                                   "E02MNHRDY",
                                   "E02MNHRDM",
                                   "E02MNHRDD",
                                   "E02MNHPRC",
                                   "E02MNHSTS",
                                   "E02MNHTYP",
                                   "E02MNHMTV",
                                   "E02MNHRMK",
                                   "E02DSCMTV",
                                   "E02FMDTMM",
                                   "E02FMDTDD",
                                   "E02FMDTYY",
                                   "E02TODTMM",
                                   "E02TODTDD",
                                   "E02TODTYY"
                                 };
  final static String fid = "1180830160841";
  final static String rid = "4C34B67BDCDA7";
  final static String fmtname = "EDL055802";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DEAACC = null;
  private DecimalField fieldE02DEACUN = null;
  private CharacterField fieldE02CUSNA1 = null;
  private CharacterField fieldE02DEAPRO = null;
  private CharacterField fieldE02DEATYP = null;
  private CharacterField fieldE02DEACCY = null;
  private DecimalField fieldE02MNHACC = null;
  private DecimalField fieldE02MNHRDY = null;
  private DecimalField fieldE02MNHRDM = null;
  private DecimalField fieldE02MNHRDD = null;
  private CharacterField fieldE02MNHPRC = null;
  private CharacterField fieldE02MNHSTS = null;
  private CharacterField fieldE02MNHTYP = null;
  private CharacterField fieldE02MNHMTV = null;
  private CharacterField fieldE02MNHRMK = null;
  private CharacterField fieldE02DSCMTV = null;
  private DecimalField fieldE02FMDTMM = null;
  private DecimalField fieldE02FMDTDD = null;
  private DecimalField fieldE02FMDTYY = null;
  private DecimalField fieldE02TODTMM = null;
  private DecimalField fieldE02TODTDD = null;
  private DecimalField fieldE02TODTYY = null;

  /**
  * Constructor for EDL055802Message.
  */
  public EDL055802Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 505;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DEAACC");
    fields[10] = fieldE02DEACUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E02DEACUN");
    fields[11] = fieldE02CUSNA1 =
    new CharacterField(message, HEADERSIZE + 65, 60, "E02CUSNA1");
    fields[12] = fieldE02DEAPRO =
    new CharacterField(message, HEADERSIZE + 125, 4, "E02DEAPRO");
    fields[13] = fieldE02DEATYP =
    new CharacterField(message, HEADERSIZE + 129, 4, "E02DEATYP");
    fields[14] = fieldE02DEACCY =
    new CharacterField(message, HEADERSIZE + 133, 3, "E02DEACCY");
    fields[15] = fieldE02MNHACC =
    new DecimalField(message, HEADERSIZE + 136, 13, 0, "E02MNHACC");
    fields[16] = fieldE02MNHRDY =
    new DecimalField(message, HEADERSIZE + 149, 5, 0, "E02MNHRDY");
    fields[17] = fieldE02MNHRDM =
    new DecimalField(message, HEADERSIZE + 154, 3, 0, "E02MNHRDM");
    fields[18] = fieldE02MNHRDD =
    new DecimalField(message, HEADERSIZE + 157, 3, 0, "E02MNHRDD");
    fields[19] = fieldE02MNHPRC =
    new CharacterField(message, HEADERSIZE + 160, 1, "E02MNHPRC");
    fields[20] = fieldE02MNHSTS =
    new CharacterField(message, HEADERSIZE + 161, 1, "E02MNHSTS");
    fields[21] = fieldE02MNHTYP =
    new CharacterField(message, HEADERSIZE + 162, 1, "E02MNHTYP");
    fields[22] = fieldE02MNHMTV =
    new CharacterField(message, HEADERSIZE + 163, 4, "E02MNHMTV");
    fields[23] = fieldE02MNHRMK =
    new CharacterField(message, HEADERSIZE + 167, 256, "E02MNHRMK");
    fields[24] = fieldE02DSCMTV =
    new CharacterField(message, HEADERSIZE + 423, 60, "E02DSCMTV");
    fields[25] = fieldE02FMDTMM =
    new DecimalField(message, HEADERSIZE + 483, 3, 0, "E02FMDTMM");
    fields[26] = fieldE02FMDTDD =
    new DecimalField(message, HEADERSIZE + 486, 3, 0, "E02FMDTDD");
    fields[27] = fieldE02FMDTYY =
    new DecimalField(message, HEADERSIZE + 489, 5, 0, "E02FMDTYY");
    fields[28] = fieldE02TODTMM =
    new DecimalField(message, HEADERSIZE + 494, 3, 0, "E02TODTMM");
    fields[29] = fieldE02TODTDD =
    new DecimalField(message, HEADERSIZE + 497, 3, 0, "E02TODTDD");
    fields[30] = fieldE02TODTYY =
    new DecimalField(message, HEADERSIZE + 500, 5, 0, "E02TODTYY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DEAACC using a String value.
  */
  public void setE02DEAACC(String newvalue)
  {
    fieldE02DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E02DEAACC as a String.
  */
  public String getE02DEAACC()
  {
    return fieldE02DEAACC.getString();
  }

  /**
  * Set numeric field E02DEAACC using a BigDecimal value.
  */
  public void setE02DEAACC(BigDecimal newvalue)
  {
    fieldE02DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DEAACC()
  {
    return fieldE02DEAACC.getBigDecimal();
  }

  /**
  * Set field E02DEACUN using a String value.
  */
  public void setE02DEACUN(String newvalue)
  {
    fieldE02DEACUN.setString(newvalue);
  }

  /**
  * Get value of field E02DEACUN as a String.
  */
  public String getE02DEACUN()
  {
    return fieldE02DEACUN.getString();
  }

  /**
  * Set numeric field E02DEACUN using a BigDecimal value.
  */
  public void setE02DEACUN(BigDecimal newvalue)
  {
    fieldE02DEACUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DEACUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DEACUN()
  {
    return fieldE02DEACUN.getBigDecimal();
  }

  /**
  * Set field E02CUSNA1 using a String value.
  */
  public void setE02CUSNA1(String newvalue)
  {
    fieldE02CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E02CUSNA1 as a String.
  */
  public String getE02CUSNA1()
  {
    return fieldE02CUSNA1.getString();
  }

  /**
  * Set field E02DEAPRO using a String value.
  */
  public void setE02DEAPRO(String newvalue)
  {
    fieldE02DEAPRO.setString(newvalue);
  }

  /**
  * Get value of field E02DEAPRO as a String.
  */
  public String getE02DEAPRO()
  {
    return fieldE02DEAPRO.getString();
  }

  /**
  * Set field E02DEATYP using a String value.
  */
  public void setE02DEATYP(String newvalue)
  {
    fieldE02DEATYP.setString(newvalue);
  }

  /**
  * Get value of field E02DEATYP as a String.
  */
  public String getE02DEATYP()
  {
    return fieldE02DEATYP.getString();
  }

  /**
  * Set field E02DEACCY using a String value.
  */
  public void setE02DEACCY(String newvalue)
  {
    fieldE02DEACCY.setString(newvalue);
  }

  /**
  * Get value of field E02DEACCY as a String.
  */
  public String getE02DEACCY()
  {
    return fieldE02DEACCY.getString();
  }

  /**
  * Set field E02MNHACC using a String value.
  */
  public void setE02MNHACC(String newvalue)
  {
    fieldE02MNHACC.setString(newvalue);
  }

  /**
  * Get value of field E02MNHACC as a String.
  */
  public String getE02MNHACC()
  {
    return fieldE02MNHACC.getString();
  }

  /**
  * Set numeric field E02MNHACC using a BigDecimal value.
  */
  public void setE02MNHACC(BigDecimal newvalue)
  {
    fieldE02MNHACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MNHACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MNHACC()
  {
    return fieldE02MNHACC.getBigDecimal();
  }

  /**
  * Set field E02MNHRDY using a String value.
  */
  public void setE02MNHRDY(String newvalue)
  {
    fieldE02MNHRDY.setString(newvalue);
  }

  /**
  * Get value of field E02MNHRDY as a String.
  */
  public String getE02MNHRDY()
  {
    return fieldE02MNHRDY.getString();
  }

  /**
  * Set numeric field E02MNHRDY using a BigDecimal value.
  */
  public void setE02MNHRDY(BigDecimal newvalue)
  {
    fieldE02MNHRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MNHRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MNHRDY()
  {
    return fieldE02MNHRDY.getBigDecimal();
  }

  /**
  * Set field E02MNHRDM using a String value.
  */
  public void setE02MNHRDM(String newvalue)
  {
    fieldE02MNHRDM.setString(newvalue);
  }

  /**
  * Get value of field E02MNHRDM as a String.
  */
  public String getE02MNHRDM()
  {
    return fieldE02MNHRDM.getString();
  }

  /**
  * Set numeric field E02MNHRDM using a BigDecimal value.
  */
  public void setE02MNHRDM(BigDecimal newvalue)
  {
    fieldE02MNHRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MNHRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MNHRDM()
  {
    return fieldE02MNHRDM.getBigDecimal();
  }

  /**
  * Set field E02MNHRDD using a String value.
  */
  public void setE02MNHRDD(String newvalue)
  {
    fieldE02MNHRDD.setString(newvalue);
  }

  /**
  * Get value of field E02MNHRDD as a String.
  */
  public String getE02MNHRDD()
  {
    return fieldE02MNHRDD.getString();
  }

  /**
  * Set numeric field E02MNHRDD using a BigDecimal value.
  */
  public void setE02MNHRDD(BigDecimal newvalue)
  {
    fieldE02MNHRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MNHRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MNHRDD()
  {
    return fieldE02MNHRDD.getBigDecimal();
  }

  /**
  * Set field E02MNHPRC using a String value.
  */
  public void setE02MNHPRC(String newvalue)
  {
    fieldE02MNHPRC.setString(newvalue);
  }

  /**
  * Get value of field E02MNHPRC as a String.
  */
  public String getE02MNHPRC()
  {
    return fieldE02MNHPRC.getString();
  }

  /**
  * Set field E02MNHSTS using a String value.
  */
  public void setE02MNHSTS(String newvalue)
  {
    fieldE02MNHSTS.setString(newvalue);
  }

  /**
  * Get value of field E02MNHSTS as a String.
  */
  public String getE02MNHSTS()
  {
    return fieldE02MNHSTS.getString();
  }

  /**
  * Set field E02MNHTYP using a String value.
  */
  public void setE02MNHTYP(String newvalue)
  {
    fieldE02MNHTYP.setString(newvalue);
  }

  /**
  * Get value of field E02MNHTYP as a String.
  */
  public String getE02MNHTYP()
  {
    return fieldE02MNHTYP.getString();
  }

  /**
  * Set field E02MNHMTV using a String value.
  */
  public void setE02MNHMTV(String newvalue)
  {
    fieldE02MNHMTV.setString(newvalue);
  }

  /**
  * Get value of field E02MNHMTV as a String.
  */
  public String getE02MNHMTV()
  {
    return fieldE02MNHMTV.getString();
  }

  /**
  * Set field E02MNHRMK using a String value.
  */
  public void setE02MNHRMK(String newvalue)
  {
    fieldE02MNHRMK.setString(newvalue);
  }

  /**
  * Get value of field E02MNHRMK as a String.
  */
  public String getE02MNHRMK()
  {
    return fieldE02MNHRMK.getString();
  }

  /**
  * Set field E02DSCMTV using a String value.
  */
  public void setE02DSCMTV(String newvalue)
  {
    fieldE02DSCMTV.setString(newvalue);
  }

  /**
  * Get value of field E02DSCMTV as a String.
  */
  public String getE02DSCMTV()
  {
    return fieldE02DSCMTV.getString();
  }

  /**
  * Set field E02FMDTMM using a String value.
  */
  public void setE02FMDTMM(String newvalue)
  {
    fieldE02FMDTMM.setString(newvalue);
  }

  /**
  * Get value of field E02FMDTMM as a String.
  */
  public String getE02FMDTMM()
  {
    return fieldE02FMDTMM.getString();
  }

  /**
  * Set numeric field E02FMDTMM using a BigDecimal value.
  */
  public void setE02FMDTMM(BigDecimal newvalue)
  {
    fieldE02FMDTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FMDTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FMDTMM()
  {
    return fieldE02FMDTMM.getBigDecimal();
  }

  /**
  * Set field E02FMDTDD using a String value.
  */
  public void setE02FMDTDD(String newvalue)
  {
    fieldE02FMDTDD.setString(newvalue);
  }

  /**
  * Get value of field E02FMDTDD as a String.
  */
  public String getE02FMDTDD()
  {
    return fieldE02FMDTDD.getString();
  }

  /**
  * Set numeric field E02FMDTDD using a BigDecimal value.
  */
  public void setE02FMDTDD(BigDecimal newvalue)
  {
    fieldE02FMDTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FMDTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FMDTDD()
  {
    return fieldE02FMDTDD.getBigDecimal();
  }

  /**
  * Set field E02FMDTYY using a String value.
  */
  public void setE02FMDTYY(String newvalue)
  {
    fieldE02FMDTYY.setString(newvalue);
  }

  /**
  * Get value of field E02FMDTYY as a String.
  */
  public String getE02FMDTYY()
  {
    return fieldE02FMDTYY.getString();
  }

  /**
  * Set numeric field E02FMDTYY using a BigDecimal value.
  */
  public void setE02FMDTYY(BigDecimal newvalue)
  {
    fieldE02FMDTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FMDTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FMDTYY()
  {
    return fieldE02FMDTYY.getBigDecimal();
  }

  /**
  * Set field E02TODTMM using a String value.
  */
  public void setE02TODTMM(String newvalue)
  {
    fieldE02TODTMM.setString(newvalue);
  }

  /**
  * Get value of field E02TODTMM as a String.
  */
  public String getE02TODTMM()
  {
    return fieldE02TODTMM.getString();
  }

  /**
  * Set numeric field E02TODTMM using a BigDecimal value.
  */
  public void setE02TODTMM(BigDecimal newvalue)
  {
    fieldE02TODTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02TODTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02TODTMM()
  {
    return fieldE02TODTMM.getBigDecimal();
  }

  /**
  * Set field E02TODTDD using a String value.
  */
  public void setE02TODTDD(String newvalue)
  {
    fieldE02TODTDD.setString(newvalue);
  }

  /**
  * Get value of field E02TODTDD as a String.
  */
  public String getE02TODTDD()
  {
    return fieldE02TODTDD.getString();
  }

  /**
  * Set numeric field E02TODTDD using a BigDecimal value.
  */
  public void setE02TODTDD(BigDecimal newvalue)
  {
    fieldE02TODTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02TODTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02TODTDD()
  {
    return fieldE02TODTDD.getBigDecimal();
  }

  /**
  * Set field E02TODTYY using a String value.
  */
  public void setE02TODTYY(String newvalue)
  {
    fieldE02TODTYY.setString(newvalue);
  }

  /**
  * Get value of field E02TODTYY as a String.
  */
  public String getE02TODTYY()
  {
    return fieldE02TODTYY.getString();
  }

  /**
  * Set numeric field E02TODTYY using a BigDecimal value.
  */
  public void setE02TODTYY(BigDecimal newvalue)
  {
    fieldE02TODTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02TODTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02TODTYY()
  {
    return fieldE02TODTYY.getBigDecimal();
  }

}
