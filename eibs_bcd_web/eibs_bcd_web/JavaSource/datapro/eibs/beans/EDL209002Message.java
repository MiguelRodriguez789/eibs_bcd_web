package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL209002 physical file definition.
* 
* File level identifier is 1180206212345.
* Record format level identifier is 39C8CCBD4B194.
*/

public class EDL209002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DEAACC",
                                     "E02FRCACC",
                                     "E02FRCCUN",
                                     "E02FRCIDN",
                                     "E02FRCNA1",
                                     "E02FRCODM",
                                     "E02FRCODD",
                                     "E02FRCODY",
                                     "E02FRCAMT",
                                     "E02FRCOAM",
                                     "E02FRCMEI",
                                     "E02FRCOMI",
                                     "E02FRCPER",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DEAACC",
                                   "E02FRCACC",
                                   "E02FRCCUN",
                                   "E02FRCIDN",
                                   "E02FRCNA1",
                                   "E02FRCODM",
                                   "E02FRCODD",
                                   "E02FRCODY",
                                   "E02FRCAMT",
                                   "E02FRCOAM",
                                   "E02FRCMEI",
                                   "E02FRCOMI",
                                   "E02FRCPER",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1180206212345";
  final static String rid = "39C8CCBD4B194";
  final static String fmtname = "EDL209002";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DEAACC = null;
  private DecimalField fieldE02FRCACC = null;
  private DecimalField fieldE02FRCCUN = null;
  private CharacterField fieldE02FRCIDN = null;
  private CharacterField fieldE02FRCNA1 = null;
  private DecimalField fieldE02FRCODM = null;
  private DecimalField fieldE02FRCODD = null;
  private DecimalField fieldE02FRCODY = null;
  private DecimalField fieldE02FRCAMT = null;
  private DecimalField fieldE02FRCOAM = null;
  private DecimalField fieldE02FRCMEI = null;
  private DecimalField fieldE02FRCOMI = null;
  private DecimalField fieldE02FRCPER = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EDL209002Message.
  */
  public EDL209002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 258;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DEAACC");
    fields[10] = fieldE02FRCACC =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E02FRCACC");
    fields[11] = fieldE02FRCCUN =
    new DecimalField(message, HEADERSIZE + 68, 10, 0, "E02FRCCUN");
    fields[12] = fieldE02FRCIDN =
    new CharacterField(message, HEADERSIZE + 78, 25, "E02FRCIDN");
    fields[13] = fieldE02FRCNA1 =
    new CharacterField(message, HEADERSIZE + 103, 60, "E02FRCNA1");
    fields[14] = fieldE02FRCODM =
    new DecimalField(message, HEADERSIZE + 163, 3, 0, "E02FRCODM");
    fields[15] = fieldE02FRCODD =
    new DecimalField(message, HEADERSIZE + 166, 3, 0, "E02FRCODD");
    fields[16] = fieldE02FRCODY =
    new DecimalField(message, HEADERSIZE + 169, 5, 0, "E02FRCODY");
    fields[17] = fieldE02FRCAMT =
    new DecimalField(message, HEADERSIZE + 174, 17, 2, "E02FRCAMT");
    fields[18] = fieldE02FRCOAM =
    new DecimalField(message, HEADERSIZE + 191, 17, 2, "E02FRCOAM");
    fields[19] = fieldE02FRCMEI =
    new DecimalField(message, HEADERSIZE + 208, 17, 2, "E02FRCMEI");
    fields[20] = fieldE02FRCOMI =
    new DecimalField(message, HEADERSIZE + 225, 17, 2, "E02FRCOMI");
    fields[21] = fieldE02FRCPER =
    new DecimalField(message, HEADERSIZE + 242, 7, 2, "E02FRCPER");
    fields[22] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 249, 8, 0, "E02NUMREC");
    fields[23] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 257, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DEAACC using a String value.
  */
  public void setE02DEAACC(String newvalue)
  {
    fieldE02DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E02DEAACC as a String.
  */
  public String getE02DEAACC()
  {
    return fieldE02DEAACC.getString();
  }

  /**
  * Set numeric field E02DEAACC using a BigDecimal value.
  */
  public void setE02DEAACC(BigDecimal newvalue)
  {
    fieldE02DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DEAACC()
  {
    return fieldE02DEAACC.getBigDecimal();
  }

  /**
  * Set field E02FRCACC using a String value.
  */
  public void setE02FRCACC(String newvalue)
  {
    fieldE02FRCACC.setString(newvalue);
  }

  /**
  * Get value of field E02FRCACC as a String.
  */
  public String getE02FRCACC()
  {
    return fieldE02FRCACC.getString();
  }

  /**
  * Set numeric field E02FRCACC using a BigDecimal value.
  */
  public void setE02FRCACC(BigDecimal newvalue)
  {
    fieldE02FRCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCACC()
  {
    return fieldE02FRCACC.getBigDecimal();
  }

  /**
  * Set field E02FRCCUN using a String value.
  */
  public void setE02FRCCUN(String newvalue)
  {
    fieldE02FRCCUN.setString(newvalue);
  }

  /**
  * Get value of field E02FRCCUN as a String.
  */
  public String getE02FRCCUN()
  {
    return fieldE02FRCCUN.getString();
  }

  /**
  * Set numeric field E02FRCCUN using a BigDecimal value.
  */
  public void setE02FRCCUN(BigDecimal newvalue)
  {
    fieldE02FRCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCCUN()
  {
    return fieldE02FRCCUN.getBigDecimal();
  }

  /**
  * Set field E02FRCIDN using a String value.
  */
  public void setE02FRCIDN(String newvalue)
  {
    fieldE02FRCIDN.setString(newvalue);
  }

  /**
  * Get value of field E02FRCIDN as a String.
  */
  public String getE02FRCIDN()
  {
    return fieldE02FRCIDN.getString();
  }

  /**
  * Set field E02FRCNA1 using a String value.
  */
  public void setE02FRCNA1(String newvalue)
  {
    fieldE02FRCNA1.setString(newvalue);
  }

  /**
  * Get value of field E02FRCNA1 as a String.
  */
  public String getE02FRCNA1()
  {
    return fieldE02FRCNA1.getString();
  }

  /**
  * Set field E02FRCODM using a String value.
  */
  public void setE02FRCODM(String newvalue)
  {
    fieldE02FRCODM.setString(newvalue);
  }

  /**
  * Get value of field E02FRCODM as a String.
  */
  public String getE02FRCODM()
  {
    return fieldE02FRCODM.getString();
  }

  /**
  * Set numeric field E02FRCODM using a BigDecimal value.
  */
  public void setE02FRCODM(BigDecimal newvalue)
  {
    fieldE02FRCODM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCODM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCODM()
  {
    return fieldE02FRCODM.getBigDecimal();
  }

  /**
  * Set field E02FRCODD using a String value.
  */
  public void setE02FRCODD(String newvalue)
  {
    fieldE02FRCODD.setString(newvalue);
  }

  /**
  * Get value of field E02FRCODD as a String.
  */
  public String getE02FRCODD()
  {
    return fieldE02FRCODD.getString();
  }

  /**
  * Set numeric field E02FRCODD using a BigDecimal value.
  */
  public void setE02FRCODD(BigDecimal newvalue)
  {
    fieldE02FRCODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCODD()
  {
    return fieldE02FRCODD.getBigDecimal();
  }

  /**
  * Set field E02FRCODY using a String value.
  */
  public void setE02FRCODY(String newvalue)
  {
    fieldE02FRCODY.setString(newvalue);
  }

  /**
  * Get value of field E02FRCODY as a String.
  */
  public String getE02FRCODY()
  {
    return fieldE02FRCODY.getString();
  }

  /**
  * Set numeric field E02FRCODY using a BigDecimal value.
  */
  public void setE02FRCODY(BigDecimal newvalue)
  {
    fieldE02FRCODY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCODY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCODY()
  {
    return fieldE02FRCODY.getBigDecimal();
  }

  /**
  * Set field E02FRCAMT using a String value.
  */
  public void setE02FRCAMT(String newvalue)
  {
    fieldE02FRCAMT.setString(newvalue);
  }

  /**
  * Get value of field E02FRCAMT as a String.
  */
  public String getE02FRCAMT()
  {
    return fieldE02FRCAMT.getString();
  }

  /**
  * Set numeric field E02FRCAMT using a BigDecimal value.
  */
  public void setE02FRCAMT(BigDecimal newvalue)
  {
    fieldE02FRCAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCAMT()
  {
    return fieldE02FRCAMT.getBigDecimal();
  }

  /**
  * Set field E02FRCOAM using a String value.
  */
  public void setE02FRCOAM(String newvalue)
  {
    fieldE02FRCOAM.setString(newvalue);
  }

  /**
  * Get value of field E02FRCOAM as a String.
  */
  public String getE02FRCOAM()
  {
    return fieldE02FRCOAM.getString();
  }

  /**
  * Set numeric field E02FRCOAM using a BigDecimal value.
  */
  public void setE02FRCOAM(BigDecimal newvalue)
  {
    fieldE02FRCOAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCOAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCOAM()
  {
    return fieldE02FRCOAM.getBigDecimal();
  }

  /**
  * Set field E02FRCMEI using a String value.
  */
  public void setE02FRCMEI(String newvalue)
  {
    fieldE02FRCMEI.setString(newvalue);
  }

  /**
  * Get value of field E02FRCMEI as a String.
  */
  public String getE02FRCMEI()
  {
    return fieldE02FRCMEI.getString();
  }

  /**
  * Set numeric field E02FRCMEI using a BigDecimal value.
  */
  public void setE02FRCMEI(BigDecimal newvalue)
  {
    fieldE02FRCMEI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCMEI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCMEI()
  {
    return fieldE02FRCMEI.getBigDecimal();
  }

  /**
  * Set field E02FRCOMI using a String value.
  */
  public void setE02FRCOMI(String newvalue)
  {
    fieldE02FRCOMI.setString(newvalue);
  }

  /**
  * Get value of field E02FRCOMI as a String.
  */
  public String getE02FRCOMI()
  {
    return fieldE02FRCOMI.getString();
  }

  /**
  * Set numeric field E02FRCOMI using a BigDecimal value.
  */
  public void setE02FRCOMI(BigDecimal newvalue)
  {
    fieldE02FRCOMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCOMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCOMI()
  {
    return fieldE02FRCOMI.getBigDecimal();
  }

  /**
  * Set field E02FRCPER using a String value.
  */
  public void setE02FRCPER(String newvalue)
  {
    fieldE02FRCPER.setString(newvalue);
  }

  /**
  * Get value of field E02FRCPER as a String.
  */
  public String getE02FRCPER()
  {
    return fieldE02FRCPER.getString();
  }

  /**
  * Set numeric field E02FRCPER using a BigDecimal value.
  */
  public void setE02FRCPER(BigDecimal newvalue)
  {
    fieldE02FRCPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02FRCPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02FRCPER()
  {
    return fieldE02FRCPER.getBigDecimal();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
