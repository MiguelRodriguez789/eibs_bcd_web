package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECJ000102 physical file definition.
* 
* File level identifier is 1100706173535.
* Record format level identifier is 2ED55199E1C9C.
*/

public class ECJ000102Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "CMOTBK",
                                     "CMOTBR",
                                     "CMOTLC",
                                     "CMOTLR",
                                     "CMOTCY",
                                     "CMORFN",
                                     "CMOACD",
                                     "CMOCKN",
                                     "CMOAMT",
                                     "CMOBRM",
                                     "CMOSRM",
                                     "CMOACC",
                                     "CMOCDO",
                                     "CMOCAU",
                                     "CMOOBS",
                                     "CMOACR",
                                     "CMOBTH",
                                     "CMOSEQ",
                                     "CMORCY",
                                     "CMORDY",
                                     "CMORDM",
                                     "CMORDD",
                                     "CMOTIM",
                                     "CMORTL",
                                     "CMODAY",
                                     "CMOSTS",
                                     "CMORFD",
                                     "NOMCLI",
                                     "DIFERE",
                                     "TDRITD",
                                     "CMOTMD",
                                     "CMOTDG",
                                     "CMOTDF"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "CMOTBK",
                                   "CMOTBR",
                                   "CMOTLC",
                                   "CMOTLR",
                                   "CMOTCY",
                                   "CMORFN",
                                   "CMOACD",
                                   "CMOCKN",
                                   "CMOAMT",
                                   "CMOBRM",
                                   "CMOSRM",
                                   "CMOACC",
                                   "CMOCDO",
                                   "CMOCAU",
                                   "CMOOBS",
                                   "CMOACR",
                                   "CMOBTH",
                                   "CMOSEQ",
                                   "CMORCY",
                                   "CMORDY",
                                   "CMORDM",
                                   "CMORDD",
                                   "CMOTIM",
                                   "CMORTL",
                                   "CMODAY",
                                   "CMOSTS",
                                   "CMORFD",
                                   "NOMCLI",
                                   "DIFERE",
                                   "TDRITD",
                                   "CMOTMD",
                                   "CMOTDG",
                                   "CMOTDF"
                                 };
  final static String fid = "1100706173535";
  final static String rid = "2ED55199E1C9C";
  final static String fmtname = "ECJ000102";
  final int FIELDCOUNT = 42;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldCMOTBK = null;
  private DecimalField fieldCMOTBR = null;
  private CharacterField fieldCMOTLC = null;
  private CharacterField fieldCMOTLR = null;
  private CharacterField fieldCMOTCY = null;
  private DecimalField fieldCMORFN = null;
  private DecimalField fieldCMOACD = null;
  private DecimalField fieldCMOCKN = null;
  private DecimalField fieldCMOAMT = null;
  private CharacterField fieldCMOBRM = null;
  private CharacterField fieldCMOSRM = null;
  private DecimalField fieldCMOACC = null;
  private CharacterField fieldCMOCDO = null;
  private CharacterField fieldCMOCAU = null;
  private CharacterField fieldCMOOBS = null;
  private DecimalField fieldCMOACR = null;
  private DecimalField fieldCMOBTH = null;
  private DecimalField fieldCMOSEQ = null;
  private DecimalField fieldCMORCY = null;
  private DecimalField fieldCMORDY = null;
  private DecimalField fieldCMORDM = null;
  private DecimalField fieldCMORDD = null;
  private DecimalField fieldCMOTIM = null;
  private CharacterField fieldCMORTL = null;
  private DecimalField fieldCMODAY = null;
  private CharacterField fieldCMOSTS = null;
  private DecimalField fieldCMORFD = null;
  private CharacterField fieldNOMCLI = null;
  private DecimalField fieldDIFERE = null;
  private CharacterField fieldTDRITD = null;
  private DecimalField fieldCMOTMD = null;
  private DecimalField fieldCMOTDG = null;
  private DecimalField fieldCMOTDF = null;

  /**
  * Constructor for ECJ000102Message.
  */
  public ECJ000102Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 379;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldCMOTBK =
    new CharacterField(message, HEADERSIZE + 42, 2, "CMOTBK");
    fields[10] = fieldCMOTBR =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "CMOTBR");
    fields[11] = fieldCMOTLC =
    new CharacterField(message, HEADERSIZE + 48, 4, "CMOTLC");
    fields[12] = fieldCMOTLR =
    new CharacterField(message, HEADERSIZE + 52, 7, "CMOTLR");
    fields[13] = fieldCMOTCY =
    new CharacterField(message, HEADERSIZE + 59, 3, "CMOTCY");
    fields[14] = fieldCMORFN =
    new DecimalField(message, HEADERSIZE + 62, 9, 0, "CMORFN");
    fields[15] = fieldCMOACD =
    new DecimalField(message, HEADERSIZE + 71, 13, 0, "CMOACD");
    fields[16] = fieldCMOCKN =
    new DecimalField(message, HEADERSIZE + 84, 10, 0, "CMOCKN");
    fields[17] = fieldCMOAMT =
    new DecimalField(message, HEADERSIZE + 94, 17, 2, "CMOAMT");
    fields[18] = fieldCMOBRM =
    new CharacterField(message, HEADERSIZE + 111, 4, "CMOBRM");
    fields[19] = fieldCMOSRM =
    new CharacterField(message, HEADERSIZE + 115, 4, "CMOSRM");
    fields[20] = fieldCMOACC =
    new DecimalField(message, HEADERSIZE + 119, 13, 0, "CMOACC");
    fields[21] = fieldCMOCDO =
    new CharacterField(message, HEADERSIZE + 132, 1, "CMOCDO");
    fields[22] = fieldCMOCAU =
    new CharacterField(message, HEADERSIZE + 133, 4, "CMOCAU");
    fields[23] = fieldCMOOBS =
    new CharacterField(message, HEADERSIZE + 137, 30, "CMOOBS");
    fields[24] = fieldCMOACR =
    new DecimalField(message, HEADERSIZE + 167, 13, 0, "CMOACR");
    fields[25] = fieldCMOBTH =
    new DecimalField(message, HEADERSIZE + 180, 5, 0, "CMOBTH");
    fields[26] = fieldCMOSEQ =
    new DecimalField(message, HEADERSIZE + 185, 5, 0, "CMOSEQ");
    fields[27] = fieldCMORCY =
    new DecimalField(message, HEADERSIZE + 190, 2, 0, "CMORCY");
    fields[28] = fieldCMORDY =
    new DecimalField(message, HEADERSIZE + 192, 3, 0, "CMORDY");
    fields[29] = fieldCMORDM =
    new DecimalField(message, HEADERSIZE + 195, 3, 0, "CMORDM");
    fields[30] = fieldCMORDD =
    new DecimalField(message, HEADERSIZE + 198, 3, 0, "CMORDD");
    fields[31] = fieldCMOTIM =
    new DecimalField(message, HEADERSIZE + 201, 7, 0, "CMOTIM");
    fields[32] = fieldCMORTL =
    new CharacterField(message, HEADERSIZE + 208, 4, "CMORTL");
    fields[33] = fieldCMODAY =
    new DecimalField(message, HEADERSIZE + 212, 4, 0, "CMODAY");
    fields[34] = fieldCMOSTS =
    new CharacterField(message, HEADERSIZE + 216, 1, "CMOSTS");
    fields[35] = fieldCMORFD =
    new DecimalField(message, HEADERSIZE + 217, 9, 0, "CMORFD");
    fields[36] = fieldNOMCLI =
    new CharacterField(message, HEADERSIZE + 226, 45, "NOMCLI");
    fields[37] = fieldDIFERE =
    new DecimalField(message, HEADERSIZE + 271, 17, 2, "DIFERE");
    fields[38] = fieldTDRITD =
    new CharacterField(message, HEADERSIZE + 288, 40, "TDRITD");
    fields[39] = fieldCMOTMD =
    new DecimalField(message, HEADERSIZE + 328, 17, 2, "CMOTMD");
    fields[40] = fieldCMOTDG =
    new DecimalField(message, HEADERSIZE + 345, 17, 2, "CMOTDG");
    fields[41] = fieldCMOTDF =
    new DecimalField(message, HEADERSIZE + 362, 17, 2, "CMOTDF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field CMOTBK using a String value.
  */
  public void setCMOTBK(String newvalue)
  {
    fieldCMOTBK.setString(newvalue);
  }

  /**
  * Get value of field CMOTBK as a String.
  */
  public String getCMOTBK()
  {
    return fieldCMOTBK.getString();
  }

  /**
  * Set field CMOTBR using a String value.
  */
  public void setCMOTBR(String newvalue)
  {
    fieldCMOTBR.setString(newvalue);
  }

  /**
  * Get value of field CMOTBR as a String.
  */
  public String getCMOTBR()
  {
    return fieldCMOTBR.getString();
  }

  /**
  * Set numeric field CMOTBR using a BigDecimal value.
  */
  public void setCMOTBR(BigDecimal newvalue)
  {
    fieldCMOTBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOTBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOTBR()
  {
    return fieldCMOTBR.getBigDecimal();
  }

  /**
  * Set field CMOTLC using a String value.
  */
  public void setCMOTLC(String newvalue)
  {
    fieldCMOTLC.setString(newvalue);
  }

  /**
  * Get value of field CMOTLC as a String.
  */
  public String getCMOTLC()
  {
    return fieldCMOTLC.getString();
  }

  /**
  * Set field CMOTLR using a String value.
  */
  public void setCMOTLR(String newvalue)
  {
    fieldCMOTLR.setString(newvalue);
  }

  /**
  * Get value of field CMOTLR as a String.
  */
  public String getCMOTLR()
  {
    return fieldCMOTLR.getString();
  }

  /**
  * Set field CMOTCY using a String value.
  */
  public void setCMOTCY(String newvalue)
  {
    fieldCMOTCY.setString(newvalue);
  }

  /**
  * Get value of field CMOTCY as a String.
  */
  public String getCMOTCY()
  {
    return fieldCMOTCY.getString();
  }

  /**
  * Set field CMORFN using a String value.
  */
  public void setCMORFN(String newvalue)
  {
    fieldCMORFN.setString(newvalue);
  }

  /**
  * Get value of field CMORFN as a String.
  */
  public String getCMORFN()
  {
    return fieldCMORFN.getString();
  }

  /**
  * Set numeric field CMORFN using a BigDecimal value.
  */
  public void setCMORFN(BigDecimal newvalue)
  {
    fieldCMORFN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORFN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORFN()
  {
    return fieldCMORFN.getBigDecimal();
  }

  /**
  * Set field CMOACD using a String value.
  */
  public void setCMOACD(String newvalue)
  {
    fieldCMOACD.setString(newvalue);
  }

  /**
  * Get value of field CMOACD as a String.
  */
  public String getCMOACD()
  {
    return fieldCMOACD.getString();
  }

  /**
  * Set numeric field CMOACD using a BigDecimal value.
  */
  public void setCMOACD(BigDecimal newvalue)
  {
    fieldCMOACD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOACD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOACD()
  {
    return fieldCMOACD.getBigDecimal();
  }

  /**
  * Set field CMOCKN using a String value.
  */
  public void setCMOCKN(String newvalue)
  {
    fieldCMOCKN.setString(newvalue);
  }

  /**
  * Get value of field CMOCKN as a String.
  */
  public String getCMOCKN()
  {
    return fieldCMOCKN.getString();
  }

  /**
  * Set numeric field CMOCKN using a BigDecimal value.
  */
  public void setCMOCKN(BigDecimal newvalue)
  {
    fieldCMOCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOCKN()
  {
    return fieldCMOCKN.getBigDecimal();
  }

  /**
  * Set field CMOAMT using a String value.
  */
  public void setCMOAMT(String newvalue)
  {
    fieldCMOAMT.setString(newvalue);
  }

  /**
  * Get value of field CMOAMT as a String.
  */
  public String getCMOAMT()
  {
    return fieldCMOAMT.getString();
  }

  /**
  * Set numeric field CMOAMT using a BigDecimal value.
  */
  public void setCMOAMT(BigDecimal newvalue)
  {
    fieldCMOAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOAMT()
  {
    return fieldCMOAMT.getBigDecimal();
  }

  /**
  * Set field CMOBRM using a String value.
  */
  public void setCMOBRM(String newvalue)
  {
    fieldCMOBRM.setString(newvalue);
  }

  /**
  * Get value of field CMOBRM as a String.
  */
  public String getCMOBRM()
  {
    return fieldCMOBRM.getString();
  }

  /**
  * Set field CMOSRM using a String value.
  */
  public void setCMOSRM(String newvalue)
  {
    fieldCMOSRM.setString(newvalue);
  }

  /**
  * Get value of field CMOSRM as a String.
  */
  public String getCMOSRM()
  {
    return fieldCMOSRM.getString();
  }

  /**
  * Set field CMOACC using a String value.
  */
  public void setCMOACC(String newvalue)
  {
    fieldCMOACC.setString(newvalue);
  }

  /**
  * Get value of field CMOACC as a String.
  */
  public String getCMOACC()
  {
    return fieldCMOACC.getString();
  }

  /**
  * Set numeric field CMOACC using a BigDecimal value.
  */
  public void setCMOACC(BigDecimal newvalue)
  {
    fieldCMOACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOACC()
  {
    return fieldCMOACC.getBigDecimal();
  }

  /**
  * Set field CMOCDO using a String value.
  */
  public void setCMOCDO(String newvalue)
  {
    fieldCMOCDO.setString(newvalue);
  }

  /**
  * Get value of field CMOCDO as a String.
  */
  public String getCMOCDO()
  {
    return fieldCMOCDO.getString();
  }

  /**
  * Set field CMOCAU using a String value.
  */
  public void setCMOCAU(String newvalue)
  {
    fieldCMOCAU.setString(newvalue);
  }

  /**
  * Get value of field CMOCAU as a String.
  */
  public String getCMOCAU()
  {
    return fieldCMOCAU.getString();
  }

  /**
  * Set field CMOOBS using a String value.
  */
  public void setCMOOBS(String newvalue)
  {
    fieldCMOOBS.setString(newvalue);
  }

  /**
  * Get value of field CMOOBS as a String.
  */
  public String getCMOOBS()
  {
    return fieldCMOOBS.getString();
  }

  /**
  * Set field CMOACR using a String value.
  */
  public void setCMOACR(String newvalue)
  {
    fieldCMOACR.setString(newvalue);
  }

  /**
  * Get value of field CMOACR as a String.
  */
  public String getCMOACR()
  {
    return fieldCMOACR.getString();
  }

  /**
  * Set numeric field CMOACR using a BigDecimal value.
  */
  public void setCMOACR(BigDecimal newvalue)
  {
    fieldCMOACR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOACR as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOACR()
  {
    return fieldCMOACR.getBigDecimal();
  }

  /**
  * Set field CMOBTH using a String value.
  */
  public void setCMOBTH(String newvalue)
  {
    fieldCMOBTH.setString(newvalue);
  }

  /**
  * Get value of field CMOBTH as a String.
  */
  public String getCMOBTH()
  {
    return fieldCMOBTH.getString();
  }

  /**
  * Set numeric field CMOBTH using a BigDecimal value.
  */
  public void setCMOBTH(BigDecimal newvalue)
  {
    fieldCMOBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOBTH()
  {
    return fieldCMOBTH.getBigDecimal();
  }

  /**
  * Set field CMOSEQ using a String value.
  */
  public void setCMOSEQ(String newvalue)
  {
    fieldCMOSEQ.setString(newvalue);
  }

  /**
  * Get value of field CMOSEQ as a String.
  */
  public String getCMOSEQ()
  {
    return fieldCMOSEQ.getString();
  }

  /**
  * Set numeric field CMOSEQ using a BigDecimal value.
  */
  public void setCMOSEQ(BigDecimal newvalue)
  {
    fieldCMOSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOSEQ()
  {
    return fieldCMOSEQ.getBigDecimal();
  }

  /**
  * Set field CMORCY using a String value.
  */
  public void setCMORCY(String newvalue)
  {
    fieldCMORCY.setString(newvalue);
  }

  /**
  * Get value of field CMORCY as a String.
  */
  public String getCMORCY()
  {
    return fieldCMORCY.getString();
  }

  /**
  * Set numeric field CMORCY using a BigDecimal value.
  */
  public void setCMORCY(BigDecimal newvalue)
  {
    fieldCMORCY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORCY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORCY()
  {
    return fieldCMORCY.getBigDecimal();
  }

  /**
  * Set field CMORDY using a String value.
  */
  public void setCMORDY(String newvalue)
  {
    fieldCMORDY.setString(newvalue);
  }

  /**
  * Get value of field CMORDY as a String.
  */
  public String getCMORDY()
  {
    return fieldCMORDY.getString();
  }

  /**
  * Set numeric field CMORDY using a BigDecimal value.
  */
  public void setCMORDY(BigDecimal newvalue)
  {
    fieldCMORDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORDY()
  {
    return fieldCMORDY.getBigDecimal();
  }

  /**
  * Set field CMORDM using a String value.
  */
  public void setCMORDM(String newvalue)
  {
    fieldCMORDM.setString(newvalue);
  }

  /**
  * Get value of field CMORDM as a String.
  */
  public String getCMORDM()
  {
    return fieldCMORDM.getString();
  }

  /**
  * Set numeric field CMORDM using a BigDecimal value.
  */
  public void setCMORDM(BigDecimal newvalue)
  {
    fieldCMORDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORDM()
  {
    return fieldCMORDM.getBigDecimal();
  }

  /**
  * Set field CMORDD using a String value.
  */
  public void setCMORDD(String newvalue)
  {
    fieldCMORDD.setString(newvalue);
  }

  /**
  * Get value of field CMORDD as a String.
  */
  public String getCMORDD()
  {
    return fieldCMORDD.getString();
  }

  /**
  * Set numeric field CMORDD using a BigDecimal value.
  */
  public void setCMORDD(BigDecimal newvalue)
  {
    fieldCMORDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORDD()
  {
    return fieldCMORDD.getBigDecimal();
  }

  /**
  * Set field CMOTIM using a String value.
  */
  public void setCMOTIM(String newvalue)
  {
    fieldCMOTIM.setString(newvalue);
  }

  /**
  * Get value of field CMOTIM as a String.
  */
  public String getCMOTIM()
  {
    return fieldCMOTIM.getString();
  }

  /**
  * Set numeric field CMOTIM using a BigDecimal value.
  */
  public void setCMOTIM(BigDecimal newvalue)
  {
    fieldCMOTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOTIM()
  {
    return fieldCMOTIM.getBigDecimal();
  }

  /**
  * Set field CMORTL using a String value.
  */
  public void setCMORTL(String newvalue)
  {
    fieldCMORTL.setString(newvalue);
  }

  /**
  * Get value of field CMORTL as a String.
  */
  public String getCMORTL()
  {
    return fieldCMORTL.getString();
  }

  /**
  * Set field CMODAY using a String value.
  */
  public void setCMODAY(String newvalue)
  {
    fieldCMODAY.setString(newvalue);
  }

  /**
  * Get value of field CMODAY as a String.
  */
  public String getCMODAY()
  {
    return fieldCMODAY.getString();
  }

  /**
  * Set numeric field CMODAY using a BigDecimal value.
  */
  public void setCMODAY(BigDecimal newvalue)
  {
    fieldCMODAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMODAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMODAY()
  {
    return fieldCMODAY.getBigDecimal();
  }

  /**
  * Set field CMOSTS using a String value.
  */
  public void setCMOSTS(String newvalue)
  {
    fieldCMOSTS.setString(newvalue);
  }

  /**
  * Get value of field CMOSTS as a String.
  */
  public String getCMOSTS()
  {
    return fieldCMOSTS.getString();
  }

  /**
  * Set field CMORFD using a String value.
  */
  public void setCMORFD(String newvalue)
  {
    fieldCMORFD.setString(newvalue);
  }

  /**
  * Get value of field CMORFD as a String.
  */
  public String getCMORFD()
  {
    return fieldCMORFD.getString();
  }

  /**
  * Set numeric field CMORFD using a BigDecimal value.
  */
  public void setCMORFD(BigDecimal newvalue)
  {
    fieldCMORFD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMORFD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMORFD()
  {
    return fieldCMORFD.getBigDecimal();
  }

  /**
  * Set field NOMCLI using a String value.
  */
  public void setNOMCLI(String newvalue)
  {
    fieldNOMCLI.setString(newvalue);
  }

  /**
  * Get value of field NOMCLI as a String.
  */
  public String getNOMCLI()
  {
    return fieldNOMCLI.getString();
  }

  /**
  * Set field DIFERE using a String value.
  */
  public void setDIFERE(String newvalue)
  {
    fieldDIFERE.setString(newvalue);
  }

  /**
  * Get value of field DIFERE as a String.
  */
  public String getDIFERE()
  {
    return fieldDIFERE.getString();
  }

  /**
  * Set numeric field DIFERE using a BigDecimal value.
  */
  public void setDIFERE(BigDecimal newvalue)
  {
    fieldDIFERE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DIFERE as a BigDecimal.
  */
  public BigDecimal getBigDecimalDIFERE()
  {
    return fieldDIFERE.getBigDecimal();
  }

  /**
  * Set field TDRITD using a String value.
  */
  public void setTDRITD(String newvalue)
  {
    fieldTDRITD.setString(newvalue);
  }

  /**
  * Get value of field TDRITD as a String.
  */
  public String getTDRITD()
  {
    return fieldTDRITD.getString();
  }

  /**
  * Set field CMOTMD using a String value.
  */
  public void setCMOTMD(String newvalue)
  {
    fieldCMOTMD.setString(newvalue);
  }

  /**
  * Get value of field CMOTMD as a String.
  */
  public String getCMOTMD()
  {
    return fieldCMOTMD.getString();
  }

  /**
  * Set numeric field CMOTMD using a BigDecimal value.
  */
  public void setCMOTMD(BigDecimal newvalue)
  {
    fieldCMOTMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOTMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOTMD()
  {
    return fieldCMOTMD.getBigDecimal();
  }

  /**
  * Set field CMOTDG using a String value.
  */
  public void setCMOTDG(String newvalue)
  {
    fieldCMOTDG.setString(newvalue);
  }

  /**
  * Get value of field CMOTDG as a String.
  */
  public String getCMOTDG()
  {
    return fieldCMOTDG.getString();
  }

  /**
  * Set numeric field CMOTDG using a BigDecimal value.
  */
  public void setCMOTDG(BigDecimal newvalue)
  {
    fieldCMOTDG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOTDG as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOTDG()
  {
    return fieldCMOTDG.getBigDecimal();
  }

  /**
  * Set field CMOTDF using a String value.
  */
  public void setCMOTDF(String newvalue)
  {
    fieldCMOTDF.setString(newvalue);
  }

  /**
  * Get value of field CMOTDF as a String.
  */
  public String getCMOTDF()
  {
    return fieldCMOTDF.getString();
  }

  /**
  * Set numeric field CMOTDF using a BigDecimal value.
  */
  public void setCMOTDF(BigDecimal newvalue)
  {
    fieldCMOTDF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMOTDF as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMOTDF()
  {
    return fieldCMOTDF.getBigDecimal();
  }

}
