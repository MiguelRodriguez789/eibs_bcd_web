package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP090401 physical file definition.
* 
* File level identifier is 1160324135947.
* Record format level identifier is 3BDFFACDA7F17.
*/

public class EDP090401Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01MVCCUN",
                                     "E01CUSNA1",
                                     "E01MVCGRP",
                                     "E01MVCGR1",
                                     "E01CUSNA2",
                                     "E01MVCTYP",
                                     "E01MVCYEA",
                                     "E01MVCMON",
                                     "E01MVCDMO",
                                     "E01MVCINS",
                                     "E01MVCACC",
                                     "E01MVCTAC",
                                     "E01MVCDEP",
                                     "E01MVCBAL",
                                     "E01MVCDIN",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01MVCCUN",
                                   "E01CUSNA1",
                                   "E01MVCGRP",
                                   "E01MVCGR1",
                                   "E01CUSNA2",
                                   "E01MVCTYP",
                                   "E01MVCYEA",
                                   "E01MVCMON",
                                   "E01MVCDMO",
                                   "E01MVCINS",
                                   "E01MVCACC",
                                   "E01MVCTAC",
                                   "E01MVCDEP",
                                   "E01MVCBAL",
                                   "E01MVCDIN",
                                   "E01OPECDE"
                                 };
  final static String fid = "1160324135947";
  final static String rid = "3BDFFACDA7F17";
  final static String fmtname = "EDP090401";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private DecimalField fieldE01MVCCUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01MVCGRP = null;
  private DecimalField fieldE01MVCGR1 = null;
  private CharacterField fieldE01CUSNA2 = null;
  private CharacterField fieldE01MVCTYP = null;
  private DecimalField fieldE01MVCYEA = null;
  private DecimalField fieldE01MVCMON = null;
  private CharacterField fieldE01MVCDMO = null;
  private CharacterField fieldE01MVCINS = null;
  private DecimalField fieldE01MVCACC = null;
  private CharacterField fieldE01MVCTAC = null;
  private DecimalField fieldE01MVCDEP = null;
  private DecimalField fieldE01MVCBAL = null;
  private CharacterField fieldE01MVCDIN = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP090401Message.
  */
  public EDP090401Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 329;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01MVCCUN =
    new DecimalField(message, HEADERSIZE + 43, 10, 0, "E01MVCCUN");
    fields[11] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 53, 60, "E01CUSNA1");
    fields[12] = fieldE01MVCGRP =
    new DecimalField(message, HEADERSIZE + 113, 10, 0, "E01MVCGRP");
    fields[13] = fieldE01MVCGR1 =
    new DecimalField(message, HEADERSIZE + 123, 10, 0, "E01MVCGR1");
    fields[14] = fieldE01CUSNA2 =
    new CharacterField(message, HEADERSIZE + 133, 60, "E01CUSNA2");
    fields[15] = fieldE01MVCTYP =
    new CharacterField(message, HEADERSIZE + 193, 1, "E01MVCTYP");
    fields[16] = fieldE01MVCYEA =
    new DecimalField(message, HEADERSIZE + 194, 5, 0, "E01MVCYEA");
    fields[17] = fieldE01MVCMON =
    new DecimalField(message, HEADERSIZE + 199, 3, 0, "E01MVCMON");
    fields[18] = fieldE01MVCDMO =
    new CharacterField(message, HEADERSIZE + 202, 25, "E01MVCDMO");
    fields[19] = fieldE01MVCINS =
    new CharacterField(message, HEADERSIZE + 227, 4, "E01MVCINS");
    fields[20] = fieldE01MVCACC =
    new DecimalField(message, HEADERSIZE + 231, 13, 0, "E01MVCACC");
    fields[21] = fieldE01MVCTAC =
    new CharacterField(message, HEADERSIZE + 244, 1, "E01MVCTAC");
    fields[22] = fieldE01MVCDEP =
    new DecimalField(message, HEADERSIZE + 245, 19, 2, "E01MVCDEP");
    fields[23] = fieldE01MVCBAL =
    new DecimalField(message, HEADERSIZE + 264, 19, 2, "E01MVCBAL");
    fields[24] = fieldE01MVCDIN =
    new CharacterField(message, HEADERSIZE + 283, 45, "E01MVCDIN");
    fields[25] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 328, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01MVCCUN using a String value.
  */
  public void setE01MVCCUN(String newvalue)
  {
    fieldE01MVCCUN.setString(newvalue);
  }

  /**
  * Get value of field E01MVCCUN as a String.
  */
  public String getE01MVCCUN()
  {
    return fieldE01MVCCUN.getString();
  }

  /**
  * Set numeric field E01MVCCUN using a BigDecimal value.
  */
  public void setE01MVCCUN(BigDecimal newvalue)
  {
    fieldE01MVCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCCUN()
  {
    return fieldE01MVCCUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01MVCGRP using a String value.
  */
  public void setE01MVCGRP(String newvalue)
  {
    fieldE01MVCGRP.setString(newvalue);
  }

  /**
  * Get value of field E01MVCGRP as a String.
  */
  public String getE01MVCGRP()
  {
    return fieldE01MVCGRP.getString();
  }

  /**
  * Set numeric field E01MVCGRP using a BigDecimal value.
  */
  public void setE01MVCGRP(BigDecimal newvalue)
  {
    fieldE01MVCGRP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCGRP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCGRP()
  {
    return fieldE01MVCGRP.getBigDecimal();
  }

  /**
  * Set field E01MVCGR1 using a String value.
  */
  public void setE01MVCGR1(String newvalue)
  {
    fieldE01MVCGR1.setString(newvalue);
  }

  /**
  * Get value of field E01MVCGR1 as a String.
  */
  public String getE01MVCGR1()
  {
    return fieldE01MVCGR1.getString();
  }

  /**
  * Set numeric field E01MVCGR1 using a BigDecimal value.
  */
  public void setE01MVCGR1(BigDecimal newvalue)
  {
    fieldE01MVCGR1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCGR1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCGR1()
  {
    return fieldE01MVCGR1.getBigDecimal();
  }

  /**
  * Set field E01CUSNA2 using a String value.
  */
  public void setE01CUSNA2(String newvalue)
  {
    fieldE01CUSNA2.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA2 as a String.
  */
  public String getE01CUSNA2()
  {
    return fieldE01CUSNA2.getString();
  }

  /**
  * Set field E01MVCTYP using a String value.
  */
  public void setE01MVCTYP(String newvalue)
  {
    fieldE01MVCTYP.setString(newvalue);
  }

  /**
  * Get value of field E01MVCTYP as a String.
  */
  public String getE01MVCTYP()
  {
    return fieldE01MVCTYP.getString();
  }

  /**
  * Set field E01MVCYEA using a String value.
  */
  public void setE01MVCYEA(String newvalue)
  {
    fieldE01MVCYEA.setString(newvalue);
  }

  /**
  * Get value of field E01MVCYEA as a String.
  */
  public String getE01MVCYEA()
  {
    return fieldE01MVCYEA.getString();
  }

  /**
  * Set numeric field E01MVCYEA using a BigDecimal value.
  */
  public void setE01MVCYEA(BigDecimal newvalue)
  {
    fieldE01MVCYEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCYEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCYEA()
  {
    return fieldE01MVCYEA.getBigDecimal();
  }

  /**
  * Set field E01MVCMON using a String value.
  */
  public void setE01MVCMON(String newvalue)
  {
    fieldE01MVCMON.setString(newvalue);
  }

  /**
  * Get value of field E01MVCMON as a String.
  */
  public String getE01MVCMON()
  {
    return fieldE01MVCMON.getString();
  }

  /**
  * Set numeric field E01MVCMON using a BigDecimal value.
  */
  public void setE01MVCMON(BigDecimal newvalue)
  {
    fieldE01MVCMON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCMON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCMON()
  {
    return fieldE01MVCMON.getBigDecimal();
  }

  /**
  * Set field E01MVCDMO using a String value.
  */
  public void setE01MVCDMO(String newvalue)
  {
    fieldE01MVCDMO.setString(newvalue);
  }

  /**
  * Get value of field E01MVCDMO as a String.
  */
  public String getE01MVCDMO()
  {
    return fieldE01MVCDMO.getString();
  }

  /**
  * Set field E01MVCINS using a String value.
  */
  public void setE01MVCINS(String newvalue)
  {
    fieldE01MVCINS.setString(newvalue);
  }

  /**
  * Get value of field E01MVCINS as a String.
  */
  public String getE01MVCINS()
  {
    return fieldE01MVCINS.getString();
  }

  /**
  * Set field E01MVCACC using a String value.
  */
  public void setE01MVCACC(String newvalue)
  {
    fieldE01MVCACC.setString(newvalue);
  }

  /**
  * Get value of field E01MVCACC as a String.
  */
  public String getE01MVCACC()
  {
    return fieldE01MVCACC.getString();
  }

  /**
  * Set numeric field E01MVCACC using a BigDecimal value.
  */
  public void setE01MVCACC(BigDecimal newvalue)
  {
    fieldE01MVCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCACC()
  {
    return fieldE01MVCACC.getBigDecimal();
  }

  /**
  * Set field E01MVCTAC using a String value.
  */
  public void setE01MVCTAC(String newvalue)
  {
    fieldE01MVCTAC.setString(newvalue);
  }

  /**
  * Get value of field E01MVCTAC as a String.
  */
  public String getE01MVCTAC()
  {
    return fieldE01MVCTAC.getString();
  }

  /**
  * Set field E01MVCDEP using a String value.
  */
  public void setE01MVCDEP(String newvalue)
  {
    fieldE01MVCDEP.setString(newvalue);
  }

  /**
  * Get value of field E01MVCDEP as a String.
  */
  public String getE01MVCDEP()
  {
    return fieldE01MVCDEP.getString();
  }

  /**
  * Set numeric field E01MVCDEP using a BigDecimal value.
  */
  public void setE01MVCDEP(BigDecimal newvalue)
  {
    fieldE01MVCDEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCDEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCDEP()
  {
    return fieldE01MVCDEP.getBigDecimal();
  }

  /**
  * Set field E01MVCBAL using a String value.
  */
  public void setE01MVCBAL(String newvalue)
  {
    fieldE01MVCBAL.setString(newvalue);
  }

  /**
  * Get value of field E01MVCBAL as a String.
  */
  public String getE01MVCBAL()
  {
    return fieldE01MVCBAL.getString();
  }

  /**
  * Set numeric field E01MVCBAL using a BigDecimal value.
  */
  public void setE01MVCBAL(BigDecimal newvalue)
  {
    fieldE01MVCBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MVCBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MVCBAL()
  {
    return fieldE01MVCBAL.getBigDecimal();
  }

  /**
  * Set field E01MVCDIN using a String value.
  */
  public void setE01MVCDIN(String newvalue)
  {
    fieldE01MVCDIN.setString(newvalue);
  }

  /**
  * Get value of field E01MVCDIN as a String.
  */
  public String getE01MVCDIN()
  {
    return fieldE01MVCDIN.getString();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
