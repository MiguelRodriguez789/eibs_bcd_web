package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP075801 physical file definition.
* 
* File level identifier is 1130611113115.
* Record format level identifier is 3C56DFB1286D1.
*/

public class EDP075801Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01DPDNPR",
                                     "E01DPDNA1",
                                     "E01DPDPRD",
                                     "D01DPDPRD",
                                     "E01DPDDOC",
                                     "E01DPDFAM",
                                     "E01DPDFAD",
                                     "E01DPDFAY",
                                     "E01DPDEAM",
                                     "E01DPDEAD",
                                     "E01DPDEAY",
                                     "E01DPDCOM",
                                     "E01DPDNDI",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01DPDNPR",
                                   "E01DPDNA1",
                                   "E01DPDPRD",
                                   "D01DPDPRD",
                                   "E01DPDDOC",
                                   "E01DPDFAM",
                                   "E01DPDFAD",
                                   "E01DPDFAY",
                                   "E01DPDEAM",
                                   "E01DPDEAD",
                                   "E01DPDEAY",
                                   "E01DPDCOM",
                                   "E01DPDNDI",
                                   "E01OPECDE"
                                 };
  final static String fid = "1130611113115";
  final static String rid = "3C56DFB1286D1";
  final static String fmtname = "EDP075801";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private DecimalField fieldE01DPDNPR = null;
  private CharacterField fieldE01DPDNA1 = null;
  private CharacterField fieldE01DPDPRD = null;
  private CharacterField fieldD01DPDPRD = null;
  private CharacterField fieldE01DPDDOC = null;
  private DecimalField fieldE01DPDFAM = null;
  private DecimalField fieldE01DPDFAD = null;
  private DecimalField fieldE01DPDFAY = null;
  private DecimalField fieldE01DPDEAM = null;
  private DecimalField fieldE01DPDEAD = null;
  private DecimalField fieldE01DPDEAY = null;
  private CharacterField fieldE01DPDCOM = null;
  private DecimalField fieldE01DPDNDI = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP075801Message.
  */
  public EDP075801Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 454;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01DPDNPR =
    new DecimalField(message, HEADERSIZE + 43, 13, 0, "E01DPDNPR");
    fields[11] = fieldE01DPDNA1 =
    new CharacterField(message, HEADERSIZE + 56, 60, "E01DPDNA1");
    fields[12] = fieldE01DPDPRD =
    new CharacterField(message, HEADERSIZE + 116, 4, "E01DPDPRD");
    fields[13] = fieldD01DPDPRD =
    new CharacterField(message, HEADERSIZE + 120, 45, "D01DPDPRD");
    fields[14] = fieldE01DPDDOC =
    new CharacterField(message, HEADERSIZE + 165, 4, "E01DPDDOC");
    fields[15] = fieldE01DPDFAM =
    new DecimalField(message, HEADERSIZE + 169, 3, 0, "E01DPDFAM");
    fields[16] = fieldE01DPDFAD =
    new DecimalField(message, HEADERSIZE + 172, 3, 0, "E01DPDFAD");
    fields[17] = fieldE01DPDFAY =
    new DecimalField(message, HEADERSIZE + 175, 5, 0, "E01DPDFAY");
    fields[18] = fieldE01DPDEAM =
    new DecimalField(message, HEADERSIZE + 180, 3, 0, "E01DPDEAM");
    fields[19] = fieldE01DPDEAD =
    new DecimalField(message, HEADERSIZE + 183, 3, 0, "E01DPDEAD");
    fields[20] = fieldE01DPDEAY =
    new DecimalField(message, HEADERSIZE + 186, 5, 0, "E01DPDEAY");
    fields[21] = fieldE01DPDCOM =
    new CharacterField(message, HEADERSIZE + 191, 256, "E01DPDCOM");
    fields[22] = fieldE01DPDNDI =
    new DecimalField(message, HEADERSIZE + 447, 6, 0, "E01DPDNDI");
    fields[23] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 453, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01DPDNPR using a String value.
  */
  public void setE01DPDNPR(String newvalue)
  {
    fieldE01DPDNPR.setString(newvalue);
  }

  /**
  * Get value of field E01DPDNPR as a String.
  */
  public String getE01DPDNPR()
  {
    return fieldE01DPDNPR.getString();
  }

  /**
  * Set numeric field E01DPDNPR using a BigDecimal value.
  */
  public void setE01DPDNPR(BigDecimal newvalue)
  {
    fieldE01DPDNPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDNPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDNPR()
  {
    return fieldE01DPDNPR.getBigDecimal();
  }

  /**
  * Set field E01DPDNA1 using a String value.
  */
  public void setE01DPDNA1(String newvalue)
  {
    fieldE01DPDNA1.setString(newvalue);
  }

  /**
  * Get value of field E01DPDNA1 as a String.
  */
  public String getE01DPDNA1()
  {
    return fieldE01DPDNA1.getString();
  }

  /**
  * Set field E01DPDPRD using a String value.
  */
  public void setE01DPDPRD(String newvalue)
  {
    fieldE01DPDPRD.setString(newvalue);
  }

  /**
  * Get value of field E01DPDPRD as a String.
  */
  public String getE01DPDPRD()
  {
    return fieldE01DPDPRD.getString();
  }

  /**
  * Set field D01DPDPRD using a String value.
  */
  public void setD01DPDPRD(String newvalue)
  {
    fieldD01DPDPRD.setString(newvalue);
  }

  /**
  * Get value of field D01DPDPRD as a String.
  */
  public String getD01DPDPRD()
  {
    return fieldD01DPDPRD.getString();
  }

  /**
  * Set field E01DPDDOC using a String value.
  */
  public void setE01DPDDOC(String newvalue)
  {
    fieldE01DPDDOC.setString(newvalue);
  }

  /**
  * Get value of field E01DPDDOC as a String.
  */
  public String getE01DPDDOC()
  {
    return fieldE01DPDDOC.getString();
  }

  /**
  * Set field E01DPDFAM using a String value.
  */
  public void setE01DPDFAM(String newvalue)
  {
    fieldE01DPDFAM.setString(newvalue);
  }

  /**
  * Get value of field E01DPDFAM as a String.
  */
  public String getE01DPDFAM()
  {
    return fieldE01DPDFAM.getString();
  }

  /**
  * Set numeric field E01DPDFAM using a BigDecimal value.
  */
  public void setE01DPDFAM(BigDecimal newvalue)
  {
    fieldE01DPDFAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDFAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDFAM()
  {
    return fieldE01DPDFAM.getBigDecimal();
  }

  /**
  * Set field E01DPDFAD using a String value.
  */
  public void setE01DPDFAD(String newvalue)
  {
    fieldE01DPDFAD.setString(newvalue);
  }

  /**
  * Get value of field E01DPDFAD as a String.
  */
  public String getE01DPDFAD()
  {
    return fieldE01DPDFAD.getString();
  }

  /**
  * Set numeric field E01DPDFAD using a BigDecimal value.
  */
  public void setE01DPDFAD(BigDecimal newvalue)
  {
    fieldE01DPDFAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDFAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDFAD()
  {
    return fieldE01DPDFAD.getBigDecimal();
  }

  /**
  * Set field E01DPDFAY using a String value.
  */
  public void setE01DPDFAY(String newvalue)
  {
    fieldE01DPDFAY.setString(newvalue);
  }

  /**
  * Get value of field E01DPDFAY as a String.
  */
  public String getE01DPDFAY()
  {
    return fieldE01DPDFAY.getString();
  }

  /**
  * Set numeric field E01DPDFAY using a BigDecimal value.
  */
  public void setE01DPDFAY(BigDecimal newvalue)
  {
    fieldE01DPDFAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDFAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDFAY()
  {
    return fieldE01DPDFAY.getBigDecimal();
  }

  /**
  * Set field E01DPDEAM using a String value.
  */
  public void setE01DPDEAM(String newvalue)
  {
    fieldE01DPDEAM.setString(newvalue);
  }

  /**
  * Get value of field E01DPDEAM as a String.
  */
  public String getE01DPDEAM()
  {
    return fieldE01DPDEAM.getString();
  }

  /**
  * Set numeric field E01DPDEAM using a BigDecimal value.
  */
  public void setE01DPDEAM(BigDecimal newvalue)
  {
    fieldE01DPDEAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDEAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDEAM()
  {
    return fieldE01DPDEAM.getBigDecimal();
  }

  /**
  * Set field E01DPDEAD using a String value.
  */
  public void setE01DPDEAD(String newvalue)
  {
    fieldE01DPDEAD.setString(newvalue);
  }

  /**
  * Get value of field E01DPDEAD as a String.
  */
  public String getE01DPDEAD()
  {
    return fieldE01DPDEAD.getString();
  }

  /**
  * Set numeric field E01DPDEAD using a BigDecimal value.
  */
  public void setE01DPDEAD(BigDecimal newvalue)
  {
    fieldE01DPDEAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDEAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDEAD()
  {
    return fieldE01DPDEAD.getBigDecimal();
  }

  /**
  * Set field E01DPDEAY using a String value.
  */
  public void setE01DPDEAY(String newvalue)
  {
    fieldE01DPDEAY.setString(newvalue);
  }

  /**
  * Get value of field E01DPDEAY as a String.
  */
  public String getE01DPDEAY()
  {
    return fieldE01DPDEAY.getString();
  }

  /**
  * Set numeric field E01DPDEAY using a BigDecimal value.
  */
  public void setE01DPDEAY(BigDecimal newvalue)
  {
    fieldE01DPDEAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDEAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDEAY()
  {
    return fieldE01DPDEAY.getBigDecimal();
  }

  /**
  * Set field E01DPDCOM using a String value.
  */
  public void setE01DPDCOM(String newvalue)
  {
    fieldE01DPDCOM.setString(newvalue);
  }

  /**
  * Get value of field E01DPDCOM as a String.
  */
  public String getE01DPDCOM()
  {
    return fieldE01DPDCOM.getString();
  }

  /**
  * Set field E01DPDNDI using a String value.
  */
  public void setE01DPDNDI(String newvalue)
  {
    fieldE01DPDNDI.setString(newvalue);
  }

  /**
  * Get value of field E01DPDNDI as a String.
  */
  public String getE01DPDNDI()
  {
    return fieldE01DPDNDI.getString();
  }

  /**
  * Set numeric field E01DPDNDI using a BigDecimal value.
  */
  public void setE01DPDNDI(BigDecimal newvalue)
  {
    fieldE01DPDNDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DPDNDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DPDNDI()
  {
    return fieldE01DPDNDI.getBigDecimal();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
