package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFE021101 physical file definition.
* 
* File level identifier is 1130611113139.
* Record format level identifier is 4FDE82D8D3121.
*/

public class EFE021101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BLOBNK",
                                     "E01BLOACT",
                                     "E01BLOEXT",
                                     "E01BLOINT",
                                     "E01BLOREC",
                                     "E01BLOSAV",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BLOBNK",
                                   "E01BLOACT",
                                   "E01BLOEXT",
                                   "E01BLOINT",
                                   "E01BLOREC",
                                   "E01BLOSAV",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1130611113139";
  final static String rid = "4FDE82D8D3121";
  final static String fmtname = "EFE021101";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01BLOBNK = null;
  private CharacterField fieldE01BLOACT = null;
  private CharacterField fieldE01BLOEXT = null;
  private DecimalField fieldE01BLOINT = null;
  private CharacterField fieldE01BLOREC = null;
  private CharacterField fieldE01BLOSAV = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EFE021101Message.
  */
  public EFE021101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 577;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BLOBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01BLOBNK");
    fields[10] = fieldE01BLOACT =
    new CharacterField(message, HEADERSIZE + 44, 1, "E01BLOACT");
    fields[11] = fieldE01BLOEXT =
    new CharacterField(message, HEADERSIZE + 45, 4, "E01BLOEXT");
    fields[12] = fieldE01BLOINT =
    new DecimalField(message, HEADERSIZE + 49, 6, 0, "E01BLOINT");
    fields[13] = fieldE01BLOREC =
    new CharacterField(message, HEADERSIZE + 55, 256, "E01BLOREC");
    fields[14] = fieldE01BLOSAV =
    new CharacterField(message, HEADERSIZE + 311, 256, "E01BLOSAV");
    fields[15] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 567, 1, "E01ACT");
    fields[16] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 568, 8, 0, "E01NUMREC");
    fields[17] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 576, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BLOBNK using a String value.
  */
  public void setE01BLOBNK(String newvalue)
  {
    fieldE01BLOBNK.setString(newvalue);
  }

  /**
  * Get value of field E01BLOBNK as a String.
  */
  public String getE01BLOBNK()
  {
    return fieldE01BLOBNK.getString();
  }

  /**
  * Set field E01BLOACT using a String value.
  */
  public void setE01BLOACT(String newvalue)
  {
    fieldE01BLOACT.setString(newvalue);
  }

  /**
  * Get value of field E01BLOACT as a String.
  */
  public String getE01BLOACT()
  {
    return fieldE01BLOACT.getString();
  }

  /**
  * Set field E01BLOEXT using a String value.
  */
  public void setE01BLOEXT(String newvalue)
  {
    fieldE01BLOEXT.setString(newvalue);
  }

  /**
  * Get value of field E01BLOEXT as a String.
  */
  public String getE01BLOEXT()
  {
    return fieldE01BLOEXT.getString();
  }

  /**
  * Set field E01BLOINT using a String value.
  */
  public void setE01BLOINT(String newvalue)
  {
    fieldE01BLOINT.setString(newvalue);
  }

  /**
  * Get value of field E01BLOINT as a String.
  */
  public String getE01BLOINT()
  {
    return fieldE01BLOINT.getString();
  }

  /**
  * Set numeric field E01BLOINT using a BigDecimal value.
  */
  public void setE01BLOINT(BigDecimal newvalue)
  {
    fieldE01BLOINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BLOINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BLOINT()
  {
    return fieldE01BLOINT.getBigDecimal();
  }

  /**
  * Set field E01BLOREC using a String value.
  */
  public void setE01BLOREC(String newvalue)
  {
    fieldE01BLOREC.setString(newvalue);
  }

  /**
  * Get value of field E01BLOREC as a String.
  */
  public String getE01BLOREC()
  {
    return fieldE01BLOREC.getString();
  }

  /**
  * Set field E01BLOSAV using a String value.
  */
  public void setE01BLOSAV(String newvalue)
  {
    fieldE01BLOSAV.setString(newvalue);
  }

  /**
  * Get value of field E01BLOSAV as a String.
  */
  public String getE01BLOSAV()
  {
    return fieldE01BLOSAV.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
