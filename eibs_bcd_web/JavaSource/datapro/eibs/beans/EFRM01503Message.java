package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM01503 physical file definition.
* 
* File level identifier is 1210503031508.
* Record format level identifier is 4F131776F195C.
*/

public class EFRM01503Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03TCO",
                                     "E03TDS",
                                     "E03TPE",
                                     "E03CUN",
                                     "E03ACC",
                                     "E03ATY",
                                     "E03ATYD",
                                     "E03PRD",
                                     "E03PRDD",
                                     "E03JAB",
                                     "E03FEB",
                                     "E03MAB",
                                     "E03APB",
                                     "E03MYB",
                                     "E03JUB",
                                     "E03JLB",
                                     "E03AUB",
                                     "E03SEB",
                                     "E03OCB",
                                     "E03NOB",
                                     "E03DEB",
                                     "E03JAA",
                                     "E03FEA",
                                     "E03MAA",
                                     "E03APA",
                                     "E03MYA",
                                     "E03JUA",
                                     "E03JLA",
                                     "E03AUA",
                                     "E03SEA",
                                     "E03OCA",
                                     "E03NOA",
                                     "E03DEA",
                                     "E03JAP",
                                     "E03FEP",
                                     "E03MAP",
                                     "E03APP",
                                     "E03MYP",
                                     "E03JUP",
                                     "E03JLP",
                                     "E03AUP",
                                     "E03SEP",
                                     "E03OCP",
                                     "E03NOP",
                                     "E03DEP",
                                     "E03TOB",
                                     "E03TOA",
                                     "E03TO1",
                                     "E03TO2",
                                     "E03ENDFLD"
                                   };
  final static String tnames[] = {
                                   "*userId",
                                   "*program",
                                   "*fechaHora",
                                   "*srcCode",
                                   "*opeCode",
                                   "*flagMas",
                                   "*flagWk1",
                                   "*flagWk2",
                                   "flag3",
                                   "taxCode",
                                   "taxDescription",
                                   "taxTariff",
                                   "customerNumber",
                                   "accountNumber",
                                   "accountType",
                                   "accountTypeDsc",
                                   "productCode",
                                   "productDsc",
                                   "januaryBase",
                                   "februaryBase",
                                   "marchBase",
                                   "aprilBase",
                                   "mayBase",
                                   "juneBase",
                                   "julyBase",
                                   "augustBase",
                                   "septemberBase",
                                   "octoberBase",
                                   "novemberBase",
                                   "decemberBase",
                                   "januaryAmount",
                                   "februaryAmount",
                                   "marchAmount",
                                   "aprilAmount",
                                   "mayAmount",
                                   "juneAmount",
                                   "julyAmount",
                                   "augustAmount",
                                   "septemberAmount",
                                   "octoberAmount",
                                   "novemberAmount",
                                   "decemberAmount",
                                   "januaryPercent",
                                   "februaryPercent",
                                   "marchPercent",
                                   "aprilPercent",
                                   "mayPercent",
                                   "junePercent",
                                   "julyPercent",
                                   "augustPercent",
                                   "septemberPercent",
                                   "octoberPercent",
                                   "novemberPercent",
                                   "decemberPercent",
                                   "totalBase",
                                   "totalAmount",
                                   "totalBaseByTax",
                                   "totalAmountByTax",
                                   "endOfFile"
                                 };
  final static String fid = "1210503031508";
  final static String rid = "4F131776F195C";
  final static String fmtname = "EFRM01503";
  final int FIELDCOUNT = 59;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03TCO = null;
  private CharacterField fieldE03TDS = null;
  private DecimalField fieldE03TPE = null;
  private DecimalField fieldE03CUN = null;
  private DecimalField fieldE03ACC = null;
  private CharacterField fieldE03ATY = null;
  private CharacterField fieldE03ATYD = null;
  private CharacterField fieldE03PRD = null;
  private CharacterField fieldE03PRDD = null;
  private DecimalField fieldE03JAB = null;
  private DecimalField fieldE03FEB = null;
  private DecimalField fieldE03MAB = null;
  private DecimalField fieldE03APB = null;
  private DecimalField fieldE03MYB = null;
  private DecimalField fieldE03JUB = null;
  private DecimalField fieldE03JLB = null;
  private DecimalField fieldE03AUB = null;
  private DecimalField fieldE03SEB = null;
  private DecimalField fieldE03OCB = null;
  private DecimalField fieldE03NOB = null;
  private DecimalField fieldE03DEB = null;
  private DecimalField fieldE03JAA = null;
  private DecimalField fieldE03FEA = null;
  private DecimalField fieldE03MAA = null;
  private DecimalField fieldE03APA = null;
  private DecimalField fieldE03MYA = null;
  private DecimalField fieldE03JUA = null;
  private DecimalField fieldE03JLA = null;
  private DecimalField fieldE03AUA = null;
  private DecimalField fieldE03SEA = null;
  private DecimalField fieldE03OCA = null;
  private DecimalField fieldE03NOA = null;
  private DecimalField fieldE03DEA = null;
  private DecimalField fieldE03JAP = null;
  private DecimalField fieldE03FEP = null;
  private DecimalField fieldE03MAP = null;
  private DecimalField fieldE03APP = null;
  private DecimalField fieldE03MYP = null;
  private DecimalField fieldE03JUP = null;
  private DecimalField fieldE03JLP = null;
  private DecimalField fieldE03AUP = null;
  private DecimalField fieldE03SEP = null;
  private DecimalField fieldE03OCP = null;
  private DecimalField fieldE03NOP = null;
  private DecimalField fieldE03DEP = null;
  private DecimalField fieldE03TOB = null;
  private DecimalField fieldE03TOA = null;
  private DecimalField fieldE03TO1 = null;
  private DecimalField fieldE03TO2 = null;
  private CharacterField fieldE03ENDFLD = null;

  /**
  * Constructor for EFRM01503Message.
  */
  public EFRM01503Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1058;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "*userId");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "*program");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "*fechaHora");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "*srcCode");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "*opeCode");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "*flagMas");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "*flagWk1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "*flagWk2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "flag3");
    fields[9] = fieldE03TCO =
    new CharacterField(message, HEADERSIZE + 42, 4, "taxCode");
    fields[10] = fieldE03TDS =
    new CharacterField(message, HEADERSIZE + 46, 60, "taxDescription");
    fields[11] = fieldE03TPE =
    new DecimalField(message, HEADERSIZE + 106, 8, 3, "taxTariff");
    fields[12] = fieldE03CUN =
    new DecimalField(message, HEADERSIZE + 114, 10, 0, "customerNumber");
    fields[13] = fieldE03ACC =
    new DecimalField(message, HEADERSIZE + 124, 13, 0, "accountNumber");
    fields[14] = fieldE03ATY =
    new CharacterField(message, HEADERSIZE + 137, 60, "accountType");
    fields[15] = fieldE03ATYD =
    new CharacterField(message, HEADERSIZE + 197, 60, "accountTypeDsc");
    fields[16] = fieldE03PRD =
    new CharacterField(message, HEADERSIZE + 257, 60, "productCode");
    fields[17] = fieldE03PRDD =
    new CharacterField(message, HEADERSIZE + 317, 60, "productDsc");
    fields[18] = fieldE03JAB =
    new DecimalField(message, HEADERSIZE + 377, 17, 2, "januaryBase");
    fields[19] = fieldE03FEB =
    new DecimalField(message, HEADERSIZE + 394, 17, 2, "februaryBase");
    fields[20] = fieldE03MAB =
    new DecimalField(message, HEADERSIZE + 411, 17, 2, "marchBase");
    fields[21] = fieldE03APB =
    new DecimalField(message, HEADERSIZE + 428, 17, 2, "aprilBase");
    fields[22] = fieldE03MYB =
    new DecimalField(message, HEADERSIZE + 445, 17, 2, "mayBase");
    fields[23] = fieldE03JUB =
    new DecimalField(message, HEADERSIZE + 462, 17, 2, "juneBase");
    fields[24] = fieldE03JLB =
    new DecimalField(message, HEADERSIZE + 479, 17, 2, "julyBase");
    fields[25] = fieldE03AUB =
    new DecimalField(message, HEADERSIZE + 496, 17, 2, "augustBase");
    fields[26] = fieldE03SEB =
    new DecimalField(message, HEADERSIZE + 513, 17, 2, "septemberBase");
    fields[27] = fieldE03OCB =
    new DecimalField(message, HEADERSIZE + 530, 17, 2, "octoberBase");
    fields[28] = fieldE03NOB =
    new DecimalField(message, HEADERSIZE + 547, 17, 2, "novemberBase");
    fields[29] = fieldE03DEB =
    new DecimalField(message, HEADERSIZE + 564, 17, 2, "decemberBase");
    fields[30] = fieldE03JAA =
    new DecimalField(message, HEADERSIZE + 581, 17, 2, "januaryAmount");
    fields[31] = fieldE03FEA =
    new DecimalField(message, HEADERSIZE + 598, 17, 2, "februaryAmount");
    fields[32] = fieldE03MAA =
    new DecimalField(message, HEADERSIZE + 615, 17, 2, "marchAmount");
    fields[33] = fieldE03APA =
    new DecimalField(message, HEADERSIZE + 632, 17, 2, "aprilAmount");
    fields[34] = fieldE03MYA =
    new DecimalField(message, HEADERSIZE + 649, 17, 2, "mayAmount");
    fields[35] = fieldE03JUA =
    new DecimalField(message, HEADERSIZE + 666, 17, 2, "juneAmount");
    fields[36] = fieldE03JLA =
    new DecimalField(message, HEADERSIZE + 683, 17, 2, "julyAmount");
    fields[37] = fieldE03AUA =
    new DecimalField(message, HEADERSIZE + 700, 17, 2, "augustAmount");
    fields[38] = fieldE03SEA =
    new DecimalField(message, HEADERSIZE + 717, 17, 2, "septemberAmount");
    fields[39] = fieldE03OCA =
    new DecimalField(message, HEADERSIZE + 734, 17, 2, "octoberAmount");
    fields[40] = fieldE03NOA =
    new DecimalField(message, HEADERSIZE + 751, 17, 2, "novemberAmount");
    fields[41] = fieldE03DEA =
    new DecimalField(message, HEADERSIZE + 768, 17, 2, "decemberAmount");
    fields[42] = fieldE03JAP =
    new DecimalField(message, HEADERSIZE + 785, 17, 2, "januaryPercent");
    fields[43] = fieldE03FEP =
    new DecimalField(message, HEADERSIZE + 802, 17, 2, "februaryPercent");
    fields[44] = fieldE03MAP =
    new DecimalField(message, HEADERSIZE + 819, 17, 2, "marchPercent");
    fields[45] = fieldE03APP =
    new DecimalField(message, HEADERSIZE + 836, 17, 2, "aprilPercent");
    fields[46] = fieldE03MYP =
    new DecimalField(message, HEADERSIZE + 853, 17, 2, "mayPercent");
    fields[47] = fieldE03JUP =
    new DecimalField(message, HEADERSIZE + 870, 17, 2, "junePercent");
    fields[48] = fieldE03JLP =
    new DecimalField(message, HEADERSIZE + 887, 17, 2, "julyPercent");
    fields[49] = fieldE03AUP =
    new DecimalField(message, HEADERSIZE + 904, 17, 2, "augustPercent");
    fields[50] = fieldE03SEP =
    new DecimalField(message, HEADERSIZE + 921, 17, 2, "septemberPercent");
    fields[51] = fieldE03OCP =
    new DecimalField(message, HEADERSIZE + 938, 17, 2, "octoberPercent");
    fields[52] = fieldE03NOP =
    new DecimalField(message, HEADERSIZE + 955, 17, 2, "novemberPercent");
    fields[53] = fieldE03DEP =
    new DecimalField(message, HEADERSIZE + 972, 17, 2, "decemberPercent");
    fields[54] = fieldE03TOB =
    new DecimalField(message, HEADERSIZE + 989, 17, 2, "totalBase");
    fields[55] = fieldE03TOA =
    new DecimalField(message, HEADERSIZE + 1006, 17, 2, "totalAmount");
    fields[56] = fieldE03TO1 =
    new DecimalField(message, HEADERSIZE + 1023, 17, 2, "totalBaseByTax");
    fields[57] = fieldE03TO2 =
    new DecimalField(message, HEADERSIZE + 1040, 17, 2, "totalAmountByTax");
    fields[58] = fieldE03ENDFLD =
    new CharacterField(message, HEADERSIZE + 1057, 1, "endOfFile");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03TCO using a String value.
  */
  public void setE03TCO(String newvalue)
  {
    fieldE03TCO.setString(newvalue);
  }

  /**
  * Get value of field E03TCO as a String.
  */
  public String getE03TCO()
  {
    return fieldE03TCO.getString();
  }

  /**
  * Set field E03TDS using a String value.
  */
  public void setE03TDS(String newvalue)
  {
    fieldE03TDS.setString(newvalue);
  }

  /**
  * Get value of field E03TDS as a String.
  */
  public String getE03TDS()
  {
    return fieldE03TDS.getString();
  }

  /**
  * Set field E03TPE using a String value.
  */
  public void setE03TPE(String newvalue)
  {
    fieldE03TPE.setString(newvalue);
  }

  /**
  * Get value of field E03TPE as a String.
  */
  public String getE03TPE()
  {
    return fieldE03TPE.getString();
  }

  /**
  * Set numeric field E03TPE using a BigDecimal value.
  */
  public void setE03TPE(BigDecimal newvalue)
  {
    fieldE03TPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TPE()
  {
    return fieldE03TPE.getBigDecimal();
  }

  /**
  * Set field E03CUN using a String value.
  */
  public void setE03CUN(String newvalue)
  {
    fieldE03CUN.setString(newvalue);
  }

  /**
  * Get value of field E03CUN as a String.
  */
  public String getE03CUN()
  {
    return fieldE03CUN.getString();
  }

  /**
  * Set numeric field E03CUN using a BigDecimal value.
  */
  public void setE03CUN(BigDecimal newvalue)
  {
    fieldE03CUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03CUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03CUN()
  {
    return fieldE03CUN.getBigDecimal();
  }

  /**
  * Set field E03ACC using a String value.
  */
  public void setE03ACC(String newvalue)
  {
    fieldE03ACC.setString(newvalue);
  }

  /**
  * Get value of field E03ACC as a String.
  */
  public String getE03ACC()
  {
    return fieldE03ACC.getString();
  }

  /**
  * Set numeric field E03ACC using a BigDecimal value.
  */
  public void setE03ACC(BigDecimal newvalue)
  {
    fieldE03ACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03ACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03ACC()
  {
    return fieldE03ACC.getBigDecimal();
  }

  /**
  * Set field E03ATY using a String value.
  */
  public void setE03ATY(String newvalue)
  {
    fieldE03ATY.setString(newvalue);
  }

  /**
  * Get value of field E03ATY as a String.
  */
  public String getE03ATY()
  {
    return fieldE03ATY.getString();
  }

  /**
  * Set field E03ATYD using a String value.
  */
  public void setE03ATYD(String newvalue)
  {
    fieldE03ATYD.setString(newvalue);
  }

  /**
  * Get value of field E03ATYD as a String.
  */
  public String getE03ATYD()
  {
    return fieldE03ATYD.getString();
  }

  /**
  * Set field E03PRD using a String value.
  */
  public void setE03PRD(String newvalue)
  {
    fieldE03PRD.setString(newvalue);
  }

  /**
  * Get value of field E03PRD as a String.
  */
  public String getE03PRD()
  {
    return fieldE03PRD.getString();
  }

  /**
  * Set field E03PRDD using a String value.
  */
  public void setE03PRDD(String newvalue)
  {
    fieldE03PRDD.setString(newvalue);
  }

  /**
  * Get value of field E03PRDD as a String.
  */
  public String getE03PRDD()
  {
    return fieldE03PRDD.getString();
  }

  /**
  * Set field E03JAB using a String value.
  */
  public void setE03JAB(String newvalue)
  {
    fieldE03JAB.setString(newvalue);
  }

  /**
  * Get value of field E03JAB as a String.
  */
  public String getE03JAB()
  {
    return fieldE03JAB.getString();
  }

  /**
  * Set numeric field E03JAB using a BigDecimal value.
  */
  public void setE03JAB(BigDecimal newvalue)
  {
    fieldE03JAB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JAB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JAB()
  {
    return fieldE03JAB.getBigDecimal();
  }

  /**
  * Set field E03FEB using a String value.
  */
  public void setE03FEB(String newvalue)
  {
    fieldE03FEB.setString(newvalue);
  }

  /**
  * Get value of field E03FEB as a String.
  */
  public String getE03FEB()
  {
    return fieldE03FEB.getString();
  }

  /**
  * Set numeric field E03FEB using a BigDecimal value.
  */
  public void setE03FEB(BigDecimal newvalue)
  {
    fieldE03FEB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03FEB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03FEB()
  {
    return fieldE03FEB.getBigDecimal();
  }

  /**
  * Set field E03MAB using a String value.
  */
  public void setE03MAB(String newvalue)
  {
    fieldE03MAB.setString(newvalue);
  }

  /**
  * Get value of field E03MAB as a String.
  */
  public String getE03MAB()
  {
    return fieldE03MAB.getString();
  }

  /**
  * Set numeric field E03MAB using a BigDecimal value.
  */
  public void setE03MAB(BigDecimal newvalue)
  {
    fieldE03MAB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MAB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MAB()
  {
    return fieldE03MAB.getBigDecimal();
  }

  /**
  * Set field E03APB using a String value.
  */
  public void setE03APB(String newvalue)
  {
    fieldE03APB.setString(newvalue);
  }

  /**
  * Get value of field E03APB as a String.
  */
  public String getE03APB()
  {
    return fieldE03APB.getString();
  }

  /**
  * Set numeric field E03APB using a BigDecimal value.
  */
  public void setE03APB(BigDecimal newvalue)
  {
    fieldE03APB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03APB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03APB()
  {
    return fieldE03APB.getBigDecimal();
  }

  /**
  * Set field E03MYB using a String value.
  */
  public void setE03MYB(String newvalue)
  {
    fieldE03MYB.setString(newvalue);
  }

  /**
  * Get value of field E03MYB as a String.
  */
  public String getE03MYB()
  {
    return fieldE03MYB.getString();
  }

  /**
  * Set numeric field E03MYB using a BigDecimal value.
  */
  public void setE03MYB(BigDecimal newvalue)
  {
    fieldE03MYB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MYB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MYB()
  {
    return fieldE03MYB.getBigDecimal();
  }

  /**
  * Set field E03JUB using a String value.
  */
  public void setE03JUB(String newvalue)
  {
    fieldE03JUB.setString(newvalue);
  }

  /**
  * Get value of field E03JUB as a String.
  */
  public String getE03JUB()
  {
    return fieldE03JUB.getString();
  }

  /**
  * Set numeric field E03JUB using a BigDecimal value.
  */
  public void setE03JUB(BigDecimal newvalue)
  {
    fieldE03JUB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JUB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JUB()
  {
    return fieldE03JUB.getBigDecimal();
  }

  /**
  * Set field E03JLB using a String value.
  */
  public void setE03JLB(String newvalue)
  {
    fieldE03JLB.setString(newvalue);
  }

  /**
  * Get value of field E03JLB as a String.
  */
  public String getE03JLB()
  {
    return fieldE03JLB.getString();
  }

  /**
  * Set numeric field E03JLB using a BigDecimal value.
  */
  public void setE03JLB(BigDecimal newvalue)
  {
    fieldE03JLB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JLB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JLB()
  {
    return fieldE03JLB.getBigDecimal();
  }

  /**
  * Set field E03AUB using a String value.
  */
  public void setE03AUB(String newvalue)
  {
    fieldE03AUB.setString(newvalue);
  }

  /**
  * Get value of field E03AUB as a String.
  */
  public String getE03AUB()
  {
    return fieldE03AUB.getString();
  }

  /**
  * Set numeric field E03AUB using a BigDecimal value.
  */
  public void setE03AUB(BigDecimal newvalue)
  {
    fieldE03AUB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03AUB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03AUB()
  {
    return fieldE03AUB.getBigDecimal();
  }

  /**
  * Set field E03SEB using a String value.
  */
  public void setE03SEB(String newvalue)
  {
    fieldE03SEB.setString(newvalue);
  }

  /**
  * Get value of field E03SEB as a String.
  */
  public String getE03SEB()
  {
    return fieldE03SEB.getString();
  }

  /**
  * Set numeric field E03SEB using a BigDecimal value.
  */
  public void setE03SEB(BigDecimal newvalue)
  {
    fieldE03SEB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03SEB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03SEB()
  {
    return fieldE03SEB.getBigDecimal();
  }

  /**
  * Set field E03OCB using a String value.
  */
  public void setE03OCB(String newvalue)
  {
    fieldE03OCB.setString(newvalue);
  }

  /**
  * Get value of field E03OCB as a String.
  */
  public String getE03OCB()
  {
    return fieldE03OCB.getString();
  }

  /**
  * Set numeric field E03OCB using a BigDecimal value.
  */
  public void setE03OCB(BigDecimal newvalue)
  {
    fieldE03OCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03OCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03OCB()
  {
    return fieldE03OCB.getBigDecimal();
  }

  /**
  * Set field E03NOB using a String value.
  */
  public void setE03NOB(String newvalue)
  {
    fieldE03NOB.setString(newvalue);
  }

  /**
  * Get value of field E03NOB as a String.
  */
  public String getE03NOB()
  {
    return fieldE03NOB.getString();
  }

  /**
  * Set numeric field E03NOB using a BigDecimal value.
  */
  public void setE03NOB(BigDecimal newvalue)
  {
    fieldE03NOB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NOB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NOB()
  {
    return fieldE03NOB.getBigDecimal();
  }

  /**
  * Set field E03DEB using a String value.
  */
  public void setE03DEB(String newvalue)
  {
    fieldE03DEB.setString(newvalue);
  }

  /**
  * Get value of field E03DEB as a String.
  */
  public String getE03DEB()
  {
    return fieldE03DEB.getString();
  }

  /**
  * Set numeric field E03DEB using a BigDecimal value.
  */
  public void setE03DEB(BigDecimal newvalue)
  {
    fieldE03DEB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEB()
  {
    return fieldE03DEB.getBigDecimal();
  }

  /**
  * Set field E03JAA using a String value.
  */
  public void setE03JAA(String newvalue)
  {
    fieldE03JAA.setString(newvalue);
  }

  /**
  * Get value of field E03JAA as a String.
  */
  public String getE03JAA()
  {
    return fieldE03JAA.getString();
  }

  /**
  * Set numeric field E03JAA using a BigDecimal value.
  */
  public void setE03JAA(BigDecimal newvalue)
  {
    fieldE03JAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JAA()
  {
    return fieldE03JAA.getBigDecimal();
  }

  /**
  * Set field E03FEA using a String value.
  */
  public void setE03FEA(String newvalue)
  {
    fieldE03FEA.setString(newvalue);
  }

  /**
  * Get value of field E03FEA as a String.
  */
  public String getE03FEA()
  {
    return fieldE03FEA.getString();
  }

  /**
  * Set numeric field E03FEA using a BigDecimal value.
  */
  public void setE03FEA(BigDecimal newvalue)
  {
    fieldE03FEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03FEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03FEA()
  {
    return fieldE03FEA.getBigDecimal();
  }

  /**
  * Set field E03MAA using a String value.
  */
  public void setE03MAA(String newvalue)
  {
    fieldE03MAA.setString(newvalue);
  }

  /**
  * Get value of field E03MAA as a String.
  */
  public String getE03MAA()
  {
    return fieldE03MAA.getString();
  }

  /**
  * Set numeric field E03MAA using a BigDecimal value.
  */
  public void setE03MAA(BigDecimal newvalue)
  {
    fieldE03MAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MAA()
  {
    return fieldE03MAA.getBigDecimal();
  }

  /**
  * Set field E03APA using a String value.
  */
  public void setE03APA(String newvalue)
  {
    fieldE03APA.setString(newvalue);
  }

  /**
  * Get value of field E03APA as a String.
  */
  public String getE03APA()
  {
    return fieldE03APA.getString();
  }

  /**
  * Set numeric field E03APA using a BigDecimal value.
  */
  public void setE03APA(BigDecimal newvalue)
  {
    fieldE03APA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03APA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03APA()
  {
    return fieldE03APA.getBigDecimal();
  }

  /**
  * Set field E03MYA using a String value.
  */
  public void setE03MYA(String newvalue)
  {
    fieldE03MYA.setString(newvalue);
  }

  /**
  * Get value of field E03MYA as a String.
  */
  public String getE03MYA()
  {
    return fieldE03MYA.getString();
  }

  /**
  * Set numeric field E03MYA using a BigDecimal value.
  */
  public void setE03MYA(BigDecimal newvalue)
  {
    fieldE03MYA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MYA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MYA()
  {
    return fieldE03MYA.getBigDecimal();
  }

  /**
  * Set field E03JUA using a String value.
  */
  public void setE03JUA(String newvalue)
  {
    fieldE03JUA.setString(newvalue);
  }

  /**
  * Get value of field E03JUA as a String.
  */
  public String getE03JUA()
  {
    return fieldE03JUA.getString();
  }

  /**
  * Set numeric field E03JUA using a BigDecimal value.
  */
  public void setE03JUA(BigDecimal newvalue)
  {
    fieldE03JUA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JUA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JUA()
  {
    return fieldE03JUA.getBigDecimal();
  }

  /**
  * Set field E03JLA using a String value.
  */
  public void setE03JLA(String newvalue)
  {
    fieldE03JLA.setString(newvalue);
  }

  /**
  * Get value of field E03JLA as a String.
  */
  public String getE03JLA()
  {
    return fieldE03JLA.getString();
  }

  /**
  * Set numeric field E03JLA using a BigDecimal value.
  */
  public void setE03JLA(BigDecimal newvalue)
  {
    fieldE03JLA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JLA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JLA()
  {
    return fieldE03JLA.getBigDecimal();
  }

  /**
  * Set field E03AUA using a String value.
  */
  public void setE03AUA(String newvalue)
  {
    fieldE03AUA.setString(newvalue);
  }

  /**
  * Get value of field E03AUA as a String.
  */
  public String getE03AUA()
  {
    return fieldE03AUA.getString();
  }

  /**
  * Set numeric field E03AUA using a BigDecimal value.
  */
  public void setE03AUA(BigDecimal newvalue)
  {
    fieldE03AUA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03AUA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03AUA()
  {
    return fieldE03AUA.getBigDecimal();
  }

  /**
  * Set field E03SEA using a String value.
  */
  public void setE03SEA(String newvalue)
  {
    fieldE03SEA.setString(newvalue);
  }

  /**
  * Get value of field E03SEA as a String.
  */
  public String getE03SEA()
  {
    return fieldE03SEA.getString();
  }

  /**
  * Set numeric field E03SEA using a BigDecimal value.
  */
  public void setE03SEA(BigDecimal newvalue)
  {
    fieldE03SEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03SEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03SEA()
  {
    return fieldE03SEA.getBigDecimal();
  }

  /**
  * Set field E03OCA using a String value.
  */
  public void setE03OCA(String newvalue)
  {
    fieldE03OCA.setString(newvalue);
  }

  /**
  * Get value of field E03OCA as a String.
  */
  public String getE03OCA()
  {
    return fieldE03OCA.getString();
  }

  /**
  * Set numeric field E03OCA using a BigDecimal value.
  */
  public void setE03OCA(BigDecimal newvalue)
  {
    fieldE03OCA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03OCA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03OCA()
  {
    return fieldE03OCA.getBigDecimal();
  }

  /**
  * Set field E03NOA using a String value.
  */
  public void setE03NOA(String newvalue)
  {
    fieldE03NOA.setString(newvalue);
  }

  /**
  * Get value of field E03NOA as a String.
  */
  public String getE03NOA()
  {
    return fieldE03NOA.getString();
  }

  /**
  * Set numeric field E03NOA using a BigDecimal value.
  */
  public void setE03NOA(BigDecimal newvalue)
  {
    fieldE03NOA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NOA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NOA()
  {
    return fieldE03NOA.getBigDecimal();
  }

  /**
  * Set field E03DEA using a String value.
  */
  public void setE03DEA(String newvalue)
  {
    fieldE03DEA.setString(newvalue);
  }

  /**
  * Get value of field E03DEA as a String.
  */
  public String getE03DEA()
  {
    return fieldE03DEA.getString();
  }

  /**
  * Set numeric field E03DEA using a BigDecimal value.
  */
  public void setE03DEA(BigDecimal newvalue)
  {
    fieldE03DEA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEA()
  {
    return fieldE03DEA.getBigDecimal();
  }

  /**
  * Set field E03JAP using a String value.
  */
  public void setE03JAP(String newvalue)
  {
    fieldE03JAP.setString(newvalue);
  }

  /**
  * Get value of field E03JAP as a String.
  */
  public String getE03JAP()
  {
    return fieldE03JAP.getString();
  }

  /**
  * Set numeric field E03JAP using a BigDecimal value.
  */
  public void setE03JAP(BigDecimal newvalue)
  {
    fieldE03JAP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JAP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JAP()
  {
    return fieldE03JAP.getBigDecimal();
  }

  /**
  * Set field E03FEP using a String value.
  */
  public void setE03FEP(String newvalue)
  {
    fieldE03FEP.setString(newvalue);
  }

  /**
  * Get value of field E03FEP as a String.
  */
  public String getE03FEP()
  {
    return fieldE03FEP.getString();
  }

  /**
  * Set numeric field E03FEP using a BigDecimal value.
  */
  public void setE03FEP(BigDecimal newvalue)
  {
    fieldE03FEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03FEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03FEP()
  {
    return fieldE03FEP.getBigDecimal();
  }

  /**
  * Set field E03MAP using a String value.
  */
  public void setE03MAP(String newvalue)
  {
    fieldE03MAP.setString(newvalue);
  }

  /**
  * Get value of field E03MAP as a String.
  */
  public String getE03MAP()
  {
    return fieldE03MAP.getString();
  }

  /**
  * Set numeric field E03MAP using a BigDecimal value.
  */
  public void setE03MAP(BigDecimal newvalue)
  {
    fieldE03MAP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MAP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MAP()
  {
    return fieldE03MAP.getBigDecimal();
  }

  /**
  * Set field E03APP using a String value.
  */
  public void setE03APP(String newvalue)
  {
    fieldE03APP.setString(newvalue);
  }

  /**
  * Get value of field E03APP as a String.
  */
  public String getE03APP()
  {
    return fieldE03APP.getString();
  }

  /**
  * Set numeric field E03APP using a BigDecimal value.
  */
  public void setE03APP(BigDecimal newvalue)
  {
    fieldE03APP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03APP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03APP()
  {
    return fieldE03APP.getBigDecimal();
  }

  /**
  * Set field E03MYP using a String value.
  */
  public void setE03MYP(String newvalue)
  {
    fieldE03MYP.setString(newvalue);
  }

  /**
  * Get value of field E03MYP as a String.
  */
  public String getE03MYP()
  {
    return fieldE03MYP.getString();
  }

  /**
  * Set numeric field E03MYP using a BigDecimal value.
  */
  public void setE03MYP(BigDecimal newvalue)
  {
    fieldE03MYP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MYP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MYP()
  {
    return fieldE03MYP.getBigDecimal();
  }

  /**
  * Set field E03JUP using a String value.
  */
  public void setE03JUP(String newvalue)
  {
    fieldE03JUP.setString(newvalue);
  }

  /**
  * Get value of field E03JUP as a String.
  */
  public String getE03JUP()
  {
    return fieldE03JUP.getString();
  }

  /**
  * Set numeric field E03JUP using a BigDecimal value.
  */
  public void setE03JUP(BigDecimal newvalue)
  {
    fieldE03JUP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JUP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JUP()
  {
    return fieldE03JUP.getBigDecimal();
  }

  /**
  * Set field E03JLP using a String value.
  */
  public void setE03JLP(String newvalue)
  {
    fieldE03JLP.setString(newvalue);
  }

  /**
  * Get value of field E03JLP as a String.
  */
  public String getE03JLP()
  {
    return fieldE03JLP.getString();
  }

  /**
  * Set numeric field E03JLP using a BigDecimal value.
  */
  public void setE03JLP(BigDecimal newvalue)
  {
    fieldE03JLP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03JLP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03JLP()
  {
    return fieldE03JLP.getBigDecimal();
  }

  /**
  * Set field E03AUP using a String value.
  */
  public void setE03AUP(String newvalue)
  {
    fieldE03AUP.setString(newvalue);
  }

  /**
  * Get value of field E03AUP as a String.
  */
  public String getE03AUP()
  {
    return fieldE03AUP.getString();
  }

  /**
  * Set numeric field E03AUP using a BigDecimal value.
  */
  public void setE03AUP(BigDecimal newvalue)
  {
    fieldE03AUP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03AUP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03AUP()
  {
    return fieldE03AUP.getBigDecimal();
  }

  /**
  * Set field E03SEP using a String value.
  */
  public void setE03SEP(String newvalue)
  {
    fieldE03SEP.setString(newvalue);
  }

  /**
  * Get value of field E03SEP as a String.
  */
  public String getE03SEP()
  {
    return fieldE03SEP.getString();
  }

  /**
  * Set numeric field E03SEP using a BigDecimal value.
  */
  public void setE03SEP(BigDecimal newvalue)
  {
    fieldE03SEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03SEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03SEP()
  {
    return fieldE03SEP.getBigDecimal();
  }

  /**
  * Set field E03OCP using a String value.
  */
  public void setE03OCP(String newvalue)
  {
    fieldE03OCP.setString(newvalue);
  }

  /**
  * Get value of field E03OCP as a String.
  */
  public String getE03OCP()
  {
    return fieldE03OCP.getString();
  }

  /**
  * Set numeric field E03OCP using a BigDecimal value.
  */
  public void setE03OCP(BigDecimal newvalue)
  {
    fieldE03OCP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03OCP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03OCP()
  {
    return fieldE03OCP.getBigDecimal();
  }

  /**
  * Set field E03NOP using a String value.
  */
  public void setE03NOP(String newvalue)
  {
    fieldE03NOP.setString(newvalue);
  }

  /**
  * Get value of field E03NOP as a String.
  */
  public String getE03NOP()
  {
    return fieldE03NOP.getString();
  }

  /**
  * Set numeric field E03NOP using a BigDecimal value.
  */
  public void setE03NOP(BigDecimal newvalue)
  {
    fieldE03NOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NOP()
  {
    return fieldE03NOP.getBigDecimal();
  }

  /**
  * Set field E03DEP using a String value.
  */
  public void setE03DEP(String newvalue)
  {
    fieldE03DEP.setString(newvalue);
  }

  /**
  * Get value of field E03DEP as a String.
  */
  public String getE03DEP()
  {
    return fieldE03DEP.getString();
  }

  /**
  * Set numeric field E03DEP using a BigDecimal value.
  */
  public void setE03DEP(BigDecimal newvalue)
  {
    fieldE03DEP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03DEP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03DEP()
  {
    return fieldE03DEP.getBigDecimal();
  }

  /**
  * Set field E03TOB using a String value.
  */
  public void setE03TOB(String newvalue)
  {
    fieldE03TOB.setString(newvalue);
  }

  /**
  * Get value of field E03TOB as a String.
  */
  public String getE03TOB()
  {
    return fieldE03TOB.getString();
  }

  /**
  * Set numeric field E03TOB using a BigDecimal value.
  */
  public void setE03TOB(BigDecimal newvalue)
  {
    fieldE03TOB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOB()
  {
    return fieldE03TOB.getBigDecimal();
  }

  /**
  * Set field E03TOA using a String value.
  */
  public void setE03TOA(String newvalue)
  {
    fieldE03TOA.setString(newvalue);
  }

  /**
  * Get value of field E03TOA as a String.
  */
  public String getE03TOA()
  {
    return fieldE03TOA.getString();
  }

  /**
  * Set numeric field E03TOA using a BigDecimal value.
  */
  public void setE03TOA(BigDecimal newvalue)
  {
    fieldE03TOA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOA()
  {
    return fieldE03TOA.getBigDecimal();
  }

  /**
  * Set field E03TO1 using a String value.
  */
  public void setE03TO1(String newvalue)
  {
    fieldE03TO1.setString(newvalue);
  }

  /**
  * Get value of field E03TO1 as a String.
  */
  public String getE03TO1()
  {
    return fieldE03TO1.getString();
  }

  /**
  * Set numeric field E03TO1 using a BigDecimal value.
  */
  public void setE03TO1(BigDecimal newvalue)
  {
    fieldE03TO1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TO1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TO1()
  {
    return fieldE03TO1.getBigDecimal();
  }

  /**
  * Set field E03TO2 using a String value.
  */
  public void setE03TO2(String newvalue)
  {
    fieldE03TO2.setString(newvalue);
  }

  /**
  * Get value of field E03TO2 as a String.
  */
  public String getE03TO2()
  {
    return fieldE03TO2.getString();
  }

  /**
  * Set numeric field E03TO2 using a BigDecimal value.
  */
  public void setE03TO2(BigDecimal newvalue)
  {
    fieldE03TO2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TO2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TO2()
  {
    return fieldE03TO2.getBigDecimal();
  }

  /**
  * Set field E03ENDFLD using a String value.
  */
  public void setE03ENDFLD(String newvalue)
  {
    fieldE03ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E03ENDFLD as a String.
  */
  public String getE03ENDFLD()
  {
    return fieldE03ENDFLD.getString();
  }

}
