package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECC005001 physical file definition.
* 
* File level identifier is 1100706173521.
* Record format level identifier is 366C093BCCEF8.
*/

public class ECC005001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "ECCCUN",
                                     "ECCACC",
                                     "ECCNUM",
                                     "ECCFIY",
                                     "ECCFIM",
                                     "ECCFID",
                                     "ECCFFY",
                                     "ECCFFM",
                                     "ECCFFD",
                                     "ECCXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "ECCCUN",
                                   "ECCACC",
                                   "ECCNUM",
                                   "ECCFIY",
                                   "ECCFIM",
                                   "ECCFID",
                                   "ECCFFY",
                                   "ECCFFM",
                                   "ECCFFD",
                                   "ECCXRT"
                                 };
  final static String fid = "1100706173521";
  final static String rid = "366C093BCCEF8";
  final static String fmtname = "ECC005001";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldECCCUN = null;
  private DecimalField fieldECCACC = null;
  private DecimalField fieldECCNUM = null;
  private DecimalField fieldECCFIY = null;
  private DecimalField fieldECCFIM = null;
  private DecimalField fieldECCFID = null;
  private DecimalField fieldECCFFY = null;
  private DecimalField fieldECCFFM = null;
  private DecimalField fieldECCFFD = null;
  private DecimalField fieldECCXRT = null;

  /**
  * Constructor for ECC005001Message.
  */
  public ECC005001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 93;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldECCCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "ECCCUN");
    fields[10] = fieldECCACC =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "ECCACC");
    fields[11] = fieldECCNUM =
    new DecimalField(message, HEADERSIZE + 65, 8, 0, "ECCNUM");
    fields[12] = fieldECCFIY =
    new DecimalField(message, HEADERSIZE + 73, 3, 0, "ECCFIY");
    fields[13] = fieldECCFIM =
    new DecimalField(message, HEADERSIZE + 76, 3, 0, "ECCFIM");
    fields[14] = fieldECCFID =
    new DecimalField(message, HEADERSIZE + 79, 3, 0, "ECCFID");
    fields[15] = fieldECCFFY =
    new DecimalField(message, HEADERSIZE + 82, 3, 0, "ECCFFY");
    fields[16] = fieldECCFFM =
    new DecimalField(message, HEADERSIZE + 85, 3, 0, "ECCFFM");
    fields[17] = fieldECCFFD =
    new DecimalField(message, HEADERSIZE + 88, 3, 0, "ECCFFD");
    fields[18] = fieldECCXRT =
    new DecimalField(message, HEADERSIZE + 91, 2, 0, "ECCXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field ECCCUN using a String value.
  */
  public void setECCCUN(String newvalue)
  {
    fieldECCCUN.setString(newvalue);
  }

  /**
  * Get value of field ECCCUN as a String.
  */
  public String getECCCUN()
  {
    return fieldECCCUN.getString();
  }

  /**
  * Set numeric field ECCCUN using a BigDecimal value.
  */
  public void setECCCUN(BigDecimal newvalue)
  {
    fieldECCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCCUN()
  {
    return fieldECCCUN.getBigDecimal();
  }

  /**
  * Set field ECCACC using a String value.
  */
  public void setECCACC(String newvalue)
  {
    fieldECCACC.setString(newvalue);
  }

  /**
  * Get value of field ECCACC as a String.
  */
  public String getECCACC()
  {
    return fieldECCACC.getString();
  }

  /**
  * Set numeric field ECCACC using a BigDecimal value.
  */
  public void setECCACC(BigDecimal newvalue)
  {
    fieldECCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCACC()
  {
    return fieldECCACC.getBigDecimal();
  }

  /**
  * Set field ECCNUM using a String value.
  */
  public void setECCNUM(String newvalue)
  {
    fieldECCNUM.setString(newvalue);
  }

  /**
  * Get value of field ECCNUM as a String.
  */
  public String getECCNUM()
  {
    return fieldECCNUM.getString();
  }

  /**
  * Set numeric field ECCNUM using a BigDecimal value.
  */
  public void setECCNUM(BigDecimal newvalue)
  {
    fieldECCNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCNUM()
  {
    return fieldECCNUM.getBigDecimal();
  }

  /**
  * Set field ECCFIY using a String value.
  */
  public void setECCFIY(String newvalue)
  {
    fieldECCFIY.setString(newvalue);
  }

  /**
  * Get value of field ECCFIY as a String.
  */
  public String getECCFIY()
  {
    return fieldECCFIY.getString();
  }

  /**
  * Set numeric field ECCFIY using a BigDecimal value.
  */
  public void setECCFIY(BigDecimal newvalue)
  {
    fieldECCFIY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFIY as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFIY()
  {
    return fieldECCFIY.getBigDecimal();
  }

  /**
  * Set field ECCFIM using a String value.
  */
  public void setECCFIM(String newvalue)
  {
    fieldECCFIM.setString(newvalue);
  }

  /**
  * Get value of field ECCFIM as a String.
  */
  public String getECCFIM()
  {
    return fieldECCFIM.getString();
  }

  /**
  * Set numeric field ECCFIM using a BigDecimal value.
  */
  public void setECCFIM(BigDecimal newvalue)
  {
    fieldECCFIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFIM()
  {
    return fieldECCFIM.getBigDecimal();
  }

  /**
  * Set field ECCFID using a String value.
  */
  public void setECCFID(String newvalue)
  {
    fieldECCFID.setString(newvalue);
  }

  /**
  * Get value of field ECCFID as a String.
  */
  public String getECCFID()
  {
    return fieldECCFID.getString();
  }

  /**
  * Set numeric field ECCFID using a BigDecimal value.
  */
  public void setECCFID(BigDecimal newvalue)
  {
    fieldECCFID.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFID as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFID()
  {
    return fieldECCFID.getBigDecimal();
  }

  /**
  * Set field ECCFFY using a String value.
  */
  public void setECCFFY(String newvalue)
  {
    fieldECCFFY.setString(newvalue);
  }

  /**
  * Get value of field ECCFFY as a String.
  */
  public String getECCFFY()
  {
    return fieldECCFFY.getString();
  }

  /**
  * Set numeric field ECCFFY using a BigDecimal value.
  */
  public void setECCFFY(BigDecimal newvalue)
  {
    fieldECCFFY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFFY as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFFY()
  {
    return fieldECCFFY.getBigDecimal();
  }

  /**
  * Set field ECCFFM using a String value.
  */
  public void setECCFFM(String newvalue)
  {
    fieldECCFFM.setString(newvalue);
  }

  /**
  * Get value of field ECCFFM as a String.
  */
  public String getECCFFM()
  {
    return fieldECCFFM.getString();
  }

  /**
  * Set numeric field ECCFFM using a BigDecimal value.
  */
  public void setECCFFM(BigDecimal newvalue)
  {
    fieldECCFFM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFFM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFFM()
  {
    return fieldECCFFM.getBigDecimal();
  }

  /**
  * Set field ECCFFD using a String value.
  */
  public void setECCFFD(String newvalue)
  {
    fieldECCFFD.setString(newvalue);
  }

  /**
  * Get value of field ECCFFD as a String.
  */
  public String getECCFFD()
  {
    return fieldECCFFD.getString();
  }

  /**
  * Set numeric field ECCFFD using a BigDecimal value.
  */
  public void setECCFFD(BigDecimal newvalue)
  {
    fieldECCFFD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCFFD as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCFFD()
  {
    return fieldECCFFD.getBigDecimal();
  }

  /**
  * Set field ECCXRT using a String value.
  */
  public void setECCXRT(String newvalue)
  {
    fieldECCXRT.setString(newvalue);
  }

  /**
  * Get value of field ECCXRT as a String.
  */
  public String getECCXRT()
  {
    return fieldECCXRT.getString();
  }

  /**
  * Set numeric field ECCXRT using a BigDecimal value.
  */
  public void setECCXRT(BigDecimal newvalue)
  {
    fieldECCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCXRT()
  {
    return fieldECCXRT.getBigDecimal();
  }

}
