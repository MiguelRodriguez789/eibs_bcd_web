package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ELC516501 physical file definition.
* 
* File level identifier is 1160930132951.
* Record format level identifier is 365E0674C4E3E.
*/

public class ELC516501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PVHCUN",
                                     "E01PVHNUM",
                                     "E01PVHSEQ",
                                     "E01PVHREF",
                                     "E01PVHAPC",
                                     "E01PVHCDE",
                                     "E01PVHNAR",
                                     "E01PVHPVI",
                                     "E01PVHMPG",
                                     "E01PVHMAC",
                                     "E01PVHNCU",
                                     "E01PVHIVA",
                                     "E01PVHAMT",
                                     "E01PVHOBK",
                                     "E01PVHOBR",
                                     "E01PVHOCY",
                                     "E01PVHOGL",
                                     "E01PVHOAC",
                                     "E01PVHIVP",
                                     "E01PVHIVB",
                                     "E01PVHIVL",
                                     "E01PVHTOT",
                                     "E01NUMREC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PVHCUN",
                                   "E01PVHNUM",
                                   "E01PVHSEQ",
                                   "E01PVHREF",
                                   "E01PVHAPC",
                                   "E01PVHCDE",
                                   "E01PVHNAR",
                                   "E01PVHPVI",
                                   "E01PVHMPG",
                                   "E01PVHMAC",
                                   "E01PVHNCU",
                                   "E01PVHIVA",
                                   "E01PVHAMT",
                                   "E01PVHOBK",
                                   "E01PVHOBR",
                                   "E01PVHOCY",
                                   "E01PVHOGL",
                                   "E01PVHOAC",
                                   "E01PVHIVP",
                                   "E01PVHIVB",
                                   "E01PVHIVL",
                                   "E01PVHTOT",
                                   "E01NUMREC"
                                 };
  final static String fid = "1160930132951";
  final static String rid = "365E0674C4E3E";
  final static String fmtname = "ELC516501";
  final int FIELDCOUNT = 32;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PVHCUN = null;
  private DecimalField fieldE01PVHNUM = null;
  private DecimalField fieldE01PVHSEQ = null;
  private DecimalField fieldE01PVHREF = null;
  private CharacterField fieldE01PVHAPC = null;
  private CharacterField fieldE01PVHCDE = null;
  private CharacterField fieldE01PVHNAR = null;
  private CharacterField fieldE01PVHPVI = null;
  private CharacterField fieldE01PVHMPG = null;
  private DecimalField fieldE01PVHMAC = null;
  private DecimalField fieldE01PVHNCU = null;
  private CharacterField fieldE01PVHIVA = null;
  private DecimalField fieldE01PVHAMT = null;
  private CharacterField fieldE01PVHOBK = null;
  private DecimalField fieldE01PVHOBR = null;
  private CharacterField fieldE01PVHOCY = null;
  private DecimalField fieldE01PVHOGL = null;
  private DecimalField fieldE01PVHOAC = null;
  private DecimalField fieldE01PVHIVP = null;
  private DecimalField fieldE01PVHIVB = null;
  private DecimalField fieldE01PVHIVL = null;
  private DecimalField fieldE01PVHTOT = null;
  private DecimalField fieldE01NUMREC = null;

  /**
  * Constructor for ELC516501Message.
  */
  public ELC516501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 283;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PVHCUN =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01PVHCUN");
    fields[10] = fieldE01PVHNUM =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E01PVHNUM");
    fields[11] = fieldE01PVHSEQ =
    new DecimalField(message, HEADERSIZE + 68, 3, 0, "E01PVHSEQ");
    fields[12] = fieldE01PVHREF =
    new DecimalField(message, HEADERSIZE + 71, 3, 0, "E01PVHREF");
    fields[13] = fieldE01PVHAPC =
    new CharacterField(message, HEADERSIZE + 74, 1, "E01PVHAPC");
    fields[14] = fieldE01PVHCDE =
    new CharacterField(message, HEADERSIZE + 75, 4, "E01PVHCDE");
    fields[15] = fieldE01PVHNAR =
    new CharacterField(message, HEADERSIZE + 79, 60, "E01PVHNAR");
    fields[16] = fieldE01PVHPVI =
    new CharacterField(message, HEADERSIZE + 139, 1, "E01PVHPVI");
    fields[17] = fieldE01PVHMPG =
    new CharacterField(message, HEADERSIZE + 140, 1, "E01PVHMPG");
    fields[18] = fieldE01PVHMAC =
    new DecimalField(message, HEADERSIZE + 141, 13, 0, "E01PVHMAC");
    fields[19] = fieldE01PVHNCU =
    new DecimalField(message, HEADERSIZE + 154, 6, 0, "E01PVHNCU");
    fields[20] = fieldE01PVHIVA =
    new CharacterField(message, HEADERSIZE + 160, 1, "E01PVHIVA");
    fields[21] = fieldE01PVHAMT =
    new DecimalField(message, HEADERSIZE + 161, 17, 2, "E01PVHAMT");
    fields[22] = fieldE01PVHOBK =
    new CharacterField(message, HEADERSIZE + 178, 2, "E01PVHOBK");
    fields[23] = fieldE01PVHOBR =
    new DecimalField(message, HEADERSIZE + 180, 5, 0, "E01PVHOBR");
    fields[24] = fieldE01PVHOCY =
    new CharacterField(message, HEADERSIZE + 185, 3, "E01PVHOCY");
    fields[25] = fieldE01PVHOGL =
    new DecimalField(message, HEADERSIZE + 188, 17, 0, "E01PVHOGL");
    fields[26] = fieldE01PVHOAC =
    new DecimalField(message, HEADERSIZE + 205, 13, 0, "E01PVHOAC");
    fields[27] = fieldE01PVHIVP =
    new DecimalField(message, HEADERSIZE + 218, 8, 3, "E01PVHIVP");
    fields[28] = fieldE01PVHIVB =
    new DecimalField(message, HEADERSIZE + 226, 17, 2, "E01PVHIVB");
    fields[29] = fieldE01PVHIVL =
    new DecimalField(message, HEADERSIZE + 243, 17, 2, "E01PVHIVL");
    fields[30] = fieldE01PVHTOT =
    new DecimalField(message, HEADERSIZE + 260, 17, 2, "E01PVHTOT");
    fields[31] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 277, 6, 0, "E01NUMREC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PVHCUN using a String value.
  */
  public void setE01PVHCUN(String newvalue)
  {
    fieldE01PVHCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PVHCUN as a String.
  */
  public String getE01PVHCUN()
  {
    return fieldE01PVHCUN.getString();
  }

  /**
  * Set numeric field E01PVHCUN using a BigDecimal value.
  */
  public void setE01PVHCUN(BigDecimal newvalue)
  {
    fieldE01PVHCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHCUN()
  {
    return fieldE01PVHCUN.getBigDecimal();
  }

  /**
  * Set field E01PVHNUM using a String value.
  */
  public void setE01PVHNUM(String newvalue)
  {
    fieldE01PVHNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PVHNUM as a String.
  */
  public String getE01PVHNUM()
  {
    return fieldE01PVHNUM.getString();
  }

  /**
  * Set numeric field E01PVHNUM using a BigDecimal value.
  */
  public void setE01PVHNUM(BigDecimal newvalue)
  {
    fieldE01PVHNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHNUM()
  {
    return fieldE01PVHNUM.getBigDecimal();
  }

  /**
  * Set field E01PVHSEQ using a String value.
  */
  public void setE01PVHSEQ(String newvalue)
  {
    fieldE01PVHSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01PVHSEQ as a String.
  */
  public String getE01PVHSEQ()
  {
    return fieldE01PVHSEQ.getString();
  }

  /**
  * Set numeric field E01PVHSEQ using a BigDecimal value.
  */
  public void setE01PVHSEQ(BigDecimal newvalue)
  {
    fieldE01PVHSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHSEQ()
  {
    return fieldE01PVHSEQ.getBigDecimal();
  }

  /**
  * Set field E01PVHREF using a String value.
  */
  public void setE01PVHREF(String newvalue)
  {
    fieldE01PVHREF.setString(newvalue);
  }

  /**
  * Get value of field E01PVHREF as a String.
  */
  public String getE01PVHREF()
  {
    return fieldE01PVHREF.getString();
  }

  /**
  * Set numeric field E01PVHREF using a BigDecimal value.
  */
  public void setE01PVHREF(BigDecimal newvalue)
  {
    fieldE01PVHREF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHREF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHREF()
  {
    return fieldE01PVHREF.getBigDecimal();
  }

  /**
  * Set field E01PVHAPC using a String value.
  */
  public void setE01PVHAPC(String newvalue)
  {
    fieldE01PVHAPC.setString(newvalue);
  }

  /**
  * Get value of field E01PVHAPC as a String.
  */
  public String getE01PVHAPC()
  {
    return fieldE01PVHAPC.getString();
  }

  /**
  * Set field E01PVHCDE using a String value.
  */
  public void setE01PVHCDE(String newvalue)
  {
    fieldE01PVHCDE.setString(newvalue);
  }

  /**
  * Get value of field E01PVHCDE as a String.
  */
  public String getE01PVHCDE()
  {
    return fieldE01PVHCDE.getString();
  }

  /**
  * Set field E01PVHNAR using a String value.
  */
  public void setE01PVHNAR(String newvalue)
  {
    fieldE01PVHNAR.setString(newvalue);
  }

  /**
  * Get value of field E01PVHNAR as a String.
  */
  public String getE01PVHNAR()
  {
    return fieldE01PVHNAR.getString();
  }

  /**
  * Set field E01PVHPVI using a String value.
  */
  public void setE01PVHPVI(String newvalue)
  {
    fieldE01PVHPVI.setString(newvalue);
  }

  /**
  * Get value of field E01PVHPVI as a String.
  */
  public String getE01PVHPVI()
  {
    return fieldE01PVHPVI.getString();
  }

  /**
  * Set field E01PVHMPG using a String value.
  */
  public void setE01PVHMPG(String newvalue)
  {
    fieldE01PVHMPG.setString(newvalue);
  }

  /**
  * Get value of field E01PVHMPG as a String.
  */
  public String getE01PVHMPG()
  {
    return fieldE01PVHMPG.getString();
  }

  /**
  * Set field E01PVHMAC using a String value.
  */
  public void setE01PVHMAC(String newvalue)
  {
    fieldE01PVHMAC.setString(newvalue);
  }

  /**
  * Get value of field E01PVHMAC as a String.
  */
  public String getE01PVHMAC()
  {
    return fieldE01PVHMAC.getString();
  }

  /**
  * Set numeric field E01PVHMAC using a BigDecimal value.
  */
  public void setE01PVHMAC(BigDecimal newvalue)
  {
    fieldE01PVHMAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHMAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHMAC()
  {
    return fieldE01PVHMAC.getBigDecimal();
  }

  /**
  * Set field E01PVHNCU using a String value.
  */
  public void setE01PVHNCU(String newvalue)
  {
    fieldE01PVHNCU.setString(newvalue);
  }

  /**
  * Get value of field E01PVHNCU as a String.
  */
  public String getE01PVHNCU()
  {
    return fieldE01PVHNCU.getString();
  }

  /**
  * Set numeric field E01PVHNCU using a BigDecimal value.
  */
  public void setE01PVHNCU(BigDecimal newvalue)
  {
    fieldE01PVHNCU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHNCU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHNCU()
  {
    return fieldE01PVHNCU.getBigDecimal();
  }

  /**
  * Set field E01PVHIVA using a String value.
  */
  public void setE01PVHIVA(String newvalue)
  {
    fieldE01PVHIVA.setString(newvalue);
  }

  /**
  * Get value of field E01PVHIVA as a String.
  */
  public String getE01PVHIVA()
  {
    return fieldE01PVHIVA.getString();
  }

  /**
  * Set field E01PVHAMT using a String value.
  */
  public void setE01PVHAMT(String newvalue)
  {
    fieldE01PVHAMT.setString(newvalue);
  }

  /**
  * Get value of field E01PVHAMT as a String.
  */
  public String getE01PVHAMT()
  {
    return fieldE01PVHAMT.getString();
  }

  /**
  * Set numeric field E01PVHAMT using a BigDecimal value.
  */
  public void setE01PVHAMT(BigDecimal newvalue)
  {
    fieldE01PVHAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHAMT()
  {
    return fieldE01PVHAMT.getBigDecimal();
  }

  /**
  * Set field E01PVHOBK using a String value.
  */
  public void setE01PVHOBK(String newvalue)
  {
    fieldE01PVHOBK.setString(newvalue);
  }

  /**
  * Get value of field E01PVHOBK as a String.
  */
  public String getE01PVHOBK()
  {
    return fieldE01PVHOBK.getString();
  }

  /**
  * Set field E01PVHOBR using a String value.
  */
  public void setE01PVHOBR(String newvalue)
  {
    fieldE01PVHOBR.setString(newvalue);
  }

  /**
  * Get value of field E01PVHOBR as a String.
  */
  public String getE01PVHOBR()
  {
    return fieldE01PVHOBR.getString();
  }

  /**
  * Set numeric field E01PVHOBR using a BigDecimal value.
  */
  public void setE01PVHOBR(BigDecimal newvalue)
  {
    fieldE01PVHOBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHOBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHOBR()
  {
    return fieldE01PVHOBR.getBigDecimal();
  }

  /**
  * Set field E01PVHOCY using a String value.
  */
  public void setE01PVHOCY(String newvalue)
  {
    fieldE01PVHOCY.setString(newvalue);
  }

  /**
  * Get value of field E01PVHOCY as a String.
  */
  public String getE01PVHOCY()
  {
    return fieldE01PVHOCY.getString();
  }

  /**
  * Set field E01PVHOGL using a String value.
  */
  public void setE01PVHOGL(String newvalue)
  {
    fieldE01PVHOGL.setString(newvalue);
  }

  /**
  * Get value of field E01PVHOGL as a String.
  */
  public String getE01PVHOGL()
  {
    return fieldE01PVHOGL.getString();
  }

  /**
  * Set numeric field E01PVHOGL using a BigDecimal value.
  */
  public void setE01PVHOGL(BigDecimal newvalue)
  {
    fieldE01PVHOGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHOGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHOGL()
  {
    return fieldE01PVHOGL.getBigDecimal();
  }

  /**
  * Set field E01PVHOAC using a String value.
  */
  public void setE01PVHOAC(String newvalue)
  {
    fieldE01PVHOAC.setString(newvalue);
  }

  /**
  * Get value of field E01PVHOAC as a String.
  */
  public String getE01PVHOAC()
  {
    return fieldE01PVHOAC.getString();
  }

  /**
  * Set numeric field E01PVHOAC using a BigDecimal value.
  */
  public void setE01PVHOAC(BigDecimal newvalue)
  {
    fieldE01PVHOAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHOAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHOAC()
  {
    return fieldE01PVHOAC.getBigDecimal();
  }

  /**
  * Set field E01PVHIVP using a String value.
  */
  public void setE01PVHIVP(String newvalue)
  {
    fieldE01PVHIVP.setString(newvalue);
  }

  /**
  * Get value of field E01PVHIVP as a String.
  */
  public String getE01PVHIVP()
  {
    return fieldE01PVHIVP.getString();
  }

  /**
  * Set numeric field E01PVHIVP using a BigDecimal value.
  */
  public void setE01PVHIVP(BigDecimal newvalue)
  {
    fieldE01PVHIVP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHIVP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHIVP()
  {
    return fieldE01PVHIVP.getBigDecimal();
  }

  /**
  * Set field E01PVHIVB using a String value.
  */
  public void setE01PVHIVB(String newvalue)
  {
    fieldE01PVHIVB.setString(newvalue);
  }

  /**
  * Get value of field E01PVHIVB as a String.
  */
  public String getE01PVHIVB()
  {
    return fieldE01PVHIVB.getString();
  }

  /**
  * Set numeric field E01PVHIVB using a BigDecimal value.
  */
  public void setE01PVHIVB(BigDecimal newvalue)
  {
    fieldE01PVHIVB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHIVB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHIVB()
  {
    return fieldE01PVHIVB.getBigDecimal();
  }

  /**
  * Set field E01PVHIVL using a String value.
  */
  public void setE01PVHIVL(String newvalue)
  {
    fieldE01PVHIVL.setString(newvalue);
  }

  /**
  * Get value of field E01PVHIVL as a String.
  */
  public String getE01PVHIVL()
  {
    return fieldE01PVHIVL.getString();
  }

  /**
  * Set numeric field E01PVHIVL using a BigDecimal value.
  */
  public void setE01PVHIVL(BigDecimal newvalue)
  {
    fieldE01PVHIVL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHIVL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHIVL()
  {
    return fieldE01PVHIVL.getBigDecimal();
  }

  /**
  * Set field E01PVHTOT using a String value.
  */
  public void setE01PVHTOT(String newvalue)
  {
    fieldE01PVHTOT.setString(newvalue);
  }

  /**
  * Get value of field E01PVHTOT as a String.
  */
  public String getE01PVHTOT()
  {
    return fieldE01PVHTOT.getString();
  }

  /**
  * Set numeric field E01PVHTOT using a BigDecimal value.
  */
  public void setE01PVHTOT(BigDecimal newvalue)
  {
    fieldE01PVHTOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PVHTOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PVHTOT()
  {
    return fieldE01PVHTOT.getBigDecimal();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

}
