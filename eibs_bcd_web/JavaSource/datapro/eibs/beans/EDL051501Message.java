package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL051501 physical file definition.
* 
* File level identifier is 1180411095522.
* Record format level identifier is 37069C21F5517.
*/

public class EDL051501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CDLBNK",
                                     "E01CDLDLC",
                                     "E01CDLDYS",
                                     "E01CDLDSC",
                                     "E01CDLDLI",
                                     "E01CDLFLI",
                                     "E01CDLFLA",
                                     "E01CDLJUD",
                                     "E01CDLFL1",
                                     "E01CDLFL2",
                                     "E01CDLFL3"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CDLBNK",
                                   "E01CDLDLC",
                                   "E01CDLDYS",
                                   "E01CDLDSC",
                                   "E01CDLDLI",
                                   "E01CDLFLI",
                                   "E01CDLFLA",
                                   "E01CDLJUD",
                                   "E01CDLFL1",
                                   "E01CDLFL2",
                                   "E01CDLFL3"
                                 };
  final static String fid = "1180411095522";
  final static String rid = "37069C21F5517";
  final static String fmtname = "EDL051501";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CDLBNK = null;
  private DecimalField fieldE01CDLDLC = null;
  private DecimalField fieldE01CDLDYS = null;
  private CharacterField fieldE01CDLDSC = null;
  private CharacterField fieldE01CDLDLI = null;
  private CharacterField fieldE01CDLFLI = null;
  private CharacterField fieldE01CDLFLA = null;
  private CharacterField fieldE01CDLJUD = null;
  private CharacterField fieldE01CDLFL1 = null;
  private CharacterField fieldE01CDLFL2 = null;
  private CharacterField fieldE01CDLFL3 = null;

  /**
  * Constructor for EDL051501Message.
  */
  public EDL051501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 104;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CDLBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CDLBNK");
    fields[10] = fieldE01CDLDLC =
    new DecimalField(message, HEADERSIZE + 44, 2, 0, "E01CDLDLC");
    fields[11] = fieldE01CDLDYS =
    new DecimalField(message, HEADERSIZE + 46, 6, 0, "E01CDLDYS");
    fields[12] = fieldE01CDLDSC =
    new CharacterField(message, HEADERSIZE + 52, 45, "E01CDLDSC");
    fields[13] = fieldE01CDLDLI =
    new CharacterField(message, HEADERSIZE + 97, 1, "E01CDLDLI");
    fields[14] = fieldE01CDLFLI =
    new CharacterField(message, HEADERSIZE + 98, 1, "E01CDLFLI");
    fields[15] = fieldE01CDLFLA =
    new CharacterField(message, HEADERSIZE + 99, 1, "E01CDLFLA");
    fields[16] = fieldE01CDLJUD =
    new CharacterField(message, HEADERSIZE + 100, 1, "E01CDLJUD");
    fields[17] = fieldE01CDLFL1 =
    new CharacterField(message, HEADERSIZE + 101, 1, "E01CDLFL1");
    fields[18] = fieldE01CDLFL2 =
    new CharacterField(message, HEADERSIZE + 102, 1, "E01CDLFL2");
    fields[19] = fieldE01CDLFL3 =
    new CharacterField(message, HEADERSIZE + 103, 1, "E01CDLFL3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CDLBNK using a String value.
  */
  public void setE01CDLBNK(String newvalue)
  {
    fieldE01CDLBNK.setString(newvalue);
  }

  /**
  * Get value of field E01CDLBNK as a String.
  */
  public String getE01CDLBNK()
  {
    return fieldE01CDLBNK.getString();
  }

  /**
  * Set field E01CDLDLC using a String value.
  */
  public void setE01CDLDLC(String newvalue)
  {
    fieldE01CDLDLC.setString(newvalue);
  }

  /**
  * Get value of field E01CDLDLC as a String.
  */
  public String getE01CDLDLC()
  {
    return fieldE01CDLDLC.getString();
  }

  /**
  * Set numeric field E01CDLDLC using a BigDecimal value.
  */
  public void setE01CDLDLC(BigDecimal newvalue)
  {
    fieldE01CDLDLC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDLDLC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDLDLC()
  {
    return fieldE01CDLDLC.getBigDecimal();
  }

  /**
  * Set field E01CDLDYS using a String value.
  */
  public void setE01CDLDYS(String newvalue)
  {
    fieldE01CDLDYS.setString(newvalue);
  }

  /**
  * Get value of field E01CDLDYS as a String.
  */
  public String getE01CDLDYS()
  {
    return fieldE01CDLDYS.getString();
  }

  /**
  * Set numeric field E01CDLDYS using a BigDecimal value.
  */
  public void setE01CDLDYS(BigDecimal newvalue)
  {
    fieldE01CDLDYS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDLDYS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDLDYS()
  {
    return fieldE01CDLDYS.getBigDecimal();
  }

  /**
  * Set field E01CDLDSC using a String value.
  */
  public void setE01CDLDSC(String newvalue)
  {
    fieldE01CDLDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CDLDSC as a String.
  */
  public String getE01CDLDSC()
  {
    return fieldE01CDLDSC.getString();
  }

  /**
  * Set field E01CDLDLI using a String value.
  */
  public void setE01CDLDLI(String newvalue)
  {
    fieldE01CDLDLI.setString(newvalue);
  }

  /**
  * Get value of field E01CDLDLI as a String.
  */
  public String getE01CDLDLI()
  {
    return fieldE01CDLDLI.getString();
  }

  /**
  * Set field E01CDLFLI using a String value.
  */
  public void setE01CDLFLI(String newvalue)
  {
    fieldE01CDLFLI.setString(newvalue);
  }

  /**
  * Get value of field E01CDLFLI as a String.
  */
  public String getE01CDLFLI()
  {
    return fieldE01CDLFLI.getString();
  }

  /**
  * Set field E01CDLFLA using a String value.
  */
  public void setE01CDLFLA(String newvalue)
  {
    fieldE01CDLFLA.setString(newvalue);
  }

  /**
  * Get value of field E01CDLFLA as a String.
  */
  public String getE01CDLFLA()
  {
    return fieldE01CDLFLA.getString();
  }

  /**
  * Set field E01CDLJUD using a String value.
  */
  public void setE01CDLJUD(String newvalue)
  {
    fieldE01CDLJUD.setString(newvalue);
  }

  /**
  * Get value of field E01CDLJUD as a String.
  */
  public String getE01CDLJUD()
  {
    return fieldE01CDLJUD.getString();
  }

  /**
  * Set field E01CDLFL1 using a String value.
  */
  public void setE01CDLFL1(String newvalue)
  {
    fieldE01CDLFL1.setString(newvalue);
  }

  /**
  * Get value of field E01CDLFL1 as a String.
  */
  public String getE01CDLFL1()
  {
    return fieldE01CDLFL1.getString();
  }

  /**
  * Set field E01CDLFL2 using a String value.
  */
  public void setE01CDLFL2(String newvalue)
  {
    fieldE01CDLFL2.setString(newvalue);
  }

  /**
  * Get value of field E01CDLFL2 as a String.
  */
  public String getE01CDLFL2()
  {
    return fieldE01CDLFL2.getString();
  }

  /**
  * Set field E01CDLFL3 using a String value.
  */
  public void setE01CDLFL3(String newvalue)
  {
    fieldE01CDLFL3.setString(newvalue);
  }

  /**
  * Get value of field E01CDLFL3 as a String.
  */
  public String getE01CDLFL3()
  {
    return fieldE01CDLFL3.getString();
  }

}
