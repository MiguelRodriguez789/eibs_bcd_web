package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECM000101 physical file definition.
* 
* File level identifier is 1100706173541.
* Record format level identifier is 46DE777D6AA5E.
*/

public class ECM000101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "CMHCUN",
                                     "CMHACC",
                                     "CMHPRD",
                                     "CMHTRX",
                                     "CMHRCV",
                                     "CMHCCV",
                                     "CMHMPD",
                                     "CMHSEG",
                                     "CMHGSE",
                                     "CMHSSG",
                                     "CMHGSS",
                                     "CMHTPG",
                                     "CMHCCM",
                                     "CMHCTF",
                                     "CMHCDC",
                                     "CMHCCY",
                                     "CMHETF",
                                     "CMHMTF",
                                     "CMHMDC",
                                     "CMHMCB",
                                     "CMHPAG",
                                     "CMHFOC",
                                     "CMHFCC",
                                     "CMHFCB",
                                     "CMHFPY",
                                     "CMHFEV",
                                     "CMHPER",
                                     "CMHGLO",
                                     "CMHCUNR",
                                     "CMHACCR",
                                     "CMHIDC",
                                     "CMHIEV",
                                     "CMHIDL",
                                     "CMHRUT",
                                     "CMHNOM",
                                     "CMHPR1",
                                     "CMHPR2",
                                     "CMHDCM",
                                     "CMHOFC",
                                     "CMHDOF",
                                     "CMHBRN",
                                     "CMHDBR",
                                     "CMHLSB",
                                     "CMHAPD",
                                     "CMHAPM",
                                     "CMHAPY",
                                     "CMHVND",
                                     "CMHVNM",
                                     "CMHVNY",
                                     "CMHBDM",
                                     "CMHBDD",
                                     "CMHBDY"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "CMHCUN",
                                   "CMHACC",
                                   "CMHPRD",
                                   "CMHTRX",
                                   "CMHRCV",
                                   "CMHCCV",
                                   "CMHMPD",
                                   "CMHSEG",
                                   "CMHGSE",
                                   "CMHSSG",
                                   "CMHGSS",
                                   "CMHTPG",
                                   "CMHCCM",
                                   "CMHCTF",
                                   "CMHCDC",
                                   "CMHCCY",
                                   "CMHETF",
                                   "CMHMTF",
                                   "CMHMDC",
                                   "CMHMCB",
                                   "CMHPAG",
                                   "CMHFOC",
                                   "CMHFCC",
                                   "CMHFCB",
                                   "CMHFPY",
                                   "CMHFEV",
                                   "CMHPER",
                                   "CMHGLO",
                                   "CMHCUNR",
                                   "CMHACCR",
                                   "CMHIDC",
                                   "CMHIEV",
                                   "CMHIDL",
                                   "CMHRUT",
                                   "CMHNOM",
                                   "CMHPR1",
                                   "CMHPR2",
                                   "CMHDCM",
                                   "CMHOFC",
                                   "CMHDOF",
                                   "CMHBRN",
                                   "CMHDBR",
                                   "CMHLSB",
                                   "CMHAPD",
                                   "CMHAPM",
                                   "CMHAPY",
                                   "CMHVND",
                                   "CMHVNM",
                                   "CMHVNY",
                                   "CMHBDM",
                                   "CMHBDD",
                                   "CMHBDY"
                                 };
  final static String fid = "1100706173541";
  final static String rid = "46DE777D6AA5E";
  final static String fmtname = "ECM000101";
  final int FIELDCOUNT = 61;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldCMHCUN = null;
  private DecimalField fieldCMHACC = null;
  private CharacterField fieldCMHPRD = null;
  private CharacterField fieldCMHTRX = null;
  private CharacterField fieldCMHRCV = null;
  private CharacterField fieldCMHCCV = null;
  private CharacterField fieldCMHMPD = null;
  private CharacterField fieldCMHSEG = null;
  private CharacterField fieldCMHGSE = null;
  private CharacterField fieldCMHSSG = null;
  private CharacterField fieldCMHGSS = null;
  private CharacterField fieldCMHTPG = null;
  private CharacterField fieldCMHCCM = null;
  private CharacterField fieldCMHCTF = null;
  private CharacterField fieldCMHCDC = null;
  private CharacterField fieldCMHCCY = null;
  private DecimalField fieldCMHETF = null;
  private DecimalField fieldCMHMTF = null;
  private DecimalField fieldCMHMDC = null;
  private DecimalField fieldCMHMCB = null;
  private DecimalField fieldCMHPAG = null;
  private DecimalField fieldCMHFOC = null;
  private DecimalField fieldCMHFCC = null;
  private DecimalField fieldCMHFCB = null;
  private DecimalField fieldCMHFPY = null;
  private DecimalField fieldCMHFEV = null;
  private CharacterField fieldCMHPER = null;
  private DecimalField fieldCMHGLO = null;
  private DecimalField fieldCMHCUNR = null;
  private DecimalField fieldCMHACCR = null;
  private CharacterField fieldCMHIDC = null;
  private CharacterField fieldCMHIEV = null;
  private CharacterField fieldCMHIDL = null;
  private CharacterField fieldCMHRUT = null;
  private CharacterField fieldCMHNOM = null;
  private CharacterField fieldCMHPR1 = null;
  private CharacterField fieldCMHPR2 = null;
  private CharacterField fieldCMHDCM = null;
  private CharacterField fieldCMHOFC = null;
  private CharacterField fieldCMHDOF = null;
  private DecimalField fieldCMHBRN = null;
  private CharacterField fieldCMHDBR = null;
  private DecimalField fieldCMHLSB = null;
  private DecimalField fieldCMHAPD = null;
  private DecimalField fieldCMHAPM = null;
  private DecimalField fieldCMHAPY = null;
  private DecimalField fieldCMHVND = null;
  private DecimalField fieldCMHVNM = null;
  private DecimalField fieldCMHVNY = null;
  private DecimalField fieldCMHBDM = null;
  private DecimalField fieldCMHBDD = null;
  private DecimalField fieldCMHBDY = null;

  /**
  * Constructor for ECM000101Message.
  */
  public ECM000101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 605;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldCMHCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "CMHCUN");
    fields[10] = fieldCMHACC =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "CMHACC");
    fields[11] = fieldCMHPRD =
    new CharacterField(message, HEADERSIZE + 65, 4, "CMHPRD");
    fields[12] = fieldCMHTRX =
    new CharacterField(message, HEADERSIZE + 69, 4, "CMHTRX");
    fields[13] = fieldCMHRCV =
    new CharacterField(message, HEADERSIZE + 73, 4, "CMHRCV");
    fields[14] = fieldCMHCCV =
    new CharacterField(message, HEADERSIZE + 77, 4, "CMHCCV");
    fields[15] = fieldCMHMPD =
    new CharacterField(message, HEADERSIZE + 81, 1, "CMHMPD");
    fields[16] = fieldCMHSEG =
    new CharacterField(message, HEADERSIZE + 82, 4, "CMHSEG");
    fields[17] = fieldCMHGSE =
    new CharacterField(message, HEADERSIZE + 86, 35, "CMHGSE");
    fields[18] = fieldCMHSSG =
    new CharacterField(message, HEADERSIZE + 121, 4, "CMHSSG");
    fields[19] = fieldCMHGSS =
    new CharacterField(message, HEADERSIZE + 125, 35, "CMHGSS");
    fields[20] = fieldCMHTPG =
    new CharacterField(message, HEADERSIZE + 160, 2, "CMHTPG");
    fields[21] = fieldCMHCCM =
    new CharacterField(message, HEADERSIZE + 162, 3, "CMHCCM");
    fields[22] = fieldCMHCTF =
    new CharacterField(message, HEADERSIZE + 165, 3, "CMHCTF");
    fields[23] = fieldCMHCDC =
    new CharacterField(message, HEADERSIZE + 168, 3, "CMHCDC");
    fields[24] = fieldCMHCCY =
    new CharacterField(message, HEADERSIZE + 171, 3, "CMHCCY");
    fields[25] = fieldCMHETF =
    new DecimalField(message, HEADERSIZE + 174, 15, 4, "CMHETF");
    fields[26] = fieldCMHMTF =
    new DecimalField(message, HEADERSIZE + 189, 15, 4, "CMHMTF");
    fields[27] = fieldCMHMDC =
    new DecimalField(message, HEADERSIZE + 204, 15, 4, "CMHMDC");
    fields[28] = fieldCMHMCB =
    new DecimalField(message, HEADERSIZE + 219, 15, 4, "CMHMCB");
    fields[29] = fieldCMHPAG =
    new DecimalField(message, HEADERSIZE + 234, 15, 4, "CMHPAG");
    fields[30] = fieldCMHFOC =
    new DecimalField(message, HEADERSIZE + 249, 9, 0, "CMHFOC");
    fields[31] = fieldCMHFCC =
    new DecimalField(message, HEADERSIZE + 258, 9, 0, "CMHFCC");
    fields[32] = fieldCMHFCB =
    new DecimalField(message, HEADERSIZE + 267, 9, 0, "CMHFCB");
    fields[33] = fieldCMHFPY =
    new DecimalField(message, HEADERSIZE + 276, 9, 0, "CMHFPY");
    fields[34] = fieldCMHFEV =
    new DecimalField(message, HEADERSIZE + 285, 9, 0, "CMHFEV");
    fields[35] = fieldCMHPER =
    new CharacterField(message, HEADERSIZE + 294, 2, "CMHPER");
    fields[36] = fieldCMHGLO =
    new DecimalField(message, HEADERSIZE + 296, 17, 0, "CMHGLO");
    fields[37] = fieldCMHCUNR =
    new DecimalField(message, HEADERSIZE + 313, 10, 0, "CMHCUNR");
    fields[38] = fieldCMHACCR =
    new DecimalField(message, HEADERSIZE + 323, 13, 0, "CMHACCR");
    fields[39] = fieldCMHIDC =
    new CharacterField(message, HEADERSIZE + 336, 1, "CMHIDC");
    fields[40] = fieldCMHIEV =
    new CharacterField(message, HEADERSIZE + 337, 1, "CMHIEV");
    fields[41] = fieldCMHIDL =
    new CharacterField(message, HEADERSIZE + 338, 1, "CMHIDL");
    fields[42] = fieldCMHRUT =
    new CharacterField(message, HEADERSIZE + 339, 12, "CMHRUT");
    fields[43] = fieldCMHNOM =
    new CharacterField(message, HEADERSIZE + 351, 40, "CMHNOM");
    fields[44] = fieldCMHPR1 =
    new CharacterField(message, HEADERSIZE + 391, 32, "CMHPR1");
    fields[45] = fieldCMHPR2 =
    new CharacterField(message, HEADERSIZE + 423, 32, "CMHPR2");
    fields[46] = fieldCMHDCM =
    new CharacterField(message, HEADERSIZE + 455, 30, "CMHDCM");
    fields[47] = fieldCMHOFC =
    new CharacterField(message, HEADERSIZE + 485, 4, "CMHOFC");
    fields[48] = fieldCMHDOF =
    new CharacterField(message, HEADERSIZE + 489, 35, "CMHDOF");
    fields[49] = fieldCMHBRN =
    new DecimalField(message, HEADERSIZE + 524, 4, 0, "CMHBRN");
    fields[50] = fieldCMHDBR =
    new CharacterField(message, HEADERSIZE + 528, 35, "CMHDBR");
    fields[51] = fieldCMHLSB =
    new DecimalField(message, HEADERSIZE + 563, 13, 0, "CMHLSB");
    fields[52] = fieldCMHAPD =
    new DecimalField(message, HEADERSIZE + 576, 3, 0, "CMHAPD");
    fields[53] = fieldCMHAPM =
    new DecimalField(message, HEADERSIZE + 579, 3, 0, "CMHAPM");
    fields[54] = fieldCMHAPY =
    new DecimalField(message, HEADERSIZE + 582, 3, 0, "CMHAPY");
    fields[55] = fieldCMHVND =
    new DecimalField(message, HEADERSIZE + 585, 3, 0, "CMHVND");
    fields[56] = fieldCMHVNM =
    new DecimalField(message, HEADERSIZE + 588, 3, 0, "CMHVNM");
    fields[57] = fieldCMHVNY =
    new DecimalField(message, HEADERSIZE + 591, 3, 0, "CMHVNY");
    fields[58] = fieldCMHBDM =
    new DecimalField(message, HEADERSIZE + 594, 3, 0, "CMHBDM");
    fields[59] = fieldCMHBDD =
    new DecimalField(message, HEADERSIZE + 597, 3, 0, "CMHBDD");
    fields[60] = fieldCMHBDY =
    new DecimalField(message, HEADERSIZE + 600, 5, 0, "CMHBDY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field CMHCUN using a String value.
  */
  public void setCMHCUN(String newvalue)
  {
    fieldCMHCUN.setString(newvalue);
  }

  /**
  * Get value of field CMHCUN as a String.
  */
  public String getCMHCUN()
  {
    return fieldCMHCUN.getString();
  }

  /**
  * Set numeric field CMHCUN using a BigDecimal value.
  */
  public void setCMHCUN(BigDecimal newvalue)
  {
    fieldCMHCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHCUN()
  {
    return fieldCMHCUN.getBigDecimal();
  }

  /**
  * Set field CMHACC using a String value.
  */
  public void setCMHACC(String newvalue)
  {
    fieldCMHACC.setString(newvalue);
  }

  /**
  * Get value of field CMHACC as a String.
  */
  public String getCMHACC()
  {
    return fieldCMHACC.getString();
  }

  /**
  * Set numeric field CMHACC using a BigDecimal value.
  */
  public void setCMHACC(BigDecimal newvalue)
  {
    fieldCMHACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHACC()
  {
    return fieldCMHACC.getBigDecimal();
  }

  /**
  * Set field CMHPRD using a String value.
  */
  public void setCMHPRD(String newvalue)
  {
    fieldCMHPRD.setString(newvalue);
  }

  /**
  * Get value of field CMHPRD as a String.
  */
  public String getCMHPRD()
  {
    return fieldCMHPRD.getString();
  }

  /**
  * Set field CMHTRX using a String value.
  */
  public void setCMHTRX(String newvalue)
  {
    fieldCMHTRX.setString(newvalue);
  }

  /**
  * Get value of field CMHTRX as a String.
  */
  public String getCMHTRX()
  {
    return fieldCMHTRX.getString();
  }

  /**
  * Set field CMHRCV using a String value.
  */
  public void setCMHRCV(String newvalue)
  {
    fieldCMHRCV.setString(newvalue);
  }

  /**
  * Get value of field CMHRCV as a String.
  */
  public String getCMHRCV()
  {
    return fieldCMHRCV.getString();
  }

  /**
  * Set field CMHCCV using a String value.
  */
  public void setCMHCCV(String newvalue)
  {
    fieldCMHCCV.setString(newvalue);
  }

  /**
  * Get value of field CMHCCV as a String.
  */
  public String getCMHCCV()
  {
    return fieldCMHCCV.getString();
  }

  /**
  * Set field CMHMPD using a String value.
  */
  public void setCMHMPD(String newvalue)
  {
    fieldCMHMPD.setString(newvalue);
  }

  /**
  * Get value of field CMHMPD as a String.
  */
  public String getCMHMPD()
  {
    return fieldCMHMPD.getString();
  }

  /**
  * Set field CMHSEG using a String value.
  */
  public void setCMHSEG(String newvalue)
  {
    fieldCMHSEG.setString(newvalue);
  }

  /**
  * Get value of field CMHSEG as a String.
  */
  public String getCMHSEG()
  {
    return fieldCMHSEG.getString();
  }

  /**
  * Set field CMHGSE using a String value.
  */
  public void setCMHGSE(String newvalue)
  {
    fieldCMHGSE.setString(newvalue);
  }

  /**
  * Get value of field CMHGSE as a String.
  */
  public String getCMHGSE()
  {
    return fieldCMHGSE.getString();
  }

  /**
  * Set field CMHSSG using a String value.
  */
  public void setCMHSSG(String newvalue)
  {
    fieldCMHSSG.setString(newvalue);
  }

  /**
  * Get value of field CMHSSG as a String.
  */
  public String getCMHSSG()
  {
    return fieldCMHSSG.getString();
  }

  /**
  * Set field CMHGSS using a String value.
  */
  public void setCMHGSS(String newvalue)
  {
    fieldCMHGSS.setString(newvalue);
  }

  /**
  * Get value of field CMHGSS as a String.
  */
  public String getCMHGSS()
  {
    return fieldCMHGSS.getString();
  }

  /**
  * Set field CMHTPG using a String value.
  */
  public void setCMHTPG(String newvalue)
  {
    fieldCMHTPG.setString(newvalue);
  }

  /**
  * Get value of field CMHTPG as a String.
  */
  public String getCMHTPG()
  {
    return fieldCMHTPG.getString();
  }

  /**
  * Set field CMHCCM using a String value.
  */
  public void setCMHCCM(String newvalue)
  {
    fieldCMHCCM.setString(newvalue);
  }

  /**
  * Get value of field CMHCCM as a String.
  */
  public String getCMHCCM()
  {
    return fieldCMHCCM.getString();
  }

  /**
  * Set field CMHCTF using a String value.
  */
  public void setCMHCTF(String newvalue)
  {
    fieldCMHCTF.setString(newvalue);
  }

  /**
  * Get value of field CMHCTF as a String.
  */
  public String getCMHCTF()
  {
    return fieldCMHCTF.getString();
  }

  /**
  * Set field CMHCDC using a String value.
  */
  public void setCMHCDC(String newvalue)
  {
    fieldCMHCDC.setString(newvalue);
  }

  /**
  * Get value of field CMHCDC as a String.
  */
  public String getCMHCDC()
  {
    return fieldCMHCDC.getString();
  }

  /**
  * Set field CMHCCY using a String value.
  */
  public void setCMHCCY(String newvalue)
  {
    fieldCMHCCY.setString(newvalue);
  }

  /**
  * Get value of field CMHCCY as a String.
  */
  public String getCMHCCY()
  {
    return fieldCMHCCY.getString();
  }

  /**
  * Set field CMHETF using a String value.
  */
  public void setCMHETF(String newvalue)
  {
    fieldCMHETF.setString(newvalue);
  }

  /**
  * Get value of field CMHETF as a String.
  */
  public String getCMHETF()
  {
    return fieldCMHETF.getString();
  }

  /**
  * Set numeric field CMHETF using a BigDecimal value.
  */
  public void setCMHETF(BigDecimal newvalue)
  {
    fieldCMHETF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHETF as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHETF()
  {
    return fieldCMHETF.getBigDecimal();
  }

  /**
  * Set field CMHMTF using a String value.
  */
  public void setCMHMTF(String newvalue)
  {
    fieldCMHMTF.setString(newvalue);
  }

  /**
  * Get value of field CMHMTF as a String.
  */
  public String getCMHMTF()
  {
    return fieldCMHMTF.getString();
  }

  /**
  * Set numeric field CMHMTF using a BigDecimal value.
  */
  public void setCMHMTF(BigDecimal newvalue)
  {
    fieldCMHMTF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHMTF as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHMTF()
  {
    return fieldCMHMTF.getBigDecimal();
  }

  /**
  * Set field CMHMDC using a String value.
  */
  public void setCMHMDC(String newvalue)
  {
    fieldCMHMDC.setString(newvalue);
  }

  /**
  * Get value of field CMHMDC as a String.
  */
  public String getCMHMDC()
  {
    return fieldCMHMDC.getString();
  }

  /**
  * Set numeric field CMHMDC using a BigDecimal value.
  */
  public void setCMHMDC(BigDecimal newvalue)
  {
    fieldCMHMDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHMDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHMDC()
  {
    return fieldCMHMDC.getBigDecimal();
  }

  /**
  * Set field CMHMCB using a String value.
  */
  public void setCMHMCB(String newvalue)
  {
    fieldCMHMCB.setString(newvalue);
  }

  /**
  * Get value of field CMHMCB as a String.
  */
  public String getCMHMCB()
  {
    return fieldCMHMCB.getString();
  }

  /**
  * Set numeric field CMHMCB using a BigDecimal value.
  */
  public void setCMHMCB(BigDecimal newvalue)
  {
    fieldCMHMCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHMCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHMCB()
  {
    return fieldCMHMCB.getBigDecimal();
  }

  /**
  * Set field CMHPAG using a String value.
  */
  public void setCMHPAG(String newvalue)
  {
    fieldCMHPAG.setString(newvalue);
  }

  /**
  * Get value of field CMHPAG as a String.
  */
  public String getCMHPAG()
  {
    return fieldCMHPAG.getString();
  }

  /**
  * Set numeric field CMHPAG using a BigDecimal value.
  */
  public void setCMHPAG(BigDecimal newvalue)
  {
    fieldCMHPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHPAG()
  {
    return fieldCMHPAG.getBigDecimal();
  }

  /**
  * Set field CMHFOC using a String value.
  */
  public void setCMHFOC(String newvalue)
  {
    fieldCMHFOC.setString(newvalue);
  }

  /**
  * Get value of field CMHFOC as a String.
  */
  public String getCMHFOC()
  {
    return fieldCMHFOC.getString();
  }

  /**
  * Set numeric field CMHFOC using a BigDecimal value.
  */
  public void setCMHFOC(BigDecimal newvalue)
  {
    fieldCMHFOC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHFOC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHFOC()
  {
    return fieldCMHFOC.getBigDecimal();
  }

  /**
  * Set field CMHFCC using a String value.
  */
  public void setCMHFCC(String newvalue)
  {
    fieldCMHFCC.setString(newvalue);
  }

  /**
  * Get value of field CMHFCC as a String.
  */
  public String getCMHFCC()
  {
    return fieldCMHFCC.getString();
  }

  /**
  * Set numeric field CMHFCC using a BigDecimal value.
  */
  public void setCMHFCC(BigDecimal newvalue)
  {
    fieldCMHFCC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHFCC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHFCC()
  {
    return fieldCMHFCC.getBigDecimal();
  }

  /**
  * Set field CMHFCB using a String value.
  */
  public void setCMHFCB(String newvalue)
  {
    fieldCMHFCB.setString(newvalue);
  }

  /**
  * Get value of field CMHFCB as a String.
  */
  public String getCMHFCB()
  {
    return fieldCMHFCB.getString();
  }

  /**
  * Set numeric field CMHFCB using a BigDecimal value.
  */
  public void setCMHFCB(BigDecimal newvalue)
  {
    fieldCMHFCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHFCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHFCB()
  {
    return fieldCMHFCB.getBigDecimal();
  }

  /**
  * Set field CMHFPY using a String value.
  */
  public void setCMHFPY(String newvalue)
  {
    fieldCMHFPY.setString(newvalue);
  }

  /**
  * Get value of field CMHFPY as a String.
  */
  public String getCMHFPY()
  {
    return fieldCMHFPY.getString();
  }

  /**
  * Set numeric field CMHFPY using a BigDecimal value.
  */
  public void setCMHFPY(BigDecimal newvalue)
  {
    fieldCMHFPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHFPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHFPY()
  {
    return fieldCMHFPY.getBigDecimal();
  }

  /**
  * Set field CMHFEV using a String value.
  */
  public void setCMHFEV(String newvalue)
  {
    fieldCMHFEV.setString(newvalue);
  }

  /**
  * Get value of field CMHFEV as a String.
  */
  public String getCMHFEV()
  {
    return fieldCMHFEV.getString();
  }

  /**
  * Set numeric field CMHFEV using a BigDecimal value.
  */
  public void setCMHFEV(BigDecimal newvalue)
  {
    fieldCMHFEV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHFEV as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHFEV()
  {
    return fieldCMHFEV.getBigDecimal();
  }

  /**
  * Set field CMHPER using a String value.
  */
  public void setCMHPER(String newvalue)
  {
    fieldCMHPER.setString(newvalue);
  }

  /**
  * Get value of field CMHPER as a String.
  */
  public String getCMHPER()
  {
    return fieldCMHPER.getString();
  }

  /**
  * Set field CMHGLO using a String value.
  */
  public void setCMHGLO(String newvalue)
  {
    fieldCMHGLO.setString(newvalue);
  }

  /**
  * Get value of field CMHGLO as a String.
  */
  public String getCMHGLO()
  {
    return fieldCMHGLO.getString();
  }

  /**
  * Set numeric field CMHGLO using a BigDecimal value.
  */
  public void setCMHGLO(BigDecimal newvalue)
  {
    fieldCMHGLO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHGLO as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHGLO()
  {
    return fieldCMHGLO.getBigDecimal();
  }

  /**
  * Set field CMHCUNR using a String value.
  */
  public void setCMHCUNR(String newvalue)
  {
    fieldCMHCUNR.setString(newvalue);
  }

  /**
  * Get value of field CMHCUNR as a String.
  */
  public String getCMHCUNR()
  {
    return fieldCMHCUNR.getString();
  }

  /**
  * Set numeric field CMHCUNR using a BigDecimal value.
  */
  public void setCMHCUNR(BigDecimal newvalue)
  {
    fieldCMHCUNR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHCUNR as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHCUNR()
  {
    return fieldCMHCUNR.getBigDecimal();
  }

  /**
  * Set field CMHACCR using a String value.
  */
  public void setCMHACCR(String newvalue)
  {
    fieldCMHACCR.setString(newvalue);
  }

  /**
  * Get value of field CMHACCR as a String.
  */
  public String getCMHACCR()
  {
    return fieldCMHACCR.getString();
  }

  /**
  * Set numeric field CMHACCR using a BigDecimal value.
  */
  public void setCMHACCR(BigDecimal newvalue)
  {
    fieldCMHACCR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHACCR as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHACCR()
  {
    return fieldCMHACCR.getBigDecimal();
  }

  /**
  * Set field CMHIDC using a String value.
  */
  public void setCMHIDC(String newvalue)
  {
    fieldCMHIDC.setString(newvalue);
  }

  /**
  * Get value of field CMHIDC as a String.
  */
  public String getCMHIDC()
  {
    return fieldCMHIDC.getString();
  }

  /**
  * Set field CMHIEV using a String value.
  */
  public void setCMHIEV(String newvalue)
  {
    fieldCMHIEV.setString(newvalue);
  }

  /**
  * Get value of field CMHIEV as a String.
  */
  public String getCMHIEV()
  {
    return fieldCMHIEV.getString();
  }

  /**
  * Set field CMHIDL using a String value.
  */
  public void setCMHIDL(String newvalue)
  {
    fieldCMHIDL.setString(newvalue);
  }

  /**
  * Get value of field CMHIDL as a String.
  */
  public String getCMHIDL()
  {
    return fieldCMHIDL.getString();
  }

  /**
  * Set field CMHRUT using a String value.
  */
  public void setCMHRUT(String newvalue)
  {
    fieldCMHRUT.setString(newvalue);
  }

  /**
  * Get value of field CMHRUT as a String.
  */
  public String getCMHRUT()
  {
    return fieldCMHRUT.getString();
  }

  /**
  * Set field CMHNOM using a String value.
  */
  public void setCMHNOM(String newvalue)
  {
    fieldCMHNOM.setString(newvalue);
  }

  /**
  * Get value of field CMHNOM as a String.
  */
  public String getCMHNOM()
  {
    return fieldCMHNOM.getString();
  }

  /**
  * Set field CMHPR1 using a String value.
  */
  public void setCMHPR1(String newvalue)
  {
    fieldCMHPR1.setString(newvalue);
  }

  /**
  * Get value of field CMHPR1 as a String.
  */
  public String getCMHPR1()
  {
    return fieldCMHPR1.getString();
  }

  /**
  * Set field CMHPR2 using a String value.
  */
  public void setCMHPR2(String newvalue)
  {
    fieldCMHPR2.setString(newvalue);
  }

  /**
  * Get value of field CMHPR2 as a String.
  */
  public String getCMHPR2()
  {
    return fieldCMHPR2.getString();
  }

  /**
  * Set field CMHDCM using a String value.
  */
  public void setCMHDCM(String newvalue)
  {
    fieldCMHDCM.setString(newvalue);
  }

  /**
  * Get value of field CMHDCM as a String.
  */
  public String getCMHDCM()
  {
    return fieldCMHDCM.getString();
  }

  /**
  * Set field CMHOFC using a String value.
  */
  public void setCMHOFC(String newvalue)
  {
    fieldCMHOFC.setString(newvalue);
  }

  /**
  * Get value of field CMHOFC as a String.
  */
  public String getCMHOFC()
  {
    return fieldCMHOFC.getString();
  }

  /**
  * Set field CMHDOF using a String value.
  */
  public void setCMHDOF(String newvalue)
  {
    fieldCMHDOF.setString(newvalue);
  }

  /**
  * Get value of field CMHDOF as a String.
  */
  public String getCMHDOF()
  {
    return fieldCMHDOF.getString();
  }

  /**
  * Set field CMHBRN using a String value.
  */
  public void setCMHBRN(String newvalue)
  {
    fieldCMHBRN.setString(newvalue);
  }

  /**
  * Get value of field CMHBRN as a String.
  */
  public String getCMHBRN()
  {
    return fieldCMHBRN.getString();
  }

  /**
  * Set numeric field CMHBRN using a BigDecimal value.
  */
  public void setCMHBRN(BigDecimal newvalue)
  {
    fieldCMHBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHBRN()
  {
    return fieldCMHBRN.getBigDecimal();
  }

  /**
  * Set field CMHDBR using a String value.
  */
  public void setCMHDBR(String newvalue)
  {
    fieldCMHDBR.setString(newvalue);
  }

  /**
  * Get value of field CMHDBR as a String.
  */
  public String getCMHDBR()
  {
    return fieldCMHDBR.getString();
  }

  /**
  * Set field CMHLSB using a String value.
  */
  public void setCMHLSB(String newvalue)
  {
    fieldCMHLSB.setString(newvalue);
  }

  /**
  * Get value of field CMHLSB as a String.
  */
  public String getCMHLSB()
  {
    return fieldCMHLSB.getString();
  }

  /**
  * Set numeric field CMHLSB using a BigDecimal value.
  */
  public void setCMHLSB(BigDecimal newvalue)
  {
    fieldCMHLSB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHLSB as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHLSB()
  {
    return fieldCMHLSB.getBigDecimal();
  }

  /**
  * Set field CMHAPD using a String value.
  */
  public void setCMHAPD(String newvalue)
  {
    fieldCMHAPD.setString(newvalue);
  }

  /**
  * Get value of field CMHAPD as a String.
  */
  public String getCMHAPD()
  {
    return fieldCMHAPD.getString();
  }

  /**
  * Set numeric field CMHAPD using a BigDecimal value.
  */
  public void setCMHAPD(BigDecimal newvalue)
  {
    fieldCMHAPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHAPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHAPD()
  {
    return fieldCMHAPD.getBigDecimal();
  }

  /**
  * Set field CMHAPM using a String value.
  */
  public void setCMHAPM(String newvalue)
  {
    fieldCMHAPM.setString(newvalue);
  }

  /**
  * Get value of field CMHAPM as a String.
  */
  public String getCMHAPM()
  {
    return fieldCMHAPM.getString();
  }

  /**
  * Set numeric field CMHAPM using a BigDecimal value.
  */
  public void setCMHAPM(BigDecimal newvalue)
  {
    fieldCMHAPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHAPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHAPM()
  {
    return fieldCMHAPM.getBigDecimal();
  }

  /**
  * Set field CMHAPY using a String value.
  */
  public void setCMHAPY(String newvalue)
  {
    fieldCMHAPY.setString(newvalue);
  }

  /**
  * Get value of field CMHAPY as a String.
  */
  public String getCMHAPY()
  {
    return fieldCMHAPY.getString();
  }

  /**
  * Set numeric field CMHAPY using a BigDecimal value.
  */
  public void setCMHAPY(BigDecimal newvalue)
  {
    fieldCMHAPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHAPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHAPY()
  {
    return fieldCMHAPY.getBigDecimal();
  }

  /**
  * Set field CMHVND using a String value.
  */
  public void setCMHVND(String newvalue)
  {
    fieldCMHVND.setString(newvalue);
  }

  /**
  * Get value of field CMHVND as a String.
  */
  public String getCMHVND()
  {
    return fieldCMHVND.getString();
  }

  /**
  * Set numeric field CMHVND using a BigDecimal value.
  */
  public void setCMHVND(BigDecimal newvalue)
  {
    fieldCMHVND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHVND as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHVND()
  {
    return fieldCMHVND.getBigDecimal();
  }

  /**
  * Set field CMHVNM using a String value.
  */
  public void setCMHVNM(String newvalue)
  {
    fieldCMHVNM.setString(newvalue);
  }

  /**
  * Get value of field CMHVNM as a String.
  */
  public String getCMHVNM()
  {
    return fieldCMHVNM.getString();
  }

  /**
  * Set numeric field CMHVNM using a BigDecimal value.
  */
  public void setCMHVNM(BigDecimal newvalue)
  {
    fieldCMHVNM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHVNM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHVNM()
  {
    return fieldCMHVNM.getBigDecimal();
  }

  /**
  * Set field CMHVNY using a String value.
  */
  public void setCMHVNY(String newvalue)
  {
    fieldCMHVNY.setString(newvalue);
  }

  /**
  * Get value of field CMHVNY as a String.
  */
  public String getCMHVNY()
  {
    return fieldCMHVNY.getString();
  }

  /**
  * Set numeric field CMHVNY using a BigDecimal value.
  */
  public void setCMHVNY(BigDecimal newvalue)
  {
    fieldCMHVNY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHVNY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHVNY()
  {
    return fieldCMHVNY.getBigDecimal();
  }

  /**
  * Set field CMHBDM using a String value.
  */
  public void setCMHBDM(String newvalue)
  {
    fieldCMHBDM.setString(newvalue);
  }

  /**
  * Get value of field CMHBDM as a String.
  */
  public String getCMHBDM()
  {
    return fieldCMHBDM.getString();
  }

  /**
  * Set numeric field CMHBDM using a BigDecimal value.
  */
  public void setCMHBDM(BigDecimal newvalue)
  {
    fieldCMHBDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHBDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHBDM()
  {
    return fieldCMHBDM.getBigDecimal();
  }

  /**
  * Set field CMHBDD using a String value.
  */
  public void setCMHBDD(String newvalue)
  {
    fieldCMHBDD.setString(newvalue);
  }

  /**
  * Get value of field CMHBDD as a String.
  */
  public String getCMHBDD()
  {
    return fieldCMHBDD.getString();
  }

  /**
  * Set numeric field CMHBDD using a BigDecimal value.
  */
  public void setCMHBDD(BigDecimal newvalue)
  {
    fieldCMHBDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHBDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHBDD()
  {
    return fieldCMHBDD.getBigDecimal();
  }

  /**
  * Set field CMHBDY using a String value.
  */
  public void setCMHBDY(String newvalue)
  {
    fieldCMHBDY.setString(newvalue);
  }

  /**
  * Get value of field CMHBDY as a String.
  */
  public String getCMHBDY()
  {
    return fieldCMHBDY.getString();
  }

  /**
  * Set numeric field CMHBDY using a BigDecimal value.
  */
  public void setCMHBDY(BigDecimal newvalue)
  {
    fieldCMHBDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CMHBDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalCMHBDY()
  {
    return fieldCMHBDY.getBigDecimal();
  }

}
