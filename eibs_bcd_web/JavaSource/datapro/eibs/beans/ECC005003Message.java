package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECC005003 physical file definition.
* 
* File level identifier is 1100706173522.
* Record format level identifier is 4002FAF1DE83D.
*/

public class ECC005003Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "STDACC",
                                     "STDVDM",
                                     "STDVDD",
                                     "STDVDY",
                                     "STDBDY",
                                     "STDBDM",
                                     "STDBDD",
                                     "STDCDE",
                                     "STDNAR",
                                     "STDAMT",
                                     "STDDCC",
                                     "STDCKY",
                                     "STDCKN",
                                     "STDTIM",
                                     "STDCCY",
                                     "STDCUN",
                                     "STDTRN",
                                     "STDBRN",
                                     "STDBNK",
                                     "STDNA1",
                                     "STDNUM",
                                     "STDCOR"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "STDACC",
                                   "STDVDM",
                                   "STDVDD",
                                   "STDVDY",
                                   "STDBDY",
                                   "STDBDM",
                                   "STDBDD",
                                   "STDCDE",
                                   "STDNAR",
                                   "STDAMT",
                                   "STDDCC",
                                   "STDCKY",
                                   "STDCKN",
                                   "STDTIM",
                                   "STDCCY",
                                   "STDCUN",
                                   "STDTRN",
                                   "STDBRN",
                                   "STDBNK",
                                   "STDNA1",
                                   "STDNUM",
                                   "STDCOR"
                                 };
  final static String fid = "1100706173522";
  final static String rid = "4002FAF1DE83D";
  final static String fmtname = "ECC005003";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private DecimalField fieldSTDACC = null;
  private DecimalField fieldSTDVDM = null;
  private DecimalField fieldSTDVDD = null;
  private DecimalField fieldSTDVDY = null;
  private DecimalField fieldSTDBDY = null;
  private DecimalField fieldSTDBDM = null;
  private DecimalField fieldSTDBDD = null;
  private CharacterField fieldSTDCDE = null;
  private CharacterField fieldSTDNAR = null;
  private DecimalField fieldSTDAMT = null;
  private CharacterField fieldSTDDCC = null;
  private CharacterField fieldSTDCKY = null;
  private DecimalField fieldSTDCKN = null;
  private DecimalField fieldSTDTIM = null;
  private CharacterField fieldSTDCCY = null;
  private DecimalField fieldSTDCUN = null;
  private DecimalField fieldSTDTRN = null;
  private DecimalField fieldSTDBRN = null;
  private CharacterField fieldSTDBNK = null;
  private CharacterField fieldSTDNA1 = null;
  private DecimalField fieldSTDNUM = null;
  private DecimalField fieldSTDCOR = null;

  /**
  * Constructor for ECC005003Message.
  */
  public ECC005003Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 209;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldSTDACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "STDACC");
    fields[10] = fieldSTDVDM =
    new DecimalField(message, HEADERSIZE + 55, 3, 0, "STDVDM");
    fields[11] = fieldSTDVDD =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "STDVDD");
    fields[12] = fieldSTDVDY =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "STDVDY");
    fields[13] = fieldSTDBDY =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "STDBDY");
    fields[14] = fieldSTDBDM =
    new DecimalField(message, HEADERSIZE + 67, 3, 0, "STDBDM");
    fields[15] = fieldSTDBDD =
    new DecimalField(message, HEADERSIZE + 70, 3, 0, "STDBDD");
    fields[16] = fieldSTDCDE =
    new CharacterField(message, HEADERSIZE + 73, 2, "STDCDE");
    fields[17] = fieldSTDNAR =
    new CharacterField(message, HEADERSIZE + 75, 30, "STDNAR");
    fields[18] = fieldSTDAMT =
    new DecimalField(message, HEADERSIZE + 105, 17, 2, "STDAMT");
    fields[19] = fieldSTDDCC =
    new CharacterField(message, HEADERSIZE + 122, 1, "STDDCC");
    fields[20] = fieldSTDCKY =
    new CharacterField(message, HEADERSIZE + 123, 1, "STDCKY");
    fields[21] = fieldSTDCKN =
    new DecimalField(message, HEADERSIZE + 124, 10, 0, "STDCKN");
    fields[22] = fieldSTDTIM =
    new DecimalField(message, HEADERSIZE + 134, 7, 0, "STDTIM");
    fields[23] = fieldSTDCCY =
    new CharacterField(message, HEADERSIZE + 141, 3, "STDCCY");
    fields[24] = fieldSTDCUN =
    new DecimalField(message, HEADERSIZE + 144, 10, 0, "STDCUN");
    fields[25] = fieldSTDTRN =
    new DecimalField(message, HEADERSIZE + 154, 6, 0, "STDTRN");
    fields[26] = fieldSTDBRN =
    new DecimalField(message, HEADERSIZE + 160, 4, 0, "STDBRN");
    fields[27] = fieldSTDBNK =
    new CharacterField(message, HEADERSIZE + 164, 2, "STDBNK");
    fields[28] = fieldSTDNA1 =
    new CharacterField(message, HEADERSIZE + 166, 30, "STDNA1");
    fields[29] = fieldSTDNUM =
    new DecimalField(message, HEADERSIZE + 196, 8, 0, "STDNUM");
    fields[30] = fieldSTDCOR =
    new DecimalField(message, HEADERSIZE + 204, 5, 0, "STDCOR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field STDACC using a String value.
  */
  public void setSTDACC(String newvalue)
  {
    fieldSTDACC.setString(newvalue);
  }

  /**
  * Get value of field STDACC as a String.
  */
  public String getSTDACC()
  {
    return fieldSTDACC.getString();
  }

  /**
  * Set numeric field STDACC using a BigDecimal value.
  */
  public void setSTDACC(BigDecimal newvalue)
  {
    fieldSTDACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDACC()
  {
    return fieldSTDACC.getBigDecimal();
  }

  /**
  * Set field STDVDM using a String value.
  */
  public void setSTDVDM(String newvalue)
  {
    fieldSTDVDM.setString(newvalue);
  }

  /**
  * Get value of field STDVDM as a String.
  */
  public String getSTDVDM()
  {
    return fieldSTDVDM.getString();
  }

  /**
  * Set numeric field STDVDM using a BigDecimal value.
  */
  public void setSTDVDM(BigDecimal newvalue)
  {
    fieldSTDVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDVDM()
  {
    return fieldSTDVDM.getBigDecimal();
  }

  /**
  * Set field STDVDD using a String value.
  */
  public void setSTDVDD(String newvalue)
  {
    fieldSTDVDD.setString(newvalue);
  }

  /**
  * Get value of field STDVDD as a String.
  */
  public String getSTDVDD()
  {
    return fieldSTDVDD.getString();
  }

  /**
  * Set numeric field STDVDD using a BigDecimal value.
  */
  public void setSTDVDD(BigDecimal newvalue)
  {
    fieldSTDVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDVDD()
  {
    return fieldSTDVDD.getBigDecimal();
  }

  /**
  * Set field STDVDY using a String value.
  */
  public void setSTDVDY(String newvalue)
  {
    fieldSTDVDY.setString(newvalue);
  }

  /**
  * Get value of field STDVDY as a String.
  */
  public String getSTDVDY()
  {
    return fieldSTDVDY.getString();
  }

  /**
  * Set numeric field STDVDY using a BigDecimal value.
  */
  public void setSTDVDY(BigDecimal newvalue)
  {
    fieldSTDVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDVDY()
  {
    return fieldSTDVDY.getBigDecimal();
  }

  /**
  * Set field STDBDY using a String value.
  */
  public void setSTDBDY(String newvalue)
  {
    fieldSTDBDY.setString(newvalue);
  }

  /**
  * Get value of field STDBDY as a String.
  */
  public String getSTDBDY()
  {
    return fieldSTDBDY.getString();
  }

  /**
  * Set numeric field STDBDY using a BigDecimal value.
  */
  public void setSTDBDY(BigDecimal newvalue)
  {
    fieldSTDBDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDBDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDBDY()
  {
    return fieldSTDBDY.getBigDecimal();
  }

  /**
  * Set field STDBDM using a String value.
  */
  public void setSTDBDM(String newvalue)
  {
    fieldSTDBDM.setString(newvalue);
  }

  /**
  * Get value of field STDBDM as a String.
  */
  public String getSTDBDM()
  {
    return fieldSTDBDM.getString();
  }

  /**
  * Set numeric field STDBDM using a BigDecimal value.
  */
  public void setSTDBDM(BigDecimal newvalue)
  {
    fieldSTDBDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDBDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDBDM()
  {
    return fieldSTDBDM.getBigDecimal();
  }

  /**
  * Set field STDBDD using a String value.
  */
  public void setSTDBDD(String newvalue)
  {
    fieldSTDBDD.setString(newvalue);
  }

  /**
  * Get value of field STDBDD as a String.
  */
  public String getSTDBDD()
  {
    return fieldSTDBDD.getString();
  }

  /**
  * Set numeric field STDBDD using a BigDecimal value.
  */
  public void setSTDBDD(BigDecimal newvalue)
  {
    fieldSTDBDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDBDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDBDD()
  {
    return fieldSTDBDD.getBigDecimal();
  }

  /**
  * Set field STDCDE using a String value.
  */
  public void setSTDCDE(String newvalue)
  {
    fieldSTDCDE.setString(newvalue);
  }

  /**
  * Get value of field STDCDE as a String.
  */
  public String getSTDCDE()
  {
    return fieldSTDCDE.getString();
  }

  /**
  * Set field STDNAR using a String value.
  */
  public void setSTDNAR(String newvalue)
  {
    fieldSTDNAR.setString(newvalue);
  }

  /**
  * Get value of field STDNAR as a String.
  */
  public String getSTDNAR()
  {
    return fieldSTDNAR.getString();
  }

  /**
  * Set field STDAMT using a String value.
  */
  public void setSTDAMT(String newvalue)
  {
    fieldSTDAMT.setString(newvalue);
  }

  /**
  * Get value of field STDAMT as a String.
  */
  public String getSTDAMT()
  {
    return fieldSTDAMT.getString();
  }

  /**
  * Set numeric field STDAMT using a BigDecimal value.
  */
  public void setSTDAMT(BigDecimal newvalue)
  {
    fieldSTDAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDAMT()
  {
    return fieldSTDAMT.getBigDecimal();
  }

  /**
  * Set field STDDCC using a String value.
  */
  public void setSTDDCC(String newvalue)
  {
    fieldSTDDCC.setString(newvalue);
  }

  /**
  * Get value of field STDDCC as a String.
  */
  public String getSTDDCC()
  {
    return fieldSTDDCC.getString();
  }

  /**
  * Set field STDCKY using a String value.
  */
  public void setSTDCKY(String newvalue)
  {
    fieldSTDCKY.setString(newvalue);
  }

  /**
  * Get value of field STDCKY as a String.
  */
  public String getSTDCKY()
  {
    return fieldSTDCKY.getString();
  }

  /**
  * Set field STDCKN using a String value.
  */
  public void setSTDCKN(String newvalue)
  {
    fieldSTDCKN.setString(newvalue);
  }

  /**
  * Get value of field STDCKN as a String.
  */
  public String getSTDCKN()
  {
    return fieldSTDCKN.getString();
  }

  /**
  * Set numeric field STDCKN using a BigDecimal value.
  */
  public void setSTDCKN(BigDecimal newvalue)
  {
    fieldSTDCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDCKN()
  {
    return fieldSTDCKN.getBigDecimal();
  }

  /**
  * Set field STDTIM using a String value.
  */
  public void setSTDTIM(String newvalue)
  {
    fieldSTDTIM.setString(newvalue);
  }

  /**
  * Get value of field STDTIM as a String.
  */
  public String getSTDTIM()
  {
    return fieldSTDTIM.getString();
  }

  /**
  * Set numeric field STDTIM using a BigDecimal value.
  */
  public void setSTDTIM(BigDecimal newvalue)
  {
    fieldSTDTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDTIM()
  {
    return fieldSTDTIM.getBigDecimal();
  }

  /**
  * Set field STDCCY using a String value.
  */
  public void setSTDCCY(String newvalue)
  {
    fieldSTDCCY.setString(newvalue);
  }

  /**
  * Get value of field STDCCY as a String.
  */
  public String getSTDCCY()
  {
    return fieldSTDCCY.getString();
  }

  /**
  * Set field STDCUN using a String value.
  */
  public void setSTDCUN(String newvalue)
  {
    fieldSTDCUN.setString(newvalue);
  }

  /**
  * Get value of field STDCUN as a String.
  */
  public String getSTDCUN()
  {
    return fieldSTDCUN.getString();
  }

  /**
  * Set numeric field STDCUN using a BigDecimal value.
  */
  public void setSTDCUN(BigDecimal newvalue)
  {
    fieldSTDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDCUN()
  {
    return fieldSTDCUN.getBigDecimal();
  }

  /**
  * Set field STDTRN using a String value.
  */
  public void setSTDTRN(String newvalue)
  {
    fieldSTDTRN.setString(newvalue);
  }

  /**
  * Get value of field STDTRN as a String.
  */
  public String getSTDTRN()
  {
    return fieldSTDTRN.getString();
  }

  /**
  * Set numeric field STDTRN using a BigDecimal value.
  */
  public void setSTDTRN(BigDecimal newvalue)
  {
    fieldSTDTRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDTRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDTRN()
  {
    return fieldSTDTRN.getBigDecimal();
  }

  /**
  * Set field STDBRN using a String value.
  */
  public void setSTDBRN(String newvalue)
  {
    fieldSTDBRN.setString(newvalue);
  }

  /**
  * Get value of field STDBRN as a String.
  */
  public String getSTDBRN()
  {
    return fieldSTDBRN.getString();
  }

  /**
  * Set numeric field STDBRN using a BigDecimal value.
  */
  public void setSTDBRN(BigDecimal newvalue)
  {
    fieldSTDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDBRN()
  {
    return fieldSTDBRN.getBigDecimal();
  }

  /**
  * Set field STDBNK using a String value.
  */
  public void setSTDBNK(String newvalue)
  {
    fieldSTDBNK.setString(newvalue);
  }

  /**
  * Get value of field STDBNK as a String.
  */
  public String getSTDBNK()
  {
    return fieldSTDBNK.getString();
  }

  /**
  * Set field STDNA1 using a String value.
  */
  public void setSTDNA1(String newvalue)
  {
    fieldSTDNA1.setString(newvalue);
  }

  /**
  * Get value of field STDNA1 as a String.
  */
  public String getSTDNA1()
  {
    return fieldSTDNA1.getString();
  }

  /**
  * Set field STDNUM using a String value.
  */
  public void setSTDNUM(String newvalue)
  {
    fieldSTDNUM.setString(newvalue);
  }

  /**
  * Get value of field STDNUM as a String.
  */
  public String getSTDNUM()
  {
    return fieldSTDNUM.getString();
  }

  /**
  * Set numeric field STDNUM using a BigDecimal value.
  */
  public void setSTDNUM(BigDecimal newvalue)
  {
    fieldSTDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDNUM()
  {
    return fieldSTDNUM.getBigDecimal();
  }

  /**
  * Set field STDCOR using a String value.
  */
  public void setSTDCOR(String newvalue)
  {
    fieldSTDCOR.setString(newvalue);
  }

  /**
  * Get value of field STDCOR as a String.
  */
  public String getSTDCOR()
  {
    return fieldSTDCOR.getString();
  }

  /**
  * Set numeric field STDCOR using a BigDecimal value.
  */
  public void setSTDCOR(BigDecimal newvalue)
  {
    fieldSTDCOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field STDCOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalSTDCOR()
  {
    return fieldSTDCOR.getBigDecimal();
  }

}
