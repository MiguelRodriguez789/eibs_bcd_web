package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL051701 physical file definition.
* 
* File level identifier is 1171012100642.
* Record format level identifier is 3E207F78F6CA5.
*/

public class EDL051701Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DEAACC",
                                     "E01CUSCUN",
                                     "E01DLCMOD",
                                     "D01DLCMOD",
                                     "E01CUSTID",
                                     "E01CUSIDN",
                                     "E01CUSNA1",
                                     "E01CODTEL",
                                     "D01CODTEL",
                                     "E01CODEMA",
                                     "D01CODEMA",
                                     "E01TELCLI",
                                     "E01MAICLI",
                                     "B01DLCMPR",
                                     "B01DLCMIN",
                                     "B01DLCMOT",
                                     "E01DLCMPR",
                                     "E01DLCMIN",
                                     "E01DLCMOT",
                                     "E01DLCUSP",
                                     "E01PENDAP"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DEAACC",
                                   "E01CUSCUN",
                                   "E01DLCMOD",
                                   "D01DLCMOD",
                                   "E01CUSTID",
                                   "E01CUSIDN",
                                   "E01CUSNA1",
                                   "E01CODTEL",
                                   "D01CODTEL",
                                   "E01CODEMA",
                                   "D01CODEMA",
                                   "E01TELCLI",
                                   "E01MAICLI",
                                   "B01DLCMPR",
                                   "B01DLCMIN",
                                   "B01DLCMOT",
                                   "E01DLCMPR",
                                   "E01DLCMIN",
                                   "E01DLCMOT",
                                   "E01DLCUSP",
                                   "E01PENDAP"
                                 };
  final static String fid = "1171012100642";
  final static String rid = "3E207F78F6CA5";
  final static String fmtname = "EDL051701";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01DEAACC = null;
  private DecimalField fieldE01CUSCUN = null;
  private CharacterField fieldE01DLCMOD = null;
  private CharacterField fieldD01DLCMOD = null;
  private CharacterField fieldE01CUSTID = null;
  private CharacterField fieldE01CUSIDN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CODTEL = null;
  private CharacterField fieldD01CODTEL = null;
  private CharacterField fieldE01CODEMA = null;
  private CharacterField fieldD01CODEMA = null;
  private CharacterField fieldE01TELCLI = null;
  private CharacterField fieldE01MAICLI = null;
  private DecimalField fieldB01DLCMPR = null;
  private DecimalField fieldB01DLCMIN = null;
  private DecimalField fieldB01DLCMOT = null;
  private DecimalField fieldE01DLCMPR = null;
  private DecimalField fieldE01DLCMIN = null;
  private DecimalField fieldE01DLCMOT = null;
  private CharacterField fieldE01DLCUSP = null;
  private CharacterField fieldE01PENDAP = null;

  /**
  * Constructor for EDL051701Message.
  */
  public EDL051701Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 545;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01DEAACC");
    fields[10] = fieldE01CUSCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01CUSCUN");
    fields[11] = fieldE01DLCMOD =
    new CharacterField(message, HEADERSIZE + 65, 1, "E01DLCMOD");
    fields[12] = fieldD01DLCMOD =
    new CharacterField(message, HEADERSIZE + 66, 15, "D01DLCMOD");
    fields[13] = fieldE01CUSTID =
    new CharacterField(message, HEADERSIZE + 81, 4, "E01CUSTID");
    fields[14] = fieldE01CUSIDN =
    new CharacterField(message, HEADERSIZE + 85, 25, "E01CUSIDN");
    fields[15] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 110, 60, "E01CUSNA1");
    fields[16] = fieldE01CODTEL =
    new CharacterField(message, HEADERSIZE + 170, 4, "E01CODTEL");
    fields[17] = fieldD01CODTEL =
    new CharacterField(message, HEADERSIZE + 174, 45, "D01CODTEL");
    fields[18] = fieldE01CODEMA =
    new CharacterField(message, HEADERSIZE + 219, 4, "E01CODEMA");
    fields[19] = fieldD01CODEMA =
    new CharacterField(message, HEADERSIZE + 223, 45, "D01CODEMA");
    fields[20] = fieldE01TELCLI =
    new CharacterField(message, HEADERSIZE + 268, 60, "E01TELCLI");
    fields[21] = fieldE01MAICLI =
    new CharacterField(message, HEADERSIZE + 328, 60, "E01MAICLI");
    fields[22] = fieldB01DLCMPR =
    new DecimalField(message, HEADERSIZE + 388, 17, 2, "B01DLCMPR");
    fields[23] = fieldB01DLCMIN =
    new DecimalField(message, HEADERSIZE + 405, 17, 2, "B01DLCMIN");
    fields[24] = fieldB01DLCMOT =
    new DecimalField(message, HEADERSIZE + 422, 17, 2, "B01DLCMOT");
    fields[25] = fieldE01DLCMPR =
    new DecimalField(message, HEADERSIZE + 439, 17, 2, "E01DLCMPR");
    fields[26] = fieldE01DLCMIN =
    new DecimalField(message, HEADERSIZE + 456, 17, 2, "E01DLCMIN");
    fields[27] = fieldE01DLCMOT =
    new DecimalField(message, HEADERSIZE + 473, 17, 2, "E01DLCMOT");
    fields[28] = fieldE01DLCUSP =
    new CharacterField(message, HEADERSIZE + 490, 10, "E01DLCUSP");
    fields[29] = fieldE01PENDAP =
    new CharacterField(message, HEADERSIZE + 500, 45, "E01PENDAP");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DEAACC using a String value.
  */
  public void setE01DEAACC(String newvalue)
  {
    fieldE01DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E01DEAACC as a String.
  */
  public String getE01DEAACC()
  {
    return fieldE01DEAACC.getString();
  }

  /**
  * Set numeric field E01DEAACC using a BigDecimal value.
  */
  public void setE01DEAACC(BigDecimal newvalue)
  {
    fieldE01DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEAACC()
  {
    return fieldE01DEAACC.getBigDecimal();
  }

  /**
  * Set field E01CUSCUN using a String value.
  */
  public void setE01CUSCUN(String newvalue)
  {
    fieldE01CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSCUN as a String.
  */
  public String getE01CUSCUN()
  {
    return fieldE01CUSCUN.getString();
  }

  /**
  * Set numeric field E01CUSCUN using a BigDecimal value.
  */
  public void setE01CUSCUN(BigDecimal newvalue)
  {
    fieldE01CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSCUN()
  {
    return fieldE01CUSCUN.getBigDecimal();
  }

  /**
  * Set field E01DLCMOD using a String value.
  */
  public void setE01DLCMOD(String newvalue)
  {
    fieldE01DLCMOD.setString(newvalue);
  }

  /**
  * Get value of field E01DLCMOD as a String.
  */
  public String getE01DLCMOD()
  {
    return fieldE01DLCMOD.getString();
  }

  /**
  * Set field D01DLCMOD using a String value.
  */
  public void setD01DLCMOD(String newvalue)
  {
    fieldD01DLCMOD.setString(newvalue);
  }

  /**
  * Get value of field D01DLCMOD as a String.
  */
  public String getD01DLCMOD()
  {
    return fieldD01DLCMOD.getString();
  }

  /**
  * Set field E01CUSTID using a String value.
  */
  public void setE01CUSTID(String newvalue)
  {
    fieldE01CUSTID.setString(newvalue);
  }

  /**
  * Get value of field E01CUSTID as a String.
  */
  public String getE01CUSTID()
  {
    return fieldE01CUSTID.getString();
  }

  /**
  * Set field E01CUSIDN using a String value.
  */
  public void setE01CUSIDN(String newvalue)
  {
    fieldE01CUSIDN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSIDN as a String.
  */
  public String getE01CUSIDN()
  {
    return fieldE01CUSIDN.getString();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CODTEL using a String value.
  */
  public void setE01CODTEL(String newvalue)
  {
    fieldE01CODTEL.setString(newvalue);
  }

  /**
  * Get value of field E01CODTEL as a String.
  */
  public String getE01CODTEL()
  {
    return fieldE01CODTEL.getString();
  }

  /**
  * Set field D01CODTEL using a String value.
  */
  public void setD01CODTEL(String newvalue)
  {
    fieldD01CODTEL.setString(newvalue);
  }

  /**
  * Get value of field D01CODTEL as a String.
  */
  public String getD01CODTEL()
  {
    return fieldD01CODTEL.getString();
  }

  /**
  * Set field E01CODEMA using a String value.
  */
  public void setE01CODEMA(String newvalue)
  {
    fieldE01CODEMA.setString(newvalue);
  }

  /**
  * Get value of field E01CODEMA as a String.
  */
  public String getE01CODEMA()
  {
    return fieldE01CODEMA.getString();
  }

  /**
  * Set field D01CODEMA using a String value.
  */
  public void setD01CODEMA(String newvalue)
  {
    fieldD01CODEMA.setString(newvalue);
  }

  /**
  * Get value of field D01CODEMA as a String.
  */
  public String getD01CODEMA()
  {
    return fieldD01CODEMA.getString();
  }

  /**
  * Set field E01TELCLI using a String value.
  */
  public void setE01TELCLI(String newvalue)
  {
    fieldE01TELCLI.setString(newvalue);
  }

  /**
  * Get value of field E01TELCLI as a String.
  */
  public String getE01TELCLI()
  {
    return fieldE01TELCLI.getString();
  }

  /**
  * Set field E01MAICLI using a String value.
  */
  public void setE01MAICLI(String newvalue)
  {
    fieldE01MAICLI.setString(newvalue);
  }

  /**
  * Get value of field E01MAICLI as a String.
  */
  public String getE01MAICLI()
  {
    return fieldE01MAICLI.getString();
  }

  /**
  * Set field B01DLCMPR using a String value.
  */
  public void setB01DLCMPR(String newvalue)
  {
    fieldB01DLCMPR.setString(newvalue);
  }

  /**
  * Get value of field B01DLCMPR as a String.
  */
  public String getB01DLCMPR()
  {
    return fieldB01DLCMPR.getString();
  }

  /**
  * Set numeric field B01DLCMPR using a BigDecimal value.
  */
  public void setB01DLCMPR(BigDecimal newvalue)
  {
    fieldB01DLCMPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field B01DLCMPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalB01DLCMPR()
  {
    return fieldB01DLCMPR.getBigDecimal();
  }

  /**
  * Set field B01DLCMIN using a String value.
  */
  public void setB01DLCMIN(String newvalue)
  {
    fieldB01DLCMIN.setString(newvalue);
  }

  /**
  * Get value of field B01DLCMIN as a String.
  */
  public String getB01DLCMIN()
  {
    return fieldB01DLCMIN.getString();
  }

  /**
  * Set numeric field B01DLCMIN using a BigDecimal value.
  */
  public void setB01DLCMIN(BigDecimal newvalue)
  {
    fieldB01DLCMIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field B01DLCMIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalB01DLCMIN()
  {
    return fieldB01DLCMIN.getBigDecimal();
  }

  /**
  * Set field B01DLCMOT using a String value.
  */
  public void setB01DLCMOT(String newvalue)
  {
    fieldB01DLCMOT.setString(newvalue);
  }

  /**
  * Get value of field B01DLCMOT as a String.
  */
  public String getB01DLCMOT()
  {
    return fieldB01DLCMOT.getString();
  }

  /**
  * Set numeric field B01DLCMOT using a BigDecimal value.
  */
  public void setB01DLCMOT(BigDecimal newvalue)
  {
    fieldB01DLCMOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field B01DLCMOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalB01DLCMOT()
  {
    return fieldB01DLCMOT.getBigDecimal();
  }

  /**
  * Set field E01DLCMPR using a String value.
  */
  public void setE01DLCMPR(String newvalue)
  {
    fieldE01DLCMPR.setString(newvalue);
  }

  /**
  * Get value of field E01DLCMPR as a String.
  */
  public String getE01DLCMPR()
  {
    return fieldE01DLCMPR.getString();
  }

  /**
  * Set numeric field E01DLCMPR using a BigDecimal value.
  */
  public void setE01DLCMPR(BigDecimal newvalue)
  {
    fieldE01DLCMPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLCMPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLCMPR()
  {
    return fieldE01DLCMPR.getBigDecimal();
  }

  /**
  * Set field E01DLCMIN using a String value.
  */
  public void setE01DLCMIN(String newvalue)
  {
    fieldE01DLCMIN.setString(newvalue);
  }

  /**
  * Get value of field E01DLCMIN as a String.
  */
  public String getE01DLCMIN()
  {
    return fieldE01DLCMIN.getString();
  }

  /**
  * Set numeric field E01DLCMIN using a BigDecimal value.
  */
  public void setE01DLCMIN(BigDecimal newvalue)
  {
    fieldE01DLCMIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLCMIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLCMIN()
  {
    return fieldE01DLCMIN.getBigDecimal();
  }

  /**
  * Set field E01DLCMOT using a String value.
  */
  public void setE01DLCMOT(String newvalue)
  {
    fieldE01DLCMOT.setString(newvalue);
  }

  /**
  * Get value of field E01DLCMOT as a String.
  */
  public String getE01DLCMOT()
  {
    return fieldE01DLCMOT.getString();
  }

  /**
  * Set numeric field E01DLCMOT using a BigDecimal value.
  */
  public void setE01DLCMOT(BigDecimal newvalue)
  {
    fieldE01DLCMOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLCMOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLCMOT()
  {
    return fieldE01DLCMOT.getBigDecimal();
  }

  /**
  * Set field E01DLCUSP using a String value.
  */
  public void setE01DLCUSP(String newvalue)
  {
    fieldE01DLCUSP.setString(newvalue);
  }

  /**
  * Get value of field E01DLCUSP as a String.
  */
  public String getE01DLCUSP()
  {
    return fieldE01DLCUSP.getString();
  }

  /**
  * Set field E01PENDAP using a String value.
  */
  public void setE01PENDAP(String newvalue)
  {
    fieldE01PENDAP.setString(newvalue);
  }

  /**
  * Get value of field E01PENDAP as a String.
  */
  public String getE01PENDAP()
  {
    return fieldE01PENDAP.getString();
  }

}
