package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECH026502 physical file definition.
* 
* File level identifier is 1180523111844.
* Record format level identifier is 4370AFD02DF66.
*/

public class ECH026502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CHUACC",
                                     "E02CHUNCB",
                                     "E02CHUN01",
                                     "E02CHUN02",
                                     "E02CHUN03",
                                     "E02CHUN04",
                                     "E02CHUN05",
                                     "E02CHUS01",
                                     "E02CHUS02",
                                     "E02CHUS03",
                                     "E02CHUS04",
                                     "E02CHUS05"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CHUACC",
                                   "E02CHUNCB",
                                   "E02CHUN01",
                                   "E02CHUN02",
                                   "E02CHUN03",
                                   "E02CHUN04",
                                   "E02CHUN05",
                                   "E02CHUS01",
                                   "E02CHUS02",
                                   "E02CHUS03",
                                   "E02CHUS04",
                                   "E02CHUS05"
                                 };
  final static String fid = "1180523111844";
  final static String rid = "4370AFD02DF66";
  final static String fmtname = "ECH026502";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02CHUACC = null;
  private DecimalField fieldE02CHUNCB = null;
  private DecimalField fieldE02CHUN01 = null;
  private DecimalField fieldE02CHUN02 = null;
  private DecimalField fieldE02CHUN03 = null;
  private DecimalField fieldE02CHUN04 = null;
  private DecimalField fieldE02CHUN05 = null;
  private CharacterField fieldE02CHUS01 = null;
  private CharacterField fieldE02CHUS02 = null;
  private CharacterField fieldE02CHUS03 = null;
  private CharacterField fieldE02CHUS04 = null;
  private CharacterField fieldE02CHUS05 = null;

  /**
  * Constructor for ECH026502Message.
  */
  public ECH026502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 188;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CHUACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02CHUACC");
    fields[10] = fieldE02CHUNCB =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E02CHUNCB");
    fields[11] = fieldE02CHUN01 =
    new DecimalField(message, HEADERSIZE + 68, 12, 0, "E02CHUN01");
    fields[12] = fieldE02CHUN02 =
    new DecimalField(message, HEADERSIZE + 80, 12, 0, "E02CHUN02");
    fields[13] = fieldE02CHUN03 =
    new DecimalField(message, HEADERSIZE + 92, 12, 0, "E02CHUN03");
    fields[14] = fieldE02CHUN04 =
    new DecimalField(message, HEADERSIZE + 104, 12, 0, "E02CHUN04");
    fields[15] = fieldE02CHUN05 =
    new DecimalField(message, HEADERSIZE + 116, 12, 0, "E02CHUN05");
    fields[16] = fieldE02CHUS01 =
    new CharacterField(message, HEADERSIZE + 128, 12, "E02CHUS01");
    fields[17] = fieldE02CHUS02 =
    new CharacterField(message, HEADERSIZE + 140, 12, "E02CHUS02");
    fields[18] = fieldE02CHUS03 =
    new CharacterField(message, HEADERSIZE + 152, 12, "E02CHUS03");
    fields[19] = fieldE02CHUS04 =
    new CharacterField(message, HEADERSIZE + 164, 12, "E02CHUS04");
    fields[20] = fieldE02CHUS05 =
    new CharacterField(message, HEADERSIZE + 176, 12, "E02CHUS05");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CHUACC using a String value.
  */
  public void setE02CHUACC(String newvalue)
  {
    fieldE02CHUACC.setString(newvalue);
  }

  /**
  * Get value of field E02CHUACC as a String.
  */
  public String getE02CHUACC()
  {
    return fieldE02CHUACC.getString();
  }

  /**
  * Set numeric field E02CHUACC using a BigDecimal value.
  */
  public void setE02CHUACC(BigDecimal newvalue)
  {
    fieldE02CHUACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUACC()
  {
    return fieldE02CHUACC.getBigDecimal();
  }

  /**
  * Set field E02CHUNCB using a String value.
  */
  public void setE02CHUNCB(String newvalue)
  {
    fieldE02CHUNCB.setString(newvalue);
  }

  /**
  * Get value of field E02CHUNCB as a String.
  */
  public String getE02CHUNCB()
  {
    return fieldE02CHUNCB.getString();
  }

  /**
  * Set numeric field E02CHUNCB using a BigDecimal value.
  */
  public void setE02CHUNCB(BigDecimal newvalue)
  {
    fieldE02CHUNCB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUNCB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUNCB()
  {
    return fieldE02CHUNCB.getBigDecimal();
  }

  /**
  * Set field E02CHUN01 using a String value.
  */
  public void setE02CHUN01(String newvalue)
  {
    fieldE02CHUN01.setString(newvalue);
  }

  /**
  * Get value of field E02CHUN01 as a String.
  */
  public String getE02CHUN01()
  {
    return fieldE02CHUN01.getString();
  }

  /**
  * Set numeric field E02CHUN01 using a BigDecimal value.
  */
  public void setE02CHUN01(BigDecimal newvalue)
  {
    fieldE02CHUN01.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUN01 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUN01()
  {
    return fieldE02CHUN01.getBigDecimal();
  }

  /**
  * Set field E02CHUN02 using a String value.
  */
  public void setE02CHUN02(String newvalue)
  {
    fieldE02CHUN02.setString(newvalue);
  }

  /**
  * Get value of field E02CHUN02 as a String.
  */
  public String getE02CHUN02()
  {
    return fieldE02CHUN02.getString();
  }

  /**
  * Set numeric field E02CHUN02 using a BigDecimal value.
  */
  public void setE02CHUN02(BigDecimal newvalue)
  {
    fieldE02CHUN02.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUN02 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUN02()
  {
    return fieldE02CHUN02.getBigDecimal();
  }

  /**
  * Set field E02CHUN03 using a String value.
  */
  public void setE02CHUN03(String newvalue)
  {
    fieldE02CHUN03.setString(newvalue);
  }

  /**
  * Get value of field E02CHUN03 as a String.
  */
  public String getE02CHUN03()
  {
    return fieldE02CHUN03.getString();
  }

  /**
  * Set numeric field E02CHUN03 using a BigDecimal value.
  */
  public void setE02CHUN03(BigDecimal newvalue)
  {
    fieldE02CHUN03.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUN03 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUN03()
  {
    return fieldE02CHUN03.getBigDecimal();
  }

  /**
  * Set field E02CHUN04 using a String value.
  */
  public void setE02CHUN04(String newvalue)
  {
    fieldE02CHUN04.setString(newvalue);
  }

  /**
  * Get value of field E02CHUN04 as a String.
  */
  public String getE02CHUN04()
  {
    return fieldE02CHUN04.getString();
  }

  /**
  * Set numeric field E02CHUN04 using a BigDecimal value.
  */
  public void setE02CHUN04(BigDecimal newvalue)
  {
    fieldE02CHUN04.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUN04 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUN04()
  {
    return fieldE02CHUN04.getBigDecimal();
  }

  /**
  * Set field E02CHUN05 using a String value.
  */
  public void setE02CHUN05(String newvalue)
  {
    fieldE02CHUN05.setString(newvalue);
  }

  /**
  * Get value of field E02CHUN05 as a String.
  */
  public String getE02CHUN05()
  {
    return fieldE02CHUN05.getString();
  }

  /**
  * Set numeric field E02CHUN05 using a BigDecimal value.
  */
  public void setE02CHUN05(BigDecimal newvalue)
  {
    fieldE02CHUN05.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CHUN05 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CHUN05()
  {
    return fieldE02CHUN05.getBigDecimal();
  }

  /**
  * Set field E02CHUS01 using a String value.
  */
  public void setE02CHUS01(String newvalue)
  {
    fieldE02CHUS01.setString(newvalue);
  }

  /**
  * Get value of field E02CHUS01 as a String.
  */
  public String getE02CHUS01()
  {
    return fieldE02CHUS01.getString();
  }

  /**
  * Set field E02CHUS02 using a String value.
  */
  public void setE02CHUS02(String newvalue)
  {
    fieldE02CHUS02.setString(newvalue);
  }

  /**
  * Get value of field E02CHUS02 as a String.
  */
  public String getE02CHUS02()
  {
    return fieldE02CHUS02.getString();
  }

  /**
  * Set field E02CHUS03 using a String value.
  */
  public void setE02CHUS03(String newvalue)
  {
    fieldE02CHUS03.setString(newvalue);
  }

  /**
  * Get value of field E02CHUS03 as a String.
  */
  public String getE02CHUS03()
  {
    return fieldE02CHUS03.getString();
  }

  /**
  * Set field E02CHUS04 using a String value.
  */
  public void setE02CHUS04(String newvalue)
  {
    fieldE02CHUS04.setString(newvalue);
  }

  /**
  * Get value of field E02CHUS04 as a String.
  */
  public String getE02CHUS04()
  {
    return fieldE02CHUS04.getString();
  }

  /**
  * Set field E02CHUS05 using a String value.
  */
  public void setE02CHUS05(String newvalue)
  {
    fieldE02CHUS05.setString(newvalue);
  }

  /**
  * Get value of field E02CHUS05 as a String.
  */
  public String getE02CHUS05()
  {
    return fieldE02CHUS05.getString();
  }

}
