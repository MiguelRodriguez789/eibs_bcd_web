package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EBP012401 physical file definition.
* 
* File level identifier is 1130611112828.
* Record format level identifier is 4E12A464C7BDC.
*/

public class EBP012401Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BDDNUM",
                                     "E01BDDSEQ",
                                     "E01BDDKIN",
                                     "E01BDDKIND",
                                     "E01BDDREF",
                                     "E01BDDETY",
                                     "D01BDDETY",
                                     "E01BDDQTY",
                                     "E01BDDUAM",
                                     "E01BDDAMT",
                                     "E01BDDPTX",
                                     "E01BDDVTX",
                                     "E01BDDDS1",
                                     "E01BDDDS2",
                                     "E01BDDDS3",
                                     "E01BDDDS4",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BDDNUM",
                                   "E01BDDSEQ",
                                   "E01BDDKIN",
                                   "E01BDDKIND",
                                   "E01BDDREF",
                                   "E01BDDETY",
                                   "D01BDDETY",
                                   "E01BDDQTY",
                                   "E01BDDUAM",
                                   "E01BDDAMT",
                                   "E01BDDPTX",
                                   "E01BDDVTX",
                                   "E01BDDDS1",
                                   "E01BDDDS2",
                                   "E01BDDDS3",
                                   "E01BDDDS4",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1130611112828";
  final static String rid = "4E12A464C7BDC";
  final static String fmtname = "EBP012401";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01BDDNUM = null;
  private DecimalField fieldE01BDDSEQ = null;
  private CharacterField fieldE01BDDKIN = null;
  private CharacterField fieldE01BDDKIND = null;
  private CharacterField fieldE01BDDREF = null;
  private CharacterField fieldE01BDDETY = null;
  private CharacterField fieldD01BDDETY = null;
  private DecimalField fieldE01BDDQTY = null;
  private DecimalField fieldE01BDDUAM = null;
  private DecimalField fieldE01BDDAMT = null;
  private DecimalField fieldE01BDDPTX = null;
  private DecimalField fieldE01BDDVTX = null;
  private CharacterField fieldE01BDDDS1 = null;
  private CharacterField fieldE01BDDDS2 = null;
  private CharacterField fieldE01BDDDS3 = null;
  private CharacterField fieldE01BDDDS4 = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EBP012401Message.
  */
  public EBP012401Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 533;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BDDNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01BDDNUM");
    fields[10] = fieldE01BDDSEQ =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "E01BDDSEQ");
    fields[11] = fieldE01BDDKIN =
    new CharacterField(message, HEADERSIZE + 60, 4, "E01BDDKIN");
    fields[12] = fieldE01BDDKIND =
    new CharacterField(message, HEADERSIZE + 64, 60, "E01BDDKIND");
    fields[13] = fieldE01BDDREF =
    new CharacterField(message, HEADERSIZE + 124, 25, "E01BDDREF");
    fields[14] = fieldE01BDDETY =
    new CharacterField(message, HEADERSIZE + 149, 4, "E01BDDETY");
    fields[15] = fieldD01BDDETY =
    new CharacterField(message, HEADERSIZE + 153, 60, "D01BDDETY");
    fields[16] = fieldE01BDDQTY =
    new DecimalField(message, HEADERSIZE + 213, 11, 2, "E01BDDQTY");
    fields[17] = fieldE01BDDUAM =
    new DecimalField(message, HEADERSIZE + 224, 17, 2, "E01BDDUAM");
    fields[18] = fieldE01BDDAMT =
    new DecimalField(message, HEADERSIZE + 241, 17, 2, "E01BDDAMT");
    fields[19] = fieldE01BDDPTX =
    new DecimalField(message, HEADERSIZE + 258, 8, 3, "E01BDDPTX");
    fields[20] = fieldE01BDDVTX =
    new DecimalField(message, HEADERSIZE + 266, 17, 2, "E01BDDVTX");
    fields[21] = fieldE01BDDDS1 =
    new CharacterField(message, HEADERSIZE + 283, 60, "E01BDDDS1");
    fields[22] = fieldE01BDDDS2 =
    new CharacterField(message, HEADERSIZE + 343, 60, "E01BDDDS2");
    fields[23] = fieldE01BDDDS3 =
    new CharacterField(message, HEADERSIZE + 403, 60, "E01BDDDS3");
    fields[24] = fieldE01BDDDS4 =
    new CharacterField(message, HEADERSIZE + 463, 60, "E01BDDDS4");
    fields[25] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 523, 1, "E01ACT");
    fields[26] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 524, 8, 0, "E01NUMREC");
    fields[27] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 532, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BDDNUM using a String value.
  */
  public void setE01BDDNUM(String newvalue)
  {
    fieldE01BDDNUM.setString(newvalue);
  }

  /**
  * Get value of field E01BDDNUM as a String.
  */
  public String getE01BDDNUM()
  {
    return fieldE01BDDNUM.getString();
  }

  /**
  * Set numeric field E01BDDNUM using a BigDecimal value.
  */
  public void setE01BDDNUM(BigDecimal newvalue)
  {
    fieldE01BDDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDNUM()
  {
    return fieldE01BDDNUM.getBigDecimal();
  }

  /**
  * Set field E01BDDSEQ using a String value.
  */
  public void setE01BDDSEQ(String newvalue)
  {
    fieldE01BDDSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01BDDSEQ as a String.
  */
  public String getE01BDDSEQ()
  {
    return fieldE01BDDSEQ.getString();
  }

  /**
  * Set numeric field E01BDDSEQ using a BigDecimal value.
  */
  public void setE01BDDSEQ(BigDecimal newvalue)
  {
    fieldE01BDDSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDSEQ()
  {
    return fieldE01BDDSEQ.getBigDecimal();
  }

  /**
  * Set field E01BDDKIN using a String value.
  */
  public void setE01BDDKIN(String newvalue)
  {
    fieldE01BDDKIN.setString(newvalue);
  }

  /**
  * Get value of field E01BDDKIN as a String.
  */
  public String getE01BDDKIN()
  {
    return fieldE01BDDKIN.getString();
  }

  /**
  * Set field E01BDDKIND using a String value.
  */
  public void setE01BDDKIND(String newvalue)
  {
    fieldE01BDDKIND.setString(newvalue);
  }

  /**
  * Get value of field E01BDDKIND as a String.
  */
  public String getE01BDDKIND()
  {
    return fieldE01BDDKIND.getString();
  }

  /**
  * Set field E01BDDREF using a String value.
  */
  public void setE01BDDREF(String newvalue)
  {
    fieldE01BDDREF.setString(newvalue);
  }

  /**
  * Get value of field E01BDDREF as a String.
  */
  public String getE01BDDREF()
  {
    return fieldE01BDDREF.getString();
  }

  /**
  * Set field E01BDDETY using a String value.
  */
  public void setE01BDDETY(String newvalue)
  {
    fieldE01BDDETY.setString(newvalue);
  }

  /**
  * Get value of field E01BDDETY as a String.
  */
  public String getE01BDDETY()
  {
    return fieldE01BDDETY.getString();
  }

  /**
  * Set field D01BDDETY using a String value.
  */
  public void setD01BDDETY(String newvalue)
  {
    fieldD01BDDETY.setString(newvalue);
  }

  /**
  * Get value of field D01BDDETY as a String.
  */
  public String getD01BDDETY()
  {
    return fieldD01BDDETY.getString();
  }

  /**
  * Set field E01BDDQTY using a String value.
  */
  public void setE01BDDQTY(String newvalue)
  {
    fieldE01BDDQTY.setString(newvalue);
  }

  /**
  * Get value of field E01BDDQTY as a String.
  */
  public String getE01BDDQTY()
  {
    return fieldE01BDDQTY.getString();
  }

  /**
  * Set numeric field E01BDDQTY using a BigDecimal value.
  */
  public void setE01BDDQTY(BigDecimal newvalue)
  {
    fieldE01BDDQTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDQTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDQTY()
  {
    return fieldE01BDDQTY.getBigDecimal();
  }

  /**
  * Set field E01BDDUAM using a String value.
  */
  public void setE01BDDUAM(String newvalue)
  {
    fieldE01BDDUAM.setString(newvalue);
  }

  /**
  * Get value of field E01BDDUAM as a String.
  */
  public String getE01BDDUAM()
  {
    return fieldE01BDDUAM.getString();
  }

  /**
  * Set numeric field E01BDDUAM using a BigDecimal value.
  */
  public void setE01BDDUAM(BigDecimal newvalue)
  {
    fieldE01BDDUAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDUAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDUAM()
  {
    return fieldE01BDDUAM.getBigDecimal();
  }

  /**
  * Set field E01BDDAMT using a String value.
  */
  public void setE01BDDAMT(String newvalue)
  {
    fieldE01BDDAMT.setString(newvalue);
  }

  /**
  * Get value of field E01BDDAMT as a String.
  */
  public String getE01BDDAMT()
  {
    return fieldE01BDDAMT.getString();
  }

  /**
  * Set numeric field E01BDDAMT using a BigDecimal value.
  */
  public void setE01BDDAMT(BigDecimal newvalue)
  {
    fieldE01BDDAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDAMT()
  {
    return fieldE01BDDAMT.getBigDecimal();
  }

  /**
  * Set field E01BDDPTX using a String value.
  */
  public void setE01BDDPTX(String newvalue)
  {
    fieldE01BDDPTX.setString(newvalue);
  }

  /**
  * Get value of field E01BDDPTX as a String.
  */
  public String getE01BDDPTX()
  {
    return fieldE01BDDPTX.getString();
  }

  /**
  * Set numeric field E01BDDPTX using a BigDecimal value.
  */
  public void setE01BDDPTX(BigDecimal newvalue)
  {
    fieldE01BDDPTX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDPTX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDPTX()
  {
    return fieldE01BDDPTX.getBigDecimal();
  }

  /**
  * Set field E01BDDVTX using a String value.
  */
  public void setE01BDDVTX(String newvalue)
  {
    fieldE01BDDVTX.setString(newvalue);
  }

  /**
  * Get value of field E01BDDVTX as a String.
  */
  public String getE01BDDVTX()
  {
    return fieldE01BDDVTX.getString();
  }

  /**
  * Set numeric field E01BDDVTX using a BigDecimal value.
  */
  public void setE01BDDVTX(BigDecimal newvalue)
  {
    fieldE01BDDVTX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BDDVTX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BDDVTX()
  {
    return fieldE01BDDVTX.getBigDecimal();
  }

  /**
  * Set field E01BDDDS1 using a String value.
  */
  public void setE01BDDDS1(String newvalue)
  {
    fieldE01BDDDS1.setString(newvalue);
  }

  /**
  * Get value of field E01BDDDS1 as a String.
  */
  public String getE01BDDDS1()
  {
    return fieldE01BDDDS1.getString();
  }

  /**
  * Set field E01BDDDS2 using a String value.
  */
  public void setE01BDDDS2(String newvalue)
  {
    fieldE01BDDDS2.setString(newvalue);
  }

  /**
  * Get value of field E01BDDDS2 as a String.
  */
  public String getE01BDDDS2()
  {
    return fieldE01BDDDS2.getString();
  }

  /**
  * Set field E01BDDDS3 using a String value.
  */
  public void setE01BDDDS3(String newvalue)
  {
    fieldE01BDDDS3.setString(newvalue);
  }

  /**
  * Get value of field E01BDDDS3 as a String.
  */
  public String getE01BDDDS3()
  {
    return fieldE01BDDDS3.getString();
  }

  /**
  * Set field E01BDDDS4 using a String value.
  */
  public void setE01BDDDS4(String newvalue)
  {
    fieldE01BDDDS4.setString(newvalue);
  }

  /**
  * Get value of field E01BDDDS4 as a String.
  */
  public String getE01BDDDS4()
  {
    return fieldE01BDDDS4.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
