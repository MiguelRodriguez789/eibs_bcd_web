package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD0405DS physical file definition.
* 
* File level identifier is 1170113114656.
* Record format level identifier is 4667AB8B5F6B8.
*/

public class EDD0405DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01STPACC",
                                     "E01STPFCK",
                                     "E01STPTCK",
                                     "E01STPDTM",
                                     "E01STPDTD",
                                     "E01STPDTY",
                                     "E01STPTIM",
                                     "E01STPUSR",
                                     "E01STPAMT",
                                     "E01STPGLN",
                                     "E01STPPRF",
                                     "E01STPRMK",
                                     "E01STPCCF",
                                     "E01STPPTS",
                                     "E01STPSTS",
                                     "E01STPRDM",
                                     "E01STPRDD",
                                     "E01STPRDY",
                                     "E01STPRTM",
                                     "E01STPRUS"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01STPACC",
                                   "E01STPFCK",
                                   "E01STPTCK",
                                   "E01STPDTM",
                                   "E01STPDTD",
                                   "E01STPDTY",
                                   "E01STPTIM",
                                   "E01STPUSR",
                                   "E01STPAMT",
                                   "E01STPGLN",
                                   "E01STPPRF",
                                   "E01STPRMK",
                                   "E01STPCCF",
                                   "E01STPPTS",
                                   "E01STPSTS",
                                   "E01STPRDM",
                                   "E01STPRDD",
                                   "E01STPRDY",
                                   "E01STPRTM",
                                   "E01STPRUS"
                                 };
  final static String fid = "1170113114656";
  final static String rid = "4667AB8B5F6B8";
  final static String fmtname = "EDD0405DS";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01STPACC = null;
  private DecimalField fieldE01STPFCK = null;
  private DecimalField fieldE01STPTCK = null;
  private DecimalField fieldE01STPDTM = null;
  private DecimalField fieldE01STPDTD = null;
  private DecimalField fieldE01STPDTY = null;
  private CharacterField fieldE01STPTIM = null;
  private CharacterField fieldE01STPUSR = null;
  private DecimalField fieldE01STPAMT = null;
  private DecimalField fieldE01STPGLN = null;
  private CharacterField fieldE01STPPRF = null;
  private CharacterField fieldE01STPRMK = null;
  private CharacterField fieldE01STPCCF = null;
  private DecimalField fieldE01STPPTS = null;
  private CharacterField fieldE01STPSTS = null;
  private DecimalField fieldE01STPRDM = null;
  private DecimalField fieldE01STPRDD = null;
  private DecimalField fieldE01STPRDY = null;
  private CharacterField fieldE01STPRTM = null;
  private CharacterField fieldE01STPRUS = null;

  /**
  * Constructor for EDD0405DSMessage.
  */
  public EDD0405DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 320;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01STPACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01STPACC");
    fields[10] = fieldE01STPFCK =
    new DecimalField(message, HEADERSIZE + 55, 12, 0, "E01STPFCK");
    fields[11] = fieldE01STPTCK =
    new DecimalField(message, HEADERSIZE + 67, 12, 0, "E01STPTCK");
    fields[12] = fieldE01STPDTM =
    new DecimalField(message, HEADERSIZE + 79, 3, 0, "E01STPDTM");
    fields[13] = fieldE01STPDTD =
    new DecimalField(message, HEADERSIZE + 82, 3, 0, "E01STPDTD");
    fields[14] = fieldE01STPDTY =
    new DecimalField(message, HEADERSIZE + 85, 5, 0, "E01STPDTY");
    fields[15] = fieldE01STPTIM =
    new CharacterField(message, HEADERSIZE + 90, 26, "E01STPTIM");
    fields[16] = fieldE01STPUSR =
    new CharacterField(message, HEADERSIZE + 116, 10, "E01STPUSR");
    fields[17] = fieldE01STPAMT =
    new DecimalField(message, HEADERSIZE + 126, 17, 2, "E01STPAMT");
    fields[18] = fieldE01STPGLN =
    new DecimalField(message, HEADERSIZE + 143, 17, 0, "E01STPGLN");
    fields[19] = fieldE01STPPRF =
    new CharacterField(message, HEADERSIZE + 160, 1, "E01STPPRF");
    fields[20] = fieldE01STPRMK =
    new CharacterField(message, HEADERSIZE + 161, 60, "E01STPRMK");
    fields[21] = fieldE01STPCCF =
    new CharacterField(message, HEADERSIZE + 221, 1, "E01STPCCF");
    fields[22] = fieldE01STPPTS =
    new DecimalField(message, HEADERSIZE + 222, 6, 0, "E01STPPTS");
    fields[23] = fieldE01STPSTS =
    new CharacterField(message, HEADERSIZE + 228, 45, "E01STPSTS");
    fields[24] = fieldE01STPRDM =
    new DecimalField(message, HEADERSIZE + 273, 3, 0, "E01STPRDM");
    fields[25] = fieldE01STPRDD =
    new DecimalField(message, HEADERSIZE + 276, 3, 0, "E01STPRDD");
    fields[26] = fieldE01STPRDY =
    new DecimalField(message, HEADERSIZE + 279, 5, 0, "E01STPRDY");
    fields[27] = fieldE01STPRTM =
    new CharacterField(message, HEADERSIZE + 284, 26, "E01STPRTM");
    fields[28] = fieldE01STPRUS =
    new CharacterField(message, HEADERSIZE + 310, 10, "E01STPRUS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01STPACC using a String value.
  */
  public void setE01STPACC(String newvalue)
  {
    fieldE01STPACC.setString(newvalue);
  }

  /**
  * Get value of field E01STPACC as a String.
  */
  public String getE01STPACC()
  {
    return fieldE01STPACC.getString();
  }

  /**
  * Set numeric field E01STPACC using a BigDecimal value.
  */
  public void setE01STPACC(BigDecimal newvalue)
  {
    fieldE01STPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPACC()
  {
    return fieldE01STPACC.getBigDecimal();
  }

  /**
  * Set field E01STPFCK using a String value.
  */
  public void setE01STPFCK(String newvalue)
  {
    fieldE01STPFCK.setString(newvalue);
  }

  /**
  * Get value of field E01STPFCK as a String.
  */
  public String getE01STPFCK()
  {
    return fieldE01STPFCK.getString();
  }

  /**
  * Set numeric field E01STPFCK using a BigDecimal value.
  */
  public void setE01STPFCK(BigDecimal newvalue)
  {
    fieldE01STPFCK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPFCK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPFCK()
  {
    return fieldE01STPFCK.getBigDecimal();
  }

  /**
  * Set field E01STPTCK using a String value.
  */
  public void setE01STPTCK(String newvalue)
  {
    fieldE01STPTCK.setString(newvalue);
  }

  /**
  * Get value of field E01STPTCK as a String.
  */
  public String getE01STPTCK()
  {
    return fieldE01STPTCK.getString();
  }

  /**
  * Set numeric field E01STPTCK using a BigDecimal value.
  */
  public void setE01STPTCK(BigDecimal newvalue)
  {
    fieldE01STPTCK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPTCK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPTCK()
  {
    return fieldE01STPTCK.getBigDecimal();
  }

  /**
  * Set field E01STPDTM using a String value.
  */
  public void setE01STPDTM(String newvalue)
  {
    fieldE01STPDTM.setString(newvalue);
  }

  /**
  * Get value of field E01STPDTM as a String.
  */
  public String getE01STPDTM()
  {
    return fieldE01STPDTM.getString();
  }

  /**
  * Set numeric field E01STPDTM using a BigDecimal value.
  */
  public void setE01STPDTM(BigDecimal newvalue)
  {
    fieldE01STPDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPDTM()
  {
    return fieldE01STPDTM.getBigDecimal();
  }

  /**
  * Set field E01STPDTD using a String value.
  */
  public void setE01STPDTD(String newvalue)
  {
    fieldE01STPDTD.setString(newvalue);
  }

  /**
  * Get value of field E01STPDTD as a String.
  */
  public String getE01STPDTD()
  {
    return fieldE01STPDTD.getString();
  }

  /**
  * Set numeric field E01STPDTD using a BigDecimal value.
  */
  public void setE01STPDTD(BigDecimal newvalue)
  {
    fieldE01STPDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPDTD()
  {
    return fieldE01STPDTD.getBigDecimal();
  }

  /**
  * Set field E01STPDTY using a String value.
  */
  public void setE01STPDTY(String newvalue)
  {
    fieldE01STPDTY.setString(newvalue);
  }

  /**
  * Get value of field E01STPDTY as a String.
  */
  public String getE01STPDTY()
  {
    return fieldE01STPDTY.getString();
  }

  /**
  * Set numeric field E01STPDTY using a BigDecimal value.
  */
  public void setE01STPDTY(BigDecimal newvalue)
  {
    fieldE01STPDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPDTY()
  {
    return fieldE01STPDTY.getBigDecimal();
  }

  /**
  * Set field E01STPTIM using a String value.
  */
  public void setE01STPTIM(String newvalue)
  {
    fieldE01STPTIM.setString(newvalue);
  }

  /**
  * Get value of field E01STPTIM as a String.
  */
  public String getE01STPTIM()
  {
    return fieldE01STPTIM.getString();
  }

  /**
  * Set field E01STPUSR using a String value.
  */
  public void setE01STPUSR(String newvalue)
  {
    fieldE01STPUSR.setString(newvalue);
  }

  /**
  * Get value of field E01STPUSR as a String.
  */
  public String getE01STPUSR()
  {
    return fieldE01STPUSR.getString();
  }

  /**
  * Set field E01STPAMT using a String value.
  */
  public void setE01STPAMT(String newvalue)
  {
    fieldE01STPAMT.setString(newvalue);
  }

  /**
  * Get value of field E01STPAMT as a String.
  */
  public String getE01STPAMT()
  {
    return fieldE01STPAMT.getString();
  }

  /**
  * Set numeric field E01STPAMT using a BigDecimal value.
  */
  public void setE01STPAMT(BigDecimal newvalue)
  {
    fieldE01STPAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPAMT()
  {
    return fieldE01STPAMT.getBigDecimal();
  }

  /**
  * Set field E01STPGLN using a String value.
  */
  public void setE01STPGLN(String newvalue)
  {
    fieldE01STPGLN.setString(newvalue);
  }

  /**
  * Get value of field E01STPGLN as a String.
  */
  public String getE01STPGLN()
  {
    return fieldE01STPGLN.getString();
  }

  /**
  * Set numeric field E01STPGLN using a BigDecimal value.
  */
  public void setE01STPGLN(BigDecimal newvalue)
  {
    fieldE01STPGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPGLN()
  {
    return fieldE01STPGLN.getBigDecimal();
  }

  /**
  * Set field E01STPPRF using a String value.
  */
  public void setE01STPPRF(String newvalue)
  {
    fieldE01STPPRF.setString(newvalue);
  }

  /**
  * Get value of field E01STPPRF as a String.
  */
  public String getE01STPPRF()
  {
    return fieldE01STPPRF.getString();
  }

  /**
  * Set field E01STPRMK using a String value.
  */
  public void setE01STPRMK(String newvalue)
  {
    fieldE01STPRMK.setString(newvalue);
  }

  /**
  * Get value of field E01STPRMK as a String.
  */
  public String getE01STPRMK()
  {
    return fieldE01STPRMK.getString();
  }

  /**
  * Set field E01STPCCF using a String value.
  */
  public void setE01STPCCF(String newvalue)
  {
    fieldE01STPCCF.setString(newvalue);
  }

  /**
  * Get value of field E01STPCCF as a String.
  */
  public String getE01STPCCF()
  {
    return fieldE01STPCCF.getString();
  }

  /**
  * Set field E01STPPTS using a String value.
  */
  public void setE01STPPTS(String newvalue)
  {
    fieldE01STPPTS.setString(newvalue);
  }

  /**
  * Get value of field E01STPPTS as a String.
  */
  public String getE01STPPTS()
  {
    return fieldE01STPPTS.getString();
  }

  /**
  * Set numeric field E01STPPTS using a BigDecimal value.
  */
  public void setE01STPPTS(BigDecimal newvalue)
  {
    fieldE01STPPTS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPPTS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPPTS()
  {
    return fieldE01STPPTS.getBigDecimal();
  }

  /**
  * Set field E01STPSTS using a String value.
  */
  public void setE01STPSTS(String newvalue)
  {
    fieldE01STPSTS.setString(newvalue);
  }

  /**
  * Get value of field E01STPSTS as a String.
  */
  public String getE01STPSTS()
  {
    return fieldE01STPSTS.getString();
  }

  /**
  * Set field E01STPRDM using a String value.
  */
  public void setE01STPRDM(String newvalue)
  {
    fieldE01STPRDM.setString(newvalue);
  }

  /**
  * Get value of field E01STPRDM as a String.
  */
  public String getE01STPRDM()
  {
    return fieldE01STPRDM.getString();
  }

  /**
  * Set numeric field E01STPRDM using a BigDecimal value.
  */
  public void setE01STPRDM(BigDecimal newvalue)
  {
    fieldE01STPRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPRDM()
  {
    return fieldE01STPRDM.getBigDecimal();
  }

  /**
  * Set field E01STPRDD using a String value.
  */
  public void setE01STPRDD(String newvalue)
  {
    fieldE01STPRDD.setString(newvalue);
  }

  /**
  * Get value of field E01STPRDD as a String.
  */
  public String getE01STPRDD()
  {
    return fieldE01STPRDD.getString();
  }

  /**
  * Set numeric field E01STPRDD using a BigDecimal value.
  */
  public void setE01STPRDD(BigDecimal newvalue)
  {
    fieldE01STPRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPRDD()
  {
    return fieldE01STPRDD.getBigDecimal();
  }

  /**
  * Set field E01STPRDY using a String value.
  */
  public void setE01STPRDY(String newvalue)
  {
    fieldE01STPRDY.setString(newvalue);
  }

  /**
  * Get value of field E01STPRDY as a String.
  */
  public String getE01STPRDY()
  {
    return fieldE01STPRDY.getString();
  }

  /**
  * Set numeric field E01STPRDY using a BigDecimal value.
  */
  public void setE01STPRDY(BigDecimal newvalue)
  {
    fieldE01STPRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01STPRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01STPRDY()
  {
    return fieldE01STPRDY.getBigDecimal();
  }

  /**
  * Set field E01STPRTM using a String value.
  */
  public void setE01STPRTM(String newvalue)
  {
    fieldE01STPRTM.setString(newvalue);
  }

  /**
  * Get value of field E01STPRTM as a String.
  */
  public String getE01STPRTM()
  {
    return fieldE01STPRTM.getString();
  }

  /**
  * Set field E01STPRUS using a String value.
  */
  public void setE01STPRUS(String newvalue)
  {
    fieldE01STPRUS.setString(newvalue);
  }

  /**
  * Get value of field E01STPRUS as a String.
  */
  public String getE01STPRUS()
  {
    return fieldE01STPRUS.getString();
  }

}
