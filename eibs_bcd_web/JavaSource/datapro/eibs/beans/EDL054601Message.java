package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL054601 physical file definition.
* 
* File level identifier is 1180214150037.
* Record format level identifier is 4344EB777EC2F.
*/

public class EDL054601Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01EXCTYP",
                                     "E01EXCSEQ",
                                     "E01EXCPRO",
                                     "E01EXCCUN",
                                     "E01EXCACC",
                                     "E01EXCPOR",
                                     "E01EXCSDM",
                                     "E01EXCSDD",
                                     "E01EXCSDY",
                                     "E01EXCMAM",
                                     "E01EXCMAD",
                                     "E01EXCMAY",
                                     "E01EXCSTS",
                                     "E01EXCDSC",
                                     "E01EXCOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01EXCTYP",
                                   "E01EXCSEQ",
                                   "E01EXCPRO",
                                   "E01EXCCUN",
                                   "E01EXCACC",
                                   "E01EXCPOR",
                                   "E01EXCSDM",
                                   "E01EXCSDD",
                                   "E01EXCSDY",
                                   "E01EXCMAM",
                                   "E01EXCMAD",
                                   "E01EXCMAY",
                                   "E01EXCSTS",
                                   "E01EXCDSC",
                                   "E01EXCOPE"
                                 };
  final static String fid = "1180214150037";
  final static String rid = "4344EB777EC2F";
  final static String fmtname = "EDL054601";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01EXCTYP = null;
  private DecimalField fieldE01EXCSEQ = null;
  private CharacterField fieldE01EXCPRO = null;
  private DecimalField fieldE01EXCCUN = null;
  private DecimalField fieldE01EXCACC = null;
  private DecimalField fieldE01EXCPOR = null;
  private DecimalField fieldE01EXCSDM = null;
  private DecimalField fieldE01EXCSDD = null;
  private DecimalField fieldE01EXCSDY = null;
  private DecimalField fieldE01EXCMAM = null;
  private DecimalField fieldE01EXCMAD = null;
  private DecimalField fieldE01EXCMAY = null;
  private CharacterField fieldE01EXCSTS = null;
  private CharacterField fieldE01EXCDSC = null;
  private CharacterField fieldE01EXCOPE = null;

  /**
  * Constructor for EDL054601Message.
  */
  public EDL054601Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 161;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01EXCTYP =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01EXCTYP");
    fields[10] = fieldE01EXCSEQ =
    new DecimalField(message, HEADERSIZE + 44, 13, 0, "E01EXCSEQ");
    fields[11] = fieldE01EXCPRO =
    new CharacterField(message, HEADERSIZE + 57, 4, "E01EXCPRO");
    fields[12] = fieldE01EXCCUN =
    new DecimalField(message, HEADERSIZE + 61, 10, 0, "E01EXCCUN");
    fields[13] = fieldE01EXCACC =
    new DecimalField(message, HEADERSIZE + 71, 13, 0, "E01EXCACC");
    fields[14] = fieldE01EXCPOR =
    new DecimalField(message, HEADERSIZE + 84, 8, 3, "E01EXCPOR");
    fields[15] = fieldE01EXCSDM =
    new DecimalField(message, HEADERSIZE + 92, 3, 0, "E01EXCSDM");
    fields[16] = fieldE01EXCSDD =
    new DecimalField(message, HEADERSIZE + 95, 3, 0, "E01EXCSDD");
    fields[17] = fieldE01EXCSDY =
    new DecimalField(message, HEADERSIZE + 98, 5, 0, "E01EXCSDY");
    fields[18] = fieldE01EXCMAM =
    new DecimalField(message, HEADERSIZE + 103, 3, 0, "E01EXCMAM");
    fields[19] = fieldE01EXCMAD =
    new DecimalField(message, HEADERSIZE + 106, 3, 0, "E01EXCMAD");
    fields[20] = fieldE01EXCMAY =
    new DecimalField(message, HEADERSIZE + 109, 5, 0, "E01EXCMAY");
    fields[21] = fieldE01EXCSTS =
    new CharacterField(message, HEADERSIZE + 114, 1, "E01EXCSTS");
    fields[22] = fieldE01EXCDSC =
    new CharacterField(message, HEADERSIZE + 115, 45, "E01EXCDSC");
    fields[23] = fieldE01EXCOPE =
    new CharacterField(message, HEADERSIZE + 160, 1, "E01EXCOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01EXCTYP using a String value.
  */
  public void setE01EXCTYP(String newvalue)
  {
    fieldE01EXCTYP.setString(newvalue);
  }

  /**
  * Get value of field E01EXCTYP as a String.
  */
  public String getE01EXCTYP()
  {
    return fieldE01EXCTYP.getString();
  }

  /**
  * Set field E01EXCSEQ using a String value.
  */
  public void setE01EXCSEQ(String newvalue)
  {
    fieldE01EXCSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01EXCSEQ as a String.
  */
  public String getE01EXCSEQ()
  {
    return fieldE01EXCSEQ.getString();
  }

  /**
  * Set numeric field E01EXCSEQ using a BigDecimal value.
  */
  public void setE01EXCSEQ(BigDecimal newvalue)
  {
    fieldE01EXCSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCSEQ()
  {
    return fieldE01EXCSEQ.getBigDecimal();
  }

  /**
  * Set field E01EXCPRO using a String value.
  */
  public void setE01EXCPRO(String newvalue)
  {
    fieldE01EXCPRO.setString(newvalue);
  }

  /**
  * Get value of field E01EXCPRO as a String.
  */
  public String getE01EXCPRO()
  {
    return fieldE01EXCPRO.getString();
  }

  /**
  * Set field E01EXCCUN using a String value.
  */
  public void setE01EXCCUN(String newvalue)
  {
    fieldE01EXCCUN.setString(newvalue);
  }

  /**
  * Get value of field E01EXCCUN as a String.
  */
  public String getE01EXCCUN()
  {
    return fieldE01EXCCUN.getString();
  }

  /**
  * Set numeric field E01EXCCUN using a BigDecimal value.
  */
  public void setE01EXCCUN(BigDecimal newvalue)
  {
    fieldE01EXCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCCUN()
  {
    return fieldE01EXCCUN.getBigDecimal();
  }

  /**
  * Set field E01EXCACC using a String value.
  */
  public void setE01EXCACC(String newvalue)
  {
    fieldE01EXCACC.setString(newvalue);
  }

  /**
  * Get value of field E01EXCACC as a String.
  */
  public String getE01EXCACC()
  {
    return fieldE01EXCACC.getString();
  }

  /**
  * Set numeric field E01EXCACC using a BigDecimal value.
  */
  public void setE01EXCACC(BigDecimal newvalue)
  {
    fieldE01EXCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCACC()
  {
    return fieldE01EXCACC.getBigDecimal();
  }

  /**
  * Set field E01EXCPOR using a String value.
  */
  public void setE01EXCPOR(String newvalue)
  {
    fieldE01EXCPOR.setString(newvalue);
  }

  /**
  * Get value of field E01EXCPOR as a String.
  */
  public String getE01EXCPOR()
  {
    return fieldE01EXCPOR.getString();
  }

  /**
  * Set numeric field E01EXCPOR using a BigDecimal value.
  */
  public void setE01EXCPOR(BigDecimal newvalue)
  {
    fieldE01EXCPOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCPOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCPOR()
  {
    return fieldE01EXCPOR.getBigDecimal();
  }

  /**
  * Set field E01EXCSDM using a String value.
  */
  public void setE01EXCSDM(String newvalue)
  {
    fieldE01EXCSDM.setString(newvalue);
  }

  /**
  * Get value of field E01EXCSDM as a String.
  */
  public String getE01EXCSDM()
  {
    return fieldE01EXCSDM.getString();
  }

  /**
  * Set numeric field E01EXCSDM using a BigDecimal value.
  */
  public void setE01EXCSDM(BigDecimal newvalue)
  {
    fieldE01EXCSDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCSDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCSDM()
  {
    return fieldE01EXCSDM.getBigDecimal();
  }

  /**
  * Set field E01EXCSDD using a String value.
  */
  public void setE01EXCSDD(String newvalue)
  {
    fieldE01EXCSDD.setString(newvalue);
  }

  /**
  * Get value of field E01EXCSDD as a String.
  */
  public String getE01EXCSDD()
  {
    return fieldE01EXCSDD.getString();
  }

  /**
  * Set numeric field E01EXCSDD using a BigDecimal value.
  */
  public void setE01EXCSDD(BigDecimal newvalue)
  {
    fieldE01EXCSDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCSDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCSDD()
  {
    return fieldE01EXCSDD.getBigDecimal();
  }

  /**
  * Set field E01EXCSDY using a String value.
  */
  public void setE01EXCSDY(String newvalue)
  {
    fieldE01EXCSDY.setString(newvalue);
  }

  /**
  * Get value of field E01EXCSDY as a String.
  */
  public String getE01EXCSDY()
  {
    return fieldE01EXCSDY.getString();
  }

  /**
  * Set numeric field E01EXCSDY using a BigDecimal value.
  */
  public void setE01EXCSDY(BigDecimal newvalue)
  {
    fieldE01EXCSDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCSDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCSDY()
  {
    return fieldE01EXCSDY.getBigDecimal();
  }

  /**
  * Set field E01EXCMAM using a String value.
  */
  public void setE01EXCMAM(String newvalue)
  {
    fieldE01EXCMAM.setString(newvalue);
  }

  /**
  * Get value of field E01EXCMAM as a String.
  */
  public String getE01EXCMAM()
  {
    return fieldE01EXCMAM.getString();
  }

  /**
  * Set numeric field E01EXCMAM using a BigDecimal value.
  */
  public void setE01EXCMAM(BigDecimal newvalue)
  {
    fieldE01EXCMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCMAM()
  {
    return fieldE01EXCMAM.getBigDecimal();
  }

  /**
  * Set field E01EXCMAD using a String value.
  */
  public void setE01EXCMAD(String newvalue)
  {
    fieldE01EXCMAD.setString(newvalue);
  }

  /**
  * Get value of field E01EXCMAD as a String.
  */
  public String getE01EXCMAD()
  {
    return fieldE01EXCMAD.getString();
  }

  /**
  * Set numeric field E01EXCMAD using a BigDecimal value.
  */
  public void setE01EXCMAD(BigDecimal newvalue)
  {
    fieldE01EXCMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCMAD()
  {
    return fieldE01EXCMAD.getBigDecimal();
  }

  /**
  * Set field E01EXCMAY using a String value.
  */
  public void setE01EXCMAY(String newvalue)
  {
    fieldE01EXCMAY.setString(newvalue);
  }

  /**
  * Get value of field E01EXCMAY as a String.
  */
  public String getE01EXCMAY()
  {
    return fieldE01EXCMAY.getString();
  }

  /**
  * Set numeric field E01EXCMAY using a BigDecimal value.
  */
  public void setE01EXCMAY(BigDecimal newvalue)
  {
    fieldE01EXCMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EXCMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EXCMAY()
  {
    return fieldE01EXCMAY.getBigDecimal();
  }

  /**
  * Set field E01EXCSTS using a String value.
  */
  public void setE01EXCSTS(String newvalue)
  {
    fieldE01EXCSTS.setString(newvalue);
  }

  /**
  * Get value of field E01EXCSTS as a String.
  */
  public String getE01EXCSTS()
  {
    return fieldE01EXCSTS.getString();
  }

  /**
  * Set field E01EXCDSC using a String value.
  */
  public void setE01EXCDSC(String newvalue)
  {
    fieldE01EXCDSC.setString(newvalue);
  }

  /**
  * Get value of field E01EXCDSC as a String.
  */
  public String getE01EXCDSC()
  {
    return fieldE01EXCDSC.getString();
  }

  /**
  * Set field E01EXCOPE using a String value.
  */
  public void setE01EXCOPE(String newvalue)
  {
    fieldE01EXCOPE.setString(newvalue);
  }

  /**
  * Get value of field E01EXCOPE as a String.
  */
  public String getE01EXCOPE()
  {
    return fieldE01EXCOPE.getString();
  }

}
