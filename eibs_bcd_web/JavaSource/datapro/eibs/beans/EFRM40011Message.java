package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM40011 physical file definition.
* 
* File level identifier is 1170202115325.
* Record format level identifier is 4C2F464116164.
*/

public class EFRM40011Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H41USR",
                                     "H41PGM",
                                     "H41TIM",
                                     "H41SCR",
                                     "H41OPE",
                                     "H41MAS",
                                     "H41WK1",
                                     "H41WK2",
                                     "H41WK3",
                                     "E41SELCUN",
                                     "E41SELRTP",
                                     "E41SELMAN",
                                     "E41CUN",
                                     "E41RTP",
                                     "E41MAN",
                                     "E41MA1",
                                     "E41MA2",
                                     "E41MA3",
                                     "E41MA4",
                                     "E41CTY",
                                     "E41STE",
                                     "E41ZPC",
                                     "E41POB",
                                     "E41CTR",
                                     "E41MLC",
                                     "E41HPN",
                                     "E41UC2",
                                     "E41NM3",
                                     "E41NM4",
                                     "E41NM5",
                                     "E41ADT",
                                     "E41ADF",
                                     "E41NST",
                                     "E41TID",
                                     "E41PID",
                                     "E41RGN",
                                     "E41COM",
                                     "E41PAR",
                                     "E41RTL",
                                     "E41PISO",
                                     "E41APTO",
                                     "E41MUN",
                                     "E41CNT",
                                     "E41AD1",
                                     "E41AD2",
                                     "E41AD3",
                                     "E41AD4",
                                     "E41INT",
                                     "E41RTX",
                                     "D41STE",
                                     "D41CTY",
                                     "D41MLC",
                                     "D41TID",
                                     "D41PID",
                                     "D41CIT",
                                     "D41UC2",
                                     "D41PAR",
                                     "D41MUN",
                                     "D41RTX",
                                     "D41ADT",
                                     "D41COM",
                                     "D41ADF",
                                     "D41RGN",
                                     "D41RTY",
                                     "D41ZIP",
                                     "F41MA1",
                                     "F41MA2",
                                     "F41MA3",
                                     "F41MA4",
                                     "F41CTY",
                                     "F41STE",
                                     "F41ZPC",
                                     "F41POB",
                                     "F41CTR",
                                     "F41MLC",
                                     "F41HPN",
                                     "F41NST",
                                     "F41TID",
                                     "F41PID",
                                     "F41UC2",
                                     "F41NM3",
                                     "F41NM4",
                                     "F41NM5",
                                     "F41RTY",
                                     "F41FL1",
                                     "F41FL2",
                                     "F41FL3",
                                     "F41ADT",
                                     "F41ADF",
                                     "F41PISO",
                                     "F41APTO",
                                     "F41MUN",
                                     "F41RGN",
                                     "F41COM",
                                     "F41PAR"
                                   };
  final static String tnames[] = {
                                   "*user",
                                   "*program",
                                   "*systemHour",
                                   "*page",
                                   "*operationCode",
                                   "*moreEntries",
                                   "*Flag1",
                                   "*Flag2",
                                   "*Flag3",
                                   "referenceNumber",
                                   "*recordType",
                                   "selectedIdNumber",
                                   "customerNumber",
                                   "recordType",
                                   "sequence",
                                   "legalName",
                                   "addressLine",
                                   "addessLine1",
                                   "marriedName",
                                   "city",
                                   "state",
                                   "zipCode",
                                   "poBox",
                                   "country",
                                   "mailingCode",
                                   "phone",
                                   "E41UC2",
                                   "E41NM3",
                                   "E41NM4",
                                   "E41NM5",
                                   "addressType",
                                   "addressVerif",
                                   "E41NST",
                                   "idType",
                                   "idCountry",
                                   "regionCode",
                                   "comuneCode",
                                   "parroquiaCode",
                                   "parentesco",
                                   "piso",
                                   "apartamento",
                                   "municipio",
                                   "residencyCountry",
                                   "addressline1",
                                   "addressline2",
                                   "addressline3",
                                   "addressline4",
                                   "*country",
                                   "recordsts",
                                   "stateDesc",
                                   "countryCodeDesc",
                                   "mailingCodeDesc",
                                   "idTypeDesc",
                                   "idCountryDesc",
                                   "cityDesc",
                                   "regionDesc",
                                   "districtDesc",
                                   "municipalityDesc",
                                   "statusDesc",
                                   "descrTipoDir",
                                   "descrComuna",
                                   "descrVerific",
                                   "regionCodeDesc",
                                   "relationDesc",
                                   "postalCodeDesc",
                                   "*legalName",
                                   "*addressLine1",
                                   "*addressLine2",
                                   "*addressline3",
                                   "*city",
                                   "*state",
                                   "*zipCode",
                                   "*poBox",
                                   "*country",
                                   "*mailingCode",
                                   "*phone",
                                   "*numberStocks",
                                   "*idType",
                                   "*idCountry",
                                   "*User2",
                                   "*floorLevel",
                                   "*street",
                                   "*building",
                                   "*relationType",
                                   "*addressType",
                                   "*verificFlag",
                                   "*signerType",
                                   "*addressType",
                                   "*addressVerif",
                                   "*piso",
                                   "*apartamento",
                                   "*municipio",
                                   "*regionCode",
                                   "*comunaCode",
                                   "*parroquiaCode"
                                 };
  final static String fid = "1170202115325";
  final static String rid = "4C2F464116164";
  final static String fmtname = "EFRM40011";
  final int FIELDCOUNT = 95;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH41USR = null;
  private CharacterField fieldH41PGM = null;
  private CharacterField fieldH41TIM = null;
  private CharacterField fieldH41SCR = null;
  private CharacterField fieldH41OPE = null;
  private CharacterField fieldH41MAS = null;
  private CharacterField fieldH41WK1 = null;
  private CharacterField fieldH41WK2 = null;
  private CharacterField fieldH41WK3 = null;
  private DecimalField fieldE41SELCUN = null;
  private CharacterField fieldE41SELRTP = null;
  private DecimalField fieldE41SELMAN = null;
  private DecimalField fieldE41CUN = null;
  private CharacterField fieldE41RTP = null;
  private DecimalField fieldE41MAN = null;
  private CharacterField fieldE41MA1 = null;
  private CharacterField fieldE41MA2 = null;
  private CharacterField fieldE41MA3 = null;
  private CharacterField fieldE41MA4 = null;
  private CharacterField fieldE41CTY = null;
  private CharacterField fieldE41STE = null;
  private CharacterField fieldE41ZPC = null;
  private CharacterField fieldE41POB = null;
  private CharacterField fieldE41CTR = null;
  private CharacterField fieldE41MLC = null;
  private DecimalField fieldE41HPN = null;
  private CharacterField fieldE41UC2 = null;
  private CharacterField fieldE41NM3 = null;
  private CharacterField fieldE41NM4 = null;
  private CharacterField fieldE41NM5 = null;
  private CharacterField fieldE41ADT = null;
  private CharacterField fieldE41ADF = null;
  private DecimalField fieldE41NST = null;
  private CharacterField fieldE41TID = null;
  private CharacterField fieldE41PID = null;
  private CharacterField fieldE41RGN = null;
  private CharacterField fieldE41COM = null;
  private CharacterField fieldE41PAR = null;
  private CharacterField fieldE41RTL = null;
  private CharacterField fieldE41PISO = null;
  private CharacterField fieldE41APTO = null;
  private CharacterField fieldE41MUN = null;
  private CharacterField fieldE41CNT = null;
  private CharacterField fieldE41AD1 = null;
  private CharacterField fieldE41AD2 = null;
  private CharacterField fieldE41AD3 = null;
  private CharacterField fieldE41AD4 = null;
  private CharacterField fieldE41INT = null;
  private CharacterField fieldE41RTX = null;
  private CharacterField fieldD41STE = null;
  private CharacterField fieldD41CTY = null;
  private CharacterField fieldD41MLC = null;
  private CharacterField fieldD41TID = null;
  private CharacterField fieldD41PID = null;
  private CharacterField fieldD41CIT = null;
  private CharacterField fieldD41UC2 = null;
  private CharacterField fieldD41PAR = null;
  private CharacterField fieldD41MUN = null;
  private CharacterField fieldD41RTX = null;
  private CharacterField fieldD41ADT = null;
  private CharacterField fieldD41COM = null;
  private CharacterField fieldD41ADF = null;
  private CharacterField fieldD41RGN = null;
  private CharacterField fieldD41RTY = null;
  private CharacterField fieldD41ZIP = null;
  private CharacterField fieldF41MA1 = null;
  private CharacterField fieldF41MA2 = null;
  private CharacterField fieldF41MA3 = null;
  private CharacterField fieldF41MA4 = null;
  private CharacterField fieldF41CTY = null;
  private CharacterField fieldF41STE = null;
  private CharacterField fieldF41ZPC = null;
  private CharacterField fieldF41POB = null;
  private CharacterField fieldF41CTR = null;
  private CharacterField fieldF41MLC = null;
  private CharacterField fieldF41HPN = null;
  private CharacterField fieldF41NST = null;
  private CharacterField fieldF41TID = null;
  private CharacterField fieldF41PID = null;
  private CharacterField fieldF41UC2 = null;
  private CharacterField fieldF41NM3 = null;
  private CharacterField fieldF41NM4 = null;
  private CharacterField fieldF41NM5 = null;
  private CharacterField fieldF41RTY = null;
  private CharacterField fieldF41FL1 = null;
  private CharacterField fieldF41FL2 = null;
  private CharacterField fieldF41FL3 = null;
  private CharacterField fieldF41ADT = null;
  private CharacterField fieldF41ADF = null;
  private CharacterField fieldF41PISO = null;
  private CharacterField fieldF41APTO = null;
  private CharacterField fieldF41MUN = null;
  private CharacterField fieldF41RGN = null;
  private CharacterField fieldF41COM = null;
  private CharacterField fieldF41PAR = null;

  /**
  * Constructor for EFRM40011Message.
  */
  public EFRM40011Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1620;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH41USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "*user");
    fields[1] = fieldH41PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "*program");
    fields[2] = fieldH41TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "*systemHour");
    fields[3] = fieldH41SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "*page");
    fields[4] = fieldH41OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "*operationCode");
    fields[5] = fieldH41MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "*moreEntries");
    fields[6] = fieldH41WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "*Flag1");
    fields[7] = fieldH41WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "*Flag2");
    fields[8] = fieldH41WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "*Flag3");
    fields[9] = fieldE41SELCUN =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "referenceNumber");
    fields[10] = fieldE41SELRTP =
    new CharacterField(message, HEADERSIZE + 55, 1, "*recordType");
    fields[11] = fieldE41SELMAN =
    new DecimalField(message, HEADERSIZE + 56, 3, 0, "selectedIdNumber");
    fields[12] = fieldE41CUN =
    new DecimalField(message, HEADERSIZE + 59, 13, 0, "customerNumber");
    fields[13] = fieldE41RTP =
    new CharacterField(message, HEADERSIZE + 72, 1, "recordType");
    fields[14] = fieldE41MAN =
    new DecimalField(message, HEADERSIZE + 73, 3, 0, "sequence");
    fields[15] = fieldE41MA1 =
    new CharacterField(message, HEADERSIZE + 76, 60, "legalName");
    fields[16] = fieldE41MA2 =
    new CharacterField(message, HEADERSIZE + 136, 45, "addressLine");
    fields[17] = fieldE41MA3 =
    new CharacterField(message, HEADERSIZE + 181, 45, "addessLine1");
    fields[18] = fieldE41MA4 =
    new CharacterField(message, HEADERSIZE + 226, 45, "marriedName");
    fields[19] = fieldE41CTY =
    new CharacterField(message, HEADERSIZE + 271, 35, "city");
    fields[20] = fieldE41STE =
    new CharacterField(message, HEADERSIZE + 306, 4, "state");
    fields[21] = fieldE41ZPC =
    new CharacterField(message, HEADERSIZE + 310, 15, "zipCode");
    fields[22] = fieldE41POB =
    new CharacterField(message, HEADERSIZE + 325, 10, "poBox");
    fields[23] = fieldE41CTR =
    new CharacterField(message, HEADERSIZE + 335, 35, "country");
    fields[24] = fieldE41MLC =
    new CharacterField(message, HEADERSIZE + 370, 4, "mailingCode");
    fields[25] = fieldE41HPN =
    new DecimalField(message, HEADERSIZE + 374, 16, 0, "phone");
    fields[26] = fieldE41UC2 =
    new CharacterField(message, HEADERSIZE + 390, 4, "E41UC2");
    fields[27] = fieldE41NM3 =
    new CharacterField(message, HEADERSIZE + 394, 80, "E41NM3");
    fields[28] = fieldE41NM4 =
    new CharacterField(message, HEADERSIZE + 474, 80, "E41NM4");
    fields[29] = fieldE41NM5 =
    new CharacterField(message, HEADERSIZE + 554, 80, "E41NM5");
    fields[30] = fieldE41ADT =
    new CharacterField(message, HEADERSIZE + 634, 4, "addressType");
    fields[31] = fieldE41ADF =
    new CharacterField(message, HEADERSIZE + 638, 4, "addressVerif");
    fields[32] = fieldE41NST =
    new DecimalField(message, HEADERSIZE + 642, 10, 0, "E41NST");
    fields[33] = fieldE41TID =
    new CharacterField(message, HEADERSIZE + 652, 4, "idType");
    fields[34] = fieldE41PID =
    new CharacterField(message, HEADERSIZE + 656, 4, "idCountry");
    fields[35] = fieldE41RGN =
    new CharacterField(message, HEADERSIZE + 660, 4, "regionCode");
    fields[36] = fieldE41COM =
    new CharacterField(message, HEADERSIZE + 664, 4, "comuneCode");
    fields[37] = fieldE41PAR =
    new CharacterField(message, HEADERSIZE + 668, 4, "parroquiaCode");
    fields[38] = fieldE41RTL =
    new CharacterField(message, HEADERSIZE + 672, 4, "parentesco");
    fields[39] = fieldE41PISO =
    new CharacterField(message, HEADERSIZE + 676, 5, "piso");
    fields[40] = fieldE41APTO =
    new CharacterField(message, HEADERSIZE + 681, 15, "apartamento");
    fields[41] = fieldE41MUN =
    new CharacterField(message, HEADERSIZE + 696, 4, "municipio");
    fields[42] = fieldE41CNT =
    new CharacterField(message, HEADERSIZE + 700, 2, "residencyCountry");
    fields[43] = fieldE41AD1 =
    new CharacterField(message, HEADERSIZE + 702, 60, "addressline1");
    fields[44] = fieldE41AD2 =
    new CharacterField(message, HEADERSIZE + 762, 60, "addressline2");
    fields[45] = fieldE41AD3 =
    new CharacterField(message, HEADERSIZE + 822, 60, "addressline3");
    fields[46] = fieldE41AD4 =
    new CharacterField(message, HEADERSIZE + 882, 60, "addressline4");
    fields[47] = fieldE41INT =
    new CharacterField(message, HEADERSIZE + 942, 2, "*country");
    fields[48] = fieldE41RTX =
    new CharacterField(message, HEADERSIZE + 944, 1, "recordsts");
    fields[49] = fieldD41STE =
    new CharacterField(message, HEADERSIZE + 945, 35, "stateDesc");
    fields[50] = fieldD41CTY =
    new CharacterField(message, HEADERSIZE + 980, 35, "countryCodeDesc");
    fields[51] = fieldD41MLC =
    new CharacterField(message, HEADERSIZE + 1015, 35, "mailingCodeDesc");
    fields[52] = fieldD41TID =
    new CharacterField(message, HEADERSIZE + 1050, 45, "idTypeDesc");
    fields[53] = fieldD41PID =
    new CharacterField(message, HEADERSIZE + 1095, 45, "idCountryDesc");
    fields[54] = fieldD41CIT =
    new CharacterField(message, HEADERSIZE + 1140, 45, "cityDesc");
    fields[55] = fieldD41UC2 =
    new CharacterField(message, HEADERSIZE + 1185, 45, "regionDesc");
    fields[56] = fieldD41PAR =
    new CharacterField(message, HEADERSIZE + 1230, 35, "districtDesc");
    fields[57] = fieldD41MUN =
    new CharacterField(message, HEADERSIZE + 1265, 35, "municipalityDesc");
    fields[58] = fieldD41RTX =
    new CharacterField(message, HEADERSIZE + 1300, 45, "statusDesc");
    fields[59] = fieldD41ADT =
    new CharacterField(message, HEADERSIZE + 1345, 45, "descrTipoDir");
    fields[60] = fieldD41COM =
    new CharacterField(message, HEADERSIZE + 1390, 45, "descrComuna");
    fields[61] = fieldD41ADF =
    new CharacterField(message, HEADERSIZE + 1435, 45, "descrVerific");
    fields[62] = fieldD41RGN =
    new CharacterField(message, HEADERSIZE + 1480, 45, "regionCodeDesc");
    fields[63] = fieldD41RTY =
    new CharacterField(message, HEADERSIZE + 1525, 20, "relationDesc");
    fields[64] = fieldD41ZIP =
    new CharacterField(message, HEADERSIZE + 1545, 45, "postalCodeDesc");
    fields[65] = fieldF41MA1 =
    new CharacterField(message, HEADERSIZE + 1590, 1, "*legalName");
    fields[66] = fieldF41MA2 =
    new CharacterField(message, HEADERSIZE + 1591, 1, "*addressLine1");
    fields[67] = fieldF41MA3 =
    new CharacterField(message, HEADERSIZE + 1592, 1, "*addressLine2");
    fields[68] = fieldF41MA4 =
    new CharacterField(message, HEADERSIZE + 1593, 1, "*addressline3");
    fields[69] = fieldF41CTY =
    new CharacterField(message, HEADERSIZE + 1594, 1, "*city");
    fields[70] = fieldF41STE =
    new CharacterField(message, HEADERSIZE + 1595, 1, "*state");
    fields[71] = fieldF41ZPC =
    new CharacterField(message, HEADERSIZE + 1596, 1, "*zipCode");
    fields[72] = fieldF41POB =
    new CharacterField(message, HEADERSIZE + 1597, 1, "*poBox");
    fields[73] = fieldF41CTR =
    new CharacterField(message, HEADERSIZE + 1598, 1, "*country");
    fields[74] = fieldF41MLC =
    new CharacterField(message, HEADERSIZE + 1599, 1, "*mailingCode");
    fields[75] = fieldF41HPN =
    new CharacterField(message, HEADERSIZE + 1600, 1, "*phone");
    fields[76] = fieldF41NST =
    new CharacterField(message, HEADERSIZE + 1601, 1, "*numberStocks");
    fields[77] = fieldF41TID =
    new CharacterField(message, HEADERSIZE + 1602, 1, "*idType");
    fields[78] = fieldF41PID =
    new CharacterField(message, HEADERSIZE + 1603, 1, "*idCountry");
    fields[79] = fieldF41UC2 =
    new CharacterField(message, HEADERSIZE + 1604, 1, "*User2");
    fields[80] = fieldF41NM3 =
    new CharacterField(message, HEADERSIZE + 1605, 1, "*floorLevel");
    fields[81] = fieldF41NM4 =
    new CharacterField(message, HEADERSIZE + 1606, 1, "*street");
    fields[82] = fieldF41NM5 =
    new CharacterField(message, HEADERSIZE + 1607, 1, "*building");
    fields[83] = fieldF41RTY =
    new CharacterField(message, HEADERSIZE + 1608, 1, "*relationType");
    fields[84] = fieldF41FL1 =
    new CharacterField(message, HEADERSIZE + 1609, 1, "*addressType");
    fields[85] = fieldF41FL2 =
    new CharacterField(message, HEADERSIZE + 1610, 1, "*verificFlag");
    fields[86] = fieldF41FL3 =
    new CharacterField(message, HEADERSIZE + 1611, 1, "*signerType");
    fields[87] = fieldF41ADT =
    new CharacterField(message, HEADERSIZE + 1612, 1, "*addressType");
    fields[88] = fieldF41ADF =
    new CharacterField(message, HEADERSIZE + 1613, 1, "*addressVerif");
    fields[89] = fieldF41PISO =
    new CharacterField(message, HEADERSIZE + 1614, 1, "*piso");
    fields[90] = fieldF41APTO =
    new CharacterField(message, HEADERSIZE + 1615, 1, "*apartamento");
    fields[91] = fieldF41MUN =
    new CharacterField(message, HEADERSIZE + 1616, 1, "*municipio");
    fields[92] = fieldF41RGN =
    new CharacterField(message, HEADERSIZE + 1617, 1, "*regionCode");
    fields[93] = fieldF41COM =
    new CharacterField(message, HEADERSIZE + 1618, 1, "*comunaCode");
    fields[94] = fieldF41PAR =
    new CharacterField(message, HEADERSIZE + 1619, 1, "*parroquiaCode");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H41USR using a String value.
  */
  public void setH41USR(String newvalue)
  {
    fieldH41USR.setString(newvalue);
  }

  /**
  * Get value of field H41USR as a String.
  */
  public String getH41USR()
  {
    return fieldH41USR.getString();
  }

  /**
  * Set field H41PGM using a String value.
  */
  public void setH41PGM(String newvalue)
  {
    fieldH41PGM.setString(newvalue);
  }

  /**
  * Get value of field H41PGM as a String.
  */
  public String getH41PGM()
  {
    return fieldH41PGM.getString();
  }

  /**
  * Set field H41TIM using a String value.
  */
  public void setH41TIM(String newvalue)
  {
    fieldH41TIM.setString(newvalue);
  }

  /**
  * Get value of field H41TIM as a String.
  */
  public String getH41TIM()
  {
    return fieldH41TIM.getString();
  }

  /**
  * Set field H41SCR using a String value.
  */
  public void setH41SCR(String newvalue)
  {
    fieldH41SCR.setString(newvalue);
  }

  /**
  * Get value of field H41SCR as a String.
  */
  public String getH41SCR()
  {
    return fieldH41SCR.getString();
  }

  /**
  * Set field H41OPE using a String value.
  */
  public void setH41OPE(String newvalue)
  {
    fieldH41OPE.setString(newvalue);
  }

  /**
  * Get value of field H41OPE as a String.
  */
  public String getH41OPE()
  {
    return fieldH41OPE.getString();
  }

  /**
  * Set field H41MAS using a String value.
  */
  public void setH41MAS(String newvalue)
  {
    fieldH41MAS.setString(newvalue);
  }

  /**
  * Get value of field H41MAS as a String.
  */
  public String getH41MAS()
  {
    return fieldH41MAS.getString();
  }

  /**
  * Set field H41WK1 using a String value.
  */
  public void setH41WK1(String newvalue)
  {
    fieldH41WK1.setString(newvalue);
  }

  /**
  * Get value of field H41WK1 as a String.
  */
  public String getH41WK1()
  {
    return fieldH41WK1.getString();
  }

  /**
  * Set field H41WK2 using a String value.
  */
  public void setH41WK2(String newvalue)
  {
    fieldH41WK2.setString(newvalue);
  }

  /**
  * Get value of field H41WK2 as a String.
  */
  public String getH41WK2()
  {
    return fieldH41WK2.getString();
  }

  /**
  * Set field H41WK3 using a String value.
  */
  public void setH41WK3(String newvalue)
  {
    fieldH41WK3.setString(newvalue);
  }

  /**
  * Get value of field H41WK3 as a String.
  */
  public String getH41WK3()
  {
    return fieldH41WK3.getString();
  }

  /**
  * Set field E41SELCUN using a String value.
  */
  public void setE41SELCUN(String newvalue)
  {
    fieldE41SELCUN.setString(newvalue);
  }

  /**
  * Get value of field E41SELCUN as a String.
  */
  public String getE41SELCUN()
  {
    return fieldE41SELCUN.getString();
  }

  /**
  * Set numeric field E41SELCUN using a BigDecimal value.
  */
  public void setE41SELCUN(BigDecimal newvalue)
  {
    fieldE41SELCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41SELCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41SELCUN()
  {
    return fieldE41SELCUN.getBigDecimal();
  }

  /**
  * Set field E41SELRTP using a String value.
  */
  public void setE41SELRTP(String newvalue)
  {
    fieldE41SELRTP.setString(newvalue);
  }

  /**
  * Get value of field E41SELRTP as a String.
  */
  public String getE41SELRTP()
  {
    return fieldE41SELRTP.getString();
  }

  /**
  * Set field E41SELMAN using a String value.
  */
  public void setE41SELMAN(String newvalue)
  {
    fieldE41SELMAN.setString(newvalue);
  }

  /**
  * Get value of field E41SELMAN as a String.
  */
  public String getE41SELMAN()
  {
    return fieldE41SELMAN.getString();
  }

  /**
  * Set numeric field E41SELMAN using a BigDecimal value.
  */
  public void setE41SELMAN(BigDecimal newvalue)
  {
    fieldE41SELMAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41SELMAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41SELMAN()
  {
    return fieldE41SELMAN.getBigDecimal();
  }

  /**
  * Set field E41CUN using a String value.
  */
  public void setE41CUN(String newvalue)
  {
    fieldE41CUN.setString(newvalue);
  }

  /**
  * Get value of field E41CUN as a String.
  */
  public String getE41CUN()
  {
    return fieldE41CUN.getString();
  }

  /**
  * Set numeric field E41CUN using a BigDecimal value.
  */
  public void setE41CUN(BigDecimal newvalue)
  {
    fieldE41CUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41CUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41CUN()
  {
    return fieldE41CUN.getBigDecimal();
  }

  /**
  * Set field E41RTP using a String value.
  */
  public void setE41RTP(String newvalue)
  {
    fieldE41RTP.setString(newvalue);
  }

  /**
  * Get value of field E41RTP as a String.
  */
  public String getE41RTP()
  {
    return fieldE41RTP.getString();
  }

  /**
  * Set field E41MAN using a String value.
  */
  public void setE41MAN(String newvalue)
  {
    fieldE41MAN.setString(newvalue);
  }

  /**
  * Get value of field E41MAN as a String.
  */
  public String getE41MAN()
  {
    return fieldE41MAN.getString();
  }

  /**
  * Set numeric field E41MAN using a BigDecimal value.
  */
  public void setE41MAN(BigDecimal newvalue)
  {
    fieldE41MAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41MAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41MAN()
  {
    return fieldE41MAN.getBigDecimal();
  }

  /**
  * Set field E41MA1 using a String value.
  */
  public void setE41MA1(String newvalue)
  {
    fieldE41MA1.setString(newvalue);
  }

  /**
  * Get value of field E41MA1 as a String.
  */
  public String getE41MA1()
  {
    return fieldE41MA1.getString();
  }

  /**
  * Set field E41MA2 using a String value.
  */
  public void setE41MA2(String newvalue)
  {
    fieldE41MA2.setString(newvalue);
  }

  /**
  * Get value of field E41MA2 as a String.
  */
  public String getE41MA2()
  {
    return fieldE41MA2.getString();
  }

  /**
  * Set field E41MA3 using a String value.
  */
  public void setE41MA3(String newvalue)
  {
    fieldE41MA3.setString(newvalue);
  }

  /**
  * Get value of field E41MA3 as a String.
  */
  public String getE41MA3()
  {
    return fieldE41MA3.getString();
  }

  /**
  * Set field E41MA4 using a String value.
  */
  public void setE41MA4(String newvalue)
  {
    fieldE41MA4.setString(newvalue);
  }

  /**
  * Get value of field E41MA4 as a String.
  */
  public String getE41MA4()
  {
    return fieldE41MA4.getString();
  }

  /**
  * Set field E41CTY using a String value.
  */
  public void setE41CTY(String newvalue)
  {
    fieldE41CTY.setString(newvalue);
  }

  /**
  * Get value of field E41CTY as a String.
  */
  public String getE41CTY()
  {
    return fieldE41CTY.getString();
  }

  /**
  * Set field E41STE using a String value.
  */
  public void setE41STE(String newvalue)
  {
    fieldE41STE.setString(newvalue);
  }

  /**
  * Get value of field E41STE as a String.
  */
  public String getE41STE()
  {
    return fieldE41STE.getString();
  }

  /**
  * Set field E41ZPC using a String value.
  */
  public void setE41ZPC(String newvalue)
  {
    fieldE41ZPC.setString(newvalue);
  }

  /**
  * Get value of field E41ZPC as a String.
  */
  public String getE41ZPC()
  {
    return fieldE41ZPC.getString();
  }

  /**
  * Set field E41POB using a String value.
  */
  public void setE41POB(String newvalue)
  {
    fieldE41POB.setString(newvalue);
  }

  /**
  * Get value of field E41POB as a String.
  */
  public String getE41POB()
  {
    return fieldE41POB.getString();
  }

  /**
  * Set field E41CTR using a String value.
  */
  public void setE41CTR(String newvalue)
  {
    fieldE41CTR.setString(newvalue);
  }

  /**
  * Get value of field E41CTR as a String.
  */
  public String getE41CTR()
  {
    return fieldE41CTR.getString();
  }

  /**
  * Set field E41MLC using a String value.
  */
  public void setE41MLC(String newvalue)
  {
    fieldE41MLC.setString(newvalue);
  }

  /**
  * Get value of field E41MLC as a String.
  */
  public String getE41MLC()
  {
    return fieldE41MLC.getString();
  }

  /**
  * Set field E41HPN using a String value.
  */
  public void setE41HPN(String newvalue)
  {
    fieldE41HPN.setString(newvalue);
  }

  /**
  * Get value of field E41HPN as a String.
  */
  public String getE41HPN()
  {
    return fieldE41HPN.getString();
  }

  /**
  * Set numeric field E41HPN using a BigDecimal value.
  */
  public void setE41HPN(BigDecimal newvalue)
  {
    fieldE41HPN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41HPN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41HPN()
  {
    return fieldE41HPN.getBigDecimal();
  }

  /**
  * Set field E41UC2 using a String value.
  */
  public void setE41UC2(String newvalue)
  {
    fieldE41UC2.setString(newvalue);
  }

  /**
  * Get value of field E41UC2 as a String.
  */
  public String getE41UC2()
  {
    return fieldE41UC2.getString();
  }

  /**
  * Set field E41NM3 using a String value.
  */
  public void setE41NM3(String newvalue)
  {
    fieldE41NM3.setString(newvalue);
  }

  /**
  * Get value of field E41NM3 as a String.
  */
  public String getE41NM3()
  {
    return fieldE41NM3.getString();
  }

  /**
  * Set field E41NM4 using a String value.
  */
  public void setE41NM4(String newvalue)
  {
    fieldE41NM4.setString(newvalue);
  }

  /**
  * Get value of field E41NM4 as a String.
  */
  public String getE41NM4()
  {
    return fieldE41NM4.getString();
  }

  /**
  * Set field E41NM5 using a String value.
  */
  public void setE41NM5(String newvalue)
  {
    fieldE41NM5.setString(newvalue);
  }

  /**
  * Get value of field E41NM5 as a String.
  */
  public String getE41NM5()
  {
    return fieldE41NM5.getString();
  }

  /**
  * Set field E41ADT using a String value.
  */
  public void setE41ADT(String newvalue)
  {
    fieldE41ADT.setString(newvalue);
  }

  /**
  * Get value of field E41ADT as a String.
  */
  public String getE41ADT()
  {
    return fieldE41ADT.getString();
  }

  /**
  * Set field E41ADF using a String value.
  */
  public void setE41ADF(String newvalue)
  {
    fieldE41ADF.setString(newvalue);
  }

  /**
  * Get value of field E41ADF as a String.
  */
  public String getE41ADF()
  {
    return fieldE41ADF.getString();
  }

  /**
  * Set field E41NST using a String value.
  */
  public void setE41NST(String newvalue)
  {
    fieldE41NST.setString(newvalue);
  }

  /**
  * Get value of field E41NST as a String.
  */
  public String getE41NST()
  {
    return fieldE41NST.getString();
  }

  /**
  * Set numeric field E41NST using a BigDecimal value.
  */
  public void setE41NST(BigDecimal newvalue)
  {
    fieldE41NST.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E41NST as a BigDecimal.
  */
  public BigDecimal getBigDecimalE41NST()
  {
    return fieldE41NST.getBigDecimal();
  }

  /**
  * Set field E41TID using a String value.
  */
  public void setE41TID(String newvalue)
  {
    fieldE41TID.setString(newvalue);
  }

  /**
  * Get value of field E41TID as a String.
  */
  public String getE41TID()
  {
    return fieldE41TID.getString();
  }

  /**
  * Set field E41PID using a String value.
  */
  public void setE41PID(String newvalue)
  {
    fieldE41PID.setString(newvalue);
  }

  /**
  * Get value of field E41PID as a String.
  */
  public String getE41PID()
  {
    return fieldE41PID.getString();
  }

  /**
  * Set field E41RGN using a String value.
  */
  public void setE41RGN(String newvalue)
  {
    fieldE41RGN.setString(newvalue);
  }

  /**
  * Get value of field E41RGN as a String.
  */
  public String getE41RGN()
  {
    return fieldE41RGN.getString();
  }

  /**
  * Set field E41COM using a String value.
  */
  public void setE41COM(String newvalue)
  {
    fieldE41COM.setString(newvalue);
  }

  /**
  * Get value of field E41COM as a String.
  */
  public String getE41COM()
  {
    return fieldE41COM.getString();
  }

  /**
  * Set field E41PAR using a String value.
  */
  public void setE41PAR(String newvalue)
  {
    fieldE41PAR.setString(newvalue);
  }

  /**
  * Get value of field E41PAR as a String.
  */
  public String getE41PAR()
  {
    return fieldE41PAR.getString();
  }

  /**
  * Set field E41RTL using a String value.
  */
  public void setE41RTL(String newvalue)
  {
    fieldE41RTL.setString(newvalue);
  }

  /**
  * Get value of field E41RTL as a String.
  */
  public String getE41RTL()
  {
    return fieldE41RTL.getString();
  }

  /**
  * Set field E41PISO using a String value.
  */
  public void setE41PISO(String newvalue)
  {
    fieldE41PISO.setString(newvalue);
  }

  /**
  * Get value of field E41PISO as a String.
  */
  public String getE41PISO()
  {
    return fieldE41PISO.getString();
  }

  /**
  * Set field E41APTO using a String value.
  */
  public void setE41APTO(String newvalue)
  {
    fieldE41APTO.setString(newvalue);
  }

  /**
  * Get value of field E41APTO as a String.
  */
  public String getE41APTO()
  {
    return fieldE41APTO.getString();
  }

  /**
  * Set field E41MUN using a String value.
  */
  public void setE41MUN(String newvalue)
  {
    fieldE41MUN.setString(newvalue);
  }

  /**
  * Get value of field E41MUN as a String.
  */
  public String getE41MUN()
  {
    return fieldE41MUN.getString();
  }

  /**
  * Set field E41CNT using a String value.
  */
  public void setE41CNT(String newvalue)
  {
    fieldE41CNT.setString(newvalue);
  }

  /**
  * Get value of field E41CNT as a String.
  */
  public String getE41CNT()
  {
    return fieldE41CNT.getString();
  }

  /**
  * Set field E41AD1 using a String value.
  */
  public void setE41AD1(String newvalue)
  {
    fieldE41AD1.setString(newvalue);
  }

  /**
  * Get value of field E41AD1 as a String.
  */
  public String getE41AD1()
  {
    return fieldE41AD1.getString();
  }

  /**
  * Set field E41AD2 using a String value.
  */
  public void setE41AD2(String newvalue)
  {
    fieldE41AD2.setString(newvalue);
  }

  /**
  * Get value of field E41AD2 as a String.
  */
  public String getE41AD2()
  {
    return fieldE41AD2.getString();
  }

  /**
  * Set field E41AD3 using a String value.
  */
  public void setE41AD3(String newvalue)
  {
    fieldE41AD3.setString(newvalue);
  }

  /**
  * Get value of field E41AD3 as a String.
  */
  public String getE41AD3()
  {
    return fieldE41AD3.getString();
  }

  /**
  * Set field E41AD4 using a String value.
  */
  public void setE41AD4(String newvalue)
  {
    fieldE41AD4.setString(newvalue);
  }

  /**
  * Get value of field E41AD4 as a String.
  */
  public String getE41AD4()
  {
    return fieldE41AD4.getString();
  }

  /**
  * Set field E41INT using a String value.
  */
  public void setE41INT(String newvalue)
  {
    fieldE41INT.setString(newvalue);
  }

  /**
  * Get value of field E41INT as a String.
  */
  public String getE41INT()
  {
    return fieldE41INT.getString();
  }

  /**
  * Set field E41RTX using a String value.
  */
  public void setE41RTX(String newvalue)
  {
    fieldE41RTX.setString(newvalue);
  }

  /**
  * Get value of field E41RTX as a String.
  */
  public String getE41RTX()
  {
    return fieldE41RTX.getString();
  }

  /**
  * Set field D41STE using a String value.
  */
  public void setD41STE(String newvalue)
  {
    fieldD41STE.setString(newvalue);
  }

  /**
  * Get value of field D41STE as a String.
  */
  public String getD41STE()
  {
    return fieldD41STE.getString();
  }

  /**
  * Set field D41CTY using a String value.
  */
  public void setD41CTY(String newvalue)
  {
    fieldD41CTY.setString(newvalue);
  }

  /**
  * Get value of field D41CTY as a String.
  */
  public String getD41CTY()
  {
    return fieldD41CTY.getString();
  }

  /**
  * Set field D41MLC using a String value.
  */
  public void setD41MLC(String newvalue)
  {
    fieldD41MLC.setString(newvalue);
  }

  /**
  * Get value of field D41MLC as a String.
  */
  public String getD41MLC()
  {
    return fieldD41MLC.getString();
  }

  /**
  * Set field D41TID using a String value.
  */
  public void setD41TID(String newvalue)
  {
    fieldD41TID.setString(newvalue);
  }

  /**
  * Get value of field D41TID as a String.
  */
  public String getD41TID()
  {
    return fieldD41TID.getString();
  }

  /**
  * Set field D41PID using a String value.
  */
  public void setD41PID(String newvalue)
  {
    fieldD41PID.setString(newvalue);
  }

  /**
  * Get value of field D41PID as a String.
  */
  public String getD41PID()
  {
    return fieldD41PID.getString();
  }

  /**
  * Set field D41CIT using a String value.
  */
  public void setD41CIT(String newvalue)
  {
    fieldD41CIT.setString(newvalue);
  }

  /**
  * Get value of field D41CIT as a String.
  */
  public String getD41CIT()
  {
    return fieldD41CIT.getString();
  }

  /**
  * Set field D41UC2 using a String value.
  */
  public void setD41UC2(String newvalue)
  {
    fieldD41UC2.setString(newvalue);
  }

  /**
  * Get value of field D41UC2 as a String.
  */
  public String getD41UC2()
  {
    return fieldD41UC2.getString();
  }

  /**
  * Set field D41PAR using a String value.
  */
  public void setD41PAR(String newvalue)
  {
    fieldD41PAR.setString(newvalue);
  }

  /**
  * Get value of field D41PAR as a String.
  */
  public String getD41PAR()
  {
    return fieldD41PAR.getString();
  }

  /**
  * Set field D41MUN using a String value.
  */
  public void setD41MUN(String newvalue)
  {
    fieldD41MUN.setString(newvalue);
  }

  /**
  * Get value of field D41MUN as a String.
  */
  public String getD41MUN()
  {
    return fieldD41MUN.getString();
  }

  /**
  * Set field D41RTX using a String value.
  */
  public void setD41RTX(String newvalue)
  {
    fieldD41RTX.setString(newvalue);
  }

  /**
  * Get value of field D41RTX as a String.
  */
  public String getD41RTX()
  {
    return fieldD41RTX.getString();
  }

  /**
  * Set field D41ADT using a String value.
  */
  public void setD41ADT(String newvalue)
  {
    fieldD41ADT.setString(newvalue);
  }

  /**
  * Get value of field D41ADT as a String.
  */
  public String getD41ADT()
  {
    return fieldD41ADT.getString();
  }

  /**
  * Set field D41COM using a String value.
  */
  public void setD41COM(String newvalue)
  {
    fieldD41COM.setString(newvalue);
  }

  /**
  * Get value of field D41COM as a String.
  */
  public String getD41COM()
  {
    return fieldD41COM.getString();
  }

  /**
  * Set field D41ADF using a String value.
  */
  public void setD41ADF(String newvalue)
  {
    fieldD41ADF.setString(newvalue);
  }

  /**
  * Get value of field D41ADF as a String.
  */
  public String getD41ADF()
  {
    return fieldD41ADF.getString();
  }

  /**
  * Set field D41RGN using a String value.
  */
  public void setD41RGN(String newvalue)
  {
    fieldD41RGN.setString(newvalue);
  }

  /**
  * Get value of field D41RGN as a String.
  */
  public String getD41RGN()
  {
    return fieldD41RGN.getString();
  }

  /**
  * Set field D41RTY using a String value.
  */
  public void setD41RTY(String newvalue)
  {
    fieldD41RTY.setString(newvalue);
  }

  /**
  * Get value of field D41RTY as a String.
  */
  public String getD41RTY()
  {
    return fieldD41RTY.getString();
  }

  /**
  * Set field D41ZIP using a String value.
  */
  public void setD41ZIP(String newvalue)
  {
    fieldD41ZIP.setString(newvalue);
  }

  /**
  * Get value of field D41ZIP as a String.
  */
  public String getD41ZIP()
  {
    return fieldD41ZIP.getString();
  }

  /**
  * Set field F41MA1 using a String value.
  */
  public void setF41MA1(String newvalue)
  {
    fieldF41MA1.setString(newvalue);
  }

  /**
  * Get value of field F41MA1 as a String.
  */
  public String getF41MA1()
  {
    return fieldF41MA1.getString();
  }

  /**
  * Set field F41MA2 using a String value.
  */
  public void setF41MA2(String newvalue)
  {
    fieldF41MA2.setString(newvalue);
  }

  /**
  * Get value of field F41MA2 as a String.
  */
  public String getF41MA2()
  {
    return fieldF41MA2.getString();
  }

  /**
  * Set field F41MA3 using a String value.
  */
  public void setF41MA3(String newvalue)
  {
    fieldF41MA3.setString(newvalue);
  }

  /**
  * Get value of field F41MA3 as a String.
  */
  public String getF41MA3()
  {
    return fieldF41MA3.getString();
  }

  /**
  * Set field F41MA4 using a String value.
  */
  public void setF41MA4(String newvalue)
  {
    fieldF41MA4.setString(newvalue);
  }

  /**
  * Get value of field F41MA4 as a String.
  */
  public String getF41MA4()
  {
    return fieldF41MA4.getString();
  }

  /**
  * Set field F41CTY using a String value.
  */
  public void setF41CTY(String newvalue)
  {
    fieldF41CTY.setString(newvalue);
  }

  /**
  * Get value of field F41CTY as a String.
  */
  public String getF41CTY()
  {
    return fieldF41CTY.getString();
  }

  /**
  * Set field F41STE using a String value.
  */
  public void setF41STE(String newvalue)
  {
    fieldF41STE.setString(newvalue);
  }

  /**
  * Get value of field F41STE as a String.
  */
  public String getF41STE()
  {
    return fieldF41STE.getString();
  }

  /**
  * Set field F41ZPC using a String value.
  */
  public void setF41ZPC(String newvalue)
  {
    fieldF41ZPC.setString(newvalue);
  }

  /**
  * Get value of field F41ZPC as a String.
  */
  public String getF41ZPC()
  {
    return fieldF41ZPC.getString();
  }

  /**
  * Set field F41POB using a String value.
  */
  public void setF41POB(String newvalue)
  {
    fieldF41POB.setString(newvalue);
  }

  /**
  * Get value of field F41POB as a String.
  */
  public String getF41POB()
  {
    return fieldF41POB.getString();
  }

  /**
  * Set field F41CTR using a String value.
  */
  public void setF41CTR(String newvalue)
  {
    fieldF41CTR.setString(newvalue);
  }

  /**
  * Get value of field F41CTR as a String.
  */
  public String getF41CTR()
  {
    return fieldF41CTR.getString();
  }

  /**
  * Set field F41MLC using a String value.
  */
  public void setF41MLC(String newvalue)
  {
    fieldF41MLC.setString(newvalue);
  }

  /**
  * Get value of field F41MLC as a String.
  */
  public String getF41MLC()
  {
    return fieldF41MLC.getString();
  }

  /**
  * Set field F41HPN using a String value.
  */
  public void setF41HPN(String newvalue)
  {
    fieldF41HPN.setString(newvalue);
  }

  /**
  * Get value of field F41HPN as a String.
  */
  public String getF41HPN()
  {
    return fieldF41HPN.getString();
  }

  /**
  * Set field F41NST using a String value.
  */
  public void setF41NST(String newvalue)
  {
    fieldF41NST.setString(newvalue);
  }

  /**
  * Get value of field F41NST as a String.
  */
  public String getF41NST()
  {
    return fieldF41NST.getString();
  }

  /**
  * Set field F41TID using a String value.
  */
  public void setF41TID(String newvalue)
  {
    fieldF41TID.setString(newvalue);
  }

  /**
  * Get value of field F41TID as a String.
  */
  public String getF41TID()
  {
    return fieldF41TID.getString();
  }

  /**
  * Set field F41PID using a String value.
  */
  public void setF41PID(String newvalue)
  {
    fieldF41PID.setString(newvalue);
  }

  /**
  * Get value of field F41PID as a String.
  */
  public String getF41PID()
  {
    return fieldF41PID.getString();
  }

  /**
  * Set field F41UC2 using a String value.
  */
  public void setF41UC2(String newvalue)
  {
    fieldF41UC2.setString(newvalue);
  }

  /**
  * Get value of field F41UC2 as a String.
  */
  public String getF41UC2()
  {
    return fieldF41UC2.getString();
  }

  /**
  * Set field F41NM3 using a String value.
  */
  public void setF41NM3(String newvalue)
  {
    fieldF41NM3.setString(newvalue);
  }

  /**
  * Get value of field F41NM3 as a String.
  */
  public String getF41NM3()
  {
    return fieldF41NM3.getString();
  }

  /**
  * Set field F41NM4 using a String value.
  */
  public void setF41NM4(String newvalue)
  {
    fieldF41NM4.setString(newvalue);
  }

  /**
  * Get value of field F41NM4 as a String.
  */
  public String getF41NM4()
  {
    return fieldF41NM4.getString();
  }

  /**
  * Set field F41NM5 using a String value.
  */
  public void setF41NM5(String newvalue)
  {
    fieldF41NM5.setString(newvalue);
  }

  /**
  * Get value of field F41NM5 as a String.
  */
  public String getF41NM5()
  {
    return fieldF41NM5.getString();
  }

  /**
  * Set field F41RTY using a String value.
  */
  public void setF41RTY(String newvalue)
  {
    fieldF41RTY.setString(newvalue);
  }

  /**
  * Get value of field F41RTY as a String.
  */
  public String getF41RTY()
  {
    return fieldF41RTY.getString();
  }

  /**
  * Set field F41FL1 using a String value.
  */
  public void setF41FL1(String newvalue)
  {
    fieldF41FL1.setString(newvalue);
  }

  /**
  * Get value of field F41FL1 as a String.
  */
  public String getF41FL1()
  {
    return fieldF41FL1.getString();
  }

  /**
  * Set field F41FL2 using a String value.
  */
  public void setF41FL2(String newvalue)
  {
    fieldF41FL2.setString(newvalue);
  }

  /**
  * Get value of field F41FL2 as a String.
  */
  public String getF41FL2()
  {
    return fieldF41FL2.getString();
  }

  /**
  * Set field F41FL3 using a String value.
  */
  public void setF41FL3(String newvalue)
  {
    fieldF41FL3.setString(newvalue);
  }

  /**
  * Get value of field F41FL3 as a String.
  */
  public String getF41FL3()
  {
    return fieldF41FL3.getString();
  }

  /**
  * Set field F41ADT using a String value.
  */
  public void setF41ADT(String newvalue)
  {
    fieldF41ADT.setString(newvalue);
  }

  /**
  * Get value of field F41ADT as a String.
  */
  public String getF41ADT()
  {
    return fieldF41ADT.getString();
  }

  /**
  * Set field F41ADF using a String value.
  */
  public void setF41ADF(String newvalue)
  {
    fieldF41ADF.setString(newvalue);
  }

  /**
  * Get value of field F41ADF as a String.
  */
  public String getF41ADF()
  {
    return fieldF41ADF.getString();
  }

  /**
  * Set field F41PISO using a String value.
  */
  public void setF41PISO(String newvalue)
  {
    fieldF41PISO.setString(newvalue);
  }

  /**
  * Get value of field F41PISO as a String.
  */
  public String getF41PISO()
  {
    return fieldF41PISO.getString();
  }

  /**
  * Set field F41APTO using a String value.
  */
  public void setF41APTO(String newvalue)
  {
    fieldF41APTO.setString(newvalue);
  }

  /**
  * Get value of field F41APTO as a String.
  */
  public String getF41APTO()
  {
    return fieldF41APTO.getString();
  }

  /**
  * Set field F41MUN using a String value.
  */
  public void setF41MUN(String newvalue)
  {
    fieldF41MUN.setString(newvalue);
  }

  /**
  * Get value of field F41MUN as a String.
  */
  public String getF41MUN()
  {
    return fieldF41MUN.getString();
  }

  /**
  * Set field F41RGN using a String value.
  */
  public void setF41RGN(String newvalue)
  {
    fieldF41RGN.setString(newvalue);
  }

  /**
  * Get value of field F41RGN as a String.
  */
  public String getF41RGN()
  {
    return fieldF41RGN.getString();
  }

  /**
  * Set field F41COM using a String value.
  */
  public void setF41COM(String newvalue)
  {
    fieldF41COM.setString(newvalue);
  }

  /**
  * Get value of field F41COM as a String.
  */
  public String getF41COM()
  {
    return fieldF41COM.getString();
  }

  /**
  * Set field F41PAR using a String value.
  */
  public void setF41PAR(String newvalue)
  {
    fieldF41PAR.setString(newvalue);
  }

  /**
  * Get value of field F41PAR as a String.
  */
  public String getF41PAR()
  {
    return fieldF41PAR.getString();
  }

}
