package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA007702 physical file definition.
* 
* File level identifier is 1150504150947.
* Record format level identifier is 48B2256C425B5.
*/

public class ERA007702Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02ROCCUN",
                                     "E02ROCIDN",
                                     "E02ROCRF2",
                                     "E02ROCUNI",
                                     "E02ROCGNO"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02ROCCUN",
                                   "E02ROCIDN",
                                   "E02ROCRF2",
                                   "E02ROCUNI",
                                   "E02ROCGNO"
                                 };
  final static String fid = "1150504150947";
  final static String rid = "48B2256C425B5";
  final static String fmtname = "ERA007702";
  final int FIELDCOUNT = 14;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02ROCCUN = null;
  private CharacterField fieldE02ROCIDN = null;
  private DecimalField fieldE02ROCRF2 = null;
  private CharacterField fieldE02ROCUNI = null;
  private CharacterField fieldE02ROCGNO = null;

  /**
  * Constructor for ERA007702Message.
  */
  public ERA007702Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 206;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02ROCCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E02ROCCUN");
    fields[10] = fieldE02ROCIDN =
    new CharacterField(message, HEADERSIZE + 52, 25, "E02ROCIDN");
    fields[11] = fieldE02ROCRF2 =
    new DecimalField(message, HEADERSIZE + 77, 14, 0, "E02ROCRF2");
    fields[12] = fieldE02ROCUNI =
    new CharacterField(message, HEADERSIZE + 91, 15, "E02ROCUNI");
    fields[13] = fieldE02ROCGNO =
    new CharacterField(message, HEADERSIZE + 106, 100, "E02ROCGNO");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02ROCCUN using a String value.
  */
  public void setE02ROCCUN(String newvalue)
  {
    fieldE02ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E02ROCCUN as a String.
  */
  public String getE02ROCCUN()
  {
    return fieldE02ROCCUN.getString();
  }

  /**
  * Set numeric field E02ROCCUN using a BigDecimal value.
  */
  public void setE02ROCCUN(BigDecimal newvalue)
  {
    fieldE02ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ROCCUN()
  {
    return fieldE02ROCCUN.getBigDecimal();
  }

  /**
  * Set field E02ROCIDN using a String value.
  */
  public void setE02ROCIDN(String newvalue)
  {
    fieldE02ROCIDN.setString(newvalue);
  }

  /**
  * Get value of field E02ROCIDN as a String.
  */
  public String getE02ROCIDN()
  {
    return fieldE02ROCIDN.getString();
  }

  /**
  * Set field E02ROCRF2 using a String value.
  */
  public void setE02ROCRF2(String newvalue)
  {
    fieldE02ROCRF2.setString(newvalue);
  }

  /**
  * Get value of field E02ROCRF2 as a String.
  */
  public String getE02ROCRF2()
  {
    return fieldE02ROCRF2.getString();
  }

  /**
  * Set numeric field E02ROCRF2 using a BigDecimal value.
  */
  public void setE02ROCRF2(BigDecimal newvalue)
  {
    fieldE02ROCRF2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02ROCRF2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02ROCRF2()
  {
    return fieldE02ROCRF2.getBigDecimal();
  }

  /**
  * Set field E02ROCUNI using a String value.
  */
  public void setE02ROCUNI(String newvalue)
  {
    fieldE02ROCUNI.setString(newvalue);
  }

  /**
  * Get value of field E02ROCUNI as a String.
  */
  public String getE02ROCUNI()
  {
    return fieldE02ROCUNI.getString();
  }

  /**
  * Set field E02ROCGNO using a String value.
  */
  public void setE02ROCGNO(String newvalue)
  {
    fieldE02ROCGNO.setString(newvalue);
  }

  /**
  * Get value of field E02ROCGNO as a String.
  */
  public String getE02ROCGNO()
  {
    return fieldE02ROCGNO.getString();
  }

}
