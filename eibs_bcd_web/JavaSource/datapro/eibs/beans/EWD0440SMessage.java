package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0440S physical file definition.
* 
* File level identifier is 1150313093558.
* Record format level identifier is 43182E2A4E3B7.
*/

public class EWD0440SMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "SWDUSR",
                                     "SWDNA1",
                                     "SWDIDN",
                                     "SWDTID",
                                     "SWDPID",
                                     "SWDDEP",
                                     "SWDDTI",
                                     "SWDBTH",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "SWDUSR",
                                   "SWDNA1",
                                   "SWDIDN",
                                   "SWDTID",
                                   "SWDPID",
                                   "SWDDEP",
                                   "SWDDTI",
                                   "SWDBTH",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1150313093558";
  final static String rid = "43182E2A4E3B7";
  final static String fmtname = "EWD0440S";
  final int FIELDCOUNT = 10;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldSWDUSR = null;
  private CharacterField fieldSWDNA1 = null;
  private CharacterField fieldSWDIDN = null;
  private CharacterField fieldSWDTID = null;
  private CharacterField fieldSWDPID = null;
  private CharacterField fieldSWDDEP = null;
  private CharacterField fieldSWDDTI = null;
  private DecimalField fieldSWDBTH = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0440SMessage.
  */
  public EWD0440SMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 188;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldSWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "SWDUSR");
    fields[1] = fieldSWDNA1 =
    new CharacterField(message, HEADERSIZE + 10, 60, "SWDNA1");
    fields[2] = fieldSWDIDN =
    new CharacterField(message, HEADERSIZE + 70, 25, "SWDIDN");
    fields[3] = fieldSWDTID =
    new CharacterField(message, HEADERSIZE + 95, 4, "SWDTID");
    fields[4] = fieldSWDPID =
    new CharacterField(message, HEADERSIZE + 99, 4, "SWDPID");
    fields[5] = fieldSWDDEP =
    new CharacterField(message, HEADERSIZE + 103, 35, "SWDDEP");
    fields[6] = fieldSWDDTI =
    new CharacterField(message, HEADERSIZE + 138, 35, "SWDDTI");
    fields[7] = fieldSWDBTH =
    new DecimalField(message, HEADERSIZE + 173, 6, 0, "SWDBTH");
    fields[8] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 179, 8, 0, "SWDREC");
    fields[9] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 187, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field SWDUSR using a String value.
  */
  public void setSWDUSR(String newvalue)
  {
    fieldSWDUSR.setString(newvalue);
  }

  /**
  * Get value of field SWDUSR as a String.
  */
  public String getSWDUSR()
  {
    return fieldSWDUSR.getString();
  }

  /**
  * Set field SWDNA1 using a String value.
  */
  public void setSWDNA1(String newvalue)
  {
    fieldSWDNA1.setString(newvalue);
  }

  /**
  * Get value of field SWDNA1 as a String.
  */
  public String getSWDNA1()
  {
    return fieldSWDNA1.getString();
  }

  /**
  * Set field SWDIDN using a String value.
  */
  public void setSWDIDN(String newvalue)
  {
    fieldSWDIDN.setString(newvalue);
  }

  /**
  * Get value of field SWDIDN as a String.
  */
  public String getSWDIDN()
  {
    return fieldSWDIDN.getString();
  }

  /**
  * Set field SWDTID using a String value.
  */
  public void setSWDTID(String newvalue)
  {
    fieldSWDTID.setString(newvalue);
  }

  /**
  * Get value of field SWDTID as a String.
  */
  public String getSWDTID()
  {
    return fieldSWDTID.getString();
  }

  /**
  * Set field SWDPID using a String value.
  */
  public void setSWDPID(String newvalue)
  {
    fieldSWDPID.setString(newvalue);
  }

  /**
  * Get value of field SWDPID as a String.
  */
  public String getSWDPID()
  {
    return fieldSWDPID.getString();
  }

  /**
  * Set field SWDDEP using a String value.
  */
  public void setSWDDEP(String newvalue)
  {
    fieldSWDDEP.setString(newvalue);
  }

  /**
  * Get value of field SWDDEP as a String.
  */
  public String getSWDDEP()
  {
    return fieldSWDDEP.getString();
  }

  /**
  * Set field SWDDTI using a String value.
  */
  public void setSWDDTI(String newvalue)
  {
    fieldSWDDTI.setString(newvalue);
  }

  /**
  * Get value of field SWDDTI as a String.
  */
  public String getSWDDTI()
  {
    return fieldSWDDTI.getString();
  }

  /**
  * Set field SWDBTH using a String value.
  */
  public void setSWDBTH(String newvalue)
  {
    fieldSWDBTH.setString(newvalue);
  }

  /**
  * Get value of field SWDBTH as a String.
  */
  public String getSWDBTH()
  {
    return fieldSWDBTH.getString();
  }

  /**
  * Set numeric field SWDBTH using a BigDecimal value.
  */
  public void setSWDBTH(BigDecimal newvalue)
  {
    fieldSWDBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDBTH()
  {
    return fieldSWDBTH.getBigDecimal();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
