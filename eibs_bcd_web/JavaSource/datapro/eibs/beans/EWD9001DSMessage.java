package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD9001DS physical file definition.
* 
* File level identifier is 1170801174956.
* Record format level identifier is 39F95C4B9B2C5.
*/

public class EWD9001DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDFRC",
                                     "SWDVND",
                                     "SWDNOE",
                                     "SWDDSC",
                                     "SWDDBN",
                                     "SWDDBR",
                                     "SWDDCY",
                                     "SWDDGL",
                                     "SWDDRA",
                                     "SWDCBN",
                                     "SWDCBR",
                                     "SWDCCY",
                                     "SWDCGL",
                                     "SWDCRA",
                                     "SWDDIC",
                                     "SWDCIC",
                                     "SWDEXTD",
                                     "SWDEXTC",
                                     "SWDEST",
                                     "SWDCOM",
                                     "SWDCM1",
                                     "SWDMON",
                                     "SWDCUS",
                                     "SWDCDM",
                                     "SWDCDD",
                                     "SWDCDY",
                                     "SWDCTM",
                                     "SWDMUS",
                                     "SWDMDM",
                                     "SWDMDD",
                                     "SWDMDY",
                                     "SWDMTM",
                                     "SWDREC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDFRC",
                                   "SWDVND",
                                   "SWDNOE",
                                   "SWDDSC",
                                   "SWDDBN",
                                   "SWDDBR",
                                   "SWDDCY",
                                   "SWDDGL",
                                   "SWDDRA",
                                   "SWDCBN",
                                   "SWDCBR",
                                   "SWDCCY",
                                   "SWDCGL",
                                   "SWDCRA",
                                   "SWDDIC",
                                   "SWDCIC",
                                   "SWDEXTD",
                                   "SWDEXTC",
                                   "SWDEST",
                                   "SWDCOM",
                                   "SWDCM1",
                                   "SWDMON",
                                   "SWDCUS",
                                   "SWDCDM",
                                   "SWDCDD",
                                   "SWDCDY",
                                   "SWDCTM",
                                   "SWDMUS",
                                   "SWDMDM",
                                   "SWDMDD",
                                   "SWDMDY",
                                   "SWDMTM",
                                   "SWDREC",
                                   "SWDOPE"
                                 };
  final static String fid = "1170801174956";
  final static String rid = "39F95C4B9B2C5";
  final static String fmtname = "EWD9001DS";
  final int FIELDCOUNT = 36;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDVND = null;
  private CharacterField fieldSWDNOE = null;
  private CharacterField fieldSWDDSC = null;
  private CharacterField fieldSWDDBN = null;
  private DecimalField fieldSWDDBR = null;
  private CharacterField fieldSWDDCY = null;
  private DecimalField fieldSWDDGL = null;
  private DecimalField fieldSWDDRA = null;
  private CharacterField fieldSWDCBN = null;
  private DecimalField fieldSWDCBR = null;
  private CharacterField fieldSWDCCY = null;
  private DecimalField fieldSWDCGL = null;
  private DecimalField fieldSWDCRA = null;
  private CharacterField fieldSWDDIC = null;
  private CharacterField fieldSWDCIC = null;
  private DecimalField fieldSWDEXTD = null;
  private DecimalField fieldSWDEXTC = null;
  private CharacterField fieldSWDEST = null;
  private CharacterField fieldSWDCOM = null;
  private CharacterField fieldSWDCM1 = null;
  private CharacterField fieldSWDMON = null;
  private CharacterField fieldSWDCUS = null;
  private DecimalField fieldSWDCDM = null;
  private DecimalField fieldSWDCDD = null;
  private DecimalField fieldSWDCDY = null;
  private CharacterField fieldSWDCTM = null;
  private CharacterField fieldSWDMUS = null;
  private DecimalField fieldSWDMDM = null;
  private DecimalField fieldSWDMDD = null;
  private DecimalField fieldSWDMDY = null;
  private CharacterField fieldSWDMTM = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD9001DSMessage.
  */
  public EWD9001DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 291;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
    fields[3] = fieldSWDVND =
    new CharacterField(message, HEADERSIZE + 19, 4, "SWDVND");
    fields[4] = fieldSWDNOE =
    new CharacterField(message, HEADERSIZE + 23, 10, "SWDNOE");
    fields[5] = fieldSWDDSC =
    new CharacterField(message, HEADERSIZE + 33, 45, "SWDDSC");
    fields[6] = fieldSWDDBN =
    new CharacterField(message, HEADERSIZE + 78, 2, "SWDDBN");
    fields[7] = fieldSWDDBR =
    new DecimalField(message, HEADERSIZE + 80, 5, 0, "SWDDBR");
    fields[8] = fieldSWDDCY =
    new CharacterField(message, HEADERSIZE + 85, 3, "SWDDCY");
    fields[9] = fieldSWDDGL =
    new DecimalField(message, HEADERSIZE + 88, 17, 0, "SWDDGL");
    fields[10] = fieldSWDDRA =
    new DecimalField(message, HEADERSIZE + 105, 13, 0, "SWDDRA");
    fields[11] = fieldSWDCBN =
    new CharacterField(message, HEADERSIZE + 118, 2, "SWDCBN");
    fields[12] = fieldSWDCBR =
    new DecimalField(message, HEADERSIZE + 120, 5, 0, "SWDCBR");
    fields[13] = fieldSWDCCY =
    new CharacterField(message, HEADERSIZE + 125, 3, "SWDCCY");
    fields[14] = fieldSWDCGL =
    new DecimalField(message, HEADERSIZE + 128, 17, 0, "SWDCGL");
    fields[15] = fieldSWDCRA =
    new DecimalField(message, HEADERSIZE + 145, 13, 0, "SWDCRA");
    fields[16] = fieldSWDDIC =
    new CharacterField(message, HEADERSIZE + 158, 4, "SWDDIC");
    fields[17] = fieldSWDCIC =
    new CharacterField(message, HEADERSIZE + 162, 4, "SWDCIC");
    fields[18] = fieldSWDEXTD =
    new DecimalField(message, HEADERSIZE + 166, 6, 0, "SWDEXTD");
    fields[19] = fieldSWDEXTC =
    new DecimalField(message, HEADERSIZE + 172, 6, 0, "SWDEXTC");
    fields[20] = fieldSWDEST =
    new CharacterField(message, HEADERSIZE + 178, 1, "SWDEST");
    fields[21] = fieldSWDCOM =
    new CharacterField(message, HEADERSIZE + 179, 4, "SWDCOM");
    fields[22] = fieldSWDCM1 =
    new CharacterField(message, HEADERSIZE + 183, 4, "SWDCM1");
    fields[23] = fieldSWDMON =
    new CharacterField(message, HEADERSIZE + 187, 1, "SWDMON");
    fields[24] = fieldSWDCUS =
    new CharacterField(message, HEADERSIZE + 188, 10, "SWDCUS");
    fields[25] = fieldSWDCDM =
    new DecimalField(message, HEADERSIZE + 198, 3, 0, "SWDCDM");
    fields[26] = fieldSWDCDD =
    new DecimalField(message, HEADERSIZE + 201, 3, 0, "SWDCDD");
    fields[27] = fieldSWDCDY =
    new DecimalField(message, HEADERSIZE + 204, 5, 0, "SWDCDY");
    fields[28] = fieldSWDCTM =
    new CharacterField(message, HEADERSIZE + 209, 26, "SWDCTM");
    fields[29] = fieldSWDMUS =
    new CharacterField(message, HEADERSIZE + 235, 10, "SWDMUS");
    fields[30] = fieldSWDMDM =
    new DecimalField(message, HEADERSIZE + 245, 3, 0, "SWDMDM");
    fields[31] = fieldSWDMDD =
    new DecimalField(message, HEADERSIZE + 248, 3, 0, "SWDMDD");
    fields[32] = fieldSWDMDY =
    new DecimalField(message, HEADERSIZE + 251, 5, 0, "SWDMDY");
    fields[33] = fieldSWDMTM =
    new CharacterField(message, HEADERSIZE + 256, 26, "SWDMTM");
    fields[34] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 282, 8, 0, "SWDREC");
    fields[35] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 290, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDVND using a String value.
  */
  public void setSWDVND(String newvalue)
  {
    fieldSWDVND.setString(newvalue);
  }

  /**
  * Get value of field SWDVND as a String.
  */
  public String getSWDVND()
  {
    return fieldSWDVND.getString();
  }

  /**
  * Set field SWDNOE using a String value.
  */
  public void setSWDNOE(String newvalue)
  {
    fieldSWDNOE.setString(newvalue);
  }

  /**
  * Get value of field SWDNOE as a String.
  */
  public String getSWDNOE()
  {
    return fieldSWDNOE.getString();
  }

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
    fieldSWDDSC.setString(newvalue);
  }

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
    return fieldSWDDSC.getString();
  }

  /**
  * Set field SWDDBN using a String value.
  */
  public void setSWDDBN(String newvalue)
  {
    fieldSWDDBN.setString(newvalue);
  }

  /**
  * Get value of field SWDDBN as a String.
  */
  public String getSWDDBN()
  {
    return fieldSWDDBN.getString();
  }

  /**
  * Set field SWDDBR using a String value.
  */
  public void setSWDDBR(String newvalue)
  {
    fieldSWDDBR.setString(newvalue);
  }

  /**
  * Get value of field SWDDBR as a String.
  */
  public String getSWDDBR()
  {
    return fieldSWDDBR.getString();
  }

  /**
  * Set numeric field SWDDBR using a BigDecimal value.
  */
  public void setSWDDBR(BigDecimal newvalue)
  {
    fieldSWDDBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDBR()
  {
    return fieldSWDDBR.getBigDecimal();
  }

  /**
  * Set field SWDDCY using a String value.
  */
  public void setSWDDCY(String newvalue)
  {
    fieldSWDDCY.setString(newvalue);
  }

  /**
  * Get value of field SWDDCY as a String.
  */
  public String getSWDDCY()
  {
    return fieldSWDDCY.getString();
  }

  /**
  * Set field SWDDGL using a String value.
  */
  public void setSWDDGL(String newvalue)
  {
    fieldSWDDGL.setString(newvalue);
  }

  /**
  * Get value of field SWDDGL as a String.
  */
  public String getSWDDGL()
  {
    return fieldSWDDGL.getString();
  }

  /**
  * Set numeric field SWDDGL using a BigDecimal value.
  */
  public void setSWDDGL(BigDecimal newvalue)
  {
    fieldSWDDGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDGL()
  {
    return fieldSWDDGL.getBigDecimal();
  }

  /**
  * Set field SWDDRA using a String value.
  */
  public void setSWDDRA(String newvalue)
  {
    fieldSWDDRA.setString(newvalue);
  }

  /**
  * Get value of field SWDDRA as a String.
  */
  public String getSWDDRA()
  {
    return fieldSWDDRA.getString();
  }

  /**
  * Set numeric field SWDDRA using a BigDecimal value.
  */
  public void setSWDDRA(BigDecimal newvalue)
  {
    fieldSWDDRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDDRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDDRA()
  {
    return fieldSWDDRA.getBigDecimal();
  }

  /**
  * Set field SWDCBN using a String value.
  */
  public void setSWDCBN(String newvalue)
  {
    fieldSWDCBN.setString(newvalue);
  }

  /**
  * Get value of field SWDCBN as a String.
  */
  public String getSWDCBN()
  {
    return fieldSWDCBN.getString();
  }

  /**
  * Set field SWDCBR using a String value.
  */
  public void setSWDCBR(String newvalue)
  {
    fieldSWDCBR.setString(newvalue);
  }

  /**
  * Get value of field SWDCBR as a String.
  */
  public String getSWDCBR()
  {
    return fieldSWDCBR.getString();
  }

  /**
  * Set numeric field SWDCBR using a BigDecimal value.
  */
  public void setSWDCBR(BigDecimal newvalue)
  {
    fieldSWDCBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCBR()
  {
    return fieldSWDCBR.getBigDecimal();
  }

  /**
  * Set field SWDCCY using a String value.
  */
  public void setSWDCCY(String newvalue)
  {
    fieldSWDCCY.setString(newvalue);
  }

  /**
  * Get value of field SWDCCY as a String.
  */
  public String getSWDCCY()
  {
    return fieldSWDCCY.getString();
  }

  /**
  * Set field SWDCGL using a String value.
  */
  public void setSWDCGL(String newvalue)
  {
    fieldSWDCGL.setString(newvalue);
  }

  /**
  * Get value of field SWDCGL as a String.
  */
  public String getSWDCGL()
  {
    return fieldSWDCGL.getString();
  }

  /**
  * Set numeric field SWDCGL using a BigDecimal value.
  */
  public void setSWDCGL(BigDecimal newvalue)
  {
    fieldSWDCGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCGL()
  {
    return fieldSWDCGL.getBigDecimal();
  }

  /**
  * Set field SWDCRA using a String value.
  */
  public void setSWDCRA(String newvalue)
  {
    fieldSWDCRA.setString(newvalue);
  }

  /**
  * Get value of field SWDCRA as a String.
  */
  public String getSWDCRA()
  {
    return fieldSWDCRA.getString();
  }

  /**
  * Set numeric field SWDCRA using a BigDecimal value.
  */
  public void setSWDCRA(BigDecimal newvalue)
  {
    fieldSWDCRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCRA()
  {
    return fieldSWDCRA.getBigDecimal();
  }

  /**
  * Set field SWDDIC using a String value.
  */
  public void setSWDDIC(String newvalue)
  {
    fieldSWDDIC.setString(newvalue);
  }

  /**
  * Get value of field SWDDIC as a String.
  */
  public String getSWDDIC()
  {
    return fieldSWDDIC.getString();
  }

  /**
  * Set field SWDCIC using a String value.
  */
  public void setSWDCIC(String newvalue)
  {
    fieldSWDCIC.setString(newvalue);
  }

  /**
  * Get value of field SWDCIC as a String.
  */
  public String getSWDCIC()
  {
    return fieldSWDCIC.getString();
  }

  /**
  * Set field SWDEXTD using a String value.
  */
  public void setSWDEXTD(String newvalue)
  {
    fieldSWDEXTD.setString(newvalue);
  }

  /**
  * Get value of field SWDEXTD as a String.
  */
  public String getSWDEXTD()
  {
    return fieldSWDEXTD.getString();
  }

  /**
  * Set numeric field SWDEXTD using a BigDecimal value.
  */
  public void setSWDEXTD(BigDecimal newvalue)
  {
    fieldSWDEXTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDEXTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDEXTD()
  {
    return fieldSWDEXTD.getBigDecimal();
  }

  /**
  * Set field SWDEXTC using a String value.
  */
  public void setSWDEXTC(String newvalue)
  {
    fieldSWDEXTC.setString(newvalue);
  }

  /**
  * Get value of field SWDEXTC as a String.
  */
  public String getSWDEXTC()
  {
    return fieldSWDEXTC.getString();
  }

  /**
  * Set numeric field SWDEXTC using a BigDecimal value.
  */
  public void setSWDEXTC(BigDecimal newvalue)
  {
    fieldSWDEXTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDEXTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDEXTC()
  {
    return fieldSWDEXTC.getBigDecimal();
  }

  /**
  * Set field SWDEST using a String value.
  */
  public void setSWDEST(String newvalue)
  {
    fieldSWDEST.setString(newvalue);
  }

  /**
  * Get value of field SWDEST as a String.
  */
  public String getSWDEST()
  {
    return fieldSWDEST.getString();
  }

  /**
  * Set field SWDCOM using a String value.
  */
  public void setSWDCOM(String newvalue)
  {
    fieldSWDCOM.setString(newvalue);
  }

  /**
  * Get value of field SWDCOM as a String.
  */
  public String getSWDCOM()
  {
    return fieldSWDCOM.getString();
  }

  /**
  * Set field SWDCM1 using a String value.
  */
  public void setSWDCM1(String newvalue)
  {
    fieldSWDCM1.setString(newvalue);
  }

  /**
  * Get value of field SWDCM1 as a String.
  */
  public String getSWDCM1()
  {
    return fieldSWDCM1.getString();
  }

  /**
  * Set field SWDMON using a String value.
  */
  public void setSWDMON(String newvalue)
  {
    fieldSWDMON.setString(newvalue);
  }

  /**
  * Get value of field SWDMON as a String.
  */
  public String getSWDMON()
  {
    return fieldSWDMON.getString();
  }

  /**
  * Set field SWDCUS using a String value.
  */
  public void setSWDCUS(String newvalue)
  {
    fieldSWDCUS.setString(newvalue);
  }

  /**
  * Get value of field SWDCUS as a String.
  */
  public String getSWDCUS()
  {
    return fieldSWDCUS.getString();
  }

  /**
  * Set field SWDCDM using a String value.
  */
  public void setSWDCDM(String newvalue)
  {
    fieldSWDCDM.setString(newvalue);
  }

  /**
  * Get value of field SWDCDM as a String.
  */
  public String getSWDCDM()
  {
    return fieldSWDCDM.getString();
  }

  /**
  * Set numeric field SWDCDM using a BigDecimal value.
  */
  public void setSWDCDM(BigDecimal newvalue)
  {
    fieldSWDCDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCDM()
  {
    return fieldSWDCDM.getBigDecimal();
  }

  /**
  * Set field SWDCDD using a String value.
  */
  public void setSWDCDD(String newvalue)
  {
    fieldSWDCDD.setString(newvalue);
  }

  /**
  * Get value of field SWDCDD as a String.
  */
  public String getSWDCDD()
  {
    return fieldSWDCDD.getString();
  }

  /**
  * Set numeric field SWDCDD using a BigDecimal value.
  */
  public void setSWDCDD(BigDecimal newvalue)
  {
    fieldSWDCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCDD()
  {
    return fieldSWDCDD.getBigDecimal();
  }

  /**
  * Set field SWDCDY using a String value.
  */
  public void setSWDCDY(String newvalue)
  {
    fieldSWDCDY.setString(newvalue);
  }

  /**
  * Get value of field SWDCDY as a String.
  */
  public String getSWDCDY()
  {
    return fieldSWDCDY.getString();
  }

  /**
  * Set numeric field SWDCDY using a BigDecimal value.
  */
  public void setSWDCDY(BigDecimal newvalue)
  {
    fieldSWDCDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCDY()
  {
    return fieldSWDCDY.getBigDecimal();
  }

  /**
  * Set field SWDCTM using a String value.
  */
  public void setSWDCTM(String newvalue)
  {
    fieldSWDCTM.setString(newvalue);
  }

  /**
  * Get value of field SWDCTM as a String.
  */
  public String getSWDCTM()
  {
    return fieldSWDCTM.getString();
  }

  /**
  * Set field SWDMUS using a String value.
  */
  public void setSWDMUS(String newvalue)
  {
    fieldSWDMUS.setString(newvalue);
  }

  /**
  * Get value of field SWDMUS as a String.
  */
  public String getSWDMUS()
  {
    return fieldSWDMUS.getString();
  }

  /**
  * Set field SWDMDM using a String value.
  */
  public void setSWDMDM(String newvalue)
  {
    fieldSWDMDM.setString(newvalue);
  }

  /**
  * Get value of field SWDMDM as a String.
  */
  public String getSWDMDM()
  {
    return fieldSWDMDM.getString();
  }

  /**
  * Set numeric field SWDMDM using a BigDecimal value.
  */
  public void setSWDMDM(BigDecimal newvalue)
  {
    fieldSWDMDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDMDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMDM()
  {
    return fieldSWDMDM.getBigDecimal();
  }

  /**
  * Set field SWDMDD using a String value.
  */
  public void setSWDMDD(String newvalue)
  {
    fieldSWDMDD.setString(newvalue);
  }

  /**
  * Get value of field SWDMDD as a String.
  */
  public String getSWDMDD()
  {
    return fieldSWDMDD.getString();
  }

  /**
  * Set numeric field SWDMDD using a BigDecimal value.
  */
  public void setSWDMDD(BigDecimal newvalue)
  {
    fieldSWDMDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDMDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMDD()
  {
    return fieldSWDMDD.getBigDecimal();
  }

  /**
  * Set field SWDMDY using a String value.
  */
  public void setSWDMDY(String newvalue)
  {
    fieldSWDMDY.setString(newvalue);
  }

  /**
  * Get value of field SWDMDY as a String.
  */
  public String getSWDMDY()
  {
    return fieldSWDMDY.getString();
  }

  /**
  * Set numeric field SWDMDY using a BigDecimal value.
  */
  public void setSWDMDY(BigDecimal newvalue)
  {
    fieldSWDMDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDMDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMDY()
  {
    return fieldSWDMDY.getBigDecimal();
  }

  /**
  * Set field SWDMTM using a String value.
  */
  public void setSWDMTM(String newvalue)
  {
    fieldSWDMTM.setString(newvalue);
  }

  /**
  * Get value of field SWDMTM as a String.
  */
  public String getSWDMTM()
  {
    return fieldSWDMTM.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
