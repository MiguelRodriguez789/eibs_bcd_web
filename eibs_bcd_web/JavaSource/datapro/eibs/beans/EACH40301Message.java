package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EACH40301 physical file definition.
* 
* File level identifier is 1130409173347.
* Record format level identifier is 3EDD7407448E1.
*/

public class EACH40301Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ACPCDE",
                                     "E01ACPNME",
                                     "E01ACPTYP",
                                     "E01ACPRDY",
                                     "E01ACPRDM",
                                     "E01ACPRDD",
                                     "E01ACPSEQ",
                                     "E01ACPSTS",
                                     "E01ACPTXT",
                                     "E01ACPRUS",
                                     "E01ACPRTS",
                                     "E01ACPPUS",
                                     "E01ACPPTS",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ACPCDE",
                                   "E01ACPNME",
                                   "E01ACPTYP",
                                   "E01ACPRDY",
                                   "E01ACPRDM",
                                   "E01ACPRDD",
                                   "E01ACPSEQ",
                                   "E01ACPSTS",
                                   "E01ACPTXT",
                                   "E01ACPRUS",
                                   "E01ACPRTS",
                                   "E01ACPPUS",
                                   "E01ACPPTS",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1130409173347";
  final static String rid = "3EDD7407448E1";
  final static String fmtname = "EACH40301";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ACPCDE = null;
  private CharacterField fieldE01ACPNME = null;
  private CharacterField fieldE01ACPTYP = null;
  private DecimalField fieldE01ACPRDY = null;
  private DecimalField fieldE01ACPRDM = null;
  private DecimalField fieldE01ACPRDD = null;
  private DecimalField fieldE01ACPSEQ = null;
  private CharacterField fieldE01ACPSTS = null;
  private CharacterField fieldE01ACPTXT = null;
  private CharacterField fieldE01ACPRUS = null;
  private CharacterField fieldE01ACPRTS = null;
  private CharacterField fieldE01ACPPUS = null;
  private CharacterField fieldE01ACPPTS = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EACH40301Message.
  */
  public EACH40301Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1224;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ACPCDE =
    new CharacterField(message, HEADERSIZE + 42, 10, "E01ACPCDE");
    fields[10] = fieldE01ACPNME =
    new CharacterField(message, HEADERSIZE + 52, 45, "E01ACPNME");
    fields[11] = fieldE01ACPTYP =
    new CharacterField(message, HEADERSIZE + 97, 1, "E01ACPTYP");
    fields[12] = fieldE01ACPRDY =
    new DecimalField(message, HEADERSIZE + 98, 5, 0, "E01ACPRDY");
    fields[13] = fieldE01ACPRDM =
    new DecimalField(message, HEADERSIZE + 103, 3, 0, "E01ACPRDM");
    fields[14] = fieldE01ACPRDD =
    new DecimalField(message, HEADERSIZE + 106, 3, 0, "E01ACPRDD");
    fields[15] = fieldE01ACPSEQ =
    new DecimalField(message, HEADERSIZE + 109, 6, 0, "E01ACPSEQ");
    fields[16] = fieldE01ACPSTS =
    new CharacterField(message, HEADERSIZE + 115, 3, "E01ACPSTS");
    fields[17] = fieldE01ACPTXT =
    new CharacterField(message, HEADERSIZE + 118, 1024, "E01ACPTXT");
    fields[18] = fieldE01ACPRUS =
    new CharacterField(message, HEADERSIZE + 1142, 10, "E01ACPRUS");
    fields[19] = fieldE01ACPRTS =
    new CharacterField(message, HEADERSIZE + 1152, 26, "E01ACPRTS");
    fields[20] = fieldE01ACPPUS =
    new CharacterField(message, HEADERSIZE + 1178, 10, "E01ACPPUS");
    fields[21] = fieldE01ACPPTS =
    new CharacterField(message, HEADERSIZE + 1188, 26, "E01ACPPTS");
    fields[22] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 1214, 1, "E01ACT");
    fields[23] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 1215, 8, 0, "E01NUMREC");
    fields[24] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 1223, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ACPCDE using a String value.
  */
  public void setE01ACPCDE(String newvalue)
  {
    fieldE01ACPCDE.setString(newvalue);
  }

  /**
  * Get value of field E01ACPCDE as a String.
  */
  public String getE01ACPCDE()
  {
    return fieldE01ACPCDE.getString();
  }

  /**
  * Set field E01ACPNME using a String value.
  */
  public void setE01ACPNME(String newvalue)
  {
    fieldE01ACPNME.setString(newvalue);
  }

  /**
  * Get value of field E01ACPNME as a String.
  */
  public String getE01ACPNME()
  {
    return fieldE01ACPNME.getString();
  }

  /**
  * Set field E01ACPTYP using a String value.
  */
  public void setE01ACPTYP(String newvalue)
  {
    fieldE01ACPTYP.setString(newvalue);
  }

  /**
  * Get value of field E01ACPTYP as a String.
  */
  public String getE01ACPTYP()
  {
    return fieldE01ACPTYP.getString();
  }

  /**
  * Set field E01ACPRDY using a String value.
  */
  public void setE01ACPRDY(String newvalue)
  {
    fieldE01ACPRDY.setString(newvalue);
  }

  /**
  * Get value of field E01ACPRDY as a String.
  */
  public String getE01ACPRDY()
  {
    return fieldE01ACPRDY.getString();
  }

  /**
  * Set numeric field E01ACPRDY using a BigDecimal value.
  */
  public void setE01ACPRDY(BigDecimal newvalue)
  {
    fieldE01ACPRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACPRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACPRDY()
  {
    return fieldE01ACPRDY.getBigDecimal();
  }

  /**
  * Set field E01ACPRDM using a String value.
  */
  public void setE01ACPRDM(String newvalue)
  {
    fieldE01ACPRDM.setString(newvalue);
  }

  /**
  * Get value of field E01ACPRDM as a String.
  */
  public String getE01ACPRDM()
  {
    return fieldE01ACPRDM.getString();
  }

  /**
  * Set numeric field E01ACPRDM using a BigDecimal value.
  */
  public void setE01ACPRDM(BigDecimal newvalue)
  {
    fieldE01ACPRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACPRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACPRDM()
  {
    return fieldE01ACPRDM.getBigDecimal();
  }

  /**
  * Set field E01ACPRDD using a String value.
  */
  public void setE01ACPRDD(String newvalue)
  {
    fieldE01ACPRDD.setString(newvalue);
  }

  /**
  * Get value of field E01ACPRDD as a String.
  */
  public String getE01ACPRDD()
  {
    return fieldE01ACPRDD.getString();
  }

  /**
  * Set numeric field E01ACPRDD using a BigDecimal value.
  */
  public void setE01ACPRDD(BigDecimal newvalue)
  {
    fieldE01ACPRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACPRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACPRDD()
  {
    return fieldE01ACPRDD.getBigDecimal();
  }

  /**
  * Set field E01ACPSEQ using a String value.
  */
  public void setE01ACPSEQ(String newvalue)
  {
    fieldE01ACPSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01ACPSEQ as a String.
  */
  public String getE01ACPSEQ()
  {
    return fieldE01ACPSEQ.getString();
  }

  /**
  * Set numeric field E01ACPSEQ using a BigDecimal value.
  */
  public void setE01ACPSEQ(BigDecimal newvalue)
  {
    fieldE01ACPSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ACPSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ACPSEQ()
  {
    return fieldE01ACPSEQ.getBigDecimal();
  }

  /**
  * Set field E01ACPSTS using a String value.
  */
  public void setE01ACPSTS(String newvalue)
  {
    fieldE01ACPSTS.setString(newvalue);
  }

  /**
  * Get value of field E01ACPSTS as a String.
  */
  public String getE01ACPSTS()
  {
    return fieldE01ACPSTS.getString();
  }

  /**
  * Set field E01ACPTXT using a String value.
  */
  public void setE01ACPTXT(String newvalue)
  {
    fieldE01ACPTXT.setString(newvalue);
  }

  /**
  * Get value of field E01ACPTXT as a String.
  */
  public String getE01ACPTXT()
  {
    return fieldE01ACPTXT.getString();
  }

  /**
  * Set field E01ACPRUS using a String value.
  */
  public void setE01ACPRUS(String newvalue)
  {
    fieldE01ACPRUS.setString(newvalue);
  }

  /**
  * Get value of field E01ACPRUS as a String.
  */
  public String getE01ACPRUS()
  {
    return fieldE01ACPRUS.getString();
  }

  /**
  * Set field E01ACPRTS using a String value.
  */
  public void setE01ACPRTS(String newvalue)
  {
    fieldE01ACPRTS.setString(newvalue);
  }

  /**
  * Get value of field E01ACPRTS as a String.
  */
  public String getE01ACPRTS()
  {
    return fieldE01ACPRTS.getString();
  }

  /**
  * Set field E01ACPPUS using a String value.
  */
  public void setE01ACPPUS(String newvalue)
  {
    fieldE01ACPPUS.setString(newvalue);
  }

  /**
  * Get value of field E01ACPPUS as a String.
  */
  public String getE01ACPPUS()
  {
    return fieldE01ACPPUS.getString();
  }

  /**
  * Set field E01ACPPTS using a String value.
  */
  public void setE01ACPPTS(String newvalue)
  {
    fieldE01ACPPTS.setString(newvalue);
  }

  /**
  * Get value of field E01ACPPTS as a String.
  */
  public String getE01ACPPTS()
  {
    return fieldE01ACPPTS.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
