package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EATM00203 physical file definition.
* 
* File level identifier is 1190102105424.
* Record format level identifier is 3CE34DF79C20D.
*/

public class EATM00203Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H03USERID",
                                     "H03PROGRM",
                                     "H03TIMSYS",
                                     "H03SCRCOD",
                                     "H03OPECOD",
                                     "H03FLGMAS",
                                     "H03FLGWK1",
                                     "H03FLGWK2",
                                     "H03FLGWK3",
                                     "E03MOVBNK",
                                     "E03MOVCCY",
                                     "E03MOVTID",
                                     "E03MOVTYY",
                                     "E03MOVTMM",
                                     "E03MOVTDD",
                                     "E03TOTTIM",
                                     "E03TOTARQ",
                                     "E03TOTAPR",
                                     "E03TOTMOV",
                                     "E03NUMREC",
                                     "E03INDOPE"
                                   };
  final static String tnames[] = {
                                   "H03USERID",
                                   "H03PROGRM",
                                   "H03TIMSYS",
                                   "H03SCRCOD",
                                   "H03OPECOD",
                                   "H03FLGMAS",
                                   "H03FLGWK1",
                                   "H03FLGWK2",
                                   "H03FLGWK3",
                                   "E03MOVBNK",
                                   "E03MOVCCY",
                                   "E03MOVTID",
                                   "E03MOVTYY",
                                   "E03MOVTMM",
                                   "E03MOVTDD",
                                   "E03TOTTIM",
                                   "E03TOTARQ",
                                   "E03TOTAPR",
                                   "E03TOTMOV",
                                   "E03NUMREC",
                                   "E03INDOPE"
                                 };
  final static String fid = "1190102105424";
  final static String rid = "3CE34DF79C20D";
  final static String fmtname = "EATM00203";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH03USERID = null;
  private CharacterField fieldH03PROGRM = null;
  private CharacterField fieldH03TIMSYS = null;
  private CharacterField fieldH03SCRCOD = null;
  private CharacterField fieldH03OPECOD = null;
  private CharacterField fieldH03FLGMAS = null;
  private CharacterField fieldH03FLGWK1 = null;
  private CharacterField fieldH03FLGWK2 = null;
  private CharacterField fieldH03FLGWK3 = null;
  private CharacterField fieldE03MOVBNK = null;
  private CharacterField fieldE03MOVCCY = null;
  private CharacterField fieldE03MOVTID = null;
  private DecimalField fieldE03MOVTYY = null;
  private DecimalField fieldE03MOVTMM = null;
  private DecimalField fieldE03MOVTDD = null;
  private DecimalField fieldE03TOTTIM = null;
  private DecimalField fieldE03TOTARQ = null;
  private DecimalField fieldE03TOTAPR = null;
  private DecimalField fieldE03TOTMOV = null;
  private DecimalField fieldE03NUMREC = null;
  private CharacterField fieldE03INDOPE = null;

  /**
  * Constructor for EATM00203Message.
  */
  public EATM00203Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 161;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH03USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H03USERID");
    fields[1] = fieldH03PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H03PROGRM");
    fields[2] = fieldH03TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H03TIMSYS");
    fields[3] = fieldH03SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H03SCRCOD");
    fields[4] = fieldH03OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H03OPECOD");
    fields[5] = fieldH03FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H03FLGMAS");
    fields[6] = fieldH03FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H03FLGWK1");
    fields[7] = fieldH03FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H03FLGWK2");
    fields[8] = fieldH03FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H03FLGWK3");
    fields[9] = fieldE03MOVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E03MOVBNK");
    fields[10] = fieldE03MOVCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E03MOVCCY");
    fields[11] = fieldE03MOVTID =
    new CharacterField(message, HEADERSIZE + 47, 10, "E03MOVTID");
    fields[12] = fieldE03MOVTYY =
    new DecimalField(message, HEADERSIZE + 57, 5, 0, "E03MOVTYY");
    fields[13] = fieldE03MOVTMM =
    new DecimalField(message, HEADERSIZE + 62, 3, 0, "E03MOVTMM");
    fields[14] = fieldE03MOVTDD =
    new DecimalField(message, HEADERSIZE + 65, 3, 0, "E03MOVTDD");
    fields[15] = fieldE03TOTTIM =
    new DecimalField(message, HEADERSIZE + 68, 21, 2, "E03TOTTIM");
    fields[16] = fieldE03TOTARQ =
    new DecimalField(message, HEADERSIZE + 89, 21, 2, "E03TOTARQ");
    fields[17] = fieldE03TOTAPR =
    new DecimalField(message, HEADERSIZE + 110, 21, 2, "E03TOTAPR");
    fields[18] = fieldE03TOTMOV =
    new DecimalField(message, HEADERSIZE + 131, 21, 2, "E03TOTMOV");
    fields[19] = fieldE03NUMREC =
    new DecimalField(message, HEADERSIZE + 152, 8, 0, "E03NUMREC");
    fields[20] = fieldE03INDOPE =
    new CharacterField(message, HEADERSIZE + 160, 1, "E03INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H03USERID using a String value.
  */
  public void setH03USERID(String newvalue)
  {
    fieldH03USERID.setString(newvalue);
  }

  /**
  * Get value of field H03USERID as a String.
  */
  public String getH03USERID()
  {
    return fieldH03USERID.getString();
  }

  /**
  * Set field H03PROGRM using a String value.
  */
  public void setH03PROGRM(String newvalue)
  {
    fieldH03PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H03PROGRM as a String.
  */
  public String getH03PROGRM()
  {
    return fieldH03PROGRM.getString();
  }

  /**
  * Set field H03TIMSYS using a String value.
  */
  public void setH03TIMSYS(String newvalue)
  {
    fieldH03TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H03TIMSYS as a String.
  */
  public String getH03TIMSYS()
  {
    return fieldH03TIMSYS.getString();
  }

  /**
  * Set field H03SCRCOD using a String value.
  */
  public void setH03SCRCOD(String newvalue)
  {
    fieldH03SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H03SCRCOD as a String.
  */
  public String getH03SCRCOD()
  {
    return fieldH03SCRCOD.getString();
  }

  /**
  * Set field H03OPECOD using a String value.
  */
  public void setH03OPECOD(String newvalue)
  {
    fieldH03OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H03OPECOD as a String.
  */
  public String getH03OPECOD()
  {
    return fieldH03OPECOD.getString();
  }

  /**
  * Set field H03FLGMAS using a String value.
  */
  public void setH03FLGMAS(String newvalue)
  {
    fieldH03FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H03FLGMAS as a String.
  */
  public String getH03FLGMAS()
  {
    return fieldH03FLGMAS.getString();
  }

  /**
  * Set field H03FLGWK1 using a String value.
  */
  public void setH03FLGWK1(String newvalue)
  {
    fieldH03FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK1 as a String.
  */
  public String getH03FLGWK1()
  {
    return fieldH03FLGWK1.getString();
  }

  /**
  * Set field H03FLGWK2 using a String value.
  */
  public void setH03FLGWK2(String newvalue)
  {
    fieldH03FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK2 as a String.
  */
  public String getH03FLGWK2()
  {
    return fieldH03FLGWK2.getString();
  }

  /**
  * Set field H03FLGWK3 using a String value.
  */
  public void setH03FLGWK3(String newvalue)
  {
    fieldH03FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H03FLGWK3 as a String.
  */
  public String getH03FLGWK3()
  {
    return fieldH03FLGWK3.getString();
  }

  /**
  * Set field E03MOVBNK using a String value.
  */
  public void setE03MOVBNK(String newvalue)
  {
    fieldE03MOVBNK.setString(newvalue);
  }

  /**
  * Get value of field E03MOVBNK as a String.
  */
  public String getE03MOVBNK()
  {
    return fieldE03MOVBNK.getString();
  }

  /**
  * Set field E03MOVCCY using a String value.
  */
  public void setE03MOVCCY(String newvalue)
  {
    fieldE03MOVCCY.setString(newvalue);
  }

  /**
  * Get value of field E03MOVCCY as a String.
  */
  public String getE03MOVCCY()
  {
    return fieldE03MOVCCY.getString();
  }

  /**
  * Set field E03MOVTID using a String value.
  */
  public void setE03MOVTID(String newvalue)
  {
    fieldE03MOVTID.setString(newvalue);
  }

  /**
  * Get value of field E03MOVTID as a String.
  */
  public String getE03MOVTID()
  {
    return fieldE03MOVTID.getString();
  }

  /**
  * Set field E03MOVTYY using a String value.
  */
  public void setE03MOVTYY(String newvalue)
  {
    fieldE03MOVTYY.setString(newvalue);
  }

  /**
  * Get value of field E03MOVTYY as a String.
  */
  public String getE03MOVTYY()
  {
    return fieldE03MOVTYY.getString();
  }

  /**
  * Set numeric field E03MOVTYY using a BigDecimal value.
  */
  public void setE03MOVTYY(BigDecimal newvalue)
  {
    fieldE03MOVTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MOVTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MOVTYY()
  {
    return fieldE03MOVTYY.getBigDecimal();
  }

  /**
  * Set field E03MOVTMM using a String value.
  */
  public void setE03MOVTMM(String newvalue)
  {
    fieldE03MOVTMM.setString(newvalue);
  }

  /**
  * Get value of field E03MOVTMM as a String.
  */
  public String getE03MOVTMM()
  {
    return fieldE03MOVTMM.getString();
  }

  /**
  * Set numeric field E03MOVTMM using a BigDecimal value.
  */
  public void setE03MOVTMM(BigDecimal newvalue)
  {
    fieldE03MOVTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MOVTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MOVTMM()
  {
    return fieldE03MOVTMM.getBigDecimal();
  }

  /**
  * Set field E03MOVTDD using a String value.
  */
  public void setE03MOVTDD(String newvalue)
  {
    fieldE03MOVTDD.setString(newvalue);
  }

  /**
  * Get value of field E03MOVTDD as a String.
  */
  public String getE03MOVTDD()
  {
    return fieldE03MOVTDD.getString();
  }

  /**
  * Set numeric field E03MOVTDD using a BigDecimal value.
  */
  public void setE03MOVTDD(BigDecimal newvalue)
  {
    fieldE03MOVTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03MOVTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03MOVTDD()
  {
    return fieldE03MOVTDD.getBigDecimal();
  }

  /**
  * Set field E03TOTTIM using a String value.
  */
  public void setE03TOTTIM(String newvalue)
  {
    fieldE03TOTTIM.setString(newvalue);
  }

  /**
  * Get value of field E03TOTTIM as a String.
  */
  public String getE03TOTTIM()
  {
    return fieldE03TOTTIM.getString();
  }

  /**
  * Set numeric field E03TOTTIM using a BigDecimal value.
  */
  public void setE03TOTTIM(BigDecimal newvalue)
  {
    fieldE03TOTTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTTIM()
  {
    return fieldE03TOTTIM.getBigDecimal();
  }

  /**
  * Set field E03TOTARQ using a String value.
  */
  public void setE03TOTARQ(String newvalue)
  {
    fieldE03TOTARQ.setString(newvalue);
  }

  /**
  * Get value of field E03TOTARQ as a String.
  */
  public String getE03TOTARQ()
  {
    return fieldE03TOTARQ.getString();
  }

  /**
  * Set numeric field E03TOTARQ using a BigDecimal value.
  */
  public void setE03TOTARQ(BigDecimal newvalue)
  {
    fieldE03TOTARQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTARQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTARQ()
  {
    return fieldE03TOTARQ.getBigDecimal();
  }

  /**
  * Set field E03TOTAPR using a String value.
  */
  public void setE03TOTAPR(String newvalue)
  {
    fieldE03TOTAPR.setString(newvalue);
  }

  /**
  * Get value of field E03TOTAPR as a String.
  */
  public String getE03TOTAPR()
  {
    return fieldE03TOTAPR.getString();
  }

  /**
  * Set numeric field E03TOTAPR using a BigDecimal value.
  */
  public void setE03TOTAPR(BigDecimal newvalue)
  {
    fieldE03TOTAPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTAPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTAPR()
  {
    return fieldE03TOTAPR.getBigDecimal();
  }

  /**
  * Set field E03TOTMOV using a String value.
  */
  public void setE03TOTMOV(String newvalue)
  {
    fieldE03TOTMOV.setString(newvalue);
  }

  /**
  * Get value of field E03TOTMOV as a String.
  */
  public String getE03TOTMOV()
  {
    return fieldE03TOTMOV.getString();
  }

  /**
  * Set numeric field E03TOTMOV using a BigDecimal value.
  */
  public void setE03TOTMOV(BigDecimal newvalue)
  {
    fieldE03TOTMOV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03TOTMOV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03TOTMOV()
  {
    return fieldE03TOTMOV.getBigDecimal();
  }

  /**
  * Set field E03NUMREC using a String value.
  */
  public void setE03NUMREC(String newvalue)
  {
    fieldE03NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E03NUMREC as a String.
  */
  public String getE03NUMREC()
  {
    return fieldE03NUMREC.getString();
  }

  /**
  * Set numeric field E03NUMREC using a BigDecimal value.
  */
  public void setE03NUMREC(BigDecimal newvalue)
  {
    fieldE03NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E03NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE03NUMREC()
  {
    return fieldE03NUMREC.getBigDecimal();
  }

  /**
  * Set field E03INDOPE using a String value.
  */
  public void setE03INDOPE(String newvalue)
  {
    fieldE03INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E03INDOPE as a String.
  */
  public String getE03INDOPE()
  {
    return fieldE03INDOPE.getString();
  }

}
