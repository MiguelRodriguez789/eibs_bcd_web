package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV116801 physical file definition.
* 
* File level identifier is 1170620160851.
* Record format level identifier is 41768BAC1B862.
*/

public class EPV116801Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PDFCUN",
                                     "E01PDFNUM",
                                     "E01PDFSEQ",
                                     "E01PDFACC",
                                     "E01PDFCDE",
                                     "E01PDFNME",
                                     "E01PDFVLR",
                                     "E01PDFTYP",
                                     "E01NUMREC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PDFCUN",
                                   "E01PDFNUM",
                                   "E01PDFSEQ",
                                   "E01PDFACC",
                                   "E01PDFCDE",
                                   "E01PDFNME",
                                   "E01PDFVLR",
                                   "E01PDFTYP",
                                   "E01NUMREC"
                                 };
  final static String fid = "1170620160851";
  final static String rid = "41768BAC1B862";
  final static String fmtname = "EPV116801";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01PDFCUN = null;
  private DecimalField fieldE01PDFNUM = null;
  private DecimalField fieldE01PDFSEQ = null;
  private DecimalField fieldE01PDFACC = null;
  private CharacterField fieldE01PDFCDE = null;
  private CharacterField fieldE01PDFNME = null;
  private DecimalField fieldE01PDFVLR = null;
  private CharacterField fieldE01PDFTYP = null;
  private DecimalField fieldE01NUMREC = null;

  /**
  * Constructor for EPV116801Message.
  */
  public EPV116801Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 154;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PDFCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01PDFCUN");
    fields[10] = fieldE01PDFNUM =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "E01PDFNUM");
    fields[11] = fieldE01PDFSEQ =
    new DecimalField(message, HEADERSIZE + 65, 3, 0, "E01PDFSEQ");
    fields[12] = fieldE01PDFACC =
    new DecimalField(message, HEADERSIZE + 68, 13, 0, "E01PDFACC");
    fields[13] = fieldE01PDFCDE =
    new CharacterField(message, HEADERSIZE + 81, 4, "E01PDFCDE");
    fields[14] = fieldE01PDFNME =
    new CharacterField(message, HEADERSIZE + 85, 45, "E01PDFNME");
    fields[15] = fieldE01PDFVLR =
    new DecimalField(message, HEADERSIZE + 130, 17, 2, "E01PDFVLR");
    fields[16] = fieldE01PDFTYP =
    new CharacterField(message, HEADERSIZE + 147, 1, "E01PDFTYP");
    fields[17] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 148, 6, 0, "E01NUMREC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PDFCUN using a String value.
  */
  public void setE01PDFCUN(String newvalue)
  {
    fieldE01PDFCUN.setString(newvalue);
  }

  /**
  * Get value of field E01PDFCUN as a String.
  */
  public String getE01PDFCUN()
  {
    return fieldE01PDFCUN.getString();
  }

  /**
  * Set numeric field E01PDFCUN using a BigDecimal value.
  */
  public void setE01PDFCUN(BigDecimal newvalue)
  {
    fieldE01PDFCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDFCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDFCUN()
  {
    return fieldE01PDFCUN.getBigDecimal();
  }

  /**
  * Set field E01PDFNUM using a String value.
  */
  public void setE01PDFNUM(String newvalue)
  {
    fieldE01PDFNUM.setString(newvalue);
  }

  /**
  * Get value of field E01PDFNUM as a String.
  */
  public String getE01PDFNUM()
  {
    return fieldE01PDFNUM.getString();
  }

  /**
  * Set numeric field E01PDFNUM using a BigDecimal value.
  */
  public void setE01PDFNUM(BigDecimal newvalue)
  {
    fieldE01PDFNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDFNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDFNUM()
  {
    return fieldE01PDFNUM.getBigDecimal();
  }

  /**
  * Set field E01PDFSEQ using a String value.
  */
  public void setE01PDFSEQ(String newvalue)
  {
    fieldE01PDFSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01PDFSEQ as a String.
  */
  public String getE01PDFSEQ()
  {
    return fieldE01PDFSEQ.getString();
  }

  /**
  * Set numeric field E01PDFSEQ using a BigDecimal value.
  */
  public void setE01PDFSEQ(BigDecimal newvalue)
  {
    fieldE01PDFSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDFSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDFSEQ()
  {
    return fieldE01PDFSEQ.getBigDecimal();
  }

  /**
  * Set field E01PDFACC using a String value.
  */
  public void setE01PDFACC(String newvalue)
  {
    fieldE01PDFACC.setString(newvalue);
  }

  /**
  * Get value of field E01PDFACC as a String.
  */
  public String getE01PDFACC()
  {
    return fieldE01PDFACC.getString();
  }

  /**
  * Set numeric field E01PDFACC using a BigDecimal value.
  */
  public void setE01PDFACC(BigDecimal newvalue)
  {
    fieldE01PDFACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDFACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDFACC()
  {
    return fieldE01PDFACC.getBigDecimal();
  }

  /**
  * Set field E01PDFCDE using a String value.
  */
  public void setE01PDFCDE(String newvalue)
  {
    fieldE01PDFCDE.setString(newvalue);
  }

  /**
  * Get value of field E01PDFCDE as a String.
  */
  public String getE01PDFCDE()
  {
    return fieldE01PDFCDE.getString();
  }

  /**
  * Set field E01PDFNME using a String value.
  */
  public void setE01PDFNME(String newvalue)
  {
    fieldE01PDFNME.setString(newvalue);
  }

  /**
  * Get value of field E01PDFNME as a String.
  */
  public String getE01PDFNME()
  {
    return fieldE01PDFNME.getString();
  }

  /**
  * Set field E01PDFVLR using a String value.
  */
  public void setE01PDFVLR(String newvalue)
  {
    fieldE01PDFVLR.setString(newvalue);
  }

  /**
  * Get value of field E01PDFVLR as a String.
  */
  public String getE01PDFVLR()
  {
    return fieldE01PDFVLR.getString();
  }

  /**
  * Set numeric field E01PDFVLR using a BigDecimal value.
  */
  public void setE01PDFVLR(BigDecimal newvalue)
  {
    fieldE01PDFVLR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PDFVLR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PDFVLR()
  {
    return fieldE01PDFVLR.getBigDecimal();
  }

  /**
  * Set field E01PDFTYP using a String value.
  */
  public void setE01PDFTYP(String newvalue)
  {
    fieldE01PDFTYP.setString(newvalue);
  }

  /**
  * Get value of field E01PDFTYP as a String.
  */
  public String getE01PDFTYP()
  {
    return fieldE01PDFTYP.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

}
