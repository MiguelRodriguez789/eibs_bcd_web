package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWS001110 physical file definition.
* 
* File level identifier is 1130611113510.
* Record format level identifier is 3F0970ABB57A5.
*/

public class EWS001110Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H10USR",
                                     "H10PGM",
                                     "H10TIM",
                                     "H10SCR",
                                     "H10OPE",
                                     "H10MAS",
                                     "H10WK1",
                                     "H10WK2",
                                     "H10WK3",
                                     "E10SELTID",
                                     "E10SELPID",
                                     "E10SELIDN",
                                     "E10SELLGT"
                                   };
  final static String tnames[] = {
                                   "H10USR",
                                   "H10PGM",
                                   "H10TIM",
                                   "H10SCR",
                                   "H10OPE",
                                   "H10MAS",
                                   "H10WK1",
                                   "H10WK2",
                                   "H10WK3",
                                   "E10SELTID",
                                   "E10SELPID",
                                   "E10SELIDN",
                                   "E10SELLGT"
                                 };
  final static String fid = "1130611113510";
  final static String rid = "3F0970ABB57A5";
  final static String fmtname = "EWS001110";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH10USR = null;
  private CharacterField fieldH10PGM = null;
  private CharacterField fieldH10TIM = null;
  private CharacterField fieldH10SCR = null;
  private CharacterField fieldH10OPE = null;
  private CharacterField fieldH10MAS = null;
  private CharacterField fieldH10WK1 = null;
  private CharacterField fieldH10WK2 = null;
  private CharacterField fieldH10WK3 = null;
  private CharacterField fieldE10SELTID = null;
  private CharacterField fieldE10SELPID = null;
  private CharacterField fieldE10SELIDN = null;
  private CharacterField fieldE10SELLGT = null;

  /**
  * Constructor for EWS001110Message.
  */
  public EWS001110Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 76;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH10USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H10USR");
    fields[1] = fieldH10PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H10PGM");
    fields[2] = fieldH10TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H10TIM");
    fields[3] = fieldH10SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H10SCR");
    fields[4] = fieldH10OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H10OPE");
    fields[5] = fieldH10MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H10MAS");
    fields[6] = fieldH10WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H10WK1");
    fields[7] = fieldH10WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H10WK2");
    fields[8] = fieldH10WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H10WK3");
    fields[9] = fieldE10SELTID =
    new CharacterField(message, HEADERSIZE + 42, 4, "E10SELTID");
    fields[10] = fieldE10SELPID =
    new CharacterField(message, HEADERSIZE + 46, 4, "E10SELPID");
    fields[11] = fieldE10SELIDN =
    new CharacterField(message, HEADERSIZE + 50, 25, "E10SELIDN");
    fields[12] = fieldE10SELLGT =
    new CharacterField(message, HEADERSIZE + 75, 1, "E10SELLGT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H10USR using a String value.
  */
  public void setH10USR(String newvalue)
  {
    fieldH10USR.setString(newvalue);
  }

  /**
  * Get value of field H10USR as a String.
  */
  public String getH10USR()
  {
    return fieldH10USR.getString();
  }

  /**
  * Set field H10PGM using a String value.
  */
  public void setH10PGM(String newvalue)
  {
    fieldH10PGM.setString(newvalue);
  }

  /**
  * Get value of field H10PGM as a String.
  */
  public String getH10PGM()
  {
    return fieldH10PGM.getString();
  }

  /**
  * Set field H10TIM using a String value.
  */
  public void setH10TIM(String newvalue)
  {
    fieldH10TIM.setString(newvalue);
  }

  /**
  * Get value of field H10TIM as a String.
  */
  public String getH10TIM()
  {
    return fieldH10TIM.getString();
  }

  /**
  * Set field H10SCR using a String value.
  */
  public void setH10SCR(String newvalue)
  {
    fieldH10SCR.setString(newvalue);
  }

  /**
  * Get value of field H10SCR as a String.
  */
  public String getH10SCR()
  {
    return fieldH10SCR.getString();
  }

  /**
  * Set field H10OPE using a String value.
  */
  public void setH10OPE(String newvalue)
  {
    fieldH10OPE.setString(newvalue);
  }

  /**
  * Get value of field H10OPE as a String.
  */
  public String getH10OPE()
  {
    return fieldH10OPE.getString();
  }

  /**
  * Set field H10MAS using a String value.
  */
  public void setH10MAS(String newvalue)
  {
    fieldH10MAS.setString(newvalue);
  }

  /**
  * Get value of field H10MAS as a String.
  */
  public String getH10MAS()
  {
    return fieldH10MAS.getString();
  }

  /**
  * Set field H10WK1 using a String value.
  */
  public void setH10WK1(String newvalue)
  {
    fieldH10WK1.setString(newvalue);
  }

  /**
  * Get value of field H10WK1 as a String.
  */
  public String getH10WK1()
  {
    return fieldH10WK1.getString();
  }

  /**
  * Set field H10WK2 using a String value.
  */
  public void setH10WK2(String newvalue)
  {
    fieldH10WK2.setString(newvalue);
  }

  /**
  * Get value of field H10WK2 as a String.
  */
  public String getH10WK2()
  {
    return fieldH10WK2.getString();
  }

  /**
  * Set field H10WK3 using a String value.
  */
  public void setH10WK3(String newvalue)
  {
    fieldH10WK3.setString(newvalue);
  }

  /**
  * Get value of field H10WK3 as a String.
  */
  public String getH10WK3()
  {
    return fieldH10WK3.getString();
  }

  /**
  * Set field E10SELTID using a String value.
  */
  public void setE10SELTID(String newvalue)
  {
    fieldE10SELTID.setString(newvalue);
  }

  /**
  * Get value of field E10SELTID as a String.
  */
  public String getE10SELTID()
  {
    return fieldE10SELTID.getString();
  }

  /**
  * Set field E10SELPID using a String value.
  */
  public void setE10SELPID(String newvalue)
  {
    fieldE10SELPID.setString(newvalue);
  }

  /**
  * Get value of field E10SELPID as a String.
  */
  public String getE10SELPID()
  {
    return fieldE10SELPID.getString();
  }

  /**
  * Set field E10SELIDN using a String value.
  */
  public void setE10SELIDN(String newvalue)
  {
    fieldE10SELIDN.setString(newvalue);
  }

  /**
  * Get value of field E10SELIDN as a String.
  */
  public String getE10SELIDN()
  {
    return fieldE10SELIDN.getString();
  }

  /**
  * Set field E10SELLGT using a String value.
  */
  public void setE10SELLGT(String newvalue)
  {
    fieldE10SELLGT.setString(newvalue);
  }

  /**
  * Get value of field E10SELLGT as a String.
  */
  public String getE10SELLGT()
  {
    return fieldE10SELLGT.getString();
  }

}
