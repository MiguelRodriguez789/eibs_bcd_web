package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECB001001 physical file definition.
* 
* File level identifier is 1180518164150.
* Record format level identifier is 4DE224D75AF8F.
*/

public class ECB001001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CBZCDE",
                                     "E01CBZDSC",
                                     "E01CBZDMI",
                                     "E01CBZDMF",
                                     "E01CBZSTS",
                                     "E01CBZTYP",
                                     "E01CBZFLG",
                                     "E01CBZJUD",
                                     "E01CBZFL1",
                                     "E01CBZFL2"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CBZCDE",
                                   "E01CBZDSC",
                                   "E01CBZDMI",
                                   "E01CBZDMF",
                                   "E01CBZSTS",
                                   "E01CBZTYP",
                                   "E01CBZFLG",
                                   "E01CBZJUD",
                                   "E01CBZFL1",
                                   "E01CBZFL2"
                                 };
  final static String fid = "1180518164150";
  final static String rid = "4DE224D75AF8F";
  final static String fmtname = "ECB001001";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CBZCDE = null;
  private CharacterField fieldE01CBZDSC = null;
  private DecimalField fieldE01CBZDMI = null;
  private DecimalField fieldE01CBZDMF = null;
  private CharacterField fieldE01CBZSTS = null;
  private CharacterField fieldE01CBZTYP = null;
  private CharacterField fieldE01CBZFLG = null;
  private CharacterField fieldE01CBZJUD = null;
  private CharacterField fieldE01CBZFL1 = null;
  private CharacterField fieldE01CBZFL2 = null;

  /**
  * Constructor for ECB001001Message.
  */
  public ECB001001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 124;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CBZCDE =
    new CharacterField(message, HEADERSIZE + 42, 4, "E01CBZCDE");
    fields[10] = fieldE01CBZDSC =
    new CharacterField(message, HEADERSIZE + 46, 60, "E01CBZDSC");
    fields[11] = fieldE01CBZDMI =
    new DecimalField(message, HEADERSIZE + 106, 6, 0, "E01CBZDMI");
    fields[12] = fieldE01CBZDMF =
    new DecimalField(message, HEADERSIZE + 112, 6, 0, "E01CBZDMF");
    fields[13] = fieldE01CBZSTS =
    new CharacterField(message, HEADERSIZE + 118, 1, "E01CBZSTS");
    fields[14] = fieldE01CBZTYP =
    new CharacterField(message, HEADERSIZE + 119, 1, "E01CBZTYP");
    fields[15] = fieldE01CBZFLG =
    new CharacterField(message, HEADERSIZE + 120, 1, "E01CBZFLG");
    fields[16] = fieldE01CBZJUD =
    new CharacterField(message, HEADERSIZE + 121, 1, "E01CBZJUD");
    fields[17] = fieldE01CBZFL1 =
    new CharacterField(message, HEADERSIZE + 122, 1, "E01CBZFL1");
    fields[18] = fieldE01CBZFL2 =
    new CharacterField(message, HEADERSIZE + 123, 1, "E01CBZFL2");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CBZCDE using a String value.
  */
  public void setE01CBZCDE(String newvalue)
  {
    fieldE01CBZCDE.setString(newvalue);
  }

  /**
  * Get value of field E01CBZCDE as a String.
  */
  public String getE01CBZCDE()
  {
    return fieldE01CBZCDE.getString();
  }

  /**
  * Set field E01CBZDSC using a String value.
  */
  public void setE01CBZDSC(String newvalue)
  {
    fieldE01CBZDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CBZDSC as a String.
  */
  public String getE01CBZDSC()
  {
    return fieldE01CBZDSC.getString();
  }

  /**
  * Set field E01CBZDMI using a String value.
  */
  public void setE01CBZDMI(String newvalue)
  {
    fieldE01CBZDMI.setString(newvalue);
  }

  /**
  * Get value of field E01CBZDMI as a String.
  */
  public String getE01CBZDMI()
  {
    return fieldE01CBZDMI.getString();
  }

  /**
  * Set numeric field E01CBZDMI using a BigDecimal value.
  */
  public void setE01CBZDMI(BigDecimal newvalue)
  {
    fieldE01CBZDMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CBZDMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CBZDMI()
  {
    return fieldE01CBZDMI.getBigDecimal();
  }

  /**
  * Set field E01CBZDMF using a String value.
  */
  public void setE01CBZDMF(String newvalue)
  {
    fieldE01CBZDMF.setString(newvalue);
  }

  /**
  * Get value of field E01CBZDMF as a String.
  */
  public String getE01CBZDMF()
  {
    return fieldE01CBZDMF.getString();
  }

  /**
  * Set numeric field E01CBZDMF using a BigDecimal value.
  */
  public void setE01CBZDMF(BigDecimal newvalue)
  {
    fieldE01CBZDMF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CBZDMF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CBZDMF()
  {
    return fieldE01CBZDMF.getBigDecimal();
  }

  /**
  * Set field E01CBZSTS using a String value.
  */
  public void setE01CBZSTS(String newvalue)
  {
    fieldE01CBZSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CBZSTS as a String.
  */
  public String getE01CBZSTS()
  {
    return fieldE01CBZSTS.getString();
  }

  /**
  * Set field E01CBZTYP using a String value.
  */
  public void setE01CBZTYP(String newvalue)
  {
    fieldE01CBZTYP.setString(newvalue);
  }

  /**
  * Get value of field E01CBZTYP as a String.
  */
  public String getE01CBZTYP()
  {
    return fieldE01CBZTYP.getString();
  }

  /**
  * Set field E01CBZFLG using a String value.
  */
  public void setE01CBZFLG(String newvalue)
  {
    fieldE01CBZFLG.setString(newvalue);
  }

  /**
  * Get value of field E01CBZFLG as a String.
  */
  public String getE01CBZFLG()
  {
    return fieldE01CBZFLG.getString();
  }

  /**
  * Set field E01CBZJUD using a String value.
  */
  public void setE01CBZJUD(String newvalue)
  {
    fieldE01CBZJUD.setString(newvalue);
  }

  /**
  * Get value of field E01CBZJUD as a String.
  */
  public String getE01CBZJUD()
  {
    return fieldE01CBZJUD.getString();
  }

  /**
  * Set field E01CBZFL1 using a String value.
  */
  public void setE01CBZFL1(String newvalue)
  {
    fieldE01CBZFL1.setString(newvalue);
  }

  /**
  * Get value of field E01CBZFL1 as a String.
  */
  public String getE01CBZFL1()
  {
    return fieldE01CBZFL1.getString();
  }

  /**
  * Set field E01CBZFL2 using a String value.
  */
  public void setE01CBZFL2(String newvalue)
  {
    fieldE01CBZFL2.setString(newvalue);
  }

  /**
  * Get value of field E01CBZFL2 as a String.
  */
  public String getE01CBZFL2()
  {
    return fieldE01CBZFL2.getString();
  }

}
