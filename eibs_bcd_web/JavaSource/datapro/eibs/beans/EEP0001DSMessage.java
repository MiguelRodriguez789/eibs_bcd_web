package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EEP0001DS physical file definition.
* 
* File level identifier is 1130611113118.
* Record format level identifier is 456FEF94F478D.
*/

public class EEP0001DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EEP1USER",
                                     "EEP1COL",
                                     "EEP1ROW",
                                     "EEP1ORI",
                                     "EEP1TOE",
                                     "EEP1CCE",
                                     "EEP1SBJ",
                                     "EEP1PWD",
                                     "EEP1BM1",
                                     "EEP1BM2",
                                     "EEP1BM3",
                                     "EEP1BM4",
                                     "EEP1STS",
                                     "EEP1TIM",
                                     "EEP1DSC",
                                     "EEP1STP",
                                     "EEP1TPM",
                                     "EEP1PSZ"
                                   };
  final static String tnames[] = {
                                   "EEP1USER",
                                   "EEP1COL",
                                   "EEP1ROW",
                                   "EEP1ORI",
                                   "EEP1TOE",
                                   "EEP1CCE",
                                   "EEP1SBJ",
                                   "EEP1PWD",
                                   "EEP1BM1",
                                   "EEP1BM2",
                                   "EEP1BM3",
                                   "EEP1BM4",
                                   "EEP1STS",
                                   "EEP1TIM",
                                   "EEP1DSC",
                                   "EEP1STP",
                                   "EEP1TPM",
                                   "EEP1PSZ"
                                 };
  final static String fid = "1130611113118";
  final static String rid = "456FEF94F478D";
  final static String fmtname = "EEP0001DS";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEEP1USER = null;
  private DecimalField fieldEEP1COL = null;
  private DecimalField fieldEEP1ROW = null;
  private CharacterField fieldEEP1ORI = null;
  private CharacterField fieldEEP1TOE = null;
  private CharacterField fieldEEP1CCE = null;
  private CharacterField fieldEEP1SBJ = null;
  private CharacterField fieldEEP1PWD = null;
  private CharacterField fieldEEP1BM1 = null;
  private CharacterField fieldEEP1BM2 = null;
  private CharacterField fieldEEP1BM3 = null;
  private CharacterField fieldEEP1BM4 = null;
  private CharacterField fieldEEP1STS = null;
  private DecimalField fieldEEP1TIM = null;
  private CharacterField fieldEEP1DSC = null;
  private CharacterField fieldEEP1STP = null;
  private CharacterField fieldEEP1TPM = null;
  private CharacterField fieldEEP1PSZ = null;

  /**
  * Constructor for EEP0001DSMessage.
  */
  public EEP0001DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 1329;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEEP1USER =
    new CharacterField(message, HEADERSIZE + 0, 10, "EEP1USER");
    fields[1] = fieldEEP1COL =
    new DecimalField(message, HEADERSIZE + 10, 5, 0, "EEP1COL");
    fields[2] = fieldEEP1ROW =
    new DecimalField(message, HEADERSIZE + 15, 5, 0, "EEP1ROW");
    fields[3] = fieldEEP1ORI =
    new CharacterField(message, HEADERSIZE + 20, 1, "EEP1ORI");
    fields[4] = fieldEEP1TOE =
    new CharacterField(message, HEADERSIZE + 21, 255, "EEP1TOE");
    fields[5] = fieldEEP1CCE =
    new CharacterField(message, HEADERSIZE + 276, 255, "EEP1CCE");
    fields[6] = fieldEEP1SBJ =
    new CharacterField(message, HEADERSIZE + 531, 255, "EEP1SBJ");
    fields[7] = fieldEEP1PWD =
    new CharacterField(message, HEADERSIZE + 786, 45, "EEP1PWD");
    fields[8] = fieldEEP1BM1 =
    new CharacterField(message, HEADERSIZE + 831, 80, "EEP1BM1");
    fields[9] = fieldEEP1BM2 =
    new CharacterField(message, HEADERSIZE + 911, 80, "EEP1BM2");
    fields[10] = fieldEEP1BM3 =
    new CharacterField(message, HEADERSIZE + 991, 80, "EEP1BM3");
    fields[11] = fieldEEP1BM4 =
    new CharacterField(message, HEADERSIZE + 1071, 80, "EEP1BM4");
    fields[12] = fieldEEP1STS =
    new CharacterField(message, HEADERSIZE + 1151, 1, "EEP1STS");
    fields[13] = fieldEEP1TIM =
    new DecimalField(message, HEADERSIZE + 1152, 13, 0, "EEP1TIM");
    fields[14] = fieldEEP1DSC =
    new CharacterField(message, HEADERSIZE + 1165, 80, "EEP1DSC");
    fields[15] = fieldEEP1STP =
    new CharacterField(message, HEADERSIZE + 1245, 2, "EEP1STP");
    fields[16] = fieldEEP1TPM =
    new CharacterField(message, HEADERSIZE + 1247, 80, "EEP1TPM");
    fields[17] = fieldEEP1PSZ =
    new CharacterField(message, HEADERSIZE + 1327, 2, "EEP1PSZ");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EEP1USER using a String value.
  */
  public void setEEP1USER(String newvalue)
  {
    fieldEEP1USER.setString(newvalue);
  }

  /**
  * Get value of field EEP1USER as a String.
  */
  public String getEEP1USER()
  {
    return fieldEEP1USER.getString();
  }

  /**
  * Set field EEP1COL using a String value.
  */
  public void setEEP1COL(String newvalue)
  {
    fieldEEP1COL.setString(newvalue);
  }

  /**
  * Get value of field EEP1COL as a String.
  */
  public String getEEP1COL()
  {
    return fieldEEP1COL.getString();
  }

  /**
  * Set numeric field EEP1COL using a BigDecimal value.
  */
  public void setEEP1COL(BigDecimal newvalue)
  {
    fieldEEP1COL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EEP1COL as a BigDecimal.
  */
  public BigDecimal getBigDecimalEEP1COL()
  {
    return fieldEEP1COL.getBigDecimal();
  }

  /**
  * Set field EEP1ROW using a String value.
  */
  public void setEEP1ROW(String newvalue)
  {
    fieldEEP1ROW.setString(newvalue);
  }

  /**
  * Get value of field EEP1ROW as a String.
  */
  public String getEEP1ROW()
  {
    return fieldEEP1ROW.getString();
  }

  /**
  * Set numeric field EEP1ROW using a BigDecimal value.
  */
  public void setEEP1ROW(BigDecimal newvalue)
  {
    fieldEEP1ROW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EEP1ROW as a BigDecimal.
  */
  public BigDecimal getBigDecimalEEP1ROW()
  {
    return fieldEEP1ROW.getBigDecimal();
  }

  /**
  * Set field EEP1ORI using a String value.
  */
  public void setEEP1ORI(String newvalue)
  {
    fieldEEP1ORI.setString(newvalue);
  }

  /**
  * Get value of field EEP1ORI as a String.
  */
  public String getEEP1ORI()
  {
    return fieldEEP1ORI.getString();
  }

  /**
  * Set field EEP1TOE using a String value.
  */
  public void setEEP1TOE(String newvalue)
  {
    fieldEEP1TOE.setString(newvalue);
  }

  /**
  * Get value of field EEP1TOE as a String.
  */
  public String getEEP1TOE()
  {
    return fieldEEP1TOE.getString();
  }

  /**
  * Set field EEP1CCE using a String value.
  */
  public void setEEP1CCE(String newvalue)
  {
    fieldEEP1CCE.setString(newvalue);
  }

  /**
  * Get value of field EEP1CCE as a String.
  */
  public String getEEP1CCE()
  {
    return fieldEEP1CCE.getString();
  }

  /**
  * Set field EEP1SBJ using a String value.
  */
  public void setEEP1SBJ(String newvalue)
  {
    fieldEEP1SBJ.setString(newvalue);
  }

  /**
  * Get value of field EEP1SBJ as a String.
  */
  public String getEEP1SBJ()
  {
    return fieldEEP1SBJ.getString();
  }

  /**
  * Set field EEP1PWD using a String value.
  */
  public void setEEP1PWD(String newvalue)
  {
    fieldEEP1PWD.setString(newvalue);
  }

  /**
  * Get value of field EEP1PWD as a String.
  */
  public String getEEP1PWD()
  {
    return fieldEEP1PWD.getString();
  }

  /**
  * Set field EEP1BM1 using a String value.
  */
  public void setEEP1BM1(String newvalue)
  {
    fieldEEP1BM1.setString(newvalue);
  }

  /**
  * Get value of field EEP1BM1 as a String.
  */
  public String getEEP1BM1()
  {
    return fieldEEP1BM1.getString();
  }

  /**
  * Set field EEP1BM2 using a String value.
  */
  public void setEEP1BM2(String newvalue)
  {
    fieldEEP1BM2.setString(newvalue);
  }

  /**
  * Get value of field EEP1BM2 as a String.
  */
  public String getEEP1BM2()
  {
    return fieldEEP1BM2.getString();
  }

  /**
  * Set field EEP1BM3 using a String value.
  */
  public void setEEP1BM3(String newvalue)
  {
    fieldEEP1BM3.setString(newvalue);
  }

  /**
  * Get value of field EEP1BM3 as a String.
  */
  public String getEEP1BM3()
  {
    return fieldEEP1BM3.getString();
  }

  /**
  * Set field EEP1BM4 using a String value.
  */
  public void setEEP1BM4(String newvalue)
  {
    fieldEEP1BM4.setString(newvalue);
  }

  /**
  * Get value of field EEP1BM4 as a String.
  */
  public String getEEP1BM4()
  {
    return fieldEEP1BM4.getString();
  }

  /**
  * Set field EEP1STS using a String value.
  */
  public void setEEP1STS(String newvalue)
  {
    fieldEEP1STS.setString(newvalue);
  }

  /**
  * Get value of field EEP1STS as a String.
  */
  public String getEEP1STS()
  {
    return fieldEEP1STS.getString();
  }

  /**
  * Set field EEP1TIM using a String value.
  */
  public void setEEP1TIM(String newvalue)
  {
    fieldEEP1TIM.setString(newvalue);
  }

  /**
  * Get value of field EEP1TIM as a String.
  */
  public String getEEP1TIM()
  {
    return fieldEEP1TIM.getString();
  }

  /**
  * Set numeric field EEP1TIM using a BigDecimal value.
  */
  public void setEEP1TIM(BigDecimal newvalue)
  {
    fieldEEP1TIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EEP1TIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEEP1TIM()
  {
    return fieldEEP1TIM.getBigDecimal();
  }

  /**
  * Set field EEP1DSC using a String value.
  */
  public void setEEP1DSC(String newvalue)
  {
    fieldEEP1DSC.setString(newvalue);
  }

  /**
  * Get value of field EEP1DSC as a String.
  */
  public String getEEP1DSC()
  {
    return fieldEEP1DSC.getString();
  }

  /**
  * Set field EEP1STP using a String value.
  */
  public void setEEP1STP(String newvalue)
  {
    fieldEEP1STP.setString(newvalue);
  }

  /**
  * Get value of field EEP1STP as a String.
  */
  public String getEEP1STP()
  {
    return fieldEEP1STP.getString();
  }

  /**
  * Set field EEP1TPM using a String value.
  */
  public void setEEP1TPM(String newvalue)
  {
    fieldEEP1TPM.setString(newvalue);
  }

  /**
  * Get value of field EEP1TPM as a String.
  */
  public String getEEP1TPM()
  {
    return fieldEEP1TPM.getString();
  }

  /**
  * Set field EEP1PSZ using a String value.
  */
  public void setEEP1PSZ(String newvalue)
  {
    fieldEEP1PSZ.setString(newvalue);
  }

  /**
  * Get value of field EEP1PSZ as a String.
  */
  public String getEEP1PSZ()
  {
    return fieldEEP1PSZ.getString();
  }

}
