package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDC010002 physical file definition.
* 
* File level identifier is 1160701112417.
* Record format level identifier is 38ACB6CAF25E0.
*/

public class EDC010002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DCLACC",
                                     "E02DCLTNO",
                                     "E02DCMBNK",
                                     "E02DCMBRN",
                                     "E02DCMCCY",
                                     "E02DCMPRO",
                                     "E02DSCPRO",
                                     "E02DCLACD",
                                     "E02DCLOPR",
                                     "E02DCLTDY",
                                     "E02DCLTDM",
                                     "E02DCLTDD",
                                     "E02DCLTTM",
                                     "E02DCLTTP",
                                     "E02DSCTTP",
                                     "E02DCLARF",
                                     "E02APPREJ",
                                     "E02DCLSUP",
                                     "E02DCLADM",
                                     "E02DCLADD",
                                     "E02DCLADY",
                                     "E02DCLATM",
                                     "E02DCLOTP",
                                     "E02DCLLON",
                                     "E02DCLTMS"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DCLACC",
                                   "E02DCLTNO",
                                   "E02DCMBNK",
                                   "E02DCMBRN",
                                   "E02DCMCCY",
                                   "E02DCMPRO",
                                   "E02DSCPRO",
                                   "E02DCLACD",
                                   "E02DCLOPR",
                                   "E02DCLTDY",
                                   "E02DCLTDM",
                                   "E02DCLTDD",
                                   "E02DCLTTM",
                                   "E02DCLTTP",
                                   "E02DSCTTP",
                                   "E02DCLARF",
                                   "E02APPREJ",
                                   "E02DCLSUP",
                                   "E02DCLADM",
                                   "E02DCLADD",
                                   "E02DCLADY",
                                   "E02DCLATM",
                                   "E02DCLOTP",
                                   "E02DCLLON",
                                   "E02DCLTMS"
                                 };
  final static String fid = "1160701112417";
  final static String rid = "38ACB6CAF25E0";
  final static String fmtname = "EDC010002";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DCLACC = null;
  private DecimalField fieldE02DCLTNO = null;
  private CharacterField fieldE02DCMBNK = null;
  private DecimalField fieldE02DCMBRN = null;
  private CharacterField fieldE02DCMCCY = null;
  private CharacterField fieldE02DCMPRO = null;
  private CharacterField fieldE02DSCPRO = null;
  private CharacterField fieldE02DCLACD = null;
  private CharacterField fieldE02DCLOPR = null;
  private DecimalField fieldE02DCLTDY = null;
  private DecimalField fieldE02DCLTDM = null;
  private DecimalField fieldE02DCLTDD = null;
  private DecimalField fieldE02DCLTTM = null;
  private CharacterField fieldE02DCLTTP = null;
  private CharacterField fieldE02DSCTTP = null;
  private CharacterField fieldE02DCLARF = null;
  private CharacterField fieldE02APPREJ = null;
  private CharacterField fieldE02DCLSUP = null;
  private DecimalField fieldE02DCLADM = null;
  private DecimalField fieldE02DCLADD = null;
  private DecimalField fieldE02DCLADY = null;
  private DecimalField fieldE02DCLATM = null;
  private CharacterField fieldE02DCLOTP = null;
  private DecimalField fieldE02DCLLON = null;
  private CharacterField fieldE02DCLTMS = null;

  /**
  * Constructor for EDC010002Message.
  */
  public EDC010002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 254;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DCLACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DCLACC");
    fields[10] = fieldE02DCLTNO =
    new DecimalField(message, HEADERSIZE + 55, 4, 0, "E02DCLTNO");
    fields[11] = fieldE02DCMBNK =
    new CharacterField(message, HEADERSIZE + 59, 2, "E02DCMBNK");
    fields[12] = fieldE02DCMBRN =
    new DecimalField(message, HEADERSIZE + 61, 5, 0, "E02DCMBRN");
    fields[13] = fieldE02DCMCCY =
    new CharacterField(message, HEADERSIZE + 66, 3, "E02DCMCCY");
    fields[14] = fieldE02DCMPRO =
    new CharacterField(message, HEADERSIZE + 69, 4, "E02DCMPRO");
    fields[15] = fieldE02DSCPRO =
    new CharacterField(message, HEADERSIZE + 73, 60, "E02DSCPRO");
    fields[16] = fieldE02DCLACD =
    new CharacterField(message, HEADERSIZE + 133, 2, "E02DCLACD");
    fields[17] = fieldE02DCLOPR =
    new CharacterField(message, HEADERSIZE + 135, 10, "E02DCLOPR");
    fields[18] = fieldE02DCLTDY =
    new DecimalField(message, HEADERSIZE + 145, 5, 0, "E02DCLTDY");
    fields[19] = fieldE02DCLTDM =
    new DecimalField(message, HEADERSIZE + 150, 3, 0, "E02DCLTDM");
    fields[20] = fieldE02DCLTDD =
    new DecimalField(message, HEADERSIZE + 153, 3, 0, "E02DCLTDD");
    fields[21] = fieldE02DCLTTM =
    new DecimalField(message, HEADERSIZE + 156, 7, 0, "E02DCLTTM");
    fields[22] = fieldE02DCLTTP =
    new CharacterField(message, HEADERSIZE + 163, 1, "E02DCLTTP");
    fields[23] = fieldE02DSCTTP =
    new CharacterField(message, HEADERSIZE + 164, 20, "E02DSCTTP");
    fields[24] = fieldE02DCLARF =
    new CharacterField(message, HEADERSIZE + 184, 1, "E02DCLARF");
    fields[25] = fieldE02APPREJ =
    new CharacterField(message, HEADERSIZE + 185, 10, "E02APPREJ");
    fields[26] = fieldE02DCLSUP =
    new CharacterField(message, HEADERSIZE + 195, 10, "E02DCLSUP");
    fields[27] = fieldE02DCLADM =
    new DecimalField(message, HEADERSIZE + 205, 3, 0, "E02DCLADM");
    fields[28] = fieldE02DCLADD =
    new DecimalField(message, HEADERSIZE + 208, 3, 0, "E02DCLADD");
    fields[29] = fieldE02DCLADY =
    new DecimalField(message, HEADERSIZE + 211, 5, 0, "E02DCLADY");
    fields[30] = fieldE02DCLATM =
    new DecimalField(message, HEADERSIZE + 216, 7, 0, "E02DCLATM");
    fields[31] = fieldE02DCLOTP =
    new CharacterField(message, HEADERSIZE + 223, 1, "E02DCLOTP");
    fields[32] = fieldE02DCLLON =
    new DecimalField(message, HEADERSIZE + 224, 4, 0, "E02DCLLON");
    fields[33] = fieldE02DCLTMS =
    new CharacterField(message, HEADERSIZE + 228, 26, "E02DCLTMS");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DCLACC using a String value.
  */
  public void setE02DCLACC(String newvalue)
  {
    fieldE02DCLACC.setString(newvalue);
  }

  /**
  * Get value of field E02DCLACC as a String.
  */
  public String getE02DCLACC()
  {
    return fieldE02DCLACC.getString();
  }

  /**
  * Set numeric field E02DCLACC using a BigDecimal value.
  */
  public void setE02DCLACC(BigDecimal newvalue)
  {
    fieldE02DCLACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLACC()
  {
    return fieldE02DCLACC.getBigDecimal();
  }

  /**
  * Set field E02DCLTNO using a String value.
  */
  public void setE02DCLTNO(String newvalue)
  {
    fieldE02DCLTNO.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTNO as a String.
  */
  public String getE02DCLTNO()
  {
    return fieldE02DCLTNO.getString();
  }

  /**
  * Set numeric field E02DCLTNO using a BigDecimal value.
  */
  public void setE02DCLTNO(BigDecimal newvalue)
  {
    fieldE02DCLTNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLTNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLTNO()
  {
    return fieldE02DCLTNO.getBigDecimal();
  }

  /**
  * Set field E02DCMBNK using a String value.
  */
  public void setE02DCMBNK(String newvalue)
  {
    fieldE02DCMBNK.setString(newvalue);
  }

  /**
  * Get value of field E02DCMBNK as a String.
  */
  public String getE02DCMBNK()
  {
    return fieldE02DCMBNK.getString();
  }

  /**
  * Set field E02DCMBRN using a String value.
  */
  public void setE02DCMBRN(String newvalue)
  {
    fieldE02DCMBRN.setString(newvalue);
  }

  /**
  * Get value of field E02DCMBRN as a String.
  */
  public String getE02DCMBRN()
  {
    return fieldE02DCMBRN.getString();
  }

  /**
  * Set numeric field E02DCMBRN using a BigDecimal value.
  */
  public void setE02DCMBRN(BigDecimal newvalue)
  {
    fieldE02DCMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCMBRN()
  {
    return fieldE02DCMBRN.getBigDecimal();
  }

  /**
  * Set field E02DCMCCY using a String value.
  */
  public void setE02DCMCCY(String newvalue)
  {
    fieldE02DCMCCY.setString(newvalue);
  }

  /**
  * Get value of field E02DCMCCY as a String.
  */
  public String getE02DCMCCY()
  {
    return fieldE02DCMCCY.getString();
  }

  /**
  * Set field E02DCMPRO using a String value.
  */
  public void setE02DCMPRO(String newvalue)
  {
    fieldE02DCMPRO.setString(newvalue);
  }

  /**
  * Get value of field E02DCMPRO as a String.
  */
  public String getE02DCMPRO()
  {
    return fieldE02DCMPRO.getString();
  }

  /**
  * Set field E02DSCPRO using a String value.
  */
  public void setE02DSCPRO(String newvalue)
  {
    fieldE02DSCPRO.setString(newvalue);
  }

  /**
  * Get value of field E02DSCPRO as a String.
  */
  public String getE02DSCPRO()
  {
    return fieldE02DSCPRO.getString();
  }

  /**
  * Set field E02DCLACD using a String value.
  */
  public void setE02DCLACD(String newvalue)
  {
    fieldE02DCLACD.setString(newvalue);
  }

  /**
  * Get value of field E02DCLACD as a String.
  */
  public String getE02DCLACD()
  {
    return fieldE02DCLACD.getString();
  }

  /**
  * Set field E02DCLOPR using a String value.
  */
  public void setE02DCLOPR(String newvalue)
  {
    fieldE02DCLOPR.setString(newvalue);
  }

  /**
  * Get value of field E02DCLOPR as a String.
  */
  public String getE02DCLOPR()
  {
    return fieldE02DCLOPR.getString();
  }

  /**
  * Set field E02DCLTDY using a String value.
  */
  public void setE02DCLTDY(String newvalue)
  {
    fieldE02DCLTDY.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTDY as a String.
  */
  public String getE02DCLTDY()
  {
    return fieldE02DCLTDY.getString();
  }

  /**
  * Set numeric field E02DCLTDY using a BigDecimal value.
  */
  public void setE02DCLTDY(BigDecimal newvalue)
  {
    fieldE02DCLTDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLTDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLTDY()
  {
    return fieldE02DCLTDY.getBigDecimal();
  }

  /**
  * Set field E02DCLTDM using a String value.
  */
  public void setE02DCLTDM(String newvalue)
  {
    fieldE02DCLTDM.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTDM as a String.
  */
  public String getE02DCLTDM()
  {
    return fieldE02DCLTDM.getString();
  }

  /**
  * Set numeric field E02DCLTDM using a BigDecimal value.
  */
  public void setE02DCLTDM(BigDecimal newvalue)
  {
    fieldE02DCLTDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLTDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLTDM()
  {
    return fieldE02DCLTDM.getBigDecimal();
  }

  /**
  * Set field E02DCLTDD using a String value.
  */
  public void setE02DCLTDD(String newvalue)
  {
    fieldE02DCLTDD.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTDD as a String.
  */
  public String getE02DCLTDD()
  {
    return fieldE02DCLTDD.getString();
  }

  /**
  * Set numeric field E02DCLTDD using a BigDecimal value.
  */
  public void setE02DCLTDD(BigDecimal newvalue)
  {
    fieldE02DCLTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLTDD()
  {
    return fieldE02DCLTDD.getBigDecimal();
  }

  /**
  * Set field E02DCLTTM using a String value.
  */
  public void setE02DCLTTM(String newvalue)
  {
    fieldE02DCLTTM.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTTM as a String.
  */
  public String getE02DCLTTM()
  {
    return fieldE02DCLTTM.getString();
  }

  /**
  * Set numeric field E02DCLTTM using a BigDecimal value.
  */
  public void setE02DCLTTM(BigDecimal newvalue)
  {
    fieldE02DCLTTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLTTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLTTM()
  {
    return fieldE02DCLTTM.getBigDecimal();
  }

  /**
  * Set field E02DCLTTP using a String value.
  */
  public void setE02DCLTTP(String newvalue)
  {
    fieldE02DCLTTP.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTTP as a String.
  */
  public String getE02DCLTTP()
  {
    return fieldE02DCLTTP.getString();
  }

  /**
  * Set field E02DSCTTP using a String value.
  */
  public void setE02DSCTTP(String newvalue)
  {
    fieldE02DSCTTP.setString(newvalue);
  }

  /**
  * Get value of field E02DSCTTP as a String.
  */
  public String getE02DSCTTP()
  {
    return fieldE02DSCTTP.getString();
  }

  /**
  * Set field E02DCLARF using a String value.
  */
  public void setE02DCLARF(String newvalue)
  {
    fieldE02DCLARF.setString(newvalue);
  }

  /**
  * Get value of field E02DCLARF as a String.
  */
  public String getE02DCLARF()
  {
    return fieldE02DCLARF.getString();
  }

  /**
  * Set field E02APPREJ using a String value.
  */
  public void setE02APPREJ(String newvalue)
  {
    fieldE02APPREJ.setString(newvalue);
  }

  /**
  * Get value of field E02APPREJ as a String.
  */
  public String getE02APPREJ()
  {
    return fieldE02APPREJ.getString();
  }

  /**
  * Set field E02DCLSUP using a String value.
  */
  public void setE02DCLSUP(String newvalue)
  {
    fieldE02DCLSUP.setString(newvalue);
  }

  /**
  * Get value of field E02DCLSUP as a String.
  */
  public String getE02DCLSUP()
  {
    return fieldE02DCLSUP.getString();
  }

  /**
  * Set field E02DCLADM using a String value.
  */
  public void setE02DCLADM(String newvalue)
  {
    fieldE02DCLADM.setString(newvalue);
  }

  /**
  * Get value of field E02DCLADM as a String.
  */
  public String getE02DCLADM()
  {
    return fieldE02DCLADM.getString();
  }

  /**
  * Set numeric field E02DCLADM using a BigDecimal value.
  */
  public void setE02DCLADM(BigDecimal newvalue)
  {
    fieldE02DCLADM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLADM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLADM()
  {
    return fieldE02DCLADM.getBigDecimal();
  }

  /**
  * Set field E02DCLADD using a String value.
  */
  public void setE02DCLADD(String newvalue)
  {
    fieldE02DCLADD.setString(newvalue);
  }

  /**
  * Get value of field E02DCLADD as a String.
  */
  public String getE02DCLADD()
  {
    return fieldE02DCLADD.getString();
  }

  /**
  * Set numeric field E02DCLADD using a BigDecimal value.
  */
  public void setE02DCLADD(BigDecimal newvalue)
  {
    fieldE02DCLADD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLADD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLADD()
  {
    return fieldE02DCLADD.getBigDecimal();
  }

  /**
  * Set field E02DCLADY using a String value.
  */
  public void setE02DCLADY(String newvalue)
  {
    fieldE02DCLADY.setString(newvalue);
  }

  /**
  * Get value of field E02DCLADY as a String.
  */
  public String getE02DCLADY()
  {
    return fieldE02DCLADY.getString();
  }

  /**
  * Set numeric field E02DCLADY using a BigDecimal value.
  */
  public void setE02DCLADY(BigDecimal newvalue)
  {
    fieldE02DCLADY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLADY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLADY()
  {
    return fieldE02DCLADY.getBigDecimal();
  }

  /**
  * Set field E02DCLATM using a String value.
  */
  public void setE02DCLATM(String newvalue)
  {
    fieldE02DCLATM.setString(newvalue);
  }

  /**
  * Get value of field E02DCLATM as a String.
  */
  public String getE02DCLATM()
  {
    return fieldE02DCLATM.getString();
  }

  /**
  * Set numeric field E02DCLATM using a BigDecimal value.
  */
  public void setE02DCLATM(BigDecimal newvalue)
  {
    fieldE02DCLATM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLATM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLATM()
  {
    return fieldE02DCLATM.getBigDecimal();
  }

  /**
  * Set field E02DCLOTP using a String value.
  */
  public void setE02DCLOTP(String newvalue)
  {
    fieldE02DCLOTP.setString(newvalue);
  }

  /**
  * Get value of field E02DCLOTP as a String.
  */
  public String getE02DCLOTP()
  {
    return fieldE02DCLOTP.getString();
  }

  /**
  * Set field E02DCLLON using a String value.
  */
  public void setE02DCLLON(String newvalue)
  {
    fieldE02DCLLON.setString(newvalue);
  }

  /**
  * Get value of field E02DCLLON as a String.
  */
  public String getE02DCLLON()
  {
    return fieldE02DCLLON.getString();
  }

  /**
  * Set numeric field E02DCLLON using a BigDecimal value.
  */
  public void setE02DCLLON(BigDecimal newvalue)
  {
    fieldE02DCLLON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCLLON as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCLLON()
  {
    return fieldE02DCLLON.getBigDecimal();
  }

  /**
  * Set field E02DCLTMS using a String value.
  */
  public void setE02DCLTMS(String newvalue)
  {
    fieldE02DCLTMS.setString(newvalue);
  }

  /**
  * Get value of field E02DCLTMS as a String.
  */
  public String getE02DCLTMS()
  {
    return fieldE02DCLTMS.getString();
  }

}
