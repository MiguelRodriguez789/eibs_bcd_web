package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0455DS physical file definition.
* 
* File level identifier is 1130611161257.
* Record format level identifier is 3F5130329F033.
*/

public class EWD0455DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDEID",
                                     "EWDNME",
                                     "EWDFNM",
                                     "EWDIPA",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDEID",
                                   "EWDNME",
                                   "EWDFNM",
                                   "EWDIPA",
                                   "EWDOPE"
                                 };
  final static String fid = "1130611161257";
  final static String rid = "3F5130329F033";
  final static String fmtname = "EWD0455DS";
  final int FIELDCOUNT = 5;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDEID = null;
  private CharacterField fieldEWDNME = null;
  private CharacterField fieldEWDFNM = null;
  private CharacterField fieldEWDIPA = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0455DSMessage.
  */
  public EWD0455DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 193;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDEID =
    new CharacterField(message, HEADERSIZE + 0, 4, "EWDEID");
    fields[1] = fieldEWDNME =
    new CharacterField(message, HEADERSIZE + 4, 45, "EWDNME");
    fields[2] = fieldEWDFNM =
    new CharacterField(message, HEADERSIZE + 49, 128, "EWDFNM");
    fields[3] = fieldEWDIPA =
    new CharacterField(message, HEADERSIZE + 177, 15, "EWDIPA");
    fields[4] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 192, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDEID using a String value.
  */
  public void setEWDEID(String newvalue)
  {
    fieldEWDEID.setString(newvalue);
  }

  /**
  * Get value of field EWDEID as a String.
  */
  public String getEWDEID()
  {
    return fieldEWDEID.getString();
  }

  /**
  * Set field EWDNME using a String value.
  */
  public void setEWDNME(String newvalue)
  {
    fieldEWDNME.setString(newvalue);
  }

  /**
  * Get value of field EWDNME as a String.
  */
  public String getEWDNME()
  {
    return fieldEWDNME.getString();
  }

  /**
  * Set field EWDFNM using a String value.
  */
  public void setEWDFNM(String newvalue)
  {
    fieldEWDFNM.setString(newvalue);
  }

  /**
  * Get value of field EWDFNM as a String.
  */
  public String getEWDFNM()
  {
    return fieldEWDFNM.getString();
  }

  /**
  * Set field EWDIPA using a String value.
  */
  public void setEWDIPA(String newvalue)
  {
    fieldEWDIPA.setString(newvalue);
  }

  /**
  * Get value of field EWDIPA as a String.
  */
  public String getEWDIPA()
  {
    return fieldEWDIPA.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
