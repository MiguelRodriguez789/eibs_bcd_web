package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECC004001 physical file definition.
* 
* File level identifier is 1100706173520.
* Record format level identifier is 48F23739B7BD1.
*/

public class ECC004001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "ECCACC",
                                     "ECCCDE",
                                     "ECCCHQ",
                                     "ECCVDD",
                                     "ECCVDM",
                                     "ECCVDY",
                                     "ECCCKN",
                                     "ECCAMT",
                                     "ECCIMP",
                                     "ECCNAR",
                                     "ECCBRN",
                                     "ECCCCY",
                                     "ECCEXR",
                                     "ECCIBS",
                                     "ECCOBR",
                                     "ECCOBK",
                                     "ECCBTH",
                                     "ECCBDD",
                                     "ECCBDM",
                                     "ECCBDY",
                                     "ECCTIM",
                                     "ECCCUN",
                                     "ECCCNU"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "ECCACC",
                                   "ECCCDE",
                                   "ECCCHQ",
                                   "ECCVDD",
                                   "ECCVDM",
                                   "ECCVDY",
                                   "ECCCKN",
                                   "ECCAMT",
                                   "ECCIMP",
                                   "ECCNAR",
                                   "ECCBRN",
                                   "ECCCCY",
                                   "ECCEXR",
                                   "ECCIBS",
                                   "ECCOBR",
                                   "ECCOBK",
                                   "ECCBTH",
                                   "ECCBDD",
                                   "ECCBDM",
                                   "ECCBDY",
                                   "ECCTIM",
                                   "ECCCUN",
                                   "ECCCNU"
                                 };
  final static String fid = "1100706173520";
  final static String rid = "48F23739B7BD1";
  final static String fmtname = "ECC004001";
  final int FIELDCOUNT = 32;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldECCACC = null;
  private CharacterField fieldECCCDE = null;
  private DecimalField fieldECCCHQ = null;
  private DecimalField fieldECCVDD = null;
  private DecimalField fieldECCVDM = null;
  private DecimalField fieldECCVDY = null;
  private DecimalField fieldECCCKN = null;
  private DecimalField fieldECCAMT = null;
  private CharacterField fieldECCIMP = null;
  private CharacterField fieldECCNAR = null;
  private DecimalField fieldECCBRN = null;
  private CharacterField fieldECCCCY = null;
  private DecimalField fieldECCEXR = null;
  private CharacterField fieldECCIBS = null;
  private DecimalField fieldECCOBR = null;
  private CharacterField fieldECCOBK = null;
  private DecimalField fieldECCBTH = null;
  private DecimalField fieldECCBDD = null;
  private DecimalField fieldECCBDM = null;
  private DecimalField fieldECCBDY = null;
  private DecimalField fieldECCTIM = null;
  private DecimalField fieldECCCUN = null;
  private DecimalField fieldECCCNU = null;

  /**
  * Constructor for ECC004001Message.
  */
  public ECC004001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 196;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldECCACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "ECCACC");
    fields[10] = fieldECCCDE =
    new CharacterField(message, HEADERSIZE + 55, 2, "ECCCDE");
    fields[11] = fieldECCCHQ =
    new DecimalField(message, HEADERSIZE + 57, 3, 0, "ECCCHQ");
    fields[12] = fieldECCVDD =
    new DecimalField(message, HEADERSIZE + 60, 3, 0, "ECCVDD");
    fields[13] = fieldECCVDM =
    new DecimalField(message, HEADERSIZE + 63, 3, 0, "ECCVDM");
    fields[14] = fieldECCVDY =
    new DecimalField(message, HEADERSIZE + 66, 3, 0, "ECCVDY");
    fields[15] = fieldECCCKN =
    new DecimalField(message, HEADERSIZE + 69, 10, 0, "ECCCKN");
    fields[16] = fieldECCAMT =
    new DecimalField(message, HEADERSIZE + 79, 16, 0, "ECCAMT");
    fields[17] = fieldECCIMP =
    new CharacterField(message, HEADERSIZE + 95, 2, "ECCIMP");
    fields[18] = fieldECCNAR =
    new CharacterField(message, HEADERSIZE + 97, 30, "ECCNAR");
    fields[19] = fieldECCBRN =
    new DecimalField(message, HEADERSIZE + 127, 4, 0, "ECCBRN");
    fields[20] = fieldECCCCY =
    new CharacterField(message, HEADERSIZE + 131, 3, "ECCCCY");
    fields[21] = fieldECCEXR =
    new DecimalField(message, HEADERSIZE + 134, 13, 6, "ECCEXR");
    fields[22] = fieldECCIBS =
    new CharacterField(message, HEADERSIZE + 147, 4, "ECCIBS");
    fields[23] = fieldECCOBR =
    new DecimalField(message, HEADERSIZE + 151, 4, 0, "ECCOBR");
    fields[24] = fieldECCOBK =
    new CharacterField(message, HEADERSIZE + 155, 2, "ECCOBK");
    fields[25] = fieldECCBTH =
    new DecimalField(message, HEADERSIZE + 157, 5, 0, "ECCBTH");
    fields[26] = fieldECCBDD =
    new DecimalField(message, HEADERSIZE + 162, 3, 0, "ECCBDD");
    fields[27] = fieldECCBDM =
    new DecimalField(message, HEADERSIZE + 165, 3, 0, "ECCBDM");
    fields[28] = fieldECCBDY =
    new DecimalField(message, HEADERSIZE + 168, 3, 0, "ECCBDY");
    fields[29] = fieldECCTIM =
    new DecimalField(message, HEADERSIZE + 171, 7, 0, "ECCTIM");
    fields[30] = fieldECCCUN =
    new DecimalField(message, HEADERSIZE + 178, 10, 0, "ECCCUN");
    fields[31] = fieldECCCNU =
    new DecimalField(message, HEADERSIZE + 188, 8, 0, "ECCCNU");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field ECCACC using a String value.
  */
  public void setECCACC(String newvalue)
  {
    fieldECCACC.setString(newvalue);
  }

  /**
  * Get value of field ECCACC as a String.
  */
  public String getECCACC()
  {
    return fieldECCACC.getString();
  }

  /**
  * Set numeric field ECCACC using a BigDecimal value.
  */
  public void setECCACC(BigDecimal newvalue)
  {
    fieldECCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCACC()
  {
    return fieldECCACC.getBigDecimal();
  }

  /**
  * Set field ECCCDE using a String value.
  */
  public void setECCCDE(String newvalue)
  {
    fieldECCCDE.setString(newvalue);
  }

  /**
  * Get value of field ECCCDE as a String.
  */
  public String getECCCDE()
  {
    return fieldECCCDE.getString();
  }

  /**
  * Set field ECCCHQ using a String value.
  */
  public void setECCCHQ(String newvalue)
  {
    fieldECCCHQ.setString(newvalue);
  }

  /**
  * Get value of field ECCCHQ as a String.
  */
  public String getECCCHQ()
  {
    return fieldECCCHQ.getString();
  }

  /**
  * Set numeric field ECCCHQ using a BigDecimal value.
  */
  public void setECCCHQ(BigDecimal newvalue)
  {
    fieldECCCHQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCCHQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCCHQ()
  {
    return fieldECCCHQ.getBigDecimal();
  }

  /**
  * Set field ECCVDD using a String value.
  */
  public void setECCVDD(String newvalue)
  {
    fieldECCVDD.setString(newvalue);
  }

  /**
  * Get value of field ECCVDD as a String.
  */
  public String getECCVDD()
  {
    return fieldECCVDD.getString();
  }

  /**
  * Set numeric field ECCVDD using a BigDecimal value.
  */
  public void setECCVDD(BigDecimal newvalue)
  {
    fieldECCVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCVDD()
  {
    return fieldECCVDD.getBigDecimal();
  }

  /**
  * Set field ECCVDM using a String value.
  */
  public void setECCVDM(String newvalue)
  {
    fieldECCVDM.setString(newvalue);
  }

  /**
  * Get value of field ECCVDM as a String.
  */
  public String getECCVDM()
  {
    return fieldECCVDM.getString();
  }

  /**
  * Set numeric field ECCVDM using a BigDecimal value.
  */
  public void setECCVDM(BigDecimal newvalue)
  {
    fieldECCVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCVDM()
  {
    return fieldECCVDM.getBigDecimal();
  }

  /**
  * Set field ECCVDY using a String value.
  */
  public void setECCVDY(String newvalue)
  {
    fieldECCVDY.setString(newvalue);
  }

  /**
  * Get value of field ECCVDY as a String.
  */
  public String getECCVDY()
  {
    return fieldECCVDY.getString();
  }

  /**
  * Set numeric field ECCVDY using a BigDecimal value.
  */
  public void setECCVDY(BigDecimal newvalue)
  {
    fieldECCVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCVDY()
  {
    return fieldECCVDY.getBigDecimal();
  }

  /**
  * Set field ECCCKN using a String value.
  */
  public void setECCCKN(String newvalue)
  {
    fieldECCCKN.setString(newvalue);
  }

  /**
  * Get value of field ECCCKN as a String.
  */
  public String getECCCKN()
  {
    return fieldECCCKN.getString();
  }

  /**
  * Set numeric field ECCCKN using a BigDecimal value.
  */
  public void setECCCKN(BigDecimal newvalue)
  {
    fieldECCCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCCKN()
  {
    return fieldECCCKN.getBigDecimal();
  }

  /**
  * Set field ECCAMT using a String value.
  */
  public void setECCAMT(String newvalue)
  {
    fieldECCAMT.setString(newvalue);
  }

  /**
  * Get value of field ECCAMT as a String.
  */
  public String getECCAMT()
  {
    return fieldECCAMT.getString();
  }

  /**
  * Set numeric field ECCAMT using a BigDecimal value.
  */
  public void setECCAMT(BigDecimal newvalue)
  {
    fieldECCAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCAMT()
  {
    return fieldECCAMT.getBigDecimal();
  }

  /**
  * Set field ECCIMP using a String value.
  */
  public void setECCIMP(String newvalue)
  {
    fieldECCIMP.setString(newvalue);
  }

  /**
  * Get value of field ECCIMP as a String.
  */
  public String getECCIMP()
  {
    return fieldECCIMP.getString();
  }

  /**
  * Set field ECCNAR using a String value.
  */
  public void setECCNAR(String newvalue)
  {
    fieldECCNAR.setString(newvalue);
  }

  /**
  * Get value of field ECCNAR as a String.
  */
  public String getECCNAR()
  {
    return fieldECCNAR.getString();
  }

  /**
  * Set field ECCBRN using a String value.
  */
  public void setECCBRN(String newvalue)
  {
    fieldECCBRN.setString(newvalue);
  }

  /**
  * Get value of field ECCBRN as a String.
  */
  public String getECCBRN()
  {
    return fieldECCBRN.getString();
  }

  /**
  * Set numeric field ECCBRN using a BigDecimal value.
  */
  public void setECCBRN(BigDecimal newvalue)
  {
    fieldECCBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCBRN()
  {
    return fieldECCBRN.getBigDecimal();
  }

  /**
  * Set field ECCCCY using a String value.
  */
  public void setECCCCY(String newvalue)
  {
    fieldECCCCY.setString(newvalue);
  }

  /**
  * Get value of field ECCCCY as a String.
  */
  public String getECCCCY()
  {
    return fieldECCCCY.getString();
  }

  /**
  * Set field ECCEXR using a String value.
  */
  public void setECCEXR(String newvalue)
  {
    fieldECCEXR.setString(newvalue);
  }

  /**
  * Get value of field ECCEXR as a String.
  */
  public String getECCEXR()
  {
    return fieldECCEXR.getString();
  }

  /**
  * Set numeric field ECCEXR using a BigDecimal value.
  */
  public void setECCEXR(BigDecimal newvalue)
  {
    fieldECCEXR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCEXR as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCEXR()
  {
    return fieldECCEXR.getBigDecimal();
  }

  /**
  * Set field ECCIBS using a String value.
  */
  public void setECCIBS(String newvalue)
  {
    fieldECCIBS.setString(newvalue);
  }

  /**
  * Get value of field ECCIBS as a String.
  */
  public String getECCIBS()
  {
    return fieldECCIBS.getString();
  }

  /**
  * Set field ECCOBR using a String value.
  */
  public void setECCOBR(String newvalue)
  {
    fieldECCOBR.setString(newvalue);
  }

  /**
  * Get value of field ECCOBR as a String.
  */
  public String getECCOBR()
  {
    return fieldECCOBR.getString();
  }

  /**
  * Set numeric field ECCOBR using a BigDecimal value.
  */
  public void setECCOBR(BigDecimal newvalue)
  {
    fieldECCOBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCOBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCOBR()
  {
    return fieldECCOBR.getBigDecimal();
  }

  /**
  * Set field ECCOBK using a String value.
  */
  public void setECCOBK(String newvalue)
  {
    fieldECCOBK.setString(newvalue);
  }

  /**
  * Get value of field ECCOBK as a String.
  */
  public String getECCOBK()
  {
    return fieldECCOBK.getString();
  }

  /**
  * Set field ECCBTH using a String value.
  */
  public void setECCBTH(String newvalue)
  {
    fieldECCBTH.setString(newvalue);
  }

  /**
  * Get value of field ECCBTH as a String.
  */
  public String getECCBTH()
  {
    return fieldECCBTH.getString();
  }

  /**
  * Set numeric field ECCBTH using a BigDecimal value.
  */
  public void setECCBTH(BigDecimal newvalue)
  {
    fieldECCBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCBTH()
  {
    return fieldECCBTH.getBigDecimal();
  }

  /**
  * Set field ECCBDD using a String value.
  */
  public void setECCBDD(String newvalue)
  {
    fieldECCBDD.setString(newvalue);
  }

  /**
  * Get value of field ECCBDD as a String.
  */
  public String getECCBDD()
  {
    return fieldECCBDD.getString();
  }

  /**
  * Set numeric field ECCBDD using a BigDecimal value.
  */
  public void setECCBDD(BigDecimal newvalue)
  {
    fieldECCBDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCBDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCBDD()
  {
    return fieldECCBDD.getBigDecimal();
  }

  /**
  * Set field ECCBDM using a String value.
  */
  public void setECCBDM(String newvalue)
  {
    fieldECCBDM.setString(newvalue);
  }

  /**
  * Get value of field ECCBDM as a String.
  */
  public String getECCBDM()
  {
    return fieldECCBDM.getString();
  }

  /**
  * Set numeric field ECCBDM using a BigDecimal value.
  */
  public void setECCBDM(BigDecimal newvalue)
  {
    fieldECCBDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCBDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCBDM()
  {
    return fieldECCBDM.getBigDecimal();
  }

  /**
  * Set field ECCBDY using a String value.
  */
  public void setECCBDY(String newvalue)
  {
    fieldECCBDY.setString(newvalue);
  }

  /**
  * Get value of field ECCBDY as a String.
  */
  public String getECCBDY()
  {
    return fieldECCBDY.getString();
  }

  /**
  * Set numeric field ECCBDY using a BigDecimal value.
  */
  public void setECCBDY(BigDecimal newvalue)
  {
    fieldECCBDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCBDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCBDY()
  {
    return fieldECCBDY.getBigDecimal();
  }

  /**
  * Set field ECCTIM using a String value.
  */
  public void setECCTIM(String newvalue)
  {
    fieldECCTIM.setString(newvalue);
  }

  /**
  * Get value of field ECCTIM as a String.
  */
  public String getECCTIM()
  {
    return fieldECCTIM.getString();
  }

  /**
  * Set numeric field ECCTIM using a BigDecimal value.
  */
  public void setECCTIM(BigDecimal newvalue)
  {
    fieldECCTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCTIM()
  {
    return fieldECCTIM.getBigDecimal();
  }

  /**
  * Set field ECCCUN using a String value.
  */
  public void setECCCUN(String newvalue)
  {
    fieldECCCUN.setString(newvalue);
  }

  /**
  * Get value of field ECCCUN as a String.
  */
  public String getECCCUN()
  {
    return fieldECCCUN.getString();
  }

  /**
  * Set numeric field ECCCUN using a BigDecimal value.
  */
  public void setECCCUN(BigDecimal newvalue)
  {
    fieldECCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCCUN()
  {
    return fieldECCCUN.getBigDecimal();
  }

  /**
  * Set field ECCCNU using a String value.
  */
  public void setECCCNU(String newvalue)
  {
    fieldECCCNU.setString(newvalue);
  }

  /**
  * Get value of field ECCCNU as a String.
  */
  public String getECCCNU()
  {
    return fieldECCCNU.getString();
  }

  /**
  * Set numeric field ECCCNU using a BigDecimal value.
  */
  public void setECCCNU(BigDecimal newvalue)
  {
    fieldECCCNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECCCNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalECCCNU()
  {
    return fieldECCCNU.getBigDecimal();
  }

}
