package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO0010DS physical file definition.
* 
* File level identifier is 1130611131009.
* Record format level identifier is 431A5C7CDF9F0.
*/

public class ECO0010DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "HDSUSERID",
                                     "HDSPROGRM",
                                     "HDSTIMSYS",
                                     "HDSSCRCOD",
                                     "HDSOPECOD",
                                     "HDSFLGMAS",
                                     "HDSFLGWK1",
                                     "HDSFLGWK2",
                                     "HDSFLGWK3",
                                     "EDSCOSECU",
                                     "EDSCOSNUM",
                                     "EDSEMPNA1",
                                     "EDSEMPIDN"
                                   };
  final static String tnames[] = {
                                   "HDSUSERID",
                                   "HDSPROGRM",
                                   "HDSTIMSYS",
                                   "HDSSCRCOD",
                                   "HDSOPECOD",
                                   "HDSFLGMAS",
                                   "HDSFLGWK1",
                                   "HDSFLGWK2",
                                   "HDSFLGWK3",
                                   "EDSCOSECU",
                                   "EDSCOSNUM",
                                   "EDSEMPNA1",
                                   "EDSEMPIDN"
                                 };
  final static String fid = "1130611131009";
  final static String rid = "431A5C7CDF9F0";
  final static String fmtname = "ECO0010DS";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldHDSUSERID = null;
  private CharacterField fieldHDSPROGRM = null;
  private CharacterField fieldHDSTIMSYS = null;
  private CharacterField fieldHDSSCRCOD = null;
  private CharacterField fieldHDSOPECOD = null;
  private CharacterField fieldHDSFLGMAS = null;
  private CharacterField fieldHDSFLGWK1 = null;
  private CharacterField fieldHDSFLGWK2 = null;
  private CharacterField fieldHDSFLGWK3 = null;
  private DecimalField fieldEDSCOSECU = null;
  private DecimalField fieldEDSCOSNUM = null;
  private CharacterField fieldEDSEMPNA1 = null;
  private CharacterField fieldEDSEMPIDN = null;

  /**
  * Constructor for ECO0010DSMessage.
  */
  public ECO0010DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 150;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldHDSUSERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "HDSUSERID");
    fields[1] = fieldHDSPROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "HDSPROGRM");
    fields[2] = fieldHDSTIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "HDSTIMSYS");
    fields[3] = fieldHDSSCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "HDSSCRCOD");
    fields[4] = fieldHDSOPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "HDSOPECOD");
    fields[5] = fieldHDSFLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "HDSFLGMAS");
    fields[6] = fieldHDSFLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "HDSFLGWK1");
    fields[7] = fieldHDSFLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "HDSFLGWK2");
    fields[8] = fieldHDSFLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "HDSFLGWK3");
    fields[9] = fieldEDSCOSECU =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "EDSCOSECU");
    fields[10] = fieldEDSCOSNUM =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "EDSCOSNUM");
    fields[11] = fieldEDSEMPNA1 =
    new CharacterField(message, HEADERSIZE + 65, 60, "EDSEMPNA1");
    fields[12] = fieldEDSEMPIDN =
    new CharacterField(message, HEADERSIZE + 125, 25, "EDSEMPIDN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field HDSUSERID using a String value.
  */
  public void setHDSUSERID(String newvalue)
  {
    fieldHDSUSERID.setString(newvalue);
  }

  /**
  * Get value of field HDSUSERID as a String.
  */
  public String getHDSUSERID()
  {
    return fieldHDSUSERID.getString();
  }

  /**
  * Set field HDSPROGRM using a String value.
  */
  public void setHDSPROGRM(String newvalue)
  {
    fieldHDSPROGRM.setString(newvalue);
  }

  /**
  * Get value of field HDSPROGRM as a String.
  */
  public String getHDSPROGRM()
  {
    return fieldHDSPROGRM.getString();
  }

  /**
  * Set field HDSTIMSYS using a String value.
  */
  public void setHDSTIMSYS(String newvalue)
  {
    fieldHDSTIMSYS.setString(newvalue);
  }

  /**
  * Get value of field HDSTIMSYS as a String.
  */
  public String getHDSTIMSYS()
  {
    return fieldHDSTIMSYS.getString();
  }

  /**
  * Set field HDSSCRCOD using a String value.
  */
  public void setHDSSCRCOD(String newvalue)
  {
    fieldHDSSCRCOD.setString(newvalue);
  }

  /**
  * Get value of field HDSSCRCOD as a String.
  */
  public String getHDSSCRCOD()
  {
    return fieldHDSSCRCOD.getString();
  }

  /**
  * Set field HDSOPECOD using a String value.
  */
  public void setHDSOPECOD(String newvalue)
  {
    fieldHDSOPECOD.setString(newvalue);
  }

  /**
  * Get value of field HDSOPECOD as a String.
  */
  public String getHDSOPECOD()
  {
    return fieldHDSOPECOD.getString();
  }

  /**
  * Set field HDSFLGMAS using a String value.
  */
  public void setHDSFLGMAS(String newvalue)
  {
    fieldHDSFLGMAS.setString(newvalue);
  }

  /**
  * Get value of field HDSFLGMAS as a String.
  */
  public String getHDSFLGMAS()
  {
    return fieldHDSFLGMAS.getString();
  }

  /**
  * Set field HDSFLGWK1 using a String value.
  */
  public void setHDSFLGWK1(String newvalue)
  {
    fieldHDSFLGWK1.setString(newvalue);
  }

  /**
  * Get value of field HDSFLGWK1 as a String.
  */
  public String getHDSFLGWK1()
  {
    return fieldHDSFLGWK1.getString();
  }

  /**
  * Set field HDSFLGWK2 using a String value.
  */
  public void setHDSFLGWK2(String newvalue)
  {
    fieldHDSFLGWK2.setString(newvalue);
  }

  /**
  * Get value of field HDSFLGWK2 as a String.
  */
  public String getHDSFLGWK2()
  {
    return fieldHDSFLGWK2.getString();
  }

  /**
  * Set field HDSFLGWK3 using a String value.
  */
  public void setHDSFLGWK3(String newvalue)
  {
    fieldHDSFLGWK3.setString(newvalue);
  }

  /**
  * Get value of field HDSFLGWK3 as a String.
  */
  public String getHDSFLGWK3()
  {
    return fieldHDSFLGWK3.getString();
  }

  /**
  * Set field EDSCOSECU using a String value.
  */
  public void setEDSCOSECU(String newvalue)
  {
    fieldEDSCOSECU.setString(newvalue);
  }

  /**
  * Get value of field EDSCOSECU as a String.
  */
  public String getEDSCOSECU()
  {
    return fieldEDSCOSECU.getString();
  }

  /**
  * Set numeric field EDSCOSECU using a BigDecimal value.
  */
  public void setEDSCOSECU(BigDecimal newvalue)
  {
    fieldEDSCOSECU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDSCOSECU as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDSCOSECU()
  {
    return fieldEDSCOSECU.getBigDecimal();
  }

  /**
  * Set field EDSCOSNUM using a String value.
  */
  public void setEDSCOSNUM(String newvalue)
  {
    fieldEDSCOSNUM.setString(newvalue);
  }

  /**
  * Get value of field EDSCOSNUM as a String.
  */
  public String getEDSCOSNUM()
  {
    return fieldEDSCOSNUM.getString();
  }

  /**
  * Set numeric field EDSCOSNUM using a BigDecimal value.
  */
  public void setEDSCOSNUM(BigDecimal newvalue)
  {
    fieldEDSCOSNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EDSCOSNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEDSCOSNUM()
  {
    return fieldEDSCOSNUM.getBigDecimal();
  }

  /**
  * Set field EDSEMPNA1 using a String value.
  */
  public void setEDSEMPNA1(String newvalue)
  {
    fieldEDSEMPNA1.setString(newvalue);
  }

  /**
  * Get value of field EDSEMPNA1 as a String.
  */
  public String getEDSEMPNA1()
  {
    return fieldEDSEMPNA1.getString();
  }

  /**
  * Set field EDSEMPIDN using a String value.
  */
  public void setEDSEMPIDN(String newvalue)
  {
    fieldEDSEMPIDN.setString(newvalue);
  }

  /**
  * Get value of field EDSEMPIDN as a String.
  */
  public String getEDSEMPIDN()
  {
    return fieldEDSEMPIDN.getString();
  }

}
