package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA010301 physical file definition.
* 
* File level identifier is 1180223152956.
* Record format level identifier is 3FC5D41E68F3B.
*/

public class ERA010301Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01RESFCL",
                                     "E01RESFLN",
                                     "E01RESNRE",
                                     "E01RESCUN",
                                     "D01RESCUN",
                                     "E01RESATU",
                                     "E01RESBRN",
                                     "D01RESBRN",
                                     "E01RESPCO",
                                     "E01RESMRE",
                                     "E01RESCCY",
                                     "E01RESNGA"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01RESFCL",
                                   "E01RESFLN",
                                   "E01RESNRE",
                                   "E01RESCUN",
                                   "D01RESCUN",
                                   "E01RESATU",
                                   "E01RESBRN",
                                   "D01RESBRN",
                                   "E01RESPCO",
                                   "E01RESMRE",
                                   "E01RESCCY",
                                   "E01RESNGA"
                                 };
  final static String fid = "1180223152956";
  final static String rid = "3FC5D41E68F3B";
  final static String fmtname = "ERA010301";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01RESFCL = null;
  private DecimalField fieldE01RESFLN = null;
  private DecimalField fieldE01RESNRE = null;
  private DecimalField fieldE01RESCUN = null;
  private CharacterField fieldD01RESCUN = null;
  private CharacterField fieldE01RESATU = null;
  private DecimalField fieldE01RESBRN = null;
  private CharacterField fieldD01RESBRN = null;
  private DecimalField fieldE01RESPCO = null;
  private DecimalField fieldE01RESMRE = null;
  private CharacterField fieldE01RESCCY = null;
  private DecimalField fieldE01RESNGA = null;

  /**
  * Constructor for ERA010301Message.
  */
  public ERA010301Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 235;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01RESFCL =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01RESFCL");
    fields[10] = fieldE01RESFLN =
    new DecimalField(message, HEADERSIZE + 52, 5, 0, "E01RESFLN");
    fields[11] = fieldE01RESNRE =
    new DecimalField(message, HEADERSIZE + 57, 13, 0, "E01RESNRE");
    fields[12] = fieldE01RESCUN =
    new DecimalField(message, HEADERSIZE + 70, 10, 0, "E01RESCUN");
    fields[13] = fieldD01RESCUN =
    new CharacterField(message, HEADERSIZE + 80, 45, "D01RESCUN");
    fields[14] = fieldE01RESATU =
    new CharacterField(message, HEADERSIZE + 125, 20, "E01RESATU");
    fields[15] = fieldE01RESBRN =
    new DecimalField(message, HEADERSIZE + 145, 5, 0, "E01RESBRN");
    fields[16] = fieldD01RESBRN =
    new CharacterField(message, HEADERSIZE + 150, 45, "D01RESBRN");
    fields[17] = fieldE01RESPCO =
    new DecimalField(message, HEADERSIZE + 195, 7, 2, "E01RESPCO");
    fields[18] = fieldE01RESMRE =
    new DecimalField(message, HEADERSIZE + 202, 17, 2, "E01RESMRE");
    fields[19] = fieldE01RESCCY =
    new CharacterField(message, HEADERSIZE + 219, 3, "E01RESCCY");
    fields[20] = fieldE01RESNGA =
    new DecimalField(message, HEADERSIZE + 222, 13, 0, "E01RESNGA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01RESFCL using a String value.
  */
  public void setE01RESFCL(String newvalue)
  {
    fieldE01RESFCL.setString(newvalue);
  }

  /**
  * Get value of field E01RESFCL as a String.
  */
  public String getE01RESFCL()
  {
    return fieldE01RESFCL.getString();
  }

  /**
  * Set numeric field E01RESFCL using a BigDecimal value.
  */
  public void setE01RESFCL(BigDecimal newvalue)
  {
    fieldE01RESFCL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESFCL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESFCL()
  {
    return fieldE01RESFCL.getBigDecimal();
  }

  /**
  * Set field E01RESFLN using a String value.
  */
  public void setE01RESFLN(String newvalue)
  {
    fieldE01RESFLN.setString(newvalue);
  }

  /**
  * Get value of field E01RESFLN as a String.
  */
  public String getE01RESFLN()
  {
    return fieldE01RESFLN.getString();
  }

  /**
  * Set numeric field E01RESFLN using a BigDecimal value.
  */
  public void setE01RESFLN(BigDecimal newvalue)
  {
    fieldE01RESFLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESFLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESFLN()
  {
    return fieldE01RESFLN.getBigDecimal();
  }

  /**
  * Set field E01RESNRE using a String value.
  */
  public void setE01RESNRE(String newvalue)
  {
    fieldE01RESNRE.setString(newvalue);
  }

  /**
  * Get value of field E01RESNRE as a String.
  */
  public String getE01RESNRE()
  {
    return fieldE01RESNRE.getString();
  }

  /**
  * Set numeric field E01RESNRE using a BigDecimal value.
  */
  public void setE01RESNRE(BigDecimal newvalue)
  {
    fieldE01RESNRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESNRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESNRE()
  {
    return fieldE01RESNRE.getBigDecimal();
  }

  /**
  * Set field E01RESCUN using a String value.
  */
  public void setE01RESCUN(String newvalue)
  {
    fieldE01RESCUN.setString(newvalue);
  }

  /**
  * Get value of field E01RESCUN as a String.
  */
  public String getE01RESCUN()
  {
    return fieldE01RESCUN.getString();
  }

  /**
  * Set numeric field E01RESCUN using a BigDecimal value.
  */
  public void setE01RESCUN(BigDecimal newvalue)
  {
    fieldE01RESCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESCUN()
  {
    return fieldE01RESCUN.getBigDecimal();
  }

  /**
  * Set field D01RESCUN using a String value.
  */
  public void setD01RESCUN(String newvalue)
  {
    fieldD01RESCUN.setString(newvalue);
  }

  /**
  * Get value of field D01RESCUN as a String.
  */
  public String getD01RESCUN()
  {
    return fieldD01RESCUN.getString();
  }

  /**
  * Set field E01RESATU using a String value.
  */
  public void setE01RESATU(String newvalue)
  {
    fieldE01RESATU.setString(newvalue);
  }

  /**
  * Get value of field E01RESATU as a String.
  */
  public String getE01RESATU()
  {
    return fieldE01RESATU.getString();
  }

  /**
  * Set field E01RESBRN using a String value.
  */
  public void setE01RESBRN(String newvalue)
  {
    fieldE01RESBRN.setString(newvalue);
  }

  /**
  * Get value of field E01RESBRN as a String.
  */
  public String getE01RESBRN()
  {
    return fieldE01RESBRN.getString();
  }

  /**
  * Set numeric field E01RESBRN using a BigDecimal value.
  */
  public void setE01RESBRN(BigDecimal newvalue)
  {
    fieldE01RESBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESBRN()
  {
    return fieldE01RESBRN.getBigDecimal();
  }

  /**
  * Set field D01RESBRN using a String value.
  */
  public void setD01RESBRN(String newvalue)
  {
    fieldD01RESBRN.setString(newvalue);
  }

  /**
  * Get value of field D01RESBRN as a String.
  */
  public String getD01RESBRN()
  {
    return fieldD01RESBRN.getString();
  }

  /**
  * Set field E01RESPCO using a String value.
  */
  public void setE01RESPCO(String newvalue)
  {
    fieldE01RESPCO.setString(newvalue);
  }

  /**
  * Get value of field E01RESPCO as a String.
  */
  public String getE01RESPCO()
  {
    return fieldE01RESPCO.getString();
  }

  /**
  * Set numeric field E01RESPCO using a BigDecimal value.
  */
  public void setE01RESPCO(BigDecimal newvalue)
  {
    fieldE01RESPCO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESPCO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESPCO()
  {
    return fieldE01RESPCO.getBigDecimal();
  }

  /**
  * Set field E01RESMRE using a String value.
  */
  public void setE01RESMRE(String newvalue)
  {
    fieldE01RESMRE.setString(newvalue);
  }

  /**
  * Get value of field E01RESMRE as a String.
  */
  public String getE01RESMRE()
  {
    return fieldE01RESMRE.getString();
  }

  /**
  * Set numeric field E01RESMRE using a BigDecimal value.
  */
  public void setE01RESMRE(BigDecimal newvalue)
  {
    fieldE01RESMRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESMRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESMRE()
  {
    return fieldE01RESMRE.getBigDecimal();
  }

  /**
  * Set field E01RESCCY using a String value.
  */
  public void setE01RESCCY(String newvalue)
  {
    fieldE01RESCCY.setString(newvalue);
  }

  /**
  * Get value of field E01RESCCY as a String.
  */
  public String getE01RESCCY()
  {
    return fieldE01RESCCY.getString();
  }

  /**
  * Set field E01RESNGA using a String value.
  */
  public void setE01RESNGA(String newvalue)
  {
    fieldE01RESNGA.setString(newvalue);
  }

  /**
  * Get value of field E01RESNGA as a String.
  */
  public String getE01RESNGA()
  {
    return fieldE01RESNGA.getString();
  }

  /**
  * Set numeric field E01RESNGA using a BigDecimal value.
  */
  public void setE01RESNGA(BigDecimal newvalue)
  {
    fieldE01RESNGA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RESNGA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RESNGA()
  {
    return fieldE01RESNGA.getBigDecimal();
  }

}
