package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA000001 physical file definition.
* 
* File level identifier is 1180405163348.
* Record format level identifier is 5A58499AED83A.
*/

public class ERA000001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01RCLACA",
                                     "E01RCLLNA",
                                     "E01RCLACCY",
                                     "E01RCLAPRO",
                                     "E01RCLATYP",
                                     "E01RCLAACD",
                                     "E01CUSCUN",
                                     "E01CUSNA1",
                                     "E01CUSPER",
                                     "E01RCLABAL",
                                     "E01RCLADIS",
                                     "E01RCLACB",
                                     "E01RCLBCCY",
                                     "E01RCLBPRO",
                                     "E01RCLBTYP",
                                     "E01RCLBACD",
                                     "E01RCLBCOL",
                                     "E01RCLOCOL",
                                     "E01RCLBDIS",
                                     "E01RCLBBAL",
                                     "E01ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01RCLACA",
                                   "E01RCLLNA",
                                   "E01RCLACCY",
                                   "E01RCLAPRO",
                                   "E01RCLATYP",
                                   "E01RCLAACD",
                                   "E01CUSCUN",
                                   "E01CUSNA1",
                                   "E01CUSPER",
                                   "E01RCLABAL",
                                   "E01RCLADIS",
                                   "E01RCLACB",
                                   "E01RCLBCCY",
                                   "E01RCLBPRO",
                                   "E01RCLBTYP",
                                   "E01RCLBACD",
                                   "E01RCLBCOL",
                                   "E01RCLOCOL",
                                   "E01RCLBDIS",
                                   "E01RCLBBAL",
                                   "E01ENDFLD"
                                 };
  final static String fid = "1180405163348";
  final static String rid = "5A58499AED83A";
  final static String fmtname = "ERA000001";
  final int FIELDCOUNT = 30;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01RCLACA = null;
  private DecimalField fieldE01RCLLNA = null;
  private CharacterField fieldE01RCLACCY = null;
  private CharacterField fieldE01RCLAPRO = null;
  private CharacterField fieldE01RCLATYP = null;
  private CharacterField fieldE01RCLAACD = null;
  private DecimalField fieldE01CUSCUN = null;
  private CharacterField fieldE01CUSNA1 = null;
  private DecimalField fieldE01CUSPER = null;
  private DecimalField fieldE01RCLABAL = null;
  private DecimalField fieldE01RCLADIS = null;
  private DecimalField fieldE01RCLACB = null;
  private CharacterField fieldE01RCLBCCY = null;
  private CharacterField fieldE01RCLBPRO = null;
  private CharacterField fieldE01RCLBTYP = null;
  private CharacterField fieldE01RCLBACD = null;
  private DecimalField fieldE01RCLBCOL = null;
  private DecimalField fieldE01RCLOCOL = null;
  private DecimalField fieldE01RCLBDIS = null;
  private DecimalField fieldE01RCLBBAL = null;
  private CharacterField fieldE01ENDFLD = null;

  /**
  * Constructor for ERA000001Message.
  */
  public ERA000001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 280;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01RCLACA =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01RCLACA");
    fields[10] = fieldE01RCLLNA =
    new DecimalField(message, HEADERSIZE + 55, 5, 0, "E01RCLLNA");
    fields[11] = fieldE01RCLACCY =
    new CharacterField(message, HEADERSIZE + 60, 3, "E01RCLACCY");
    fields[12] = fieldE01RCLAPRO =
    new CharacterField(message, HEADERSIZE + 63, 4, "E01RCLAPRO");
    fields[13] = fieldE01RCLATYP =
    new CharacterField(message, HEADERSIZE + 67, 4, "E01RCLATYP");
    fields[14] = fieldE01RCLAACD =
    new CharacterField(message, HEADERSIZE + 71, 2, "E01RCLAACD");
    fields[15] = fieldE01CUSCUN =
    new DecimalField(message, HEADERSIZE + 73, 10, 0, "E01CUSCUN");
    fields[16] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 83, 60, "E01CUSNA1");
    fields[17] = fieldE01CUSPER =
    new DecimalField(message, HEADERSIZE + 143, 8, 3, "E01CUSPER");
    fields[18] = fieldE01RCLABAL =
    new DecimalField(message, HEADERSIZE + 151, 17, 2, "E01RCLABAL");
    fields[19] = fieldE01RCLADIS =
    new DecimalField(message, HEADERSIZE + 168, 17, 2, "E01RCLADIS");
    fields[20] = fieldE01RCLACB =
    new DecimalField(message, HEADERSIZE + 185, 13, 0, "E01RCLACB");
    fields[21] = fieldE01RCLBCCY =
    new CharacterField(message, HEADERSIZE + 198, 3, "E01RCLBCCY");
    fields[22] = fieldE01RCLBPRO =
    new CharacterField(message, HEADERSIZE + 201, 4, "E01RCLBPRO");
    fields[23] = fieldE01RCLBTYP =
    new CharacterField(message, HEADERSIZE + 205, 4, "E01RCLBTYP");
    fields[24] = fieldE01RCLBACD =
    new CharacterField(message, HEADERSIZE + 209, 2, "E01RCLBACD");
    fields[25] = fieldE01RCLBCOL =
    new DecimalField(message, HEADERSIZE + 211, 17, 2, "E01RCLBCOL");
    fields[26] = fieldE01RCLOCOL =
    new DecimalField(message, HEADERSIZE + 228, 17, 2, "E01RCLOCOL");
    fields[27] = fieldE01RCLBDIS =
    new DecimalField(message, HEADERSIZE + 245, 17, 2, "E01RCLBDIS");
    fields[28] = fieldE01RCLBBAL =
    new DecimalField(message, HEADERSIZE + 262, 17, 2, "E01RCLBBAL");
    fields[29] = fieldE01ENDFLD =
    new CharacterField(message, HEADERSIZE + 279, 1, "E01ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01RCLACA using a String value.
  */
  public void setE01RCLACA(String newvalue)
  {
    fieldE01RCLACA.setString(newvalue);
  }

  /**
  * Get value of field E01RCLACA as a String.
  */
  public String getE01RCLACA()
  {
    return fieldE01RCLACA.getString();
  }

  /**
  * Set numeric field E01RCLACA using a BigDecimal value.
  */
  public void setE01RCLACA(BigDecimal newvalue)
  {
    fieldE01RCLACA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLACA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLACA()
  {
    return fieldE01RCLACA.getBigDecimal();
  }

  /**
  * Set field E01RCLLNA using a String value.
  */
  public void setE01RCLLNA(String newvalue)
  {
    fieldE01RCLLNA.setString(newvalue);
  }

  /**
  * Get value of field E01RCLLNA as a String.
  */
  public String getE01RCLLNA()
  {
    return fieldE01RCLLNA.getString();
  }

  /**
  * Set numeric field E01RCLLNA using a BigDecimal value.
  */
  public void setE01RCLLNA(BigDecimal newvalue)
  {
    fieldE01RCLLNA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLLNA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLLNA()
  {
    return fieldE01RCLLNA.getBigDecimal();
  }

  /**
  * Set field E01RCLACCY using a String value.
  */
  public void setE01RCLACCY(String newvalue)
  {
    fieldE01RCLACCY.setString(newvalue);
  }

  /**
  * Get value of field E01RCLACCY as a String.
  */
  public String getE01RCLACCY()
  {
    return fieldE01RCLACCY.getString();
  }

  /**
  * Set field E01RCLAPRO using a String value.
  */
  public void setE01RCLAPRO(String newvalue)
  {
    fieldE01RCLAPRO.setString(newvalue);
  }

  /**
  * Get value of field E01RCLAPRO as a String.
  */
  public String getE01RCLAPRO()
  {
    return fieldE01RCLAPRO.getString();
  }

  /**
  * Set field E01RCLATYP using a String value.
  */
  public void setE01RCLATYP(String newvalue)
  {
    fieldE01RCLATYP.setString(newvalue);
  }

  /**
  * Get value of field E01RCLATYP as a String.
  */
  public String getE01RCLATYP()
  {
    return fieldE01RCLATYP.getString();
  }

  /**
  * Set field E01RCLAACD using a String value.
  */
  public void setE01RCLAACD(String newvalue)
  {
    fieldE01RCLAACD.setString(newvalue);
  }

  /**
  * Get value of field E01RCLAACD as a String.
  */
  public String getE01RCLAACD()
  {
    return fieldE01RCLAACD.getString();
  }

  /**
  * Set field E01CUSCUN using a String value.
  */
  public void setE01CUSCUN(String newvalue)
  {
    fieldE01CUSCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUSCUN as a String.
  */
  public String getE01CUSCUN()
  {
    return fieldE01CUSCUN.getString();
  }

  /**
  * Set numeric field E01CUSCUN using a BigDecimal value.
  */
  public void setE01CUSCUN(BigDecimal newvalue)
  {
    fieldE01CUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSCUN()
  {
    return fieldE01CUSCUN.getBigDecimal();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUSPER using a String value.
  */
  public void setE01CUSPER(String newvalue)
  {
    fieldE01CUSPER.setString(newvalue);
  }

  /**
  * Get value of field E01CUSPER as a String.
  */
  public String getE01CUSPER()
  {
    return fieldE01CUSPER.getString();
  }

  /**
  * Set numeric field E01CUSPER using a BigDecimal value.
  */
  public void setE01CUSPER(BigDecimal newvalue)
  {
    fieldE01CUSPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUSPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUSPER()
  {
    return fieldE01CUSPER.getBigDecimal();
  }

  /**
  * Set field E01RCLABAL using a String value.
  */
  public void setE01RCLABAL(String newvalue)
  {
    fieldE01RCLABAL.setString(newvalue);
  }

  /**
  * Get value of field E01RCLABAL as a String.
  */
  public String getE01RCLABAL()
  {
    return fieldE01RCLABAL.getString();
  }

  /**
  * Set numeric field E01RCLABAL using a BigDecimal value.
  */
  public void setE01RCLABAL(BigDecimal newvalue)
  {
    fieldE01RCLABAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLABAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLABAL()
  {
    return fieldE01RCLABAL.getBigDecimal();
  }

  /**
  * Set field E01RCLADIS using a String value.
  */
  public void setE01RCLADIS(String newvalue)
  {
    fieldE01RCLADIS.setString(newvalue);
  }

  /**
  * Get value of field E01RCLADIS as a String.
  */
  public String getE01RCLADIS()
  {
    return fieldE01RCLADIS.getString();
  }

  /**
  * Set numeric field E01RCLADIS using a BigDecimal value.
  */
  public void setE01RCLADIS(BigDecimal newvalue)
  {
    fieldE01RCLADIS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLADIS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLADIS()
  {
    return fieldE01RCLADIS.getBigDecimal();
  }

  /**
  * Set field E01RCLACB using a String value.
  */
  public void setE01RCLACB(String newvalue)
  {
    fieldE01RCLACB.setString(newvalue);
  }

  /**
  * Get value of field E01RCLACB as a String.
  */
  public String getE01RCLACB()
  {
    return fieldE01RCLACB.getString();
  }

  /**
  * Set numeric field E01RCLACB using a BigDecimal value.
  */
  public void setE01RCLACB(BigDecimal newvalue)
  {
    fieldE01RCLACB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLACB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLACB()
  {
    return fieldE01RCLACB.getBigDecimal();
  }

  /**
  * Set field E01RCLBCCY using a String value.
  */
  public void setE01RCLBCCY(String newvalue)
  {
    fieldE01RCLBCCY.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBCCY as a String.
  */
  public String getE01RCLBCCY()
  {
    return fieldE01RCLBCCY.getString();
  }

  /**
  * Set field E01RCLBPRO using a String value.
  */
  public void setE01RCLBPRO(String newvalue)
  {
    fieldE01RCLBPRO.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBPRO as a String.
  */
  public String getE01RCLBPRO()
  {
    return fieldE01RCLBPRO.getString();
  }

  /**
  * Set field E01RCLBTYP using a String value.
  */
  public void setE01RCLBTYP(String newvalue)
  {
    fieldE01RCLBTYP.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBTYP as a String.
  */
  public String getE01RCLBTYP()
  {
    return fieldE01RCLBTYP.getString();
  }

  /**
  * Set field E01RCLBACD using a String value.
  */
  public void setE01RCLBACD(String newvalue)
  {
    fieldE01RCLBACD.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBACD as a String.
  */
  public String getE01RCLBACD()
  {
    return fieldE01RCLBACD.getString();
  }

  /**
  * Set field E01RCLBCOL using a String value.
  */
  public void setE01RCLBCOL(String newvalue)
  {
    fieldE01RCLBCOL.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBCOL as a String.
  */
  public String getE01RCLBCOL()
  {
    return fieldE01RCLBCOL.getString();
  }

  /**
  * Set numeric field E01RCLBCOL using a BigDecimal value.
  */
  public void setE01RCLBCOL(BigDecimal newvalue)
  {
    fieldE01RCLBCOL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLBCOL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLBCOL()
  {
    return fieldE01RCLBCOL.getBigDecimal();
  }

  /**
  * Set field E01RCLOCOL using a String value.
  */
  public void setE01RCLOCOL(String newvalue)
  {
    fieldE01RCLOCOL.setString(newvalue);
  }

  /**
  * Get value of field E01RCLOCOL as a String.
  */
  public String getE01RCLOCOL()
  {
    return fieldE01RCLOCOL.getString();
  }

  /**
  * Set numeric field E01RCLOCOL using a BigDecimal value.
  */
  public void setE01RCLOCOL(BigDecimal newvalue)
  {
    fieldE01RCLOCOL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLOCOL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLOCOL()
  {
    return fieldE01RCLOCOL.getBigDecimal();
  }

  /**
  * Set field E01RCLBDIS using a String value.
  */
  public void setE01RCLBDIS(String newvalue)
  {
    fieldE01RCLBDIS.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBDIS as a String.
  */
  public String getE01RCLBDIS()
  {
    return fieldE01RCLBDIS.getString();
  }

  /**
  * Set numeric field E01RCLBDIS using a BigDecimal value.
  */
  public void setE01RCLBDIS(BigDecimal newvalue)
  {
    fieldE01RCLBDIS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLBDIS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLBDIS()
  {
    return fieldE01RCLBDIS.getBigDecimal();
  }

  /**
  * Set field E01RCLBBAL using a String value.
  */
  public void setE01RCLBBAL(String newvalue)
  {
    fieldE01RCLBBAL.setString(newvalue);
  }

  /**
  * Get value of field E01RCLBBAL as a String.
  */
  public String getE01RCLBBAL()
  {
    return fieldE01RCLBBAL.getString();
  }

  /**
  * Set numeric field E01RCLBBAL using a BigDecimal value.
  */
  public void setE01RCLBBAL(BigDecimal newvalue)
  {
    fieldE01RCLBBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RCLBBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RCLBBAL()
  {
    return fieldE01RCLBBAL.getBigDecimal();
  }

  /**
  * Set field E01ENDFLD using a String value.
  */
  public void setE01ENDFLD(String newvalue)
  {
    fieldE01ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E01ENDFLD as a String.
  */
  public String getE01ENDFLD()
  {
    return fieldE01ENDFLD.getString();
  }

}
