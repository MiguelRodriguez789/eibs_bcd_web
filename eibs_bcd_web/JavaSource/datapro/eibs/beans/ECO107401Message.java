package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO107401 physical file definition.
* 
* File level identifier is 1150831193358.
* Record format level identifier is 32875D8ED29AE.
*/

public class ECO107401Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01ADHBNK",
                                     "E01ADHCCY",
                                     "E01ADHTIP",
                                     "E01ADHDTP",
                                     "E01ADHSUB",
                                     "E01ADHDST",
                                     "E01ADHGLB",
                                     "E01ADHUSR",
                                     "E01ADHUPD",
                                     "E01ADHUPM",
                                     "E01ADHUPY"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01ADHBNK",
                                   "E01ADHCCY",
                                   "E01ADHTIP",
                                   "E01ADHDTP",
                                   "E01ADHSUB",
                                   "E01ADHDST",
                                   "E01ADHGLB",
                                   "E01ADHUSR",
                                   "E01ADHUPD",
                                   "E01ADHUPM",
                                   "E01ADHUPY"
                                 };
  final static String fid = "1150831193358";
  final static String rid = "32875D8ED29AE";
  final static String fmtname = "ECO107401";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01ADHBNK = null;
  private CharacterField fieldE01ADHCCY = null;
  private CharacterField fieldE01ADHTIP = null;
  private CharacterField fieldE01ADHDTP = null;
  private CharacterField fieldE01ADHSUB = null;
  private CharacterField fieldE01ADHDST = null;
  private DecimalField fieldE01ADHGLB = null;
  private CharacterField fieldE01ADHUSR = null;
  private DecimalField fieldE01ADHUPD = null;
  private DecimalField fieldE01ADHUPM = null;
  private DecimalField fieldE01ADHUPY = null;

  /**
  * Constructor for ECO107401Message.
  */
  public ECO107401Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 163;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01ADHBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01ADHBNK");
    fields[10] = fieldE01ADHCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E01ADHCCY");
    fields[11] = fieldE01ADHTIP =
    new CharacterField(message, HEADERSIZE + 47, 4, "E01ADHTIP");
    fields[12] = fieldE01ADHDTP =
    new CharacterField(message, HEADERSIZE + 51, 35, "E01ADHDTP");
    fields[13] = fieldE01ADHSUB =
    new CharacterField(message, HEADERSIZE + 86, 4, "E01ADHSUB");
    fields[14] = fieldE01ADHDST =
    new CharacterField(message, HEADERSIZE + 90, 35, "E01ADHDST");
    fields[15] = fieldE01ADHGLB =
    new DecimalField(message, HEADERSIZE + 125, 17, 0, "E01ADHGLB");
    fields[16] = fieldE01ADHUSR =
    new CharacterField(message, HEADERSIZE + 142, 10, "E01ADHUSR");
    fields[17] = fieldE01ADHUPD =
    new DecimalField(message, HEADERSIZE + 152, 3, 0, "E01ADHUPD");
    fields[18] = fieldE01ADHUPM =
    new DecimalField(message, HEADERSIZE + 155, 3, 0, "E01ADHUPM");
    fields[19] = fieldE01ADHUPY =
    new DecimalField(message, HEADERSIZE + 158, 5, 0, "E01ADHUPY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01ADHBNK using a String value.
  */
  public void setE01ADHBNK(String newvalue)
  {
    fieldE01ADHBNK.setString(newvalue);
  }

  /**
  * Get value of field E01ADHBNK as a String.
  */
  public String getE01ADHBNK()
  {
    return fieldE01ADHBNK.getString();
  }

  /**
  * Set field E01ADHCCY using a String value.
  */
  public void setE01ADHCCY(String newvalue)
  {
    fieldE01ADHCCY.setString(newvalue);
  }

  /**
  * Get value of field E01ADHCCY as a String.
  */
  public String getE01ADHCCY()
  {
    return fieldE01ADHCCY.getString();
  }

  /**
  * Set field E01ADHTIP using a String value.
  */
  public void setE01ADHTIP(String newvalue)
  {
    fieldE01ADHTIP.setString(newvalue);
  }

  /**
  * Get value of field E01ADHTIP as a String.
  */
  public String getE01ADHTIP()
  {
    return fieldE01ADHTIP.getString();
  }

  /**
  * Set field E01ADHDTP using a String value.
  */
  public void setE01ADHDTP(String newvalue)
  {
    fieldE01ADHDTP.setString(newvalue);
  }

  /**
  * Get value of field E01ADHDTP as a String.
  */
  public String getE01ADHDTP()
  {
    return fieldE01ADHDTP.getString();
  }

  /**
  * Set field E01ADHSUB using a String value.
  */
  public void setE01ADHSUB(String newvalue)
  {
    fieldE01ADHSUB.setString(newvalue);
  }

  /**
  * Get value of field E01ADHSUB as a String.
  */
  public String getE01ADHSUB()
  {
    return fieldE01ADHSUB.getString();
  }

  /**
  * Set field E01ADHDST using a String value.
  */
  public void setE01ADHDST(String newvalue)
  {
    fieldE01ADHDST.setString(newvalue);
  }

  /**
  * Get value of field E01ADHDST as a String.
  */
  public String getE01ADHDST()
  {
    return fieldE01ADHDST.getString();
  }

  /**
  * Set field E01ADHGLB using a String value.
  */
  public void setE01ADHGLB(String newvalue)
  {
    fieldE01ADHGLB.setString(newvalue);
  }

  /**
  * Get value of field E01ADHGLB as a String.
  */
  public String getE01ADHGLB()
  {
    return fieldE01ADHGLB.getString();
  }

  /**
  * Set numeric field E01ADHGLB using a BigDecimal value.
  */
  public void setE01ADHGLB(BigDecimal newvalue)
  {
    fieldE01ADHGLB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ADHGLB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ADHGLB()
  {
    return fieldE01ADHGLB.getBigDecimal();
  }

  /**
  * Set field E01ADHUSR using a String value.
  */
  public void setE01ADHUSR(String newvalue)
  {
    fieldE01ADHUSR.setString(newvalue);
  }

  /**
  * Get value of field E01ADHUSR as a String.
  */
  public String getE01ADHUSR()
  {
    return fieldE01ADHUSR.getString();
  }

  /**
  * Set field E01ADHUPD using a String value.
  */
  public void setE01ADHUPD(String newvalue)
  {
    fieldE01ADHUPD.setString(newvalue);
  }

  /**
  * Get value of field E01ADHUPD as a String.
  */
  public String getE01ADHUPD()
  {
    return fieldE01ADHUPD.getString();
  }

  /**
  * Set numeric field E01ADHUPD using a BigDecimal value.
  */
  public void setE01ADHUPD(BigDecimal newvalue)
  {
    fieldE01ADHUPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ADHUPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ADHUPD()
  {
    return fieldE01ADHUPD.getBigDecimal();
  }

  /**
  * Set field E01ADHUPM using a String value.
  */
  public void setE01ADHUPM(String newvalue)
  {
    fieldE01ADHUPM.setString(newvalue);
  }

  /**
  * Get value of field E01ADHUPM as a String.
  */
  public String getE01ADHUPM()
  {
    return fieldE01ADHUPM.getString();
  }

  /**
  * Set numeric field E01ADHUPM using a BigDecimal value.
  */
  public void setE01ADHUPM(BigDecimal newvalue)
  {
    fieldE01ADHUPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ADHUPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ADHUPM()
  {
    return fieldE01ADHUPM.getBigDecimal();
  }

  /**
  * Set field E01ADHUPY using a String value.
  */
  public void setE01ADHUPY(String newvalue)
  {
    fieldE01ADHUPY.setString(newvalue);
  }

  /**
  * Get value of field E01ADHUPY as a String.
  */
  public String getE01ADHUPY()
  {
    return fieldE01ADHUPY.getString();
  }

  /**
  * Set numeric field E01ADHUPY using a BigDecimal value.
  */
  public void setE01ADHUPY(BigDecimal newvalue)
  {
    fieldE01ADHUPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ADHUPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ADHUPY()
  {
    return fieldE01ADHUPY.getBigDecimal();
  }

}
