package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD9005DS physical file definition.
* 
* File level identifier is 1180104111739.
* Record format level identifier is 3C1C150C3BDCD.
*/

public class EWD9005DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDFRC",
                                     "SWCTID",
                                     "SWCBRN",
                                     "SWCBRD",
                                     "SWCBTH",
                                     "SWCCCY",
                                     "SWCF01",
                                     "SWCCLF",
                                     "SWCCST",
                                     "SWCF02",
                                     "SWCRDM",
                                     "SWCRDD",
                                     "SWCRDY",
                                     "SWCTOP",
                                     "SWCMXC",
                                     "SWCPWD",
                                     "SWCPWF",
                                     "SWCOHD",
                                     "SWCLOD",
                                     "SWCNLD",
                                     "SWCTYP",
                                     "SWCBNK",
                                     "SWCUSU",
                                     "SWCCUR",
                                     "SWCGLN",
                                     "SWCMBL",
                                     "SWCFLW",
                                     "SWCFLD",
                                     "SWCTCN",
                                     "SWCONG",
                                     "SWCOHG",
                                     "SWCLOG",
                                     "SWCNLG",
                                     "SWCPLV",
                                     "SWCSTR",
                                     "SWCEND",
                                     "SWCLMM",
                                     "SWCLMD",
                                     "SWCLMY",
                                     "SWCLMT",
                                     "SWCLMU",
                                     "SWCREC",
                                     "SWCOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDFRC",
                                   "SWCTID",
                                   "SWCBRN",
                                   "SWCBRD",
                                   "SWCBTH",
                                   "SWCCCY",
                                   "SWCF01",
                                   "SWCCLF",
                                   "SWCCST",
                                   "SWCF02",
                                   "SWCRDM",
                                   "SWCRDD",
                                   "SWCRDY",
                                   "SWCTOP",
                                   "SWCMXC",
                                   "SWCPWD",
                                   "SWCPWF",
                                   "SWCOHD",
                                   "SWCLOD",
                                   "SWCNLD",
                                   "SWCTYP",
                                   "SWCBNK",
                                   "SWCUSU",
                                   "SWCCUR",
                                   "SWCGLN",
                                   "SWCMBL",
                                   "SWCFLW",
                                   "SWCFLD",
                                   "SWCTCN",
                                   "SWCONG",
                                   "SWCOHG",
                                   "SWCLOG",
                                   "SWCNLG",
                                   "SWCPLV",
                                   "SWCSTR",
                                   "SWCEND",
                                   "SWCLMM",
                                   "SWCLMD",
                                   "SWCLMY",
                                   "SWCLMT",
                                   "SWCLMU",
                                   "SWCREC",
                                   "SWCOPE"
                                 };
  final static String fid = "1180104111739";
  final static String rid = "3C1C150C3BDCD";
  final static String fmtname = "EWD9005DS";
  final int FIELDCOUNT = 45;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWCTID = null;
  private DecimalField fieldSWCBRN = null;
  private CharacterField fieldSWCBRD = null;
  private DecimalField fieldSWCBTH = null;
  private CharacterField fieldSWCCCY = null;
  private CharacterField fieldSWCF01 = null;
  private CharacterField fieldSWCCLF = null;
  private DecimalField fieldSWCCST = null;
  private CharacterField fieldSWCF02 = null;
  private DecimalField fieldSWCRDM = null;
  private DecimalField fieldSWCRDD = null;
  private DecimalField fieldSWCRDY = null;
  private DecimalField fieldSWCTOP = null;
  private DecimalField fieldSWCMXC = null;
  private CharacterField fieldSWCPWD = null;
  private CharacterField fieldSWCPWF = null;
  private DecimalField fieldSWCOHD = null;
  private DecimalField fieldSWCLOD = null;
  private DecimalField fieldSWCNLD = null;
  private CharacterField fieldSWCTYP = null;
  private CharacterField fieldSWCBNK = null;
  private CharacterField fieldSWCUSU = null;
  private CharacterField fieldSWCCUR = null;
  private DecimalField fieldSWCGLN = null;
  private DecimalField fieldSWCMBL = null;
  private DecimalField fieldSWCFLW = null;
  private DecimalField fieldSWCFLD = null;
  private DecimalField fieldSWCTCN = null;
  private DecimalField fieldSWCONG = null;
  private DecimalField fieldSWCOHG = null;
  private DecimalField fieldSWCLOG = null;
  private DecimalField fieldSWCNLG = null;
  private DecimalField fieldSWCPLV = null;
  private DecimalField fieldSWCSTR = null;
  private DecimalField fieldSWCEND = null;
  private DecimalField fieldSWCLMM = null;
  private DecimalField fieldSWCLMD = null;
  private DecimalField fieldSWCLMY = null;
  private CharacterField fieldSWCLMT = null;
  private CharacterField fieldSWCLMU = null;
  private DecimalField fieldSWCREC = null;
  private CharacterField fieldSWCOPE = null;

  /**
  * Constructor for EWD9005DSMessage.
  */
  public EWD9005DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 458;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
    fields[3] = fieldSWCTID =
    new CharacterField(message, HEADERSIZE + 19, 10, "SWCTID");
    fields[4] = fieldSWCBRN =
    new DecimalField(message, HEADERSIZE + 29, 5, 0, "SWCBRN");
    fields[5] = fieldSWCBRD =
    new CharacterField(message, HEADERSIZE + 34, 45, "SWCBRD");
    fields[6] = fieldSWCBTH =
    new DecimalField(message, HEADERSIZE + 79, 6, 0, "SWCBTH");
    fields[7] = fieldSWCCCY =
    new CharacterField(message, HEADERSIZE + 85, 3, "SWCCCY");
    fields[8] = fieldSWCF01 =
    new CharacterField(message, HEADERSIZE + 88, 2, "SWCF01");
    fields[9] = fieldSWCCLF =
    new CharacterField(message, HEADERSIZE + 90, 1, "SWCCLF");
    fields[10] = fieldSWCCST =
    new DecimalField(message, HEADERSIZE + 91, 9, 0, "SWCCST");
    fields[11] = fieldSWCF02 =
    new CharacterField(message, HEADERSIZE + 100, 2, "SWCF02");
    fields[12] = fieldSWCRDM =
    new DecimalField(message, HEADERSIZE + 102, 3, 0, "SWCRDM");
    fields[13] = fieldSWCRDD =
    new DecimalField(message, HEADERSIZE + 105, 3, 0, "SWCRDD");
    fields[14] = fieldSWCRDY =
    new DecimalField(message, HEADERSIZE + 108, 5, 0, "SWCRDY");
    fields[15] = fieldSWCTOP =
    new DecimalField(message, HEADERSIZE + 113, 17, 2, "SWCTOP");
    fields[16] = fieldSWCMXC =
    new DecimalField(message, HEADERSIZE + 130, 17, 2, "SWCMXC");
    fields[17] = fieldSWCPWD =
    new CharacterField(message, HEADERSIZE + 147, 64, "SWCPWD");
    fields[18] = fieldSWCPWF =
    new CharacterField(message, HEADERSIZE + 211, 1, "SWCPWF");
    fields[19] = fieldSWCOHD =
    new DecimalField(message, HEADERSIZE + 212, 3, 0, "SWCOHD");
    fields[20] = fieldSWCLOD =
    new DecimalField(message, HEADERSIZE + 215, 3, 0, "SWCLOD");
    fields[21] = fieldSWCNLD =
    new DecimalField(message, HEADERSIZE + 218, 3, 0, "SWCNLD");
    fields[22] = fieldSWCTYP =
    new CharacterField(message, HEADERSIZE + 221, 1, "SWCTYP");
    fields[23] = fieldSWCBNK =
    new CharacterField(message, HEADERSIZE + 222, 2, "SWCBNK");
    fields[24] = fieldSWCUSU =
    new CharacterField(message, HEADERSIZE + 224, 10, "SWCUSU");
    fields[25] = fieldSWCCUR =
    new CharacterField(message, HEADERSIZE + 234, 3, "SWCCUR");
    fields[26] = fieldSWCGLN =
    new DecimalField(message, HEADERSIZE + 237, 17, 0, "SWCGLN");
    fields[27] = fieldSWCMBL =
    new DecimalField(message, HEADERSIZE + 254, 17, 2, "SWCMBL");
    fields[28] = fieldSWCFLW =
    new DecimalField(message, HEADERSIZE + 271, 17, 2, "SWCFLW");
    fields[29] = fieldSWCFLD =
    new DecimalField(message, HEADERSIZE + 288, 17, 2, "SWCFLD");
    fields[30] = fieldSWCTCN =
    new DecimalField(message, HEADERSIZE + 305, 13, 0, "SWCTCN");
    fields[31] = fieldSWCONG =
    new DecimalField(message, HEADERSIZE + 318, 17, 0, "SWCONG");
    fields[32] = fieldSWCOHG =
    new DecimalField(message, HEADERSIZE + 335, 17, 0, "SWCOHG");
    fields[33] = fieldSWCLOG =
    new DecimalField(message, HEADERSIZE + 352, 17, 0, "SWCLOG");
    fields[34] = fieldSWCNLG =
    new DecimalField(message, HEADERSIZE + 369, 17, 0, "SWCNLG");
    fields[35] = fieldSWCPLV =
    new DecimalField(message, HEADERSIZE + 386, 2, 0, "SWCPLV");
    fields[36] = fieldSWCSTR =
    new DecimalField(message, HEADERSIZE + 388, 7, 0, "SWCSTR");
    fields[37] = fieldSWCEND =
    new DecimalField(message, HEADERSIZE + 395, 7, 0, "SWCEND");
    fields[38] = fieldSWCLMM =
    new DecimalField(message, HEADERSIZE + 402, 3, 0, "SWCLMM");
    fields[39] = fieldSWCLMD =
    new DecimalField(message, HEADERSIZE + 405, 3, 0, "SWCLMD");
    fields[40] = fieldSWCLMY =
    new DecimalField(message, HEADERSIZE + 408, 5, 0, "SWCLMY");
    fields[41] = fieldSWCLMT =
    new CharacterField(message, HEADERSIZE + 413, 26, "SWCLMT");
    fields[42] = fieldSWCLMU =
    new CharacterField(message, HEADERSIZE + 439, 10, "SWCLMU");
    fields[43] = fieldSWCREC =
    new DecimalField(message, HEADERSIZE + 449, 8, 0, "SWCREC");
    fields[44] = fieldSWCOPE =
    new CharacterField(message, HEADERSIZE + 457, 1, "SWCOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWCTID using a String value.
  */
  public void setSWCTID(String newvalue)
  {
    fieldSWCTID.setString(newvalue);
  }

  /**
  * Get value of field SWCTID as a String.
  */
  public String getSWCTID()
  {
    return fieldSWCTID.getString();
  }

  /**
  * Set field SWCBRN using a String value.
  */
  public void setSWCBRN(String newvalue)
  {
    fieldSWCBRN.setString(newvalue);
  }

  /**
  * Get value of field SWCBRN as a String.
  */
  public String getSWCBRN()
  {
    return fieldSWCBRN.getString();
  }

  /**
  * Set numeric field SWCBRN using a BigDecimal value.
  */
  public void setSWCBRN(BigDecimal newvalue)
  {
    fieldSWCBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCBRN()
  {
    return fieldSWCBRN.getBigDecimal();
  }

  /**
  * Set field SWCBRD using a String value.
  */
  public void setSWCBRD(String newvalue)
  {
    fieldSWCBRD.setString(newvalue);
  }

  /**
  * Get value of field SWCBRD as a String.
  */
  public String getSWCBRD()
  {
    return fieldSWCBRD.getString();
  }

  /**
  * Set field SWCBTH using a String value.
  */
  public void setSWCBTH(String newvalue)
  {
    fieldSWCBTH.setString(newvalue);
  }

  /**
  * Get value of field SWCBTH as a String.
  */
  public String getSWCBTH()
  {
    return fieldSWCBTH.getString();
  }

  /**
  * Set numeric field SWCBTH using a BigDecimal value.
  */
  public void setSWCBTH(BigDecimal newvalue)
  {
    fieldSWCBTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCBTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCBTH()
  {
    return fieldSWCBTH.getBigDecimal();
  }

  /**
  * Set field SWCCCY using a String value.
  */
  public void setSWCCCY(String newvalue)
  {
    fieldSWCCCY.setString(newvalue);
  }

  /**
  * Get value of field SWCCCY as a String.
  */
  public String getSWCCCY()
  {
    return fieldSWCCCY.getString();
  }

  /**
  * Set field SWCF01 using a String value.
  */
  public void setSWCF01(String newvalue)
  {
    fieldSWCF01.setString(newvalue);
  }

  /**
  * Get value of field SWCF01 as a String.
  */
  public String getSWCF01()
  {
    return fieldSWCF01.getString();
  }

  /**
  * Set field SWCCLF using a String value.
  */
  public void setSWCCLF(String newvalue)
  {
    fieldSWCCLF.setString(newvalue);
  }

  /**
  * Get value of field SWCCLF as a String.
  */
  public String getSWCCLF()
  {
    return fieldSWCCLF.getString();
  }

  /**
  * Set field SWCCST using a String value.
  */
  public void setSWCCST(String newvalue)
  {
    fieldSWCCST.setString(newvalue);
  }

  /**
  * Get value of field SWCCST as a String.
  */
  public String getSWCCST()
  {
    return fieldSWCCST.getString();
  }

  /**
  * Set numeric field SWCCST using a BigDecimal value.
  */
  public void setSWCCST(BigDecimal newvalue)
  {
    fieldSWCCST.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCCST as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCCST()
  {
    return fieldSWCCST.getBigDecimal();
  }

  /**
  * Set field SWCF02 using a String value.
  */
  public void setSWCF02(String newvalue)
  {
    fieldSWCF02.setString(newvalue);
  }

  /**
  * Get value of field SWCF02 as a String.
  */
  public String getSWCF02()
  {
    return fieldSWCF02.getString();
  }

  /**
  * Set field SWCRDM using a String value.
  */
  public void setSWCRDM(String newvalue)
  {
    fieldSWCRDM.setString(newvalue);
  }

  /**
  * Get value of field SWCRDM as a String.
  */
  public String getSWCRDM()
  {
    return fieldSWCRDM.getString();
  }

  /**
  * Set numeric field SWCRDM using a BigDecimal value.
  */
  public void setSWCRDM(BigDecimal newvalue)
  {
    fieldSWCRDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCRDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCRDM()
  {
    return fieldSWCRDM.getBigDecimal();
  }

  /**
  * Set field SWCRDD using a String value.
  */
  public void setSWCRDD(String newvalue)
  {
    fieldSWCRDD.setString(newvalue);
  }

  /**
  * Get value of field SWCRDD as a String.
  */
  public String getSWCRDD()
  {
    return fieldSWCRDD.getString();
  }

  /**
  * Set numeric field SWCRDD using a BigDecimal value.
  */
  public void setSWCRDD(BigDecimal newvalue)
  {
    fieldSWCRDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCRDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCRDD()
  {
    return fieldSWCRDD.getBigDecimal();
  }

  /**
  * Set field SWCRDY using a String value.
  */
  public void setSWCRDY(String newvalue)
  {
    fieldSWCRDY.setString(newvalue);
  }

  /**
  * Get value of field SWCRDY as a String.
  */
  public String getSWCRDY()
  {
    return fieldSWCRDY.getString();
  }

  /**
  * Set numeric field SWCRDY using a BigDecimal value.
  */
  public void setSWCRDY(BigDecimal newvalue)
  {
    fieldSWCRDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCRDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCRDY()
  {
    return fieldSWCRDY.getBigDecimal();
  }

  /**
  * Set field SWCTOP using a String value.
  */
  public void setSWCTOP(String newvalue)
  {
    fieldSWCTOP.setString(newvalue);
  }

  /**
  * Get value of field SWCTOP as a String.
  */
  public String getSWCTOP()
  {
    return fieldSWCTOP.getString();
  }

  /**
  * Set numeric field SWCTOP using a BigDecimal value.
  */
  public void setSWCTOP(BigDecimal newvalue)
  {
    fieldSWCTOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCTOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCTOP()
  {
    return fieldSWCTOP.getBigDecimal();
  }

  /**
  * Set field SWCMXC using a String value.
  */
  public void setSWCMXC(String newvalue)
  {
    fieldSWCMXC.setString(newvalue);
  }

  /**
  * Get value of field SWCMXC as a String.
  */
  public String getSWCMXC()
  {
    return fieldSWCMXC.getString();
  }

  /**
  * Set numeric field SWCMXC using a BigDecimal value.
  */
  public void setSWCMXC(BigDecimal newvalue)
  {
    fieldSWCMXC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCMXC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCMXC()
  {
    return fieldSWCMXC.getBigDecimal();
  }

  /**
  * Set field SWCPWD using a String value.
  */
  public void setSWCPWD(String newvalue)
  {
    fieldSWCPWD.setString(newvalue);
  }

  /**
  * Get value of field SWCPWD as a String.
  */
  public String getSWCPWD()
  {
    return fieldSWCPWD.getString();
  }

  /**
  * Set field SWCPWF using a String value.
  */
  public void setSWCPWF(String newvalue)
  {
    fieldSWCPWF.setString(newvalue);
  }

  /**
  * Get value of field SWCPWF as a String.
  */
  public String getSWCPWF()
  {
    return fieldSWCPWF.getString();
  }

  /**
  * Set field SWCOHD using a String value.
  */
  public void setSWCOHD(String newvalue)
  {
    fieldSWCOHD.setString(newvalue);
  }

  /**
  * Get value of field SWCOHD as a String.
  */
  public String getSWCOHD()
  {
    return fieldSWCOHD.getString();
  }

  /**
  * Set numeric field SWCOHD using a BigDecimal value.
  */
  public void setSWCOHD(BigDecimal newvalue)
  {
    fieldSWCOHD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCOHD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCOHD()
  {
    return fieldSWCOHD.getBigDecimal();
  }

  /**
  * Set field SWCLOD using a String value.
  */
  public void setSWCLOD(String newvalue)
  {
    fieldSWCLOD.setString(newvalue);
  }

  /**
  * Get value of field SWCLOD as a String.
  */
  public String getSWCLOD()
  {
    return fieldSWCLOD.getString();
  }

  /**
  * Set numeric field SWCLOD using a BigDecimal value.
  */
  public void setSWCLOD(BigDecimal newvalue)
  {
    fieldSWCLOD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCLOD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCLOD()
  {
    return fieldSWCLOD.getBigDecimal();
  }

  /**
  * Set field SWCNLD using a String value.
  */
  public void setSWCNLD(String newvalue)
  {
    fieldSWCNLD.setString(newvalue);
  }

  /**
  * Get value of field SWCNLD as a String.
  */
  public String getSWCNLD()
  {
    return fieldSWCNLD.getString();
  }

  /**
  * Set numeric field SWCNLD using a BigDecimal value.
  */
  public void setSWCNLD(BigDecimal newvalue)
  {
    fieldSWCNLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCNLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCNLD()
  {
    return fieldSWCNLD.getBigDecimal();
  }

  /**
  * Set field SWCTYP using a String value.
  */
  public void setSWCTYP(String newvalue)
  {
    fieldSWCTYP.setString(newvalue);
  }

  /**
  * Get value of field SWCTYP as a String.
  */
  public String getSWCTYP()
  {
    return fieldSWCTYP.getString();
  }

  /**
  * Set field SWCBNK using a String value.
  */
  public void setSWCBNK(String newvalue)
  {
    fieldSWCBNK.setString(newvalue);
  }

  /**
  * Get value of field SWCBNK as a String.
  */
  public String getSWCBNK()
  {
    return fieldSWCBNK.getString();
  }

  /**
  * Set field SWCUSU using a String value.
  */
  public void setSWCUSU(String newvalue)
  {
    fieldSWCUSU.setString(newvalue);
  }

  /**
  * Get value of field SWCUSU as a String.
  */
  public String getSWCUSU()
  {
    return fieldSWCUSU.getString();
  }

  /**
  * Set field SWCCUR using a String value.
  */
  public void setSWCCUR(String newvalue)
  {
    fieldSWCCUR.setString(newvalue);
  }

  /**
  * Get value of field SWCCUR as a String.
  */
  public String getSWCCUR()
  {
    return fieldSWCCUR.getString();
  }

  /**
  * Set field SWCGLN using a String value.
  */
  public void setSWCGLN(String newvalue)
  {
    fieldSWCGLN.setString(newvalue);
  }

  /**
  * Get value of field SWCGLN as a String.
  */
  public String getSWCGLN()
  {
    return fieldSWCGLN.getString();
  }

  /**
  * Set numeric field SWCGLN using a BigDecimal value.
  */
  public void setSWCGLN(BigDecimal newvalue)
  {
    fieldSWCGLN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCGLN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCGLN()
  {
    return fieldSWCGLN.getBigDecimal();
  }

  /**
  * Set field SWCMBL using a String value.
  */
  public void setSWCMBL(String newvalue)
  {
    fieldSWCMBL.setString(newvalue);
  }

  /**
  * Get value of field SWCMBL as a String.
  */
  public String getSWCMBL()
  {
    return fieldSWCMBL.getString();
  }

  /**
  * Set numeric field SWCMBL using a BigDecimal value.
  */
  public void setSWCMBL(BigDecimal newvalue)
  {
    fieldSWCMBL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCMBL as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCMBL()
  {
    return fieldSWCMBL.getBigDecimal();
  }

  /**
  * Set field SWCFLW using a String value.
  */
  public void setSWCFLW(String newvalue)
  {
    fieldSWCFLW.setString(newvalue);
  }

  /**
  * Get value of field SWCFLW as a String.
  */
  public String getSWCFLW()
  {
    return fieldSWCFLW.getString();
  }

  /**
  * Set numeric field SWCFLW using a BigDecimal value.
  */
  public void setSWCFLW(BigDecimal newvalue)
  {
    fieldSWCFLW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCFLW as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCFLW()
  {
    return fieldSWCFLW.getBigDecimal();
  }

  /**
  * Set field SWCFLD using a String value.
  */
  public void setSWCFLD(String newvalue)
  {
    fieldSWCFLD.setString(newvalue);
  }

  /**
  * Get value of field SWCFLD as a String.
  */
  public String getSWCFLD()
  {
    return fieldSWCFLD.getString();
  }

  /**
  * Set numeric field SWCFLD using a BigDecimal value.
  */
  public void setSWCFLD(BigDecimal newvalue)
  {
    fieldSWCFLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCFLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCFLD()
  {
    return fieldSWCFLD.getBigDecimal();
  }

  /**
  * Set field SWCTCN using a String value.
  */
  public void setSWCTCN(String newvalue)
  {
    fieldSWCTCN.setString(newvalue);
  }

  /**
  * Get value of field SWCTCN as a String.
  */
  public String getSWCTCN()
  {
    return fieldSWCTCN.getString();
  }

  /**
  * Set numeric field SWCTCN using a BigDecimal value.
  */
  public void setSWCTCN(BigDecimal newvalue)
  {
    fieldSWCTCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCTCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCTCN()
  {
    return fieldSWCTCN.getBigDecimal();
  }

  /**
  * Set field SWCONG using a String value.
  */
  public void setSWCONG(String newvalue)
  {
    fieldSWCONG.setString(newvalue);
  }

  /**
  * Get value of field SWCONG as a String.
  */
  public String getSWCONG()
  {
    return fieldSWCONG.getString();
  }

  /**
  * Set numeric field SWCONG using a BigDecimal value.
  */
  public void setSWCONG(BigDecimal newvalue)
  {
    fieldSWCONG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCONG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCONG()
  {
    return fieldSWCONG.getBigDecimal();
  }

  /**
  * Set field SWCOHG using a String value.
  */
  public void setSWCOHG(String newvalue)
  {
    fieldSWCOHG.setString(newvalue);
  }

  /**
  * Get value of field SWCOHG as a String.
  */
  public String getSWCOHG()
  {
    return fieldSWCOHG.getString();
  }

  /**
  * Set numeric field SWCOHG using a BigDecimal value.
  */
  public void setSWCOHG(BigDecimal newvalue)
  {
    fieldSWCOHG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCOHG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCOHG()
  {
    return fieldSWCOHG.getBigDecimal();
  }

  /**
  * Set field SWCLOG using a String value.
  */
  public void setSWCLOG(String newvalue)
  {
    fieldSWCLOG.setString(newvalue);
  }

  /**
  * Get value of field SWCLOG as a String.
  */
  public String getSWCLOG()
  {
    return fieldSWCLOG.getString();
  }

  /**
  * Set numeric field SWCLOG using a BigDecimal value.
  */
  public void setSWCLOG(BigDecimal newvalue)
  {
    fieldSWCLOG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCLOG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCLOG()
  {
    return fieldSWCLOG.getBigDecimal();
  }

  /**
  * Set field SWCNLG using a String value.
  */
  public void setSWCNLG(String newvalue)
  {
    fieldSWCNLG.setString(newvalue);
  }

  /**
  * Get value of field SWCNLG as a String.
  */
  public String getSWCNLG()
  {
    return fieldSWCNLG.getString();
  }

  /**
  * Set numeric field SWCNLG using a BigDecimal value.
  */
  public void setSWCNLG(BigDecimal newvalue)
  {
    fieldSWCNLG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCNLG as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCNLG()
  {
    return fieldSWCNLG.getBigDecimal();
  }

  /**
  * Set field SWCPLV using a String value.
  */
  public void setSWCPLV(String newvalue)
  {
    fieldSWCPLV.setString(newvalue);
  }

  /**
  * Get value of field SWCPLV as a String.
  */
  public String getSWCPLV()
  {
    return fieldSWCPLV.getString();
  }

  /**
  * Set numeric field SWCPLV using a BigDecimal value.
  */
  public void setSWCPLV(BigDecimal newvalue)
  {
    fieldSWCPLV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCPLV as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCPLV()
  {
    return fieldSWCPLV.getBigDecimal();
  }

  /**
  * Set field SWCSTR using a String value.
  */
  public void setSWCSTR(String newvalue)
  {
    fieldSWCSTR.setString(newvalue);
  }

  /**
  * Get value of field SWCSTR as a String.
  */
  public String getSWCSTR()
  {
    return fieldSWCSTR.getString();
  }

  /**
  * Set numeric field SWCSTR using a BigDecimal value.
  */
  public void setSWCSTR(BigDecimal newvalue)
  {
    fieldSWCSTR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCSTR as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCSTR()
  {
    return fieldSWCSTR.getBigDecimal();
  }

  /**
  * Set field SWCEND using a String value.
  */
  public void setSWCEND(String newvalue)
  {
    fieldSWCEND.setString(newvalue);
  }

  /**
  * Get value of field SWCEND as a String.
  */
  public String getSWCEND()
  {
    return fieldSWCEND.getString();
  }

  /**
  * Set numeric field SWCEND using a BigDecimal value.
  */
  public void setSWCEND(BigDecimal newvalue)
  {
    fieldSWCEND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCEND as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCEND()
  {
    return fieldSWCEND.getBigDecimal();
  }

  /**
  * Set field SWCLMM using a String value.
  */
  public void setSWCLMM(String newvalue)
  {
    fieldSWCLMM.setString(newvalue);
  }

  /**
  * Get value of field SWCLMM as a String.
  */
  public String getSWCLMM()
  {
    return fieldSWCLMM.getString();
  }

  /**
  * Set numeric field SWCLMM using a BigDecimal value.
  */
  public void setSWCLMM(BigDecimal newvalue)
  {
    fieldSWCLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCLMM()
  {
    return fieldSWCLMM.getBigDecimal();
  }

  /**
  * Set field SWCLMD using a String value.
  */
  public void setSWCLMD(String newvalue)
  {
    fieldSWCLMD.setString(newvalue);
  }

  /**
  * Get value of field SWCLMD as a String.
  */
  public String getSWCLMD()
  {
    return fieldSWCLMD.getString();
  }

  /**
  * Set numeric field SWCLMD using a BigDecimal value.
  */
  public void setSWCLMD(BigDecimal newvalue)
  {
    fieldSWCLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCLMD()
  {
    return fieldSWCLMD.getBigDecimal();
  }

  /**
  * Set field SWCLMY using a String value.
  */
  public void setSWCLMY(String newvalue)
  {
    fieldSWCLMY.setString(newvalue);
  }

  /**
  * Get value of field SWCLMY as a String.
  */
  public String getSWCLMY()
  {
    return fieldSWCLMY.getString();
  }

  /**
  * Set numeric field SWCLMY using a BigDecimal value.
  */
  public void setSWCLMY(BigDecimal newvalue)
  {
    fieldSWCLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCLMY()
  {
    return fieldSWCLMY.getBigDecimal();
  }

  /**
  * Set field SWCLMT using a String value.
  */
  public void setSWCLMT(String newvalue)
  {
    fieldSWCLMT.setString(newvalue);
  }

  /**
  * Get value of field SWCLMT as a String.
  */
  public String getSWCLMT()
  {
    return fieldSWCLMT.getString();
  }

  /**
  * Set field SWCLMU using a String value.
  */
  public void setSWCLMU(String newvalue)
  {
    fieldSWCLMU.setString(newvalue);
  }

  /**
  * Get value of field SWCLMU as a String.
  */
  public String getSWCLMU()
  {
    return fieldSWCLMU.getString();
  }

  /**
  * Set field SWCREC using a String value.
  */
  public void setSWCREC(String newvalue)
  {
    fieldSWCREC.setString(newvalue);
  }

  /**
  * Get value of field SWCREC as a String.
  */
  public String getSWCREC()
  {
    return fieldSWCREC.getString();
  }

  /**
  * Set numeric field SWCREC using a BigDecimal value.
  */
  public void setSWCREC(BigDecimal newvalue)
  {
    fieldSWCREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWCREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWCREC()
  {
    return fieldSWCREC.getBigDecimal();
  }

  /**
  * Set field SWCOPE using a String value.
  */
  public void setSWCOPE(String newvalue)
  {
    fieldSWCOPE.setString(newvalue);
  }

  /**
  * Get value of field SWCOPE as a String.
  */
  public String getSWCOPE()
  {
    return fieldSWCOPE.getString();
  }

}
