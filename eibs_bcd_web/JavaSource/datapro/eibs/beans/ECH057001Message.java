package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECH057001 physical file definition.
* 
* File level identifier is 1180515145223.
* Record format level identifier is 34A223F472F63.
*/

public class ECH057001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CHPACC",
                                     "E01CHPCCY",
                                     "E01CHPACD",
                                     "E01CHPPRO",
                                     "E01CHPCUN",
                                     "E01CHPNA1",
                                     "E01CHPOFC",
                                     "E01DSCOFC",
                                     "E01CHPNTC",
                                     "E01CHPMSK",
                                     "E01CHPASK",
                                     "E01CHPCBC",
                                     "E01CHPTCB",
                                     "E01CHPDTM",
                                     "E01CHPDTD",
                                     "E01CHPDTY",
                                     "E01CHMMGB",
                                     "E01CHMMNB",
                                     "E01CHPST0",
                                     "E01LSTODM",
                                     "E01LSTODD",
                                     "E01LSTODY",
                                     "E01OPNDTM",
                                     "E01OPNDTD",
                                     "E01OPNDTY",
                                     "E01CHMTNS",
                                     "E01CHMLDA",
                                     "E01CHMICK",
                                     "E01CHMNCH",
                                     "E01CHMTCH",
                                     "E01CHMDBR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CHPACC",
                                   "E01CHPCCY",
                                   "E01CHPACD",
                                   "E01CHPPRO",
                                   "E01CHPCUN",
                                   "E01CHPNA1",
                                   "E01CHPOFC",
                                   "E01DSCOFC",
                                   "E01CHPNTC",
                                   "E01CHPMSK",
                                   "E01CHPASK",
                                   "E01CHPCBC",
                                   "E01CHPTCB",
                                   "E01CHPDTM",
                                   "E01CHPDTD",
                                   "E01CHPDTY",
                                   "E01CHMMGB",
                                   "E01CHMMNB",
                                   "E01CHPST0",
                                   "E01LSTODM",
                                   "E01LSTODD",
                                   "E01LSTODY",
                                   "E01OPNDTM",
                                   "E01OPNDTD",
                                   "E01OPNDTY",
                                   "E01CHMTNS",
                                   "E01CHMLDA",
                                   "E01CHMICK",
                                   "E01CHMNCH",
                                   "E01CHMTCH",
                                   "E01CHMDBR"
                                 };
  final static String fid = "1180515145223";
  final static String rid = "34A223F472F63";
  final static String fmtname = "ECH057001";
  final int FIELDCOUNT = 40;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CHPACC = null;
  private CharacterField fieldE01CHPCCY = null;
  private CharacterField fieldE01CHPACD = null;
  private CharacterField fieldE01CHPPRO = null;
  private DecimalField fieldE01CHPCUN = null;
  private CharacterField fieldE01CHPNA1 = null;
  private CharacterField fieldE01CHPOFC = null;
  private CharacterField fieldE01DSCOFC = null;
  private DecimalField fieldE01CHPNTC = null;
  private DecimalField fieldE01CHPMSK = null;
  private DecimalField fieldE01CHPASK = null;
  private CharacterField fieldE01CHPCBC = null;
  private CharacterField fieldE01CHPTCB = null;
  private DecimalField fieldE01CHPDTM = null;
  private DecimalField fieldE01CHPDTD = null;
  private DecimalField fieldE01CHPDTY = null;
  private DecimalField fieldE01CHMMGB = null;
  private DecimalField fieldE01CHMMNB = null;
  private CharacterField fieldE01CHPST0 = null;
  private DecimalField fieldE01LSTODM = null;
  private DecimalField fieldE01LSTODD = null;
  private DecimalField fieldE01LSTODY = null;
  private DecimalField fieldE01OPNDTM = null;
  private DecimalField fieldE01OPNDTD = null;
  private DecimalField fieldE01OPNDTY = null;
  private DecimalField fieldE01CHMTNS = null;
  private DecimalField fieldE01CHMLDA = null;
  private DecimalField fieldE01CHMICK = null;
  private DecimalField fieldE01CHMNCH = null;
  private DecimalField fieldE01CHMTCH = null;
  private DecimalField fieldE01CHMDBR = null;

  /**
  * Constructor for ECH057001Message.
  */
  public ECH057001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 329;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CHPACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CHPACC");
    fields[10] = fieldE01CHPCCY =
    new CharacterField(message, HEADERSIZE + 55, 3, "E01CHPCCY");
    fields[11] = fieldE01CHPACD =
    new CharacterField(message, HEADERSIZE + 58, 2, "E01CHPACD");
    fields[12] = fieldE01CHPPRO =
    new CharacterField(message, HEADERSIZE + 60, 4, "E01CHPPRO");
    fields[13] = fieldE01CHPCUN =
    new DecimalField(message, HEADERSIZE + 64, 10, 0, "E01CHPCUN");
    fields[14] = fieldE01CHPNA1 =
    new CharacterField(message, HEADERSIZE + 74, 60, "E01CHPNA1");
    fields[15] = fieldE01CHPOFC =
    new CharacterField(message, HEADERSIZE + 134, 4, "E01CHPOFC");
    fields[16] = fieldE01DSCOFC =
    new CharacterField(message, HEADERSIZE + 138, 60, "E01DSCOFC");
    fields[17] = fieldE01CHPNTC =
    new DecimalField(message, HEADERSIZE + 198, 5, 0, "E01CHPNTC");
    fields[18] = fieldE01CHPMSK =
    new DecimalField(message, HEADERSIZE + 203, 3, 0, "E01CHPMSK");
    fields[19] = fieldE01CHPASK =
    new DecimalField(message, HEADERSIZE + 206, 3, 0, "E01CHPASK");
    fields[20] = fieldE01CHPCBC =
    new CharacterField(message, HEADERSIZE + 209, 1, "E01CHPCBC");
    fields[21] = fieldE01CHPTCB =
    new CharacterField(message, HEADERSIZE + 210, 2, "E01CHPTCB");
    fields[22] = fieldE01CHPDTM =
    new DecimalField(message, HEADERSIZE + 212, 3, 0, "E01CHPDTM");
    fields[23] = fieldE01CHPDTD =
    new DecimalField(message, HEADERSIZE + 215, 3, 0, "E01CHPDTD");
    fields[24] = fieldE01CHPDTY =
    new DecimalField(message, HEADERSIZE + 218, 5, 0, "E01CHPDTY");
    fields[25] = fieldE01CHMMGB =
    new DecimalField(message, HEADERSIZE + 223, 17, 2, "E01CHMMGB");
    fields[26] = fieldE01CHMMNB =
    new DecimalField(message, HEADERSIZE + 240, 17, 2, "E01CHMMNB");
    fields[27] = fieldE01CHPST0 =
    new CharacterField(message, HEADERSIZE + 257, 2, "E01CHPST0");
    fields[28] = fieldE01LSTODM =
    new DecimalField(message, HEADERSIZE + 259, 3, 0, "E01LSTODM");
    fields[29] = fieldE01LSTODD =
    new DecimalField(message, HEADERSIZE + 262, 3, 0, "E01LSTODD");
    fields[30] = fieldE01LSTODY =
    new DecimalField(message, HEADERSIZE + 265, 5, 0, "E01LSTODY");
    fields[31] = fieldE01OPNDTM =
    new DecimalField(message, HEADERSIZE + 270, 3, 0, "E01OPNDTM");
    fields[32] = fieldE01OPNDTD =
    new DecimalField(message, HEADERSIZE + 273, 3, 0, "E01OPNDTD");
    fields[33] = fieldE01OPNDTY =
    new DecimalField(message, HEADERSIZE + 276, 5, 0, "E01OPNDTY");
    fields[34] = fieldE01CHMTNS =
    new DecimalField(message, HEADERSIZE + 281, 6, 0, "E01CHMTNS");
    fields[35] = fieldE01CHMLDA =
    new DecimalField(message, HEADERSIZE + 287, 17, 2, "E01CHMLDA");
    fields[36] = fieldE01CHMICK =
    new DecimalField(message, HEADERSIZE + 304, 12, 0, "E01CHMICK");
    fields[37] = fieldE01CHMNCH =
    new DecimalField(message, HEADERSIZE + 316, 5, 0, "E01CHMNCH");
    fields[38] = fieldE01CHMTCH =
    new DecimalField(message, HEADERSIZE + 321, 3, 0, "E01CHMTCH");
    fields[39] = fieldE01CHMDBR =
    new DecimalField(message, HEADERSIZE + 324, 5, 0, "E01CHMDBR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CHPACC using a String value.
  */
  public void setE01CHPACC(String newvalue)
  {
    fieldE01CHPACC.setString(newvalue);
  }

  /**
  * Get value of field E01CHPACC as a String.
  */
  public String getE01CHPACC()
  {
    return fieldE01CHPACC.getString();
  }

  /**
  * Set numeric field E01CHPACC using a BigDecimal value.
  */
  public void setE01CHPACC(BigDecimal newvalue)
  {
    fieldE01CHPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPACC()
  {
    return fieldE01CHPACC.getBigDecimal();
  }

  /**
  * Set field E01CHPCCY using a String value.
  */
  public void setE01CHPCCY(String newvalue)
  {
    fieldE01CHPCCY.setString(newvalue);
  }

  /**
  * Get value of field E01CHPCCY as a String.
  */
  public String getE01CHPCCY()
  {
    return fieldE01CHPCCY.getString();
  }

  /**
  * Set field E01CHPACD using a String value.
  */
  public void setE01CHPACD(String newvalue)
  {
    fieldE01CHPACD.setString(newvalue);
  }

  /**
  * Get value of field E01CHPACD as a String.
  */
  public String getE01CHPACD()
  {
    return fieldE01CHPACD.getString();
  }

  /**
  * Set field E01CHPPRO using a String value.
  */
  public void setE01CHPPRO(String newvalue)
  {
    fieldE01CHPPRO.setString(newvalue);
  }

  /**
  * Get value of field E01CHPPRO as a String.
  */
  public String getE01CHPPRO()
  {
    return fieldE01CHPPRO.getString();
  }

  /**
  * Set field E01CHPCUN using a String value.
  */
  public void setE01CHPCUN(String newvalue)
  {
    fieldE01CHPCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CHPCUN as a String.
  */
  public String getE01CHPCUN()
  {
    return fieldE01CHPCUN.getString();
  }

  /**
  * Set numeric field E01CHPCUN using a BigDecimal value.
  */
  public void setE01CHPCUN(BigDecimal newvalue)
  {
    fieldE01CHPCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPCUN()
  {
    return fieldE01CHPCUN.getBigDecimal();
  }

  /**
  * Set field E01CHPNA1 using a String value.
  */
  public void setE01CHPNA1(String newvalue)
  {
    fieldE01CHPNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CHPNA1 as a String.
  */
  public String getE01CHPNA1()
  {
    return fieldE01CHPNA1.getString();
  }

  /**
  * Set field E01CHPOFC using a String value.
  */
  public void setE01CHPOFC(String newvalue)
  {
    fieldE01CHPOFC.setString(newvalue);
  }

  /**
  * Get value of field E01CHPOFC as a String.
  */
  public String getE01CHPOFC()
  {
    return fieldE01CHPOFC.getString();
  }

  /**
  * Set field E01DSCOFC using a String value.
  */
  public void setE01DSCOFC(String newvalue)
  {
    fieldE01DSCOFC.setString(newvalue);
  }

  /**
  * Get value of field E01DSCOFC as a String.
  */
  public String getE01DSCOFC()
  {
    return fieldE01DSCOFC.getString();
  }

  /**
  * Set field E01CHPNTC using a String value.
  */
  public void setE01CHPNTC(String newvalue)
  {
    fieldE01CHPNTC.setString(newvalue);
  }

  /**
  * Get value of field E01CHPNTC as a String.
  */
  public String getE01CHPNTC()
  {
    return fieldE01CHPNTC.getString();
  }

  /**
  * Set numeric field E01CHPNTC using a BigDecimal value.
  */
  public void setE01CHPNTC(BigDecimal newvalue)
  {
    fieldE01CHPNTC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPNTC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPNTC()
  {
    return fieldE01CHPNTC.getBigDecimal();
  }

  /**
  * Set field E01CHPMSK using a String value.
  */
  public void setE01CHPMSK(String newvalue)
  {
    fieldE01CHPMSK.setString(newvalue);
  }

  /**
  * Get value of field E01CHPMSK as a String.
  */
  public String getE01CHPMSK()
  {
    return fieldE01CHPMSK.getString();
  }

  /**
  * Set numeric field E01CHPMSK using a BigDecimal value.
  */
  public void setE01CHPMSK(BigDecimal newvalue)
  {
    fieldE01CHPMSK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPMSK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPMSK()
  {
    return fieldE01CHPMSK.getBigDecimal();
  }

  /**
  * Set field E01CHPASK using a String value.
  */
  public void setE01CHPASK(String newvalue)
  {
    fieldE01CHPASK.setString(newvalue);
  }

  /**
  * Get value of field E01CHPASK as a String.
  */
  public String getE01CHPASK()
  {
    return fieldE01CHPASK.getString();
  }

  /**
  * Set numeric field E01CHPASK using a BigDecimal value.
  */
  public void setE01CHPASK(BigDecimal newvalue)
  {
    fieldE01CHPASK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPASK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPASK()
  {
    return fieldE01CHPASK.getBigDecimal();
  }

  /**
  * Set field E01CHPCBC using a String value.
  */
  public void setE01CHPCBC(String newvalue)
  {
    fieldE01CHPCBC.setString(newvalue);
  }

  /**
  * Get value of field E01CHPCBC as a String.
  */
  public String getE01CHPCBC()
  {
    return fieldE01CHPCBC.getString();
  }

  /**
  * Set field E01CHPTCB using a String value.
  */
  public void setE01CHPTCB(String newvalue)
  {
    fieldE01CHPTCB.setString(newvalue);
  }

  /**
  * Get value of field E01CHPTCB as a String.
  */
  public String getE01CHPTCB()
  {
    return fieldE01CHPTCB.getString();
  }

  /**
  * Set field E01CHPDTM using a String value.
  */
  public void setE01CHPDTM(String newvalue)
  {
    fieldE01CHPDTM.setString(newvalue);
  }

  /**
  * Get value of field E01CHPDTM as a String.
  */
  public String getE01CHPDTM()
  {
    return fieldE01CHPDTM.getString();
  }

  /**
  * Set numeric field E01CHPDTM using a BigDecimal value.
  */
  public void setE01CHPDTM(BigDecimal newvalue)
  {
    fieldE01CHPDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPDTM()
  {
    return fieldE01CHPDTM.getBigDecimal();
  }

  /**
  * Set field E01CHPDTD using a String value.
  */
  public void setE01CHPDTD(String newvalue)
  {
    fieldE01CHPDTD.setString(newvalue);
  }

  /**
  * Get value of field E01CHPDTD as a String.
  */
  public String getE01CHPDTD()
  {
    return fieldE01CHPDTD.getString();
  }

  /**
  * Set numeric field E01CHPDTD using a BigDecimal value.
  */
  public void setE01CHPDTD(BigDecimal newvalue)
  {
    fieldE01CHPDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPDTD()
  {
    return fieldE01CHPDTD.getBigDecimal();
  }

  /**
  * Set field E01CHPDTY using a String value.
  */
  public void setE01CHPDTY(String newvalue)
  {
    fieldE01CHPDTY.setString(newvalue);
  }

  /**
  * Get value of field E01CHPDTY as a String.
  */
  public String getE01CHPDTY()
  {
    return fieldE01CHPDTY.getString();
  }

  /**
  * Set numeric field E01CHPDTY using a BigDecimal value.
  */
  public void setE01CHPDTY(BigDecimal newvalue)
  {
    fieldE01CHPDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHPDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHPDTY()
  {
    return fieldE01CHPDTY.getBigDecimal();
  }

  /**
  * Set field E01CHMMGB using a String value.
  */
  public void setE01CHMMGB(String newvalue)
  {
    fieldE01CHMMGB.setString(newvalue);
  }

  /**
  * Get value of field E01CHMMGB as a String.
  */
  public String getE01CHMMGB()
  {
    return fieldE01CHMMGB.getString();
  }

  /**
  * Set numeric field E01CHMMGB using a BigDecimal value.
  */
  public void setE01CHMMGB(BigDecimal newvalue)
  {
    fieldE01CHMMGB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMMGB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMMGB()
  {
    return fieldE01CHMMGB.getBigDecimal();
  }

  /**
  * Set field E01CHMMNB using a String value.
  */
  public void setE01CHMMNB(String newvalue)
  {
    fieldE01CHMMNB.setString(newvalue);
  }

  /**
  * Get value of field E01CHMMNB as a String.
  */
  public String getE01CHMMNB()
  {
    return fieldE01CHMMNB.getString();
  }

  /**
  * Set numeric field E01CHMMNB using a BigDecimal value.
  */
  public void setE01CHMMNB(BigDecimal newvalue)
  {
    fieldE01CHMMNB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMMNB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMMNB()
  {
    return fieldE01CHMMNB.getBigDecimal();
  }

  /**
  * Set field E01CHPST0 using a String value.
  */
  public void setE01CHPST0(String newvalue)
  {
    fieldE01CHPST0.setString(newvalue);
  }

  /**
  * Get value of field E01CHPST0 as a String.
  */
  public String getE01CHPST0()
  {
    return fieldE01CHPST0.getString();
  }

  /**
  * Set field E01LSTODM using a String value.
  */
  public void setE01LSTODM(String newvalue)
  {
    fieldE01LSTODM.setString(newvalue);
  }

  /**
  * Get value of field E01LSTODM as a String.
  */
  public String getE01LSTODM()
  {
    return fieldE01LSTODM.getString();
  }

  /**
  * Set numeric field E01LSTODM using a BigDecimal value.
  */
  public void setE01LSTODM(BigDecimal newvalue)
  {
    fieldE01LSTODM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LSTODM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LSTODM()
  {
    return fieldE01LSTODM.getBigDecimal();
  }

  /**
  * Set field E01LSTODD using a String value.
  */
  public void setE01LSTODD(String newvalue)
  {
    fieldE01LSTODD.setString(newvalue);
  }

  /**
  * Get value of field E01LSTODD as a String.
  */
  public String getE01LSTODD()
  {
    return fieldE01LSTODD.getString();
  }

  /**
  * Set numeric field E01LSTODD using a BigDecimal value.
  */
  public void setE01LSTODD(BigDecimal newvalue)
  {
    fieldE01LSTODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LSTODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LSTODD()
  {
    return fieldE01LSTODD.getBigDecimal();
  }

  /**
  * Set field E01LSTODY using a String value.
  */
  public void setE01LSTODY(String newvalue)
  {
    fieldE01LSTODY.setString(newvalue);
  }

  /**
  * Get value of field E01LSTODY as a String.
  */
  public String getE01LSTODY()
  {
    return fieldE01LSTODY.getString();
  }

  /**
  * Set numeric field E01LSTODY using a BigDecimal value.
  */
  public void setE01LSTODY(BigDecimal newvalue)
  {
    fieldE01LSTODY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01LSTODY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01LSTODY()
  {
    return fieldE01LSTODY.getBigDecimal();
  }

  /**
  * Set field E01OPNDTM using a String value.
  */
  public void setE01OPNDTM(String newvalue)
  {
    fieldE01OPNDTM.setString(newvalue);
  }

  /**
  * Get value of field E01OPNDTM as a String.
  */
  public String getE01OPNDTM()
  {
    return fieldE01OPNDTM.getString();
  }

  /**
  * Set numeric field E01OPNDTM using a BigDecimal value.
  */
  public void setE01OPNDTM(BigDecimal newvalue)
  {
    fieldE01OPNDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OPNDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OPNDTM()
  {
    return fieldE01OPNDTM.getBigDecimal();
  }

  /**
  * Set field E01OPNDTD using a String value.
  */
  public void setE01OPNDTD(String newvalue)
  {
    fieldE01OPNDTD.setString(newvalue);
  }

  /**
  * Get value of field E01OPNDTD as a String.
  */
  public String getE01OPNDTD()
  {
    return fieldE01OPNDTD.getString();
  }

  /**
  * Set numeric field E01OPNDTD using a BigDecimal value.
  */
  public void setE01OPNDTD(BigDecimal newvalue)
  {
    fieldE01OPNDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OPNDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OPNDTD()
  {
    return fieldE01OPNDTD.getBigDecimal();
  }

  /**
  * Set field E01OPNDTY using a String value.
  */
  public void setE01OPNDTY(String newvalue)
  {
    fieldE01OPNDTY.setString(newvalue);
  }

  /**
  * Get value of field E01OPNDTY as a String.
  */
  public String getE01OPNDTY()
  {
    return fieldE01OPNDTY.getString();
  }

  /**
  * Set numeric field E01OPNDTY using a BigDecimal value.
  */
  public void setE01OPNDTY(BigDecimal newvalue)
  {
    fieldE01OPNDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01OPNDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01OPNDTY()
  {
    return fieldE01OPNDTY.getBigDecimal();
  }

  /**
  * Set field E01CHMTNS using a String value.
  */
  public void setE01CHMTNS(String newvalue)
  {
    fieldE01CHMTNS.setString(newvalue);
  }

  /**
  * Get value of field E01CHMTNS as a String.
  */
  public String getE01CHMTNS()
  {
    return fieldE01CHMTNS.getString();
  }

  /**
  * Set numeric field E01CHMTNS using a BigDecimal value.
  */
  public void setE01CHMTNS(BigDecimal newvalue)
  {
    fieldE01CHMTNS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMTNS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMTNS()
  {
    return fieldE01CHMTNS.getBigDecimal();
  }

  /**
  * Set field E01CHMLDA using a String value.
  */
  public void setE01CHMLDA(String newvalue)
  {
    fieldE01CHMLDA.setString(newvalue);
  }

  /**
  * Get value of field E01CHMLDA as a String.
  */
  public String getE01CHMLDA()
  {
    return fieldE01CHMLDA.getString();
  }

  /**
  * Set numeric field E01CHMLDA using a BigDecimal value.
  */
  public void setE01CHMLDA(BigDecimal newvalue)
  {
    fieldE01CHMLDA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMLDA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMLDA()
  {
    return fieldE01CHMLDA.getBigDecimal();
  }

  /**
  * Set field E01CHMICK using a String value.
  */
  public void setE01CHMICK(String newvalue)
  {
    fieldE01CHMICK.setString(newvalue);
  }

  /**
  * Get value of field E01CHMICK as a String.
  */
  public String getE01CHMICK()
  {
    return fieldE01CHMICK.getString();
  }

  /**
  * Set numeric field E01CHMICK using a BigDecimal value.
  */
  public void setE01CHMICK(BigDecimal newvalue)
  {
    fieldE01CHMICK.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMICK as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMICK()
  {
    return fieldE01CHMICK.getBigDecimal();
  }

  /**
  * Set field E01CHMNCH using a String value.
  */
  public void setE01CHMNCH(String newvalue)
  {
    fieldE01CHMNCH.setString(newvalue);
  }

  /**
  * Get value of field E01CHMNCH as a String.
  */
  public String getE01CHMNCH()
  {
    return fieldE01CHMNCH.getString();
  }

  /**
  * Set numeric field E01CHMNCH using a BigDecimal value.
  */
  public void setE01CHMNCH(BigDecimal newvalue)
  {
    fieldE01CHMNCH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMNCH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMNCH()
  {
    return fieldE01CHMNCH.getBigDecimal();
  }

  /**
  * Set field E01CHMTCH using a String value.
  */
  public void setE01CHMTCH(String newvalue)
  {
    fieldE01CHMTCH.setString(newvalue);
  }

  /**
  * Get value of field E01CHMTCH as a String.
  */
  public String getE01CHMTCH()
  {
    return fieldE01CHMTCH.getString();
  }

  /**
  * Set numeric field E01CHMTCH using a BigDecimal value.
  */
  public void setE01CHMTCH(BigDecimal newvalue)
  {
    fieldE01CHMTCH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMTCH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMTCH()
  {
    return fieldE01CHMTCH.getBigDecimal();
  }

  /**
  * Set field E01CHMDBR using a String value.
  */
  public void setE01CHMDBR(String newvalue)
  {
    fieldE01CHMDBR.setString(newvalue);
  }

  /**
  * Get value of field E01CHMDBR as a String.
  */
  public String getE01CHMDBR()
  {
    return fieldE01CHMDBR.getString();
  }

  /**
  * Set numeric field E01CHMDBR using a BigDecimal value.
  */
  public void setE01CHMDBR(BigDecimal newvalue)
  {
    fieldE01CHMDBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHMDBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHMDBR()
  {
    return fieldE01CHMDBR.getBigDecimal();
  }

}
