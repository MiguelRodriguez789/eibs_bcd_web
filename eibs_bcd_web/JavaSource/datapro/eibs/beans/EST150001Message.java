package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EST150001 physical file definition.
* 
* File level identifier is 1100706173700.
* Record format level identifier is 38229192ABB40.
*/

public class EST150001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSBK",
                                     "EWDSCA",
                                     "EWDSEL",
                                     "EWDSHR",
                                     "EWDNME",
                                     "EWDACC",
                                     "EWDBRN",
                                     "EWDCCY",
                                     "EWDATY",
                                     "EWDPRD",
                                     "EWDAMT",
                                     "EWDREC",
                                     "EWDOPE",
                                     "EWDIDN"
                                   };
  final static String tnames[] = {
                                   "EWDSBK",
                                   "EWDSCA",
                                   "EWDSEL",
                                   "EWDSHR",
                                   "EWDNME",
                                   "EWDACC",
                                   "EWDBRN",
                                   "EWDCCY",
                                   "EWDATY",
                                   "EWDPRD",
                                   "EWDAMT",
                                   "EWDREC",
                                   "EWDOPE",
                                   "EWDIDN"
                                 };
  final static String fid = "1100706173700";
  final static String rid = "38229192ABB40";
  final static String fmtname = "EST150001";
  final int FIELDCOUNT = 14;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSBK = null;
  private CharacterField fieldEWDSCA = null;
  private CharacterField fieldEWDSEL = null;
  private CharacterField fieldEWDSHR = null;
  private CharacterField fieldEWDNME = null;
  private DecimalField fieldEWDACC = null;
  private DecimalField fieldEWDBRN = null;
  private CharacterField fieldEWDCCY = null;
  private CharacterField fieldEWDATY = null;
  private CharacterField fieldEWDPRD = null;
  private DecimalField fieldEWDAMT = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;
  private CharacterField fieldEWDIDN = null;

  /**
  * Constructor for EST150001Message.
  */
  public EST150001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 129;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSBK =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDSBK");
    fields[1] = fieldEWDSCA =
    new CharacterField(message, HEADERSIZE + 2, 2, "EWDSCA");
    fields[2] = fieldEWDSEL =
    new CharacterField(message, HEADERSIZE + 4, 1, "EWDSEL");
    fields[3] = fieldEWDSHR =
    new CharacterField(message, HEADERSIZE + 5, 20, "EWDSHR");
    fields[4] = fieldEWDNME =
    new CharacterField(message, HEADERSIZE + 25, 35, "EWDNME");
    fields[5] = fieldEWDACC =
    new DecimalField(message, HEADERSIZE + 60, 13, 0, "EWDACC");
    fields[6] = fieldEWDBRN =
    new DecimalField(message, HEADERSIZE + 73, 4, 0, "EWDBRN");
    fields[7] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 77, 3, "EWDCCY");
    fields[8] = fieldEWDATY =
    new CharacterField(message, HEADERSIZE + 80, 4, "EWDATY");
    fields[9] = fieldEWDPRD =
    new CharacterField(message, HEADERSIZE + 84, 4, "EWDPRD");
    fields[10] = fieldEWDAMT =
    new DecimalField(message, HEADERSIZE + 88, 17, 2, "EWDAMT");
    fields[11] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 105, 8, 0, "EWDREC");
    fields[12] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 113, 1, "EWDOPE");
    fields[13] = fieldEWDIDN =
    new CharacterField(message, HEADERSIZE + 114, 15, "EWDIDN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSBK using a String value.
  */
  public void setEWDSBK(String newvalue)
  {
    fieldEWDSBK.setString(newvalue);
  }

  /**
  * Get value of field EWDSBK as a String.
  */
  public String getEWDSBK()
  {
    return fieldEWDSBK.getString();
  }

  /**
  * Set field EWDSCA using a String value.
  */
  public void setEWDSCA(String newvalue)
  {
    fieldEWDSCA.setString(newvalue);
  }

  /**
  * Get value of field EWDSCA as a String.
  */
  public String getEWDSCA()
  {
    return fieldEWDSCA.getString();
  }

  /**
  * Set field EWDSEL using a String value.
  */
  public void setEWDSEL(String newvalue)
  {
    fieldEWDSEL.setString(newvalue);
  }

  /**
  * Get value of field EWDSEL as a String.
  */
  public String getEWDSEL()
  {
    return fieldEWDSEL.getString();
  }

  /**
  * Set field EWDSHR using a String value.
  */
  public void setEWDSHR(String newvalue)
  {
    fieldEWDSHR.setString(newvalue);
  }

  /**
  * Get value of field EWDSHR as a String.
  */
  public String getEWDSHR()
  {
    return fieldEWDSHR.getString();
  }

  /**
  * Set field EWDNME using a String value.
  */
  public void setEWDNME(String newvalue)
  {
    fieldEWDNME.setString(newvalue);
  }

  /**
  * Get value of field EWDNME as a String.
  */
  public String getEWDNME()
  {
    return fieldEWDNME.getString();
  }

  /**
  * Set field EWDACC using a String value.
  */
  public void setEWDACC(String newvalue)
  {
    fieldEWDACC.setString(newvalue);
  }

  /**
  * Get value of field EWDACC as a String.
  */
  public String getEWDACC()
  {
    return fieldEWDACC.getString();
  }

  /**
  * Set numeric field EWDACC using a BigDecimal value.
  */
  public void setEWDACC(BigDecimal newvalue)
  {
    fieldEWDACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDACC()
  {
    return fieldEWDACC.getBigDecimal();
  }

  /**
  * Set field EWDBRN using a String value.
  */
  public void setEWDBRN(String newvalue)
  {
    fieldEWDBRN.setString(newvalue);
  }

  /**
  * Get value of field EWDBRN as a String.
  */
  public String getEWDBRN()
  {
    return fieldEWDBRN.getString();
  }

  /**
  * Set numeric field EWDBRN using a BigDecimal value.
  */
  public void setEWDBRN(BigDecimal newvalue)
  {
    fieldEWDBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDBRN()
  {
    return fieldEWDBRN.getBigDecimal();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDATY using a String value.
  */
  public void setEWDATY(String newvalue)
  {
    fieldEWDATY.setString(newvalue);
  }

  /**
  * Get value of field EWDATY as a String.
  */
  public String getEWDATY()
  {
    return fieldEWDATY.getString();
  }

  /**
  * Set field EWDPRD using a String value.
  */
  public void setEWDPRD(String newvalue)
  {
    fieldEWDPRD.setString(newvalue);
  }

  /**
  * Get value of field EWDPRD as a String.
  */
  public String getEWDPRD()
  {
    return fieldEWDPRD.getString();
  }

  /**
  * Set field EWDAMT using a String value.
  */
  public void setEWDAMT(String newvalue)
  {
    fieldEWDAMT.setString(newvalue);
  }

  /**
  * Get value of field EWDAMT as a String.
  */
  public String getEWDAMT()
  {
    return fieldEWDAMT.getString();
  }

  /**
  * Set numeric field EWDAMT using a BigDecimal value.
  */
  public void setEWDAMT(BigDecimal newvalue)
  {
    fieldEWDAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDAMT()
  {
    return fieldEWDAMT.getBigDecimal();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

  /**
  * Set field EWDIDN using a String value.
  */
  public void setEWDIDN(String newvalue)
  {
    fieldEWDIDN.setString(newvalue);
  }

  /**
  * Get value of field EWDIDN as a String.
  */
  public String getEWDIDN()
  {
    return fieldEWDIDN.getString();
  }

}
