package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL018002 physical file definition.
* 
* File level identifier is 1130611112916.
* Record format level identifier is 4BB8AA6935DBC.
*/

public class EDL018002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DLSACC",
                                     "E02DLSODM",
                                     "E02DLSODD",
                                     "E02DLSODY",
                                     "E02DLSSEQ",
                                     "E02DLSNAR",
                                     "E02DLSREF",
                                     "E02DLSAMT"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DLSACC",
                                   "E02DLSODM",
                                   "E02DLSODD",
                                   "E02DLSODY",
                                   "E02DLSSEQ",
                                   "E02DLSNAR",
                                   "E02DLSREF",
                                   "E02DLSAMT"
                                 };
  final static String fid = "1130611112916";
  final static String rid = "4BB8AA6935DBC";
  final static String fmtname = "EDL018002";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DLSACC = null;
  private DecimalField fieldE02DLSODM = null;
  private DecimalField fieldE02DLSODD = null;
  private DecimalField fieldE02DLSODY = null;
  private DecimalField fieldE02DLSSEQ = null;
  private CharacterField fieldE02DLSNAR = null;
  private CharacterField fieldE02DLSREF = null;
  private DecimalField fieldE02DLSAMT = null;

  /**
  * Constructor for EDL018002Message.
  */
  public EDL018002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 176;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DLSACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DLSACC");
    fields[10] = fieldE02DLSODM =
    new DecimalField(message, HEADERSIZE + 55, 3, 0, "E02DLSODM");
    fields[11] = fieldE02DLSODD =
    new DecimalField(message, HEADERSIZE + 58, 3, 0, "E02DLSODD");
    fields[12] = fieldE02DLSODY =
    new DecimalField(message, HEADERSIZE + 61, 5, 0, "E02DLSODY");
    fields[13] = fieldE02DLSSEQ =
    new DecimalField(message, HEADERSIZE + 66, 3, 0, "E02DLSSEQ");
    fields[14] = fieldE02DLSNAR =
    new CharacterField(message, HEADERSIZE + 69, 45, "E02DLSNAR");
    fields[15] = fieldE02DLSREF =
    new CharacterField(message, HEADERSIZE + 114, 45, "E02DLSREF");
    fields[16] = fieldE02DLSAMT =
    new DecimalField(message, HEADERSIZE + 159, 17, 2, "E02DLSAMT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DLSACC using a String value.
  */
  public void setE02DLSACC(String newvalue)
  {
    fieldE02DLSACC.setString(newvalue);
  }

  /**
  * Get value of field E02DLSACC as a String.
  */
  public String getE02DLSACC()
  {
    return fieldE02DLSACC.getString();
  }

  /**
  * Set numeric field E02DLSACC using a BigDecimal value.
  */
  public void setE02DLSACC(BigDecimal newvalue)
  {
    fieldE02DLSACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSACC()
  {
    return fieldE02DLSACC.getBigDecimal();
  }

  /**
  * Set field E02DLSODM using a String value.
  */
  public void setE02DLSODM(String newvalue)
  {
    fieldE02DLSODM.setString(newvalue);
  }

  /**
  * Get value of field E02DLSODM as a String.
  */
  public String getE02DLSODM()
  {
    return fieldE02DLSODM.getString();
  }

  /**
  * Set numeric field E02DLSODM using a BigDecimal value.
  */
  public void setE02DLSODM(BigDecimal newvalue)
  {
    fieldE02DLSODM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSODM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSODM()
  {
    return fieldE02DLSODM.getBigDecimal();
  }

  /**
  * Set field E02DLSODD using a String value.
  */
  public void setE02DLSODD(String newvalue)
  {
    fieldE02DLSODD.setString(newvalue);
  }

  /**
  * Get value of field E02DLSODD as a String.
  */
  public String getE02DLSODD()
  {
    return fieldE02DLSODD.getString();
  }

  /**
  * Set numeric field E02DLSODD using a BigDecimal value.
  */
  public void setE02DLSODD(BigDecimal newvalue)
  {
    fieldE02DLSODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSODD()
  {
    return fieldE02DLSODD.getBigDecimal();
  }

  /**
  * Set field E02DLSODY using a String value.
  */
  public void setE02DLSODY(String newvalue)
  {
    fieldE02DLSODY.setString(newvalue);
  }

  /**
  * Get value of field E02DLSODY as a String.
  */
  public String getE02DLSODY()
  {
    return fieldE02DLSODY.getString();
  }

  /**
  * Set numeric field E02DLSODY using a BigDecimal value.
  */
  public void setE02DLSODY(BigDecimal newvalue)
  {
    fieldE02DLSODY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSODY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSODY()
  {
    return fieldE02DLSODY.getBigDecimal();
  }

  /**
  * Set field E02DLSSEQ using a String value.
  */
  public void setE02DLSSEQ(String newvalue)
  {
    fieldE02DLSSEQ.setString(newvalue);
  }

  /**
  * Get value of field E02DLSSEQ as a String.
  */
  public String getE02DLSSEQ()
  {
    return fieldE02DLSSEQ.getString();
  }

  /**
  * Set numeric field E02DLSSEQ using a BigDecimal value.
  */
  public void setE02DLSSEQ(BigDecimal newvalue)
  {
    fieldE02DLSSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSSEQ()
  {
    return fieldE02DLSSEQ.getBigDecimal();
  }

  /**
  * Set field E02DLSNAR using a String value.
  */
  public void setE02DLSNAR(String newvalue)
  {
    fieldE02DLSNAR.setString(newvalue);
  }

  /**
  * Get value of field E02DLSNAR as a String.
  */
  public String getE02DLSNAR()
  {
    return fieldE02DLSNAR.getString();
  }

  /**
  * Set field E02DLSREF using a String value.
  */
  public void setE02DLSREF(String newvalue)
  {
    fieldE02DLSREF.setString(newvalue);
  }

  /**
  * Get value of field E02DLSREF as a String.
  */
  public String getE02DLSREF()
  {
    return fieldE02DLSREF.getString();
  }

  /**
  * Set field E02DLSAMT using a String value.
  */
  public void setE02DLSAMT(String newvalue)
  {
    fieldE02DLSAMT.setString(newvalue);
  }

  /**
  * Get value of field E02DLSAMT as a String.
  */
  public String getE02DLSAMT()
  {
    return fieldE02DLSAMT.getString();
  }

  /**
  * Set numeric field E02DLSAMT using a BigDecimal value.
  */
  public void setE02DLSAMT(BigDecimal newvalue)
  {
    fieldE02DLSAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DLSAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DLSAMT()
  {
    return fieldE02DLSAMT.getBigDecimal();
  }

}
