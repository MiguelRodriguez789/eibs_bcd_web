package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EUT011002 physical file definition.
* 
* File level identifier is 1130912113643.
* Record format level identifier is 55123CC36BE89.
*/

public class EUT011002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02CMMSID",
                                     "E02CMIDEN",
                                     "E02CMILIF",
                                     "E02CMENDS",
                                     "E02CMIMFL",
                                     "E02CMTGAD",
                                     "E02CMTGPO"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02CMMSID",
                                   "E02CMIDEN",
                                   "E02CMILIF",
                                   "E02CMENDS",
                                   "E02CMIMFL",
                                   "E02CMTGAD",
                                   "E02CMTGPO"
                                 };
  final static String fid = "1130912113643";
  final static String rid = "55123CC36BE89";
  final static String fmtname = "EUT011002";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02CMMSID = null;
  private CharacterField fieldE02CMIDEN = null;
  private CharacterField fieldE02CMILIF = null;
  private CharacterField fieldE02CMENDS = null;
  private CharacterField fieldE02CMIMFL = null;
  private CharacterField fieldE02CMTGAD = null;
  private CharacterField fieldE02CMTGPO = null;

  /**
  * Constructor for EUT011002Message.
  */
  public EUT011002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 487;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02CMMSID =
    new CharacterField(message, HEADERSIZE + 42, 6, "E02CMMSID");
    fields[10] = fieldE02CMIDEN =
    new CharacterField(message, HEADERSIZE + 48, 3, "E02CMIDEN");
    fields[11] = fieldE02CMILIF =
    new CharacterField(message, HEADERSIZE + 51, 1, "E02CMILIF");
    fields[12] = fieldE02CMENDS =
    new CharacterField(message, HEADERSIZE + 52, 80, "E02CMENDS");
    fields[13] = fieldE02CMIMFL =
    new CharacterField(message, HEADERSIZE + 132, 50, "E02CMIMFL");
    fields[14] = fieldE02CMTGAD =
    new CharacterField(message, HEADERSIZE + 182, 255, "E02CMTGAD");
    fields[15] = fieldE02CMTGPO =
    new CharacterField(message, HEADERSIZE + 437, 50, "E02CMTGPO");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02CMMSID using a String value.
  */
  public void setE02CMMSID(String newvalue)
  {
    fieldE02CMMSID.setString(newvalue);
  }

  /**
  * Get value of field E02CMMSID as a String.
  */
  public String getE02CMMSID()
  {
    return fieldE02CMMSID.getString();
  }

  /**
  * Set field E02CMIDEN using a String value.
  */
  public void setE02CMIDEN(String newvalue)
  {
    fieldE02CMIDEN.setString(newvalue);
  }

  /**
  * Get value of field E02CMIDEN as a String.
  */
  public String getE02CMIDEN()
  {
    return fieldE02CMIDEN.getString();
  }

  /**
  * Set field E02CMILIF using a String value.
  */
  public void setE02CMILIF(String newvalue)
  {
    fieldE02CMILIF.setString(newvalue);
  }

  /**
  * Get value of field E02CMILIF as a String.
  */
  public String getE02CMILIF()
  {
    return fieldE02CMILIF.getString();
  }

  /**
  * Set field E02CMENDS using a String value.
  */
  public void setE02CMENDS(String newvalue)
  {
    fieldE02CMENDS.setString(newvalue);
  }

  /**
  * Get value of field E02CMENDS as a String.
  */
  public String getE02CMENDS()
  {
    return fieldE02CMENDS.getString();
  }

  /**
  * Set field E02CMIMFL using a String value.
  */
  public void setE02CMIMFL(String newvalue)
  {
    fieldE02CMIMFL.setString(newvalue);
  }

  /**
  * Get value of field E02CMIMFL as a String.
  */
  public String getE02CMIMFL()
  {
    return fieldE02CMIMFL.getString();
  }

  /**
  * Set field E02CMTGAD using a String value.
  */
  public void setE02CMTGAD(String newvalue)
  {
    fieldE02CMTGAD.setString(newvalue);
  }

  /**
  * Get value of field E02CMTGAD as a String.
  */
  public String getE02CMTGAD()
  {
    return fieldE02CMTGAD.getString();
  }

  /**
  * Set field E02CMTGPO using a String value.
  */
  public void setE02CMTGPO(String newvalue)
  {
    fieldE02CMTGPO.setString(newvalue);
  }

  /**
  * Get value of field E02CMTGPO as a String.
  */
  public String getE02CMTGPO()
  {
    return fieldE02CMTGPO.getString();
  }

}
