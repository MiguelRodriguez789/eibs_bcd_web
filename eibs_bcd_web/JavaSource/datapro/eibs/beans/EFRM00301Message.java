package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM00301 physical file definition.
* 
* File level identifier is 1170202115314.
* Record format level identifier is 3DF7F124B7711.
*/

public class EFRM00301Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "PLPNPR",
                                     "PLPEST",
                                     "PLPESTD",
                                     "PLPIPD",
                                     "PLPIPM",
                                     "PLPIPY",
                                     "DTEOPEPRO",
                                     "PLPBNK",
                                     "PLPBRN",
                                     "PLPEJE",
                                     "PLPEJED",
                                     "PLPCN2",
                                     "PLPCN2D",
                                     "PLPCN3",
                                     "PLPCN3D",
                                     "PLPCUSCUN",
                                     "PLPCUSIDN",
                                     "PLPCUSNA1",
                                     "PLPCUSNA2",
                                     "PLPCUSNA3",
                                     "PLPCUSNA4",
                                     "CUFCLF",
                                     "CUFCLFD",
                                     "PLPGRP",
                                     "PLPGRPD",
                                     "PLPBUC",
                                     "PLPBUCD",
                                     "PLPCUSIDD",
                                     "PLPCUSIDM",
                                     "PLPCUSIDY",
                                     "DTEOPECON",
                                     "PLPCUSMAD",
                                     "PLPCUSMAM",
                                     "PLPCUSMAY",
                                     "DTEVENCIM"
                                   };
  final static String tnames[] = {
                                   "PLPNPR",
                                   "PLPEST",
                                   "PLPESTD",
                                   "PLPIPD",
                                   "PLPIPM",
                                   "PLPIPY",
                                   "DTEOPEPRO",
                                   "Banco",
                                   "PLPBRN",
                                   "PLPEJE",
                                   "PLPEJED",
                                   "PLPCN2",
                                   "PLPCN2D",
                                   "PLPCN3",
                                   "PLPCN3D",
                                   "Cli.Numero",
                                   "Cli.Numero",
                                   "nombre.completo",
                                   "Dir.Cliente1",
                                   "Dir.Cliente2",
                                   "Dir.Cliente3",
                                   "CUFCLF",
                                   "CUFCLFD",
                                   "PLPGRP",
                                   "PLPGRPD",
                                   "PLPBUC",
                                   "PLPBUCD",
                                   "CUSIDD",
                                   "CUSIDM",
                                   "CUSIDY",
                                   "CUSOPECON",
                                   "CUSMAD",
                                   "CUSMAM",
                                   "CUSMAY",
                                   "DTEVENCIM"
                                 };
  final static String fid = "1170202115314";
  final static String rid = "3DF7F124B7711";
  final static String fmtname = "EFRM00301";
  final int FIELDCOUNT = 35;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldPLPNPR = null;
  private CharacterField fieldPLPEST = null;
  private CharacterField fieldPLPESTD = null;
  private DecimalField fieldPLPIPD = null;
  private DecimalField fieldPLPIPM = null;
  private DecimalField fieldPLPIPY = null;
  private CharacterField fieldDTEOPEPRO = null;
  private CharacterField fieldPLPBNK = null;
  private DecimalField fieldPLPBRN = null;
  private CharacterField fieldPLPEJE = null;
  private CharacterField fieldPLPEJED = null;
  private CharacterField fieldPLPCN2 = null;
  private CharacterField fieldPLPCN2D = null;
  private CharacterField fieldPLPCN3 = null;
  private CharacterField fieldPLPCN3D = null;
  private DecimalField fieldPLPCUSCUN = null;
  private CharacterField fieldPLPCUSIDN = null;
  private CharacterField fieldPLPCUSNA1 = null;
  private CharacterField fieldPLPCUSNA2 = null;
  private CharacterField fieldPLPCUSNA3 = null;
  private CharacterField fieldPLPCUSNA4 = null;
  private CharacterField fieldCUFCLF = null;
  private CharacterField fieldCUFCLFD = null;
  private DecimalField fieldPLPGRP = null;
  private CharacterField fieldPLPGRPD = null;
  private CharacterField fieldPLPBUC = null;
  private CharacterField fieldPLPBUCD = null;
  private DecimalField fieldPLPCUSIDD = null;
  private DecimalField fieldPLPCUSIDM = null;
  private DecimalField fieldPLPCUSIDY = null;
  private CharacterField fieldDTEOPECON = null;
  private DecimalField fieldPLPCUSMAD = null;
  private DecimalField fieldPLPCUSMAM = null;
  private DecimalField fieldPLPCUSMAY = null;
  private CharacterField fieldDTEVENCIM = null;

  /**
  * Constructor for EFRM00301Message.
  */
  public EFRM00301Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 675;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldPLPNPR =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "PLPNPR");
    fields[1] = fieldPLPEST =
    new CharacterField(message, HEADERSIZE + 13, 2, "PLPEST");
    fields[2] = fieldPLPESTD =
    new CharacterField(message, HEADERSIZE + 15, 45, "PLPESTD");
    fields[3] = fieldPLPIPD =
    new DecimalField(message, HEADERSIZE + 60, 3, 0, "PLPIPD");
    fields[4] = fieldPLPIPM =
    new DecimalField(message, HEADERSIZE + 63, 3, 0, "PLPIPM");
    fields[5] = fieldPLPIPY =
    new DecimalField(message, HEADERSIZE + 66, 5, 0, "PLPIPY");
    fields[6] = fieldDTEOPEPRO =
    new CharacterField(message, HEADERSIZE + 71, 10, "DTEOPEPRO");
    fields[7] = fieldPLPBNK =
    new CharacterField(message, HEADERSIZE + 81, 2, "Banco");
    fields[8] = fieldPLPBRN =
    new DecimalField(message, HEADERSIZE + 83, 5, 0, "PLPBRN");
    fields[9] = fieldPLPEJE =
    new CharacterField(message, HEADERSIZE + 88, 4, "PLPEJE");
    fields[10] = fieldPLPEJED =
    new CharacterField(message, HEADERSIZE + 92, 45, "PLPEJED");
    fields[11] = fieldPLPCN2 =
    new CharacterField(message, HEADERSIZE + 137, 4, "PLPCN2");
    fields[12] = fieldPLPCN2D =
    new CharacterField(message, HEADERSIZE + 141, 45, "PLPCN2D");
    fields[13] = fieldPLPCN3 =
    new CharacterField(message, HEADERSIZE + 186, 4, "PLPCN3");
    fields[14] = fieldPLPCN3D =
    new CharacterField(message, HEADERSIZE + 190, 45, "PLPCN3D");
    fields[15] = fieldPLPCUSCUN =
    new DecimalField(message, HEADERSIZE + 235, 10, 0, "Cli.Numero");
    fields[16] = fieldPLPCUSIDN =
    new CharacterField(message, HEADERSIZE + 245, 25, "Cli.Numero");
    fields[17] = fieldPLPCUSNA1 =
    new CharacterField(message, HEADERSIZE + 270, 60, "nombre.completo");
    fields[18] = fieldPLPCUSNA2 =
    new CharacterField(message, HEADERSIZE + 330, 45, "Dir.Cliente1");
    fields[19] = fieldPLPCUSNA3 =
    new CharacterField(message, HEADERSIZE + 375, 45, "Dir.Cliente2");
    fields[20] = fieldPLPCUSNA4 =
    new CharacterField(message, HEADERSIZE + 420, 45, "Dir.Cliente3");
    fields[21] = fieldCUFCLF =
    new CharacterField(message, HEADERSIZE + 465, 4, "CUFCLF");
    fields[22] = fieldCUFCLFD =
    new CharacterField(message, HEADERSIZE + 469, 45, "CUFCLFD");
    fields[23] = fieldPLPGRP =
    new DecimalField(message, HEADERSIZE + 514, 10, 0, "PLPGRP");
    fields[24] = fieldPLPGRPD =
    new CharacterField(message, HEADERSIZE + 524, 60, "PLPGRPD");
    fields[25] = fieldPLPBUC =
    new CharacterField(message, HEADERSIZE + 584, 4, "PLPBUC");
    fields[26] = fieldPLPBUCD =
    new CharacterField(message, HEADERSIZE + 588, 45, "PLPBUCD");
    fields[27] = fieldPLPCUSIDD =
    new DecimalField(message, HEADERSIZE + 633, 3, 0, "CUSIDD");
    fields[28] = fieldPLPCUSIDM =
    new DecimalField(message, HEADERSIZE + 636, 3, 0, "CUSIDM");
    fields[29] = fieldPLPCUSIDY =
    new DecimalField(message, HEADERSIZE + 639, 5, 0, "CUSIDY");
    fields[30] = fieldDTEOPECON =
    new CharacterField(message, HEADERSIZE + 644, 10, "CUSOPECON");
    fields[31] = fieldPLPCUSMAD =
    new DecimalField(message, HEADERSIZE + 654, 3, 0, "CUSMAD");
    fields[32] = fieldPLPCUSMAM =
    new DecimalField(message, HEADERSIZE + 657, 3, 0, "CUSMAM");
    fields[33] = fieldPLPCUSMAY =
    new DecimalField(message, HEADERSIZE + 660, 5, 0, "CUSMAY");
    fields[34] = fieldDTEVENCIM =
    new CharacterField(message, HEADERSIZE + 665, 10, "DTEVENCIM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field PLPNPR using a String value.
  */
  public void setPLPNPR(String newvalue)
  {
    fieldPLPNPR.setString(newvalue);
  }

  /**
  * Get value of field PLPNPR as a String.
  */
  public String getPLPNPR()
  {
    return fieldPLPNPR.getString();
  }

  /**
  * Set numeric field PLPNPR using a BigDecimal value.
  */
  public void setPLPNPR(BigDecimal newvalue)
  {
    fieldPLPNPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPNPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPNPR()
  {
    return fieldPLPNPR.getBigDecimal();
  }

  /**
  * Set field PLPEST using a String value.
  */
  public void setPLPEST(String newvalue)
  {
    fieldPLPEST.setString(newvalue);
  }

  /**
  * Get value of field PLPEST as a String.
  */
  public String getPLPEST()
  {
    return fieldPLPEST.getString();
  }

  /**
  * Set field PLPESTD using a String value.
  */
  public void setPLPESTD(String newvalue)
  {
    fieldPLPESTD.setString(newvalue);
  }

  /**
  * Get value of field PLPESTD as a String.
  */
  public String getPLPESTD()
  {
    return fieldPLPESTD.getString();
  }

  /**
  * Set field PLPIPD using a String value.
  */
  public void setPLPIPD(String newvalue)
  {
    fieldPLPIPD.setString(newvalue);
  }

  /**
  * Get value of field PLPIPD as a String.
  */
  public String getPLPIPD()
  {
    return fieldPLPIPD.getString();
  }

  /**
  * Set numeric field PLPIPD using a BigDecimal value.
  */
  public void setPLPIPD(BigDecimal newvalue)
  {
    fieldPLPIPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPIPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPIPD()
  {
    return fieldPLPIPD.getBigDecimal();
  }

  /**
  * Set field PLPIPM using a String value.
  */
  public void setPLPIPM(String newvalue)
  {
    fieldPLPIPM.setString(newvalue);
  }

  /**
  * Get value of field PLPIPM as a String.
  */
  public String getPLPIPM()
  {
    return fieldPLPIPM.getString();
  }

  /**
  * Set numeric field PLPIPM using a BigDecimal value.
  */
  public void setPLPIPM(BigDecimal newvalue)
  {
    fieldPLPIPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPIPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPIPM()
  {
    return fieldPLPIPM.getBigDecimal();
  }

  /**
  * Set field PLPIPY using a String value.
  */
  public void setPLPIPY(String newvalue)
  {
    fieldPLPIPY.setString(newvalue);
  }

  /**
  * Get value of field PLPIPY as a String.
  */
  public String getPLPIPY()
  {
    return fieldPLPIPY.getString();
  }

  /**
  * Set numeric field PLPIPY using a BigDecimal value.
  */
  public void setPLPIPY(BigDecimal newvalue)
  {
    fieldPLPIPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPIPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPIPY()
  {
    return fieldPLPIPY.getBigDecimal();
  }

  /**
  * Set field DTEOPEPRO using a String value.
  */
  public void setDTEOPEPRO(String newvalue)
  {
    fieldDTEOPEPRO.setString(newvalue);
  }

  /**
  * Get value of field DTEOPEPRO as a String.
  */
  public String getDTEOPEPRO()
  {
    return fieldDTEOPEPRO.getString();
  }

  /**
  * Set field PLPBNK using a String value.
  */
  public void setPLPBNK(String newvalue)
  {
    fieldPLPBNK.setString(newvalue);
  }

  /**
  * Get value of field PLPBNK as a String.
  */
  public String getPLPBNK()
  {
    return fieldPLPBNK.getString();
  }

  /**
  * Set field PLPBRN using a String value.
  */
  public void setPLPBRN(String newvalue)
  {
    fieldPLPBRN.setString(newvalue);
  }

  /**
  * Get value of field PLPBRN as a String.
  */
  public String getPLPBRN()
  {
    return fieldPLPBRN.getString();
  }

  /**
  * Set numeric field PLPBRN using a BigDecimal value.
  */
  public void setPLPBRN(BigDecimal newvalue)
  {
    fieldPLPBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPBRN()
  {
    return fieldPLPBRN.getBigDecimal();
  }

  /**
  * Set field PLPEJE using a String value.
  */
  public void setPLPEJE(String newvalue)
  {
    fieldPLPEJE.setString(newvalue);
  }

  /**
  * Get value of field PLPEJE as a String.
  */
  public String getPLPEJE()
  {
    return fieldPLPEJE.getString();
  }

  /**
  * Set field PLPEJED using a String value.
  */
  public void setPLPEJED(String newvalue)
  {
    fieldPLPEJED.setString(newvalue);
  }

  /**
  * Get value of field PLPEJED as a String.
  */
  public String getPLPEJED()
  {
    return fieldPLPEJED.getString();
  }

  /**
  * Set field PLPCN2 using a String value.
  */
  public void setPLPCN2(String newvalue)
  {
    fieldPLPCN2.setString(newvalue);
  }

  /**
  * Get value of field PLPCN2 as a String.
  */
  public String getPLPCN2()
  {
    return fieldPLPCN2.getString();
  }

  /**
  * Set field PLPCN2D using a String value.
  */
  public void setPLPCN2D(String newvalue)
  {
    fieldPLPCN2D.setString(newvalue);
  }

  /**
  * Get value of field PLPCN2D as a String.
  */
  public String getPLPCN2D()
  {
    return fieldPLPCN2D.getString();
  }

  /**
  * Set field PLPCN3 using a String value.
  */
  public void setPLPCN3(String newvalue)
  {
    fieldPLPCN3.setString(newvalue);
  }

  /**
  * Get value of field PLPCN3 as a String.
  */
  public String getPLPCN3()
  {
    return fieldPLPCN3.getString();
  }

  /**
  * Set field PLPCN3D using a String value.
  */
  public void setPLPCN3D(String newvalue)
  {
    fieldPLPCN3D.setString(newvalue);
  }

  /**
  * Get value of field PLPCN3D as a String.
  */
  public String getPLPCN3D()
  {
    return fieldPLPCN3D.getString();
  }

  /**
  * Set field PLPCUSCUN using a String value.
  */
  public void setPLPCUSCUN(String newvalue)
  {
    fieldPLPCUSCUN.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSCUN as a String.
  */
  public String getPLPCUSCUN()
  {
    return fieldPLPCUSCUN.getString();
  }

  /**
  * Set numeric field PLPCUSCUN using a BigDecimal value.
  */
  public void setPLPCUSCUN(BigDecimal newvalue)
  {
    fieldPLPCUSCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSCUN()
  {
    return fieldPLPCUSCUN.getBigDecimal();
  }

  /**
  * Set field PLPCUSIDN using a String value.
  */
  public void setPLPCUSIDN(String newvalue)
  {
    fieldPLPCUSIDN.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSIDN as a String.
  */
  public String getPLPCUSIDN()
  {
    return fieldPLPCUSIDN.getString();
  }

  /**
  * Set field PLPCUSNA1 using a String value.
  */
  public void setPLPCUSNA1(String newvalue)
  {
    fieldPLPCUSNA1.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSNA1 as a String.
  */
  public String getPLPCUSNA1()
  {
    return fieldPLPCUSNA1.getString();
  }

  /**
  * Set field PLPCUSNA2 using a String value.
  */
  public void setPLPCUSNA2(String newvalue)
  {
    fieldPLPCUSNA2.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSNA2 as a String.
  */
  public String getPLPCUSNA2()
  {
    return fieldPLPCUSNA2.getString();
  }

  /**
  * Set field PLPCUSNA3 using a String value.
  */
  public void setPLPCUSNA3(String newvalue)
  {
    fieldPLPCUSNA3.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSNA3 as a String.
  */
  public String getPLPCUSNA3()
  {
    return fieldPLPCUSNA3.getString();
  }

  /**
  * Set field PLPCUSNA4 using a String value.
  */
  public void setPLPCUSNA4(String newvalue)
  {
    fieldPLPCUSNA4.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSNA4 as a String.
  */
  public String getPLPCUSNA4()
  {
    return fieldPLPCUSNA4.getString();
  }

  /**
  * Set field CUFCLF using a String value.
  */
  public void setCUFCLF(String newvalue)
  {
    fieldCUFCLF.setString(newvalue);
  }

  /**
  * Get value of field CUFCLF as a String.
  */
  public String getCUFCLF()
  {
    return fieldCUFCLF.getString();
  }

  /**
  * Set field CUFCLFD using a String value.
  */
  public void setCUFCLFD(String newvalue)
  {
    fieldCUFCLFD.setString(newvalue);
  }

  /**
  * Get value of field CUFCLFD as a String.
  */
  public String getCUFCLFD()
  {
    return fieldCUFCLFD.getString();
  }

  /**
  * Set field PLPGRP using a String value.
  */
  public void setPLPGRP(String newvalue)
  {
    fieldPLPGRP.setString(newvalue);
  }

  /**
  * Get value of field PLPGRP as a String.
  */
  public String getPLPGRP()
  {
    return fieldPLPGRP.getString();
  }

  /**
  * Set numeric field PLPGRP using a BigDecimal value.
  */
  public void setPLPGRP(BigDecimal newvalue)
  {
    fieldPLPGRP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPGRP as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPGRP()
  {
    return fieldPLPGRP.getBigDecimal();
  }

  /**
  * Set field PLPGRPD using a String value.
  */
  public void setPLPGRPD(String newvalue)
  {
    fieldPLPGRPD.setString(newvalue);
  }

  /**
  * Get value of field PLPGRPD as a String.
  */
  public String getPLPGRPD()
  {
    return fieldPLPGRPD.getString();
  }

  /**
  * Set field PLPBUC using a String value.
  */
  public void setPLPBUC(String newvalue)
  {
    fieldPLPBUC.setString(newvalue);
  }

  /**
  * Get value of field PLPBUC as a String.
  */
  public String getPLPBUC()
  {
    return fieldPLPBUC.getString();
  }

  /**
  * Set field PLPBUCD using a String value.
  */
  public void setPLPBUCD(String newvalue)
  {
    fieldPLPBUCD.setString(newvalue);
  }

  /**
  * Get value of field PLPBUCD as a String.
  */
  public String getPLPBUCD()
  {
    return fieldPLPBUCD.getString();
  }

  /**
  * Set field PLPCUSIDD using a String value.
  */
  public void setPLPCUSIDD(String newvalue)
  {
    fieldPLPCUSIDD.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSIDD as a String.
  */
  public String getPLPCUSIDD()
  {
    return fieldPLPCUSIDD.getString();
  }

  /**
  * Set numeric field PLPCUSIDD using a BigDecimal value.
  */
  public void setPLPCUSIDD(BigDecimal newvalue)
  {
    fieldPLPCUSIDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSIDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSIDD()
  {
    return fieldPLPCUSIDD.getBigDecimal();
  }

  /**
  * Set field PLPCUSIDM using a String value.
  */
  public void setPLPCUSIDM(String newvalue)
  {
    fieldPLPCUSIDM.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSIDM as a String.
  */
  public String getPLPCUSIDM()
  {
    return fieldPLPCUSIDM.getString();
  }

  /**
  * Set numeric field PLPCUSIDM using a BigDecimal value.
  */
  public void setPLPCUSIDM(BigDecimal newvalue)
  {
    fieldPLPCUSIDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSIDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSIDM()
  {
    return fieldPLPCUSIDM.getBigDecimal();
  }

  /**
  * Set field PLPCUSIDY using a String value.
  */
  public void setPLPCUSIDY(String newvalue)
  {
    fieldPLPCUSIDY.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSIDY as a String.
  */
  public String getPLPCUSIDY()
  {
    return fieldPLPCUSIDY.getString();
  }

  /**
  * Set numeric field PLPCUSIDY using a BigDecimal value.
  */
  public void setPLPCUSIDY(BigDecimal newvalue)
  {
    fieldPLPCUSIDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSIDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSIDY()
  {
    return fieldPLPCUSIDY.getBigDecimal();
  }

  /**
  * Set field DTEOPECON using a String value.
  */
  public void setDTEOPECON(String newvalue)
  {
    fieldDTEOPECON.setString(newvalue);
  }

  /**
  * Get value of field DTEOPECON as a String.
  */
  public String getDTEOPECON()
  {
    return fieldDTEOPECON.getString();
  }

  /**
  * Set field PLPCUSMAD using a String value.
  */
  public void setPLPCUSMAD(String newvalue)
  {
    fieldPLPCUSMAD.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSMAD as a String.
  */
  public String getPLPCUSMAD()
  {
    return fieldPLPCUSMAD.getString();
  }

  /**
  * Set numeric field PLPCUSMAD using a BigDecimal value.
  */
  public void setPLPCUSMAD(BigDecimal newvalue)
  {
    fieldPLPCUSMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSMAD()
  {
    return fieldPLPCUSMAD.getBigDecimal();
  }

  /**
  * Set field PLPCUSMAM using a String value.
  */
  public void setPLPCUSMAM(String newvalue)
  {
    fieldPLPCUSMAM.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSMAM as a String.
  */
  public String getPLPCUSMAM()
  {
    return fieldPLPCUSMAM.getString();
  }

  /**
  * Set numeric field PLPCUSMAM using a BigDecimal value.
  */
  public void setPLPCUSMAM(BigDecimal newvalue)
  {
    fieldPLPCUSMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSMAM()
  {
    return fieldPLPCUSMAM.getBigDecimal();
  }

  /**
  * Set field PLPCUSMAY using a String value.
  */
  public void setPLPCUSMAY(String newvalue)
  {
    fieldPLPCUSMAY.setString(newvalue);
  }

  /**
  * Get value of field PLPCUSMAY as a String.
  */
  public String getPLPCUSMAY()
  {
    return fieldPLPCUSMAY.getString();
  }

  /**
  * Set numeric field PLPCUSMAY using a BigDecimal value.
  */
  public void setPLPCUSMAY(BigDecimal newvalue)
  {
    fieldPLPCUSMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PLPCUSMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalPLPCUSMAY()
  {
    return fieldPLPCUSMAY.getBigDecimal();
  }

  /**
  * Set field DTEVENCIM using a String value.
  */
  public void setDTEVENCIM(String newvalue)
  {
    fieldDTEVENCIM.setString(newvalue);
  }

  /**
  * Get value of field DTEVENCIM as a String.
  */
  public String getDTEVENCIM()
  {
    return fieldDTEVENCIM.getString();
  }

}
