package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL013213 physical file definition.
* 
* File level identifier is 1170203141837.
* Record format level identifier is 4192BD7D999CA.
*/

public class EDL013213Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H13USERID",
                                     "H13PROGRM",
                                     "H13TIMSYS",
                                     "H13SCRCOD",
                                     "H13OPECOD",
                                     "H13FLGMAS",
                                     "H13FLGWK1",
                                     "H13FLGWK2",
                                     "H13FLGWK3",
                                     "E13DEAACC",
                                     "E13FRCACC",
                                     "E13FRCCUN",
                                     "E13FRCNA1",
                                     "E13FRCODM",
                                     "E13FRCODD",
                                     "E13FRCODY",
                                     "E13FRCAMT",
                                     "E13FRCOAM",
                                     "E13FRCMEI",
                                     "E13FRCOMI",
                                     "E13FRCPER",
                                     "E13NUMREC",
                                     "E13INDOPE"
                                   };
  final static String tnames[] = {
                                   "H13USERID",
                                   "H13PROGRM",
                                   "H13TIMSYS",
                                   "H13SCRCOD",
                                   "H13OPECOD",
                                   "H13FLGMAS",
                                   "H13FLGWK1",
                                   "H13FLGWK2",
                                   "H13FLGWK3",
                                   "E13DEAACC",
                                   "E13FRCACC",
                                   "E13FRCCUN",
                                   "E13FRCNA1",
                                   "E13FRCODM",
                                   "E13FRCODD",
                                   "E13FRCODY",
                                   "E13FRCAMT",
                                   "E13FRCOAM",
                                   "E13FRCMEI",
                                   "E13FRCOMI",
                                   "E13FRCPER",
                                   "E13NUMREC",
                                   "E13INDOPE"
                                 };
  final static String fid = "1170203141837";
  final static String rid = "4192BD7D999CA";
  final static String fmtname = "EDL013213";
  final int FIELDCOUNT = 23;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH13USERID = null;
  private CharacterField fieldH13PROGRM = null;
  private CharacterField fieldH13TIMSYS = null;
  private CharacterField fieldH13SCRCOD = null;
  private CharacterField fieldH13OPECOD = null;
  private CharacterField fieldH13FLGMAS = null;
  private CharacterField fieldH13FLGWK1 = null;
  private CharacterField fieldH13FLGWK2 = null;
  private CharacterField fieldH13FLGWK3 = null;
  private DecimalField fieldE13DEAACC = null;
  private DecimalField fieldE13FRCACC = null;
  private DecimalField fieldE13FRCCUN = null;
  private CharacterField fieldE13FRCNA1 = null;
  private DecimalField fieldE13FRCODM = null;
  private DecimalField fieldE13FRCODD = null;
  private DecimalField fieldE13FRCODY = null;
  private DecimalField fieldE13FRCAMT = null;
  private DecimalField fieldE13FRCOAM = null;
  private DecimalField fieldE13FRCMEI = null;
  private DecimalField fieldE13FRCOMI = null;
  private DecimalField fieldE13FRCPER = null;
  private DecimalField fieldE13NUMREC = null;
  private CharacterField fieldE13INDOPE = null;

  /**
  * Constructor for EDL013213Message.
  */
  public EDL013213Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 233;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH13USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H13USERID");
    fields[1] = fieldH13PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H13PROGRM");
    fields[2] = fieldH13TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H13TIMSYS");
    fields[3] = fieldH13SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H13SCRCOD");
    fields[4] = fieldH13OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H13OPECOD");
    fields[5] = fieldH13FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H13FLGMAS");
    fields[6] = fieldH13FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H13FLGWK1");
    fields[7] = fieldH13FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H13FLGWK2");
    fields[8] = fieldH13FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H13FLGWK3");
    fields[9] = fieldE13DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E13DEAACC");
    fields[10] = fieldE13FRCACC =
    new DecimalField(message, HEADERSIZE + 55, 13, 0, "E13FRCACC");
    fields[11] = fieldE13FRCCUN =
    new DecimalField(message, HEADERSIZE + 68, 10, 0, "E13FRCCUN");
    fields[12] = fieldE13FRCNA1 =
    new CharacterField(message, HEADERSIZE + 78, 60, "E13FRCNA1");
    fields[13] = fieldE13FRCODM =
    new DecimalField(message, HEADERSIZE + 138, 3, 0, "E13FRCODM");
    fields[14] = fieldE13FRCODD =
    new DecimalField(message, HEADERSIZE + 141, 3, 0, "E13FRCODD");
    fields[15] = fieldE13FRCODY =
    new DecimalField(message, HEADERSIZE + 144, 5, 0, "E13FRCODY");
    fields[16] = fieldE13FRCAMT =
    new DecimalField(message, HEADERSIZE + 149, 17, 2, "E13FRCAMT");
    fields[17] = fieldE13FRCOAM =
    new DecimalField(message, HEADERSIZE + 166, 17, 2, "E13FRCOAM");
    fields[18] = fieldE13FRCMEI =
    new DecimalField(message, HEADERSIZE + 183, 17, 2, "E13FRCMEI");
    fields[19] = fieldE13FRCOMI =
    new DecimalField(message, HEADERSIZE + 200, 17, 2, "E13FRCOMI");
    fields[20] = fieldE13FRCPER =
    new DecimalField(message, HEADERSIZE + 217, 7, 2, "E13FRCPER");
    fields[21] = fieldE13NUMREC =
    new DecimalField(message, HEADERSIZE + 224, 8, 0, "E13NUMREC");
    fields[22] = fieldE13INDOPE =
    new CharacterField(message, HEADERSIZE + 232, 1, "E13INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H13USERID using a String value.
  */
  public void setH13USERID(String newvalue)
  {
    fieldH13USERID.setString(newvalue);
  }

  /**
  * Get value of field H13USERID as a String.
  */
  public String getH13USERID()
  {
    return fieldH13USERID.getString();
  }

  /**
  * Set field H13PROGRM using a String value.
  */
  public void setH13PROGRM(String newvalue)
  {
    fieldH13PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H13PROGRM as a String.
  */
  public String getH13PROGRM()
  {
    return fieldH13PROGRM.getString();
  }

  /**
  * Set field H13TIMSYS using a String value.
  */
  public void setH13TIMSYS(String newvalue)
  {
    fieldH13TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H13TIMSYS as a String.
  */
  public String getH13TIMSYS()
  {
    return fieldH13TIMSYS.getString();
  }

  /**
  * Set field H13SCRCOD using a String value.
  */
  public void setH13SCRCOD(String newvalue)
  {
    fieldH13SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H13SCRCOD as a String.
  */
  public String getH13SCRCOD()
  {
    return fieldH13SCRCOD.getString();
  }

  /**
  * Set field H13OPECOD using a String value.
  */
  public void setH13OPECOD(String newvalue)
  {
    fieldH13OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H13OPECOD as a String.
  */
  public String getH13OPECOD()
  {
    return fieldH13OPECOD.getString();
  }

  /**
  * Set field H13FLGMAS using a String value.
  */
  public void setH13FLGMAS(String newvalue)
  {
    fieldH13FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H13FLGMAS as a String.
  */
  public String getH13FLGMAS()
  {
    return fieldH13FLGMAS.getString();
  }

  /**
  * Set field H13FLGWK1 using a String value.
  */
  public void setH13FLGWK1(String newvalue)
  {
    fieldH13FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK1 as a String.
  */
  public String getH13FLGWK1()
  {
    return fieldH13FLGWK1.getString();
  }

  /**
  * Set field H13FLGWK2 using a String value.
  */
  public void setH13FLGWK2(String newvalue)
  {
    fieldH13FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK2 as a String.
  */
  public String getH13FLGWK2()
  {
    return fieldH13FLGWK2.getString();
  }

  /**
  * Set field H13FLGWK3 using a String value.
  */
  public void setH13FLGWK3(String newvalue)
  {
    fieldH13FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H13FLGWK3 as a String.
  */
  public String getH13FLGWK3()
  {
    return fieldH13FLGWK3.getString();
  }

  /**
  * Set field E13DEAACC using a String value.
  */
  public void setE13DEAACC(String newvalue)
  {
    fieldE13DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E13DEAACC as a String.
  */
  public String getE13DEAACC()
  {
    return fieldE13DEAACC.getString();
  }

  /**
  * Set numeric field E13DEAACC using a BigDecimal value.
  */
  public void setE13DEAACC(BigDecimal newvalue)
  {
    fieldE13DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13DEAACC()
  {
    return fieldE13DEAACC.getBigDecimal();
  }

  /**
  * Set field E13FRCACC using a String value.
  */
  public void setE13FRCACC(String newvalue)
  {
    fieldE13FRCACC.setString(newvalue);
  }

  /**
  * Get value of field E13FRCACC as a String.
  */
  public String getE13FRCACC()
  {
    return fieldE13FRCACC.getString();
  }

  /**
  * Set numeric field E13FRCACC using a BigDecimal value.
  */
  public void setE13FRCACC(BigDecimal newvalue)
  {
    fieldE13FRCACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCACC()
  {
    return fieldE13FRCACC.getBigDecimal();
  }

  /**
  * Set field E13FRCCUN using a String value.
  */
  public void setE13FRCCUN(String newvalue)
  {
    fieldE13FRCCUN.setString(newvalue);
  }

  /**
  * Get value of field E13FRCCUN as a String.
  */
  public String getE13FRCCUN()
  {
    return fieldE13FRCCUN.getString();
  }

  /**
  * Set numeric field E13FRCCUN using a BigDecimal value.
  */
  public void setE13FRCCUN(BigDecimal newvalue)
  {
    fieldE13FRCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCCUN()
  {
    return fieldE13FRCCUN.getBigDecimal();
  }

  /**
  * Set field E13FRCNA1 using a String value.
  */
  public void setE13FRCNA1(String newvalue)
  {
    fieldE13FRCNA1.setString(newvalue);
  }

  /**
  * Get value of field E13FRCNA1 as a String.
  */
  public String getE13FRCNA1()
  {
    return fieldE13FRCNA1.getString();
  }

  /**
  * Set field E13FRCODM using a String value.
  */
  public void setE13FRCODM(String newvalue)
  {
    fieldE13FRCODM.setString(newvalue);
  }

  /**
  * Get value of field E13FRCODM as a String.
  */
  public String getE13FRCODM()
  {
    return fieldE13FRCODM.getString();
  }

  /**
  * Set numeric field E13FRCODM using a BigDecimal value.
  */
  public void setE13FRCODM(BigDecimal newvalue)
  {
    fieldE13FRCODM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCODM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCODM()
  {
    return fieldE13FRCODM.getBigDecimal();
  }

  /**
  * Set field E13FRCODD using a String value.
  */
  public void setE13FRCODD(String newvalue)
  {
    fieldE13FRCODD.setString(newvalue);
  }

  /**
  * Get value of field E13FRCODD as a String.
  */
  public String getE13FRCODD()
  {
    return fieldE13FRCODD.getString();
  }

  /**
  * Set numeric field E13FRCODD using a BigDecimal value.
  */
  public void setE13FRCODD(BigDecimal newvalue)
  {
    fieldE13FRCODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCODD()
  {
    return fieldE13FRCODD.getBigDecimal();
  }

  /**
  * Set field E13FRCODY using a String value.
  */
  public void setE13FRCODY(String newvalue)
  {
    fieldE13FRCODY.setString(newvalue);
  }

  /**
  * Get value of field E13FRCODY as a String.
  */
  public String getE13FRCODY()
  {
    return fieldE13FRCODY.getString();
  }

  /**
  * Set numeric field E13FRCODY using a BigDecimal value.
  */
  public void setE13FRCODY(BigDecimal newvalue)
  {
    fieldE13FRCODY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCODY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCODY()
  {
    return fieldE13FRCODY.getBigDecimal();
  }

  /**
  * Set field E13FRCAMT using a String value.
  */
  public void setE13FRCAMT(String newvalue)
  {
    fieldE13FRCAMT.setString(newvalue);
  }

  /**
  * Get value of field E13FRCAMT as a String.
  */
  public String getE13FRCAMT()
  {
    return fieldE13FRCAMT.getString();
  }

  /**
  * Set numeric field E13FRCAMT using a BigDecimal value.
  */
  public void setE13FRCAMT(BigDecimal newvalue)
  {
    fieldE13FRCAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCAMT()
  {
    return fieldE13FRCAMT.getBigDecimal();
  }

  /**
  * Set field E13FRCOAM using a String value.
  */
  public void setE13FRCOAM(String newvalue)
  {
    fieldE13FRCOAM.setString(newvalue);
  }

  /**
  * Get value of field E13FRCOAM as a String.
  */
  public String getE13FRCOAM()
  {
    return fieldE13FRCOAM.getString();
  }

  /**
  * Set numeric field E13FRCOAM using a BigDecimal value.
  */
  public void setE13FRCOAM(BigDecimal newvalue)
  {
    fieldE13FRCOAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCOAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCOAM()
  {
    return fieldE13FRCOAM.getBigDecimal();
  }

  /**
  * Set field E13FRCMEI using a String value.
  */
  public void setE13FRCMEI(String newvalue)
  {
    fieldE13FRCMEI.setString(newvalue);
  }

  /**
  * Get value of field E13FRCMEI as a String.
  */
  public String getE13FRCMEI()
  {
    return fieldE13FRCMEI.getString();
  }

  /**
  * Set numeric field E13FRCMEI using a BigDecimal value.
  */
  public void setE13FRCMEI(BigDecimal newvalue)
  {
    fieldE13FRCMEI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCMEI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCMEI()
  {
    return fieldE13FRCMEI.getBigDecimal();
  }

  /**
  * Set field E13FRCOMI using a String value.
  */
  public void setE13FRCOMI(String newvalue)
  {
    fieldE13FRCOMI.setString(newvalue);
  }

  /**
  * Get value of field E13FRCOMI as a String.
  */
  public String getE13FRCOMI()
  {
    return fieldE13FRCOMI.getString();
  }

  /**
  * Set numeric field E13FRCOMI using a BigDecimal value.
  */
  public void setE13FRCOMI(BigDecimal newvalue)
  {
    fieldE13FRCOMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCOMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCOMI()
  {
    return fieldE13FRCOMI.getBigDecimal();
  }

  /**
  * Set field E13FRCPER using a String value.
  */
  public void setE13FRCPER(String newvalue)
  {
    fieldE13FRCPER.setString(newvalue);
  }

  /**
  * Get value of field E13FRCPER as a String.
  */
  public String getE13FRCPER()
  {
    return fieldE13FRCPER.getString();
  }

  /**
  * Set numeric field E13FRCPER using a BigDecimal value.
  */
  public void setE13FRCPER(BigDecimal newvalue)
  {
    fieldE13FRCPER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13FRCPER as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13FRCPER()
  {
    return fieldE13FRCPER.getBigDecimal();
  }

  /**
  * Set field E13NUMREC using a String value.
  */
  public void setE13NUMREC(String newvalue)
  {
    fieldE13NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E13NUMREC as a String.
  */
  public String getE13NUMREC()
  {
    return fieldE13NUMREC.getString();
  }

  /**
  * Set numeric field E13NUMREC using a BigDecimal value.
  */
  public void setE13NUMREC(BigDecimal newvalue)
  {
    fieldE13NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E13NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE13NUMREC()
  {
    return fieldE13NUMREC.getBigDecimal();
  }

  /**
  * Set field E13INDOPE using a String value.
  */
  public void setE13INDOPE(String newvalue)
  {
    fieldE13INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E13INDOPE as a String.
  */
  public String getE13INDOPE()
  {
    return fieldE13INDOPE.getString();
  }

}
