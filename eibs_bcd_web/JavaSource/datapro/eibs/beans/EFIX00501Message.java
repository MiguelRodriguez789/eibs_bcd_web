package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFIX00501 physical file definition.
* 
* File level identifier is 1130611113140.
* Record format level identifier is 3AC35B45ED229.
*/

public class EFIX00501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CHGACC",
                                     "E01CHGBNK",
                                     "E01CHGCCY",
                                     "E01CHGOBR",
                                     "E01CHGNBR",
                                     "E01CHGOGL",
                                     "E01CHGNGL",
                                     "E01OLDBRN",
                                     "E01NEWBRN",
                                     "E01OLDGLD",
                                     "E01NEWGLD",
                                     "E01TYPDSC"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CHGACC",
                                   "E01CHGBNK",
                                   "E01CHGCCY",
                                   "E01CHGOBR",
                                   "E01CHGNBR",
                                   "E01CHGOGL",
                                   "E01CHGNGL",
                                   "E01OLDBRN",
                                   "E01NEWBRN",
                                   "E01OLDGLD",
                                   "E01NEWGLD",
                                   "E01TYPDSC"
                                 };
  final static String fid = "1130611113140";
  final static String rid = "3AC35B45ED229";
  final static String fmtname = "EFIX00501";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CHGACC = null;
  private CharacterField fieldE01CHGBNK = null;
  private CharacterField fieldE01CHGCCY = null;
  private DecimalField fieldE01CHGOBR = null;
  private DecimalField fieldE01CHGNBR = null;
  private DecimalField fieldE01CHGOGL = null;
  private DecimalField fieldE01CHGNGL = null;
  private CharacterField fieldE01OLDBRN = null;
  private CharacterField fieldE01NEWBRN = null;
  private CharacterField fieldE01OLDGLD = null;
  private CharacterField fieldE01NEWGLD = null;
  private CharacterField fieldE01TYPDSC = null;

  /**
  * Constructor for EFIX00501Message.
  */
  public EFIX00501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 359;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CHGACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01CHGACC");
    fields[10] = fieldE01CHGBNK =
    new CharacterField(message, HEADERSIZE + 55, 2, "E01CHGBNK");
    fields[11] = fieldE01CHGCCY =
    new CharacterField(message, HEADERSIZE + 57, 3, "E01CHGCCY");
    fields[12] = fieldE01CHGOBR =
    new DecimalField(message, HEADERSIZE + 60, 5, 0, "E01CHGOBR");
    fields[13] = fieldE01CHGNBR =
    new DecimalField(message, HEADERSIZE + 65, 5, 0, "E01CHGNBR");
    fields[14] = fieldE01CHGOGL =
    new DecimalField(message, HEADERSIZE + 70, 17, 0, "E01CHGOGL");
    fields[15] = fieldE01CHGNGL =
    new DecimalField(message, HEADERSIZE + 87, 17, 0, "E01CHGNGL");
    fields[16] = fieldE01OLDBRN =
    new CharacterField(message, HEADERSIZE + 104, 45, "E01OLDBRN");
    fields[17] = fieldE01NEWBRN =
    new CharacterField(message, HEADERSIZE + 149, 45, "E01NEWBRN");
    fields[18] = fieldE01OLDGLD =
    new CharacterField(message, HEADERSIZE + 194, 60, "E01OLDGLD");
    fields[19] = fieldE01NEWGLD =
    new CharacterField(message, HEADERSIZE + 254, 60, "E01NEWGLD");
    fields[20] = fieldE01TYPDSC =
    new CharacterField(message, HEADERSIZE + 314, 45, "E01TYPDSC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CHGACC using a String value.
  */
  public void setE01CHGACC(String newvalue)
  {
    fieldE01CHGACC.setString(newvalue);
  }

  /**
  * Get value of field E01CHGACC as a String.
  */
  public String getE01CHGACC()
  {
    return fieldE01CHGACC.getString();
  }

  /**
  * Set numeric field E01CHGACC using a BigDecimal value.
  */
  public void setE01CHGACC(BigDecimal newvalue)
  {
    fieldE01CHGACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHGACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHGACC()
  {
    return fieldE01CHGACC.getBigDecimal();
  }

  /**
  * Set field E01CHGBNK using a String value.
  */
  public void setE01CHGBNK(String newvalue)
  {
    fieldE01CHGBNK.setString(newvalue);
  }

  /**
  * Get value of field E01CHGBNK as a String.
  */
  public String getE01CHGBNK()
  {
    return fieldE01CHGBNK.getString();
  }

  /**
  * Set field E01CHGCCY using a String value.
  */
  public void setE01CHGCCY(String newvalue)
  {
    fieldE01CHGCCY.setString(newvalue);
  }

  /**
  * Get value of field E01CHGCCY as a String.
  */
  public String getE01CHGCCY()
  {
    return fieldE01CHGCCY.getString();
  }

  /**
  * Set field E01CHGOBR using a String value.
  */
  public void setE01CHGOBR(String newvalue)
  {
    fieldE01CHGOBR.setString(newvalue);
  }

  /**
  * Get value of field E01CHGOBR as a String.
  */
  public String getE01CHGOBR()
  {
    return fieldE01CHGOBR.getString();
  }

  /**
  * Set numeric field E01CHGOBR using a BigDecimal value.
  */
  public void setE01CHGOBR(BigDecimal newvalue)
  {
    fieldE01CHGOBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHGOBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHGOBR()
  {
    return fieldE01CHGOBR.getBigDecimal();
  }

  /**
  * Set field E01CHGNBR using a String value.
  */
  public void setE01CHGNBR(String newvalue)
  {
    fieldE01CHGNBR.setString(newvalue);
  }

  /**
  * Get value of field E01CHGNBR as a String.
  */
  public String getE01CHGNBR()
  {
    return fieldE01CHGNBR.getString();
  }

  /**
  * Set numeric field E01CHGNBR using a BigDecimal value.
  */
  public void setE01CHGNBR(BigDecimal newvalue)
  {
    fieldE01CHGNBR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHGNBR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHGNBR()
  {
    return fieldE01CHGNBR.getBigDecimal();
  }

  /**
  * Set field E01CHGOGL using a String value.
  */
  public void setE01CHGOGL(String newvalue)
  {
    fieldE01CHGOGL.setString(newvalue);
  }

  /**
  * Get value of field E01CHGOGL as a String.
  */
  public String getE01CHGOGL()
  {
    return fieldE01CHGOGL.getString();
  }

  /**
  * Set numeric field E01CHGOGL using a BigDecimal value.
  */
  public void setE01CHGOGL(BigDecimal newvalue)
  {
    fieldE01CHGOGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHGOGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHGOGL()
  {
    return fieldE01CHGOGL.getBigDecimal();
  }

  /**
  * Set field E01CHGNGL using a String value.
  */
  public void setE01CHGNGL(String newvalue)
  {
    fieldE01CHGNGL.setString(newvalue);
  }

  /**
  * Get value of field E01CHGNGL as a String.
  */
  public String getE01CHGNGL()
  {
    return fieldE01CHGNGL.getString();
  }

  /**
  * Set numeric field E01CHGNGL using a BigDecimal value.
  */
  public void setE01CHGNGL(BigDecimal newvalue)
  {
    fieldE01CHGNGL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CHGNGL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CHGNGL()
  {
    return fieldE01CHGNGL.getBigDecimal();
  }

  /**
  * Set field E01OLDBRN using a String value.
  */
  public void setE01OLDBRN(String newvalue)
  {
    fieldE01OLDBRN.setString(newvalue);
  }

  /**
  * Get value of field E01OLDBRN as a String.
  */
  public String getE01OLDBRN()
  {
    return fieldE01OLDBRN.getString();
  }

  /**
  * Set field E01NEWBRN using a String value.
  */
  public void setE01NEWBRN(String newvalue)
  {
    fieldE01NEWBRN.setString(newvalue);
  }

  /**
  * Get value of field E01NEWBRN as a String.
  */
  public String getE01NEWBRN()
  {
    return fieldE01NEWBRN.getString();
  }

  /**
  * Set field E01OLDGLD using a String value.
  */
  public void setE01OLDGLD(String newvalue)
  {
    fieldE01OLDGLD.setString(newvalue);
  }

  /**
  * Get value of field E01OLDGLD as a String.
  */
  public String getE01OLDGLD()
  {
    return fieldE01OLDGLD.getString();
  }

  /**
  * Set field E01NEWGLD using a String value.
  */
  public void setE01NEWGLD(String newvalue)
  {
    fieldE01NEWGLD.setString(newvalue);
  }

  /**
  * Get value of field E01NEWGLD as a String.
  */
  public String getE01NEWGLD()
  {
    return fieldE01NEWGLD.getString();
  }

  /**
  * Set field E01TYPDSC using a String value.
  */
  public void setE01TYPDSC(String newvalue)
  {
    fieldE01TYPDSC.setString(newvalue);
  }

  /**
  * Get value of field E01TYPDSC as a String.
  */
  public String getE01TYPDSC()
  {
    return fieldE01TYPDSC.getString();
  }

}
