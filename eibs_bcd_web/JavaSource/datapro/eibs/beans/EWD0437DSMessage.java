package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0437DS physical file definition.
* 
* File level identifier is 1170909113256.
* Record format level identifier is 51ED9FC95505D.
*/

public class EWD0437DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDCOD",
                                     "RWDFRC",
                                     "SWDMAR",
                                     "SWDCLA",
                                     "SWDSER",
                                     "SWDEST",
                                     "SWDRE1",
                                     "SWDRE2",
                                     "SWDA28",
                                     "SWDA29",
                                     "SWDA30",
                                     "SWDREC",
                                     "SWDOPE",
                                     "SWDTYP",
                                     "SWDSHR",
                                     "SWDMOD"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDCOD",
                                   "RWDFRC",
                                   "SWDMAR",
                                   "SWDCLA",
                                   "SWDSER",
                                   "SWDEST",
                                   "SWDRE1",
                                   "SWDRE2",
                                   "SWDA28",
                                   "SWDA29",
                                   "SWDA30",
                                   "SWDREC",
                                   "SWDOPE",
                                   "SWDTYP",
                                   "SWDSHR",
                                   "SWDMOD"
                                 };
  final static String fid = "1170909113256";
  final static String rid = "51ED9FC95505D";
  final static String fmtname = "EWD0437DS";
  final int FIELDCOUNT = 17;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDCOD = null;
  private DecimalField fieldRWDFRC = null;
  private CharacterField fieldSWDMAR = null;
  private CharacterField fieldSWDCLA = null;
  private CharacterField fieldSWDSER = null;
  private CharacterField fieldSWDEST = null;
  private CharacterField fieldSWDRE1 = null;
  private CharacterField fieldSWDRE2 = null;
  private DecimalField fieldSWDA28 = null;
  private DecimalField fieldSWDA29 = null;
  private DecimalField fieldSWDA30 = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDOPE = null;
  private CharacterField fieldSWDTYP = null;
  private CharacterField fieldSWDSHR = null;
  private DecimalField fieldSWDMOD = null;

  /**
  * Constructor for EWD0437DSMessage.
  */
  public EWD0437DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 288;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDCOD =
    new CharacterField(message, HEADERSIZE + 10, 12, "RWDCOD");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 22, 8, 0, "RWDFRC");
    fields[3] = fieldSWDMAR =
    new CharacterField(message, HEADERSIZE + 30, 30, "SWDMAR");
    fields[4] = fieldSWDCLA =
    new CharacterField(message, HEADERSIZE + 60, 30, "SWDCLA");
    fields[5] = fieldSWDSER =
    new CharacterField(message, HEADERSIZE + 90, 10, "SWDSER");
    fields[6] = fieldSWDEST =
    new CharacterField(message, HEADERSIZE + 100, 15, "SWDEST");
    fields[7] = fieldSWDRE1 =
    new CharacterField(message, HEADERSIZE + 115, 40, "SWDRE1");
    fields[8] = fieldSWDRE2 =
    new CharacterField(message, HEADERSIZE + 155, 40, "SWDRE2");
    fields[9] = fieldSWDA28 =
    new DecimalField(message, HEADERSIZE + 195, 11, 0, "SWDA28");
    fields[10] = fieldSWDA29 =
    new DecimalField(message, HEADERSIZE + 206, 11, 0, "SWDA29");
    fields[11] = fieldSWDA30 =
    new DecimalField(message, HEADERSIZE + 217, 11, 0, "SWDA30");
    fields[12] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 228, 8, 0, "SWDREC");
    fields[13] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 236, 1, "SWDOPE");
    fields[14] = fieldSWDTYP =
    new CharacterField(message, HEADERSIZE + 237, 1, "SWDTYP");
    fields[15] = fieldSWDSHR =
    new CharacterField(message, HEADERSIZE + 238, 45, "SWDSHR");
    fields[16] = fieldSWDMOD =
    new DecimalField(message, HEADERSIZE + 283, 5, 0, "SWDMOD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDCOD using a String value.
  */
  public void setRWDCOD(String newvalue)
  {
    fieldRWDCOD.setString(newvalue);
  }

  /**
  * Get value of field RWDCOD as a String.
  */
  public String getRWDCOD()
  {
    return fieldRWDCOD.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDMAR using a String value.
  */
  public void setSWDMAR(String newvalue)
  {
    fieldSWDMAR.setString(newvalue);
  }

  /**
  * Get value of field SWDMAR as a String.
  */
  public String getSWDMAR()
  {
    return fieldSWDMAR.getString();
  }

  /**
  * Set field SWDCLA using a String value.
  */
  public void setSWDCLA(String newvalue)
  {
    fieldSWDCLA.setString(newvalue);
  }

  /**
  * Get value of field SWDCLA as a String.
  */
  public String getSWDCLA()
  {
    return fieldSWDCLA.getString();
  }

  /**
  * Set field SWDSER using a String value.
  */
  public void setSWDSER(String newvalue)
  {
    fieldSWDSER.setString(newvalue);
  }

  /**
  * Get value of field SWDSER as a String.
  */
  public String getSWDSER()
  {
    return fieldSWDSER.getString();
  }

  /**
  * Set field SWDEST using a String value.
  */
  public void setSWDEST(String newvalue)
  {
    fieldSWDEST.setString(newvalue);
  }

  /**
  * Get value of field SWDEST as a String.
  */
  public String getSWDEST()
  {
    return fieldSWDEST.getString();
  }

  /**
  * Set field SWDRE1 using a String value.
  */
  public void setSWDRE1(String newvalue)
  {
    fieldSWDRE1.setString(newvalue);
  }

  /**
  * Get value of field SWDRE1 as a String.
  */
  public String getSWDRE1()
  {
    return fieldSWDRE1.getString();
  }

  /**
  * Set field SWDRE2 using a String value.
  */
  public void setSWDRE2(String newvalue)
  {
    fieldSWDRE2.setString(newvalue);
  }

  /**
  * Get value of field SWDRE2 as a String.
  */
  public String getSWDRE2()
  {
    return fieldSWDRE2.getString();
  }

  /**
  * Set field SWDA28 using a String value.
  */
  public void setSWDA28(String newvalue)
  {
    fieldSWDA28.setString(newvalue);
  }

  /**
  * Get value of field SWDA28 as a String.
  */
  public String getSWDA28()
  {
    return fieldSWDA28.getString();
  }

  /**
  * Set numeric field SWDA28 using a BigDecimal value.
  */
  public void setSWDA28(BigDecimal newvalue)
  {
    fieldSWDA28.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDA28 as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDA28()
  {
    return fieldSWDA28.getBigDecimal();
  }

  /**
  * Set field SWDA29 using a String value.
  */
  public void setSWDA29(String newvalue)
  {
    fieldSWDA29.setString(newvalue);
  }

  /**
  * Get value of field SWDA29 as a String.
  */
  public String getSWDA29()
  {
    return fieldSWDA29.getString();
  }

  /**
  * Set numeric field SWDA29 using a BigDecimal value.
  */
  public void setSWDA29(BigDecimal newvalue)
  {
    fieldSWDA29.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDA29 as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDA29()
  {
    return fieldSWDA29.getBigDecimal();
  }

  /**
  * Set field SWDA30 using a String value.
  */
  public void setSWDA30(String newvalue)
  {
    fieldSWDA30.setString(newvalue);
  }

  /**
  * Get value of field SWDA30 as a String.
  */
  public String getSWDA30()
  {
    return fieldSWDA30.getString();
  }

  /**
  * Set numeric field SWDA30 using a BigDecimal value.
  */
  public void setSWDA30(BigDecimal newvalue)
  {
    fieldSWDA30.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDA30 as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDA30()
  {
    return fieldSWDA30.getBigDecimal();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

  /**
  * Set field SWDTYP using a String value.
  */
  public void setSWDTYP(String newvalue)
  {
    fieldSWDTYP.setString(newvalue);
  }

  /**
  * Get value of field SWDTYP as a String.
  */
  public String getSWDTYP()
  {
    return fieldSWDTYP.getString();
  }

  /**
  * Set field SWDSHR using a String value.
  */
  public void setSWDSHR(String newvalue)
  {
    fieldSWDSHR.setString(newvalue);
  }

  /**
  * Get value of field SWDSHR as a String.
  */
  public String getSWDSHR()
  {
    return fieldSWDSHR.getString();
  }

  /**
  * Set field SWDMOD using a String value.
  */
  public void setSWDMOD(String newvalue)
  {
    fieldSWDMOD.setString(newvalue);
  }

  /**
  * Get value of field SWDMOD as a String.
  */
  public String getSWDMOD()
  {
    return fieldSWDMOD.getString();
  }

  /**
  * Set numeric field SWDMOD using a BigDecimal value.
  */
  public void setSWDMOD(BigDecimal newvalue)
  {
    fieldSWDMOD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDMOD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDMOD()
  {
    return fieldSWDMOD.getBigDecimal();
  }

}
