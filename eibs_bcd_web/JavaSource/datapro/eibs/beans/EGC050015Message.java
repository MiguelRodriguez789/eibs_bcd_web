package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC050015 physical file definition.
* 
* File level identifier is 1100706173617.
* Record format level identifier is 48773FA777BF8.
*/

public class EGC050015Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H15USERID",
                                     "H15PROGRM",
                                     "H15TIMSYS",
                                     "H15SCRCOD",
                                     "H15OPECOD",
                                     "H15FLGMAS",
                                     "H15FLGWK1",
                                     "H15FLGWK2",
                                     "H15FLGWK3",
                                     "USUARI",
                                     "CUSIDN",
                                     "CUSSHN",
                                     "LNENUM",
                                     "LNECFA",
                                     "CNODSC",
                                     "LNECAT",
                                     "LNEAMN",
                                     "LNEAMU",
                                     "LNEOPD",
                                     "LNEOPM",
                                     "LNEOPY",
                                     "LNEMTD",
                                     "LNEMTM",
                                     "LNEMTY"
                                   };
  final static String tnames[] = {
                                   "H15USERID",
                                   "H15PROGRM",
                                   "H15TIMSYS",
                                   "H15SCRCOD",
                                   "H15OPECOD",
                                   "H15FLGMAS",
                                   "H15FLGWK1",
                                   "H15FLGWK2",
                                   "H15FLGWK3",
                                   "USUARI",
                                   "CUSIDN",
                                   "CUSSHN",
                                   "LNENUM",
                                   "LNECFA",
                                   "CNODSC",
                                   "LNECAT",
                                   "LNEAMN",
                                   "LNEAMU",
                                   "LNEOPD",
                                   "LNEOPM",
                                   "LNEOPY",
                                   "LNEMTD",
                                   "LNEMTM",
                                   "LNEMTY"
                                 };
  final static String fid = "1100706173617";
  final static String rid = "48773FA777BF8";
  final static String fmtname = "EGC050015";
  final int FIELDCOUNT = 24;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH15USERID = null;
  private CharacterField fieldH15PROGRM = null;
  private CharacterField fieldH15TIMSYS = null;
  private CharacterField fieldH15SCRCOD = null;
  private CharacterField fieldH15OPECOD = null;
  private CharacterField fieldH15FLGMAS = null;
  private CharacterField fieldH15FLGWK1 = null;
  private CharacterField fieldH15FLGWK2 = null;
  private CharacterField fieldH15FLGWK3 = null;
  private CharacterField fieldUSUARI = null;
  private CharacterField fieldCUSIDN = null;
  private CharacterField fieldCUSSHN = null;
  private DecimalField fieldLNENUM = null;
  private CharacterField fieldLNECFA = null;
  private CharacterField fieldCNODSC = null;
  private CharacterField fieldLNECAT = null;
  private DecimalField fieldLNEAMN = null;
  private DecimalField fieldLNEAMU = null;
  private DecimalField fieldLNEOPD = null;
  private DecimalField fieldLNEOPM = null;
  private DecimalField fieldLNEOPY = null;
  private DecimalField fieldLNEMTD = null;
  private DecimalField fieldLNEMTM = null;
  private DecimalField fieldLNEMTY = null;

  /**
  * Constructor for EGC050015Message.
  */
  public EGC050015Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 179;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH15USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H15USERID");
    fields[1] = fieldH15PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H15PROGRM");
    fields[2] = fieldH15TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H15TIMSYS");
    fields[3] = fieldH15SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H15SCRCOD");
    fields[4] = fieldH15OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H15OPECOD");
    fields[5] = fieldH15FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H15FLGMAS");
    fields[6] = fieldH15FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H15FLGWK1");
    fields[7] = fieldH15FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H15FLGWK2");
    fields[8] = fieldH15FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H15FLGWK3");
    fields[9] = fieldUSUARI =
    new CharacterField(message, HEADERSIZE + 42, 10, "USUARI");
    fields[10] = fieldCUSIDN =
    new CharacterField(message, HEADERSIZE + 52, 15, "CUSIDN");
    fields[11] = fieldCUSSHN =
    new CharacterField(message, HEADERSIZE + 67, 15, "CUSSHN");
    fields[12] = fieldLNENUM =
    new DecimalField(message, HEADERSIZE + 82, 5, 0, "LNENUM");
    fields[13] = fieldLNECFA =
    new CharacterField(message, HEADERSIZE + 87, 4, "LNECFA");
    fields[14] = fieldCNODSC =
    new CharacterField(message, HEADERSIZE + 91, 35, "CNODSC");
    fields[15] = fieldLNECAT =
    new CharacterField(message, HEADERSIZE + 126, 1, "LNECAT");
    fields[16] = fieldLNEAMN =
    new DecimalField(message, HEADERSIZE + 127, 17, 2, "LNEAMN");
    fields[17] = fieldLNEAMU =
    new DecimalField(message, HEADERSIZE + 144, 17, 2, "LNEAMU");
    fields[18] = fieldLNEOPD =
    new DecimalField(message, HEADERSIZE + 161, 3, 0, "LNEOPD");
    fields[19] = fieldLNEOPM =
    new DecimalField(message, HEADERSIZE + 164, 3, 0, "LNEOPM");
    fields[20] = fieldLNEOPY =
    new DecimalField(message, HEADERSIZE + 167, 3, 0, "LNEOPY");
    fields[21] = fieldLNEMTD =
    new DecimalField(message, HEADERSIZE + 170, 3, 0, "LNEMTD");
    fields[22] = fieldLNEMTM =
    new DecimalField(message, HEADERSIZE + 173, 3, 0, "LNEMTM");
    fields[23] = fieldLNEMTY =
    new DecimalField(message, HEADERSIZE + 176, 3, 0, "LNEMTY");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H15USERID using a String value.
  */
  public void setH15USERID(String newvalue)
  {
    fieldH15USERID.setString(newvalue);
  }

  /**
  * Get value of field H15USERID as a String.
  */
  public String getH15USERID()
  {
    return fieldH15USERID.getString();
  }

  /**
  * Set field H15PROGRM using a String value.
  */
  public void setH15PROGRM(String newvalue)
  {
    fieldH15PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H15PROGRM as a String.
  */
  public String getH15PROGRM()
  {
    return fieldH15PROGRM.getString();
  }

  /**
  * Set field H15TIMSYS using a String value.
  */
  public void setH15TIMSYS(String newvalue)
  {
    fieldH15TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H15TIMSYS as a String.
  */
  public String getH15TIMSYS()
  {
    return fieldH15TIMSYS.getString();
  }

  /**
  * Set field H15SCRCOD using a String value.
  */
  public void setH15SCRCOD(String newvalue)
  {
    fieldH15SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H15SCRCOD as a String.
  */
  public String getH15SCRCOD()
  {
    return fieldH15SCRCOD.getString();
  }

  /**
  * Set field H15OPECOD using a String value.
  */
  public void setH15OPECOD(String newvalue)
  {
    fieldH15OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H15OPECOD as a String.
  */
  public String getH15OPECOD()
  {
    return fieldH15OPECOD.getString();
  }

  /**
  * Set field H15FLGMAS using a String value.
  */
  public void setH15FLGMAS(String newvalue)
  {
    fieldH15FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H15FLGMAS as a String.
  */
  public String getH15FLGMAS()
  {
    return fieldH15FLGMAS.getString();
  }

  /**
  * Set field H15FLGWK1 using a String value.
  */
  public void setH15FLGWK1(String newvalue)
  {
    fieldH15FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H15FLGWK1 as a String.
  */
  public String getH15FLGWK1()
  {
    return fieldH15FLGWK1.getString();
  }

  /**
  * Set field H15FLGWK2 using a String value.
  */
  public void setH15FLGWK2(String newvalue)
  {
    fieldH15FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H15FLGWK2 as a String.
  */
  public String getH15FLGWK2()
  {
    return fieldH15FLGWK2.getString();
  }

  /**
  * Set field H15FLGWK3 using a String value.
  */
  public void setH15FLGWK3(String newvalue)
  {
    fieldH15FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H15FLGWK3 as a String.
  */
  public String getH15FLGWK3()
  {
    return fieldH15FLGWK3.getString();
  }

  /**
  * Set field USUARI using a String value.
  */
  public void setUSUARI(String newvalue)
  {
    fieldUSUARI.setString(newvalue);
  }

  /**
  * Get value of field USUARI as a String.
  */
  public String getUSUARI()
  {
    return fieldUSUARI.getString();
  }

  /**
  * Set field CUSIDN using a String value.
  */
  public void setCUSIDN(String newvalue)
  {
    fieldCUSIDN.setString(newvalue);
  }

  /**
  * Get value of field CUSIDN as a String.
  */
  public String getCUSIDN()
  {
    return fieldCUSIDN.getString();
  }

  /**
  * Set field CUSSHN using a String value.
  */
  public void setCUSSHN(String newvalue)
  {
    fieldCUSSHN.setString(newvalue);
  }

  /**
  * Get value of field CUSSHN as a String.
  */
  public String getCUSSHN()
  {
    return fieldCUSSHN.getString();
  }

  /**
  * Set field LNENUM using a String value.
  */
  public void setLNENUM(String newvalue)
  {
    fieldLNENUM.setString(newvalue);
  }

  /**
  * Get value of field LNENUM as a String.
  */
  public String getLNENUM()
  {
    return fieldLNENUM.getString();
  }

  /**
  * Set numeric field LNENUM using a BigDecimal value.
  */
  public void setLNENUM(BigDecimal newvalue)
  {
    fieldLNENUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNENUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNENUM()
  {
    return fieldLNENUM.getBigDecimal();
  }

  /**
  * Set field LNECFA using a String value.
  */
  public void setLNECFA(String newvalue)
  {
    fieldLNECFA.setString(newvalue);
  }

  /**
  * Get value of field LNECFA as a String.
  */
  public String getLNECFA()
  {
    return fieldLNECFA.getString();
  }

  /**
  * Set field CNODSC using a String value.
  */
  public void setCNODSC(String newvalue)
  {
    fieldCNODSC.setString(newvalue);
  }

  /**
  * Get value of field CNODSC as a String.
  */
  public String getCNODSC()
  {
    return fieldCNODSC.getString();
  }

  /**
  * Set field LNECAT using a String value.
  */
  public void setLNECAT(String newvalue)
  {
    fieldLNECAT.setString(newvalue);
  }

  /**
  * Get value of field LNECAT as a String.
  */
  public String getLNECAT()
  {
    return fieldLNECAT.getString();
  }

  /**
  * Set field LNEAMN using a String value.
  */
  public void setLNEAMN(String newvalue)
  {
    fieldLNEAMN.setString(newvalue);
  }

  /**
  * Get value of field LNEAMN as a String.
  */
  public String getLNEAMN()
  {
    return fieldLNEAMN.getString();
  }

  /**
  * Set numeric field LNEAMN using a BigDecimal value.
  */
  public void setLNEAMN(BigDecimal newvalue)
  {
    fieldLNEAMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEAMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEAMN()
  {
    return fieldLNEAMN.getBigDecimal();
  }

  /**
  * Set field LNEAMU using a String value.
  */
  public void setLNEAMU(String newvalue)
  {
    fieldLNEAMU.setString(newvalue);
  }

  /**
  * Get value of field LNEAMU as a String.
  */
  public String getLNEAMU()
  {
    return fieldLNEAMU.getString();
  }

  /**
  * Set numeric field LNEAMU using a BigDecimal value.
  */
  public void setLNEAMU(BigDecimal newvalue)
  {
    fieldLNEAMU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEAMU as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEAMU()
  {
    return fieldLNEAMU.getBigDecimal();
  }

  /**
  * Set field LNEOPD using a String value.
  */
  public void setLNEOPD(String newvalue)
  {
    fieldLNEOPD.setString(newvalue);
  }

  /**
  * Get value of field LNEOPD as a String.
  */
  public String getLNEOPD()
  {
    return fieldLNEOPD.getString();
  }

  /**
  * Set numeric field LNEOPD using a BigDecimal value.
  */
  public void setLNEOPD(BigDecimal newvalue)
  {
    fieldLNEOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEOPD()
  {
    return fieldLNEOPD.getBigDecimal();
  }

  /**
  * Set field LNEOPM using a String value.
  */
  public void setLNEOPM(String newvalue)
  {
    fieldLNEOPM.setString(newvalue);
  }

  /**
  * Get value of field LNEOPM as a String.
  */
  public String getLNEOPM()
  {
    return fieldLNEOPM.getString();
  }

  /**
  * Set numeric field LNEOPM using a BigDecimal value.
  */
  public void setLNEOPM(BigDecimal newvalue)
  {
    fieldLNEOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEOPM()
  {
    return fieldLNEOPM.getBigDecimal();
  }

  /**
  * Set field LNEOPY using a String value.
  */
  public void setLNEOPY(String newvalue)
  {
    fieldLNEOPY.setString(newvalue);
  }

  /**
  * Get value of field LNEOPY as a String.
  */
  public String getLNEOPY()
  {
    return fieldLNEOPY.getString();
  }

  /**
  * Set numeric field LNEOPY using a BigDecimal value.
  */
  public void setLNEOPY(BigDecimal newvalue)
  {
    fieldLNEOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEOPY()
  {
    return fieldLNEOPY.getBigDecimal();
  }

  /**
  * Set field LNEMTD using a String value.
  */
  public void setLNEMTD(String newvalue)
  {
    fieldLNEMTD.setString(newvalue);
  }

  /**
  * Get value of field LNEMTD as a String.
  */
  public String getLNEMTD()
  {
    return fieldLNEMTD.getString();
  }

  /**
  * Set numeric field LNEMTD using a BigDecimal value.
  */
  public void setLNEMTD(BigDecimal newvalue)
  {
    fieldLNEMTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEMTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEMTD()
  {
    return fieldLNEMTD.getBigDecimal();
  }

  /**
  * Set field LNEMTM using a String value.
  */
  public void setLNEMTM(String newvalue)
  {
    fieldLNEMTM.setString(newvalue);
  }

  /**
  * Get value of field LNEMTM as a String.
  */
  public String getLNEMTM()
  {
    return fieldLNEMTM.getString();
  }

  /**
  * Set numeric field LNEMTM using a BigDecimal value.
  */
  public void setLNEMTM(BigDecimal newvalue)
  {
    fieldLNEMTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEMTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEMTM()
  {
    return fieldLNEMTM.getBigDecimal();
  }

  /**
  * Set field LNEMTY using a String value.
  */
  public void setLNEMTY(String newvalue)
  {
    fieldLNEMTY.setString(newvalue);
  }

  /**
  * Get value of field LNEMTY as a String.
  */
  public String getLNEMTY()
  {
    return fieldLNEMTY.getString();
  }

  /**
  * Set numeric field LNEMTY using a BigDecimal value.
  */
  public void setLNEMTY(BigDecimal newvalue)
  {
    fieldLNEMTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field LNEMTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalLNEMTY()
  {
    return fieldLNEMTY.getBigDecimal();
  }

}
