package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDC000004 physical file definition.
* 
* File level identifier is 1160908173956.
* Record format level identifier is 33E87BE7EC288.
*/

public class EDC000004Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H44USERID",
                                     "H44PROGRM",
                                     "H44TIMSYS",
                                     "H44SCRCOD",
                                     "H44OPECOD",
                                     "H44FLGMAS",
                                     "H44FLGWK1",
                                     "H44FLGWK2",
                                     "H44FLGWK3",
                                     "E04DCPACC",
                                     "E04DCPPRO",
                                     "E04DCPSQN",
                                     "E04DCPDTM",
                                     "E04DCPDTD",
                                     "E04DCPDTY",
                                     "E04DCPAMN",
                                     "E04DCPREF",
                                     "E04DCPRDF",
                                     "E04DCPDPM",
                                     "E04DCPDPD",
                                     "E04DCPDPY",
                                     "E04DCPAMP",
                                     "E04DCPBAL",
                                     "E04DCPSTS",
                                     "E04DCPFL1",
                                     "F04DCPDTM",
                                     "F04DCPDTD",
                                     "F04DCPDTY",
                                     "F04DCPAMN",
                                     "F04DCPREF",
                                     "F04DCPRDF"
                                   };
  final static String tnames[] = {
                                   "H44USERID",
                                   "H44PROGRM",
                                   "H44TIMSYS",
                                   "H44SCRCOD",
                                   "H44OPECOD",
                                   "H44FLGMAS",
                                   "H44FLGWK1",
                                   "H44FLGWK2",
                                   "H44FLGWK3",
                                   "E04DCPACC",
                                   "E04DCPPRO",
                                   "E04DCPSQN",
                                   "E04DCPDTM",
                                   "E04DCPDTD",
                                   "E04DCPDTY",
                                   "E04DCPAMN",
                                   "E04DCPREF",
                                   "E04DCPRDF",
                                   "E04DCPDPM",
                                   "E04DCPDPD",
                                   "E04DCPDPY",
                                   "E04DCPAMP",
                                   "E04DCPBAL",
                                   "E04DCPSTS",
                                   "E04DCPFL1",
                                   "F04DCPDTM",
                                   "F04DCPDTD",
                                   "F04DCPDTY",
                                   "F04DCPAMN",
                                   "F04DCPREF",
                                   "F04DCPRDF"
                                 };
  final static String fid = "1160908173956";
  final static String rid = "33E87BE7EC288";
  final static String fmtname = "EDC000004";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH44USERID = null;
  private CharacterField fieldH44PROGRM = null;
  private CharacterField fieldH44TIMSYS = null;
  private CharacterField fieldH44SCRCOD = null;
  private CharacterField fieldH44OPECOD = null;
  private CharacterField fieldH44FLGMAS = null;
  private CharacterField fieldH44FLGWK1 = null;
  private CharacterField fieldH44FLGWK2 = null;
  private CharacterField fieldH44FLGWK3 = null;
  private DecimalField fieldE04DCPACC = null;
  private CharacterField fieldE04DCPPRO = null;
  private DecimalField fieldE04DCPSQN = null;
  private DecimalField fieldE04DCPDTM = null;
  private DecimalField fieldE04DCPDTD = null;
  private DecimalField fieldE04DCPDTY = null;
  private DecimalField fieldE04DCPAMN = null;
  private CharacterField fieldE04DCPREF = null;
  private CharacterField fieldE04DCPRDF = null;
  private DecimalField fieldE04DCPDPM = null;
  private DecimalField fieldE04DCPDPD = null;
  private DecimalField fieldE04DCPDPY = null;
  private DecimalField fieldE04DCPAMP = null;
  private DecimalField fieldE04DCPBAL = null;
  private CharacterField fieldE04DCPSTS = null;
  private CharacterField fieldE04DCPFL1 = null;
  private CharacterField fieldF04DCPDTM = null;
  private CharacterField fieldF04DCPDTD = null;
  private CharacterField fieldF04DCPDTY = null;
  private CharacterField fieldF04DCPAMN = null;
  private CharacterField fieldF04DCPREF = null;
  private CharacterField fieldF04DCPRDF = null;

  /**
  * Constructor for EDC000004Message.
  */
  public EDC000004Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 162;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH44USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H44USERID");
    fields[1] = fieldH44PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H44PROGRM");
    fields[2] = fieldH44TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H44TIMSYS");
    fields[3] = fieldH44SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H44SCRCOD");
    fields[4] = fieldH44OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H44OPECOD");
    fields[5] = fieldH44FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H44FLGMAS");
    fields[6] = fieldH44FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H44FLGWK1");
    fields[7] = fieldH44FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H44FLGWK2");
    fields[8] = fieldH44FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H44FLGWK3");
    fields[9] = fieldE04DCPACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E04DCPACC");
    fields[10] = fieldE04DCPPRO =
    new CharacterField(message, HEADERSIZE + 55, 4, "E04DCPPRO");
    fields[11] = fieldE04DCPSQN =
    new DecimalField(message, HEADERSIZE + 59, 5, 0, "E04DCPSQN");
    fields[12] = fieldE04DCPDTM =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "E04DCPDTM");
    fields[13] = fieldE04DCPDTD =
    new DecimalField(message, HEADERSIZE + 67, 3, 0, "E04DCPDTD");
    fields[14] = fieldE04DCPDTY =
    new DecimalField(message, HEADERSIZE + 70, 5, 0, "E04DCPDTY");
    fields[15] = fieldE04DCPAMN =
    new DecimalField(message, HEADERSIZE + 75, 17, 2, "E04DCPAMN");
    fields[16] = fieldE04DCPREF =
    new CharacterField(message, HEADERSIZE + 92, 16, "E04DCPREF");
    fields[17] = fieldE04DCPRDF =
    new CharacterField(message, HEADERSIZE + 108, 1, "E04DCPRDF");
    fields[18] = fieldE04DCPDPM =
    new DecimalField(message, HEADERSIZE + 109, 3, 0, "E04DCPDPM");
    fields[19] = fieldE04DCPDPD =
    new DecimalField(message, HEADERSIZE + 112, 3, 0, "E04DCPDPD");
    fields[20] = fieldE04DCPDPY =
    new DecimalField(message, HEADERSIZE + 115, 5, 0, "E04DCPDPY");
    fields[21] = fieldE04DCPAMP =
    new DecimalField(message, HEADERSIZE + 120, 17, 2, "E04DCPAMP");
    fields[22] = fieldE04DCPBAL =
    new DecimalField(message, HEADERSIZE + 137, 17, 2, "E04DCPBAL");
    fields[23] = fieldE04DCPSTS =
    new CharacterField(message, HEADERSIZE + 154, 1, "E04DCPSTS");
    fields[24] = fieldE04DCPFL1 =
    new CharacterField(message, HEADERSIZE + 155, 1, "E04DCPFL1");
    fields[25] = fieldF04DCPDTM =
    new CharacterField(message, HEADERSIZE + 156, 1, "F04DCPDTM");
    fields[26] = fieldF04DCPDTD =
    new CharacterField(message, HEADERSIZE + 157, 1, "F04DCPDTD");
    fields[27] = fieldF04DCPDTY =
    new CharacterField(message, HEADERSIZE + 158, 1, "F04DCPDTY");
    fields[28] = fieldF04DCPAMN =
    new CharacterField(message, HEADERSIZE + 159, 1, "F04DCPAMN");
    fields[29] = fieldF04DCPREF =
    new CharacterField(message, HEADERSIZE + 160, 1, "F04DCPREF");
    fields[30] = fieldF04DCPRDF =
    new CharacterField(message, HEADERSIZE + 161, 1, "F04DCPRDF");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H44USERID using a String value.
  */
  public void setH44USERID(String newvalue)
  {
    fieldH44USERID.setString(newvalue);
  }

  /**
  * Get value of field H44USERID as a String.
  */
  public String getH44USERID()
  {
    return fieldH44USERID.getString();
  }

  /**
  * Set field H44PROGRM using a String value.
  */
  public void setH44PROGRM(String newvalue)
  {
    fieldH44PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H44PROGRM as a String.
  */
  public String getH44PROGRM()
  {
    return fieldH44PROGRM.getString();
  }

  /**
  * Set field H44TIMSYS using a String value.
  */
  public void setH44TIMSYS(String newvalue)
  {
    fieldH44TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H44TIMSYS as a String.
  */
  public String getH44TIMSYS()
  {
    return fieldH44TIMSYS.getString();
  }

  /**
  * Set field H44SCRCOD using a String value.
  */
  public void setH44SCRCOD(String newvalue)
  {
    fieldH44SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H44SCRCOD as a String.
  */
  public String getH44SCRCOD()
  {
    return fieldH44SCRCOD.getString();
  }

  /**
  * Set field H44OPECOD using a String value.
  */
  public void setH44OPECOD(String newvalue)
  {
    fieldH44OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H44OPECOD as a String.
  */
  public String getH44OPECOD()
  {
    return fieldH44OPECOD.getString();
  }

  /**
  * Set field H44FLGMAS using a String value.
  */
  public void setH44FLGMAS(String newvalue)
  {
    fieldH44FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H44FLGMAS as a String.
  */
  public String getH44FLGMAS()
  {
    return fieldH44FLGMAS.getString();
  }

  /**
  * Set field H44FLGWK1 using a String value.
  */
  public void setH44FLGWK1(String newvalue)
  {
    fieldH44FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H44FLGWK1 as a String.
  */
  public String getH44FLGWK1()
  {
    return fieldH44FLGWK1.getString();
  }

  /**
  * Set field H44FLGWK2 using a String value.
  */
  public void setH44FLGWK2(String newvalue)
  {
    fieldH44FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H44FLGWK2 as a String.
  */
  public String getH44FLGWK2()
  {
    return fieldH44FLGWK2.getString();
  }

  /**
  * Set field H44FLGWK3 using a String value.
  */
  public void setH44FLGWK3(String newvalue)
  {
    fieldH44FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H44FLGWK3 as a String.
  */
  public String getH44FLGWK3()
  {
    return fieldH44FLGWK3.getString();
  }

  /**
  * Set field E04DCPACC using a String value.
  */
  public void setE04DCPACC(String newvalue)
  {
    fieldE04DCPACC.setString(newvalue);
  }

  /**
  * Get value of field E04DCPACC as a String.
  */
  public String getE04DCPACC()
  {
    return fieldE04DCPACC.getString();
  }

  /**
  * Set numeric field E04DCPACC using a BigDecimal value.
  */
  public void setE04DCPACC(BigDecimal newvalue)
  {
    fieldE04DCPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPACC()
  {
    return fieldE04DCPACC.getBigDecimal();
  }

  /**
  * Set field E04DCPPRO using a String value.
  */
  public void setE04DCPPRO(String newvalue)
  {
    fieldE04DCPPRO.setString(newvalue);
  }

  /**
  * Get value of field E04DCPPRO as a String.
  */
  public String getE04DCPPRO()
  {
    return fieldE04DCPPRO.getString();
  }

  /**
  * Set field E04DCPSQN using a String value.
  */
  public void setE04DCPSQN(String newvalue)
  {
    fieldE04DCPSQN.setString(newvalue);
  }

  /**
  * Get value of field E04DCPSQN as a String.
  */
  public String getE04DCPSQN()
  {
    return fieldE04DCPSQN.getString();
  }

  /**
  * Set numeric field E04DCPSQN using a BigDecimal value.
  */
  public void setE04DCPSQN(BigDecimal newvalue)
  {
    fieldE04DCPSQN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPSQN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPSQN()
  {
    return fieldE04DCPSQN.getBigDecimal();
  }

  /**
  * Set field E04DCPDTM using a String value.
  */
  public void setE04DCPDTM(String newvalue)
  {
    fieldE04DCPDTM.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDTM as a String.
  */
  public String getE04DCPDTM()
  {
    return fieldE04DCPDTM.getString();
  }

  /**
  * Set numeric field E04DCPDTM using a BigDecimal value.
  */
  public void setE04DCPDTM(BigDecimal newvalue)
  {
    fieldE04DCPDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDTM()
  {
    return fieldE04DCPDTM.getBigDecimal();
  }

  /**
  * Set field E04DCPDTD using a String value.
  */
  public void setE04DCPDTD(String newvalue)
  {
    fieldE04DCPDTD.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDTD as a String.
  */
  public String getE04DCPDTD()
  {
    return fieldE04DCPDTD.getString();
  }

  /**
  * Set numeric field E04DCPDTD using a BigDecimal value.
  */
  public void setE04DCPDTD(BigDecimal newvalue)
  {
    fieldE04DCPDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDTD()
  {
    return fieldE04DCPDTD.getBigDecimal();
  }

  /**
  * Set field E04DCPDTY using a String value.
  */
  public void setE04DCPDTY(String newvalue)
  {
    fieldE04DCPDTY.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDTY as a String.
  */
  public String getE04DCPDTY()
  {
    return fieldE04DCPDTY.getString();
  }

  /**
  * Set numeric field E04DCPDTY using a BigDecimal value.
  */
  public void setE04DCPDTY(BigDecimal newvalue)
  {
    fieldE04DCPDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDTY()
  {
    return fieldE04DCPDTY.getBigDecimal();
  }

  /**
  * Set field E04DCPAMN using a String value.
  */
  public void setE04DCPAMN(String newvalue)
  {
    fieldE04DCPAMN.setString(newvalue);
  }

  /**
  * Get value of field E04DCPAMN as a String.
  */
  public String getE04DCPAMN()
  {
    return fieldE04DCPAMN.getString();
  }

  /**
  * Set numeric field E04DCPAMN using a BigDecimal value.
  */
  public void setE04DCPAMN(BigDecimal newvalue)
  {
    fieldE04DCPAMN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPAMN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPAMN()
  {
    return fieldE04DCPAMN.getBigDecimal();
  }

  /**
  * Set field E04DCPREF using a String value.
  */
  public void setE04DCPREF(String newvalue)
  {
    fieldE04DCPREF.setString(newvalue);
  }

  /**
  * Get value of field E04DCPREF as a String.
  */
  public String getE04DCPREF()
  {
    return fieldE04DCPREF.getString();
  }

  /**
  * Set field E04DCPRDF using a String value.
  */
  public void setE04DCPRDF(String newvalue)
  {
    fieldE04DCPRDF.setString(newvalue);
  }

  /**
  * Get value of field E04DCPRDF as a String.
  */
  public String getE04DCPRDF()
  {
    return fieldE04DCPRDF.getString();
  }

  /**
  * Set field E04DCPDPM using a String value.
  */
  public void setE04DCPDPM(String newvalue)
  {
    fieldE04DCPDPM.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDPM as a String.
  */
  public String getE04DCPDPM()
  {
    return fieldE04DCPDPM.getString();
  }

  /**
  * Set numeric field E04DCPDPM using a BigDecimal value.
  */
  public void setE04DCPDPM(BigDecimal newvalue)
  {
    fieldE04DCPDPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDPM()
  {
    return fieldE04DCPDPM.getBigDecimal();
  }

  /**
  * Set field E04DCPDPD using a String value.
  */
  public void setE04DCPDPD(String newvalue)
  {
    fieldE04DCPDPD.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDPD as a String.
  */
  public String getE04DCPDPD()
  {
    return fieldE04DCPDPD.getString();
  }

  /**
  * Set numeric field E04DCPDPD using a BigDecimal value.
  */
  public void setE04DCPDPD(BigDecimal newvalue)
  {
    fieldE04DCPDPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDPD()
  {
    return fieldE04DCPDPD.getBigDecimal();
  }

  /**
  * Set field E04DCPDPY using a String value.
  */
  public void setE04DCPDPY(String newvalue)
  {
    fieldE04DCPDPY.setString(newvalue);
  }

  /**
  * Get value of field E04DCPDPY as a String.
  */
  public String getE04DCPDPY()
  {
    return fieldE04DCPDPY.getString();
  }

  /**
  * Set numeric field E04DCPDPY using a BigDecimal value.
  */
  public void setE04DCPDPY(BigDecimal newvalue)
  {
    fieldE04DCPDPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPDPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPDPY()
  {
    return fieldE04DCPDPY.getBigDecimal();
  }

  /**
  * Set field E04DCPAMP using a String value.
  */
  public void setE04DCPAMP(String newvalue)
  {
    fieldE04DCPAMP.setString(newvalue);
  }

  /**
  * Get value of field E04DCPAMP as a String.
  */
  public String getE04DCPAMP()
  {
    return fieldE04DCPAMP.getString();
  }

  /**
  * Set numeric field E04DCPAMP using a BigDecimal value.
  */
  public void setE04DCPAMP(BigDecimal newvalue)
  {
    fieldE04DCPAMP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPAMP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPAMP()
  {
    return fieldE04DCPAMP.getBigDecimal();
  }

  /**
  * Set field E04DCPBAL using a String value.
  */
  public void setE04DCPBAL(String newvalue)
  {
    fieldE04DCPBAL.setString(newvalue);
  }

  /**
  * Get value of field E04DCPBAL as a String.
  */
  public String getE04DCPBAL()
  {
    return fieldE04DCPBAL.getString();
  }

  /**
  * Set numeric field E04DCPBAL using a BigDecimal value.
  */
  public void setE04DCPBAL(BigDecimal newvalue)
  {
    fieldE04DCPBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04DCPBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04DCPBAL()
  {
    return fieldE04DCPBAL.getBigDecimal();
  }

  /**
  * Set field E04DCPSTS using a String value.
  */
  public void setE04DCPSTS(String newvalue)
  {
    fieldE04DCPSTS.setString(newvalue);
  }

  /**
  * Get value of field E04DCPSTS as a String.
  */
  public String getE04DCPSTS()
  {
    return fieldE04DCPSTS.getString();
  }

  /**
  * Set field E04DCPFL1 using a String value.
  */
  public void setE04DCPFL1(String newvalue)
  {
    fieldE04DCPFL1.setString(newvalue);
  }

  /**
  * Get value of field E04DCPFL1 as a String.
  */
  public String getE04DCPFL1()
  {
    return fieldE04DCPFL1.getString();
  }

  /**
  * Set field F04DCPDTM using a String value.
  */
  public void setF04DCPDTM(String newvalue)
  {
    fieldF04DCPDTM.setString(newvalue);
  }

  /**
  * Get value of field F04DCPDTM as a String.
  */
  public String getF04DCPDTM()
  {
    return fieldF04DCPDTM.getString();
  }

  /**
  * Set field F04DCPDTD using a String value.
  */
  public void setF04DCPDTD(String newvalue)
  {
    fieldF04DCPDTD.setString(newvalue);
  }

  /**
  * Get value of field F04DCPDTD as a String.
  */
  public String getF04DCPDTD()
  {
    return fieldF04DCPDTD.getString();
  }

  /**
  * Set field F04DCPDTY using a String value.
  */
  public void setF04DCPDTY(String newvalue)
  {
    fieldF04DCPDTY.setString(newvalue);
  }

  /**
  * Get value of field F04DCPDTY as a String.
  */
  public String getF04DCPDTY()
  {
    return fieldF04DCPDTY.getString();
  }

  /**
  * Set field F04DCPAMN using a String value.
  */
  public void setF04DCPAMN(String newvalue)
  {
    fieldF04DCPAMN.setString(newvalue);
  }

  /**
  * Get value of field F04DCPAMN as a String.
  */
  public String getF04DCPAMN()
  {
    return fieldF04DCPAMN.getString();
  }

  /**
  * Set field F04DCPREF using a String value.
  */
  public void setF04DCPREF(String newvalue)
  {
    fieldF04DCPREF.setString(newvalue);
  }

  /**
  * Get value of field F04DCPREF as a String.
  */
  public String getF04DCPREF()
  {
    return fieldF04DCPREF.getString();
  }

  /**
  * Set field F04DCPRDF using a String value.
  */
  public void setF04DCPRDF(String newvalue)
  {
    fieldF04DCPRDF.setString(newvalue);
  }

  /**
  * Get value of field F04DCPRDF as a String.
  */
  public String getF04DCPRDF()
  {
    return fieldF04DCPRDF.getString();
  }

}
