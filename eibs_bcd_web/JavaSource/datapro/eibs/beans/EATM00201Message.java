package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EATM00201 physical file definition.
* 
* File level identifier is 1190104094315.
* Record format level identifier is 4A33DF1C2860E.
*/

public class EATM00201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01MOVBNK",
                                     "E01MOVCCY",
                                     "E01MOVTID",
                                     "E01MOVTYR",
                                     "D01MOVTYR",
                                     "E01MOVTMM",
                                     "E01MOVTDD",
                                     "E01MOVTYY",
                                     "E01TOTTIM",
                                     "E01TOTVRA"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01MOVBNK",
                                   "E01MOVCCY",
                                   "E01MOVTID",
                                   "E01MOVTYR",
                                   "D01MOVTYR",
                                   "E01MOVTMM",
                                   "E01MOVTDD",
                                   "E01MOVTYY",
                                   "E01TOTTIM",
                                   "E01TOTVRA"
                                 };
  final static String fid = "1190104094315";
  final static String rid = "4A33DF1C2860E";
  final static String fmtname = "EATM00201";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01MOVBNK = null;
  private CharacterField fieldE01MOVCCY = null;
  private CharacterField fieldE01MOVTID = null;
  private CharacterField fieldE01MOVTYR = null;
  private CharacterField fieldD01MOVTYR = null;
  private DecimalField fieldE01MOVTMM = null;
  private DecimalField fieldE01MOVTDD = null;
  private DecimalField fieldE01MOVTYY = null;
  private DecimalField fieldE01TOTTIM = null;
  private DecimalField fieldE01TOTVRA = null;

  /**
  * Constructor for EATM00201Message.
  */
  public EATM00201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 171;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01MOVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01MOVBNK");
    fields[10] = fieldE01MOVCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E01MOVCCY");
    fields[11] = fieldE01MOVTID =
    new CharacterField(message, HEADERSIZE + 47, 10, "E01MOVTID");
    fields[12] = fieldE01MOVTYR =
    new CharacterField(message, HEADERSIZE + 57, 1, "E01MOVTYR");
    fields[13] = fieldD01MOVTYR =
    new CharacterField(message, HEADERSIZE + 58, 60, "D01MOVTYR");
    fields[14] = fieldE01MOVTMM =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E01MOVTMM");
    fields[15] = fieldE01MOVTDD =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "E01MOVTDD");
    fields[16] = fieldE01MOVTYY =
    new DecimalField(message, HEADERSIZE + 124, 5, 0, "E01MOVTYY");
    fields[17] = fieldE01TOTTIM =
    new DecimalField(message, HEADERSIZE + 129, 21, 2, "E01TOTTIM");
    fields[18] = fieldE01TOTVRA =
    new DecimalField(message, HEADERSIZE + 150, 21, 2, "E01TOTVRA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01MOVBNK using a String value.
  */
  public void setE01MOVBNK(String newvalue)
  {
    fieldE01MOVBNK.setString(newvalue);
  }

  /**
  * Get value of field E01MOVBNK as a String.
  */
  public String getE01MOVBNK()
  {
    return fieldE01MOVBNK.getString();
  }

  /**
  * Set field E01MOVCCY using a String value.
  */
  public void setE01MOVCCY(String newvalue)
  {
    fieldE01MOVCCY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVCCY as a String.
  */
  public String getE01MOVCCY()
  {
    return fieldE01MOVCCY.getString();
  }

  /**
  * Set field E01MOVTID using a String value.
  */
  public void setE01MOVTID(String newvalue)
  {
    fieldE01MOVTID.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTID as a String.
  */
  public String getE01MOVTID()
  {
    return fieldE01MOVTID.getString();
  }

  /**
  * Set field E01MOVTYR using a String value.
  */
  public void setE01MOVTYR(String newvalue)
  {
    fieldE01MOVTYR.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTYR as a String.
  */
  public String getE01MOVTYR()
  {
    return fieldE01MOVTYR.getString();
  }

  /**
  * Set field D01MOVTYR using a String value.
  */
  public void setD01MOVTYR(String newvalue)
  {
    fieldD01MOVTYR.setString(newvalue);
  }

  /**
  * Get value of field D01MOVTYR as a String.
  */
  public String getD01MOVTYR()
  {
    return fieldD01MOVTYR.getString();
  }

  /**
  * Set field E01MOVTMM using a String value.
  */
  public void setE01MOVTMM(String newvalue)
  {
    fieldE01MOVTMM.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTMM as a String.
  */
  public String getE01MOVTMM()
  {
    return fieldE01MOVTMM.getString();
  }

  /**
  * Set numeric field E01MOVTMM using a BigDecimal value.
  */
  public void setE01MOVTMM(BigDecimal newvalue)
  {
    fieldE01MOVTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTMM()
  {
    return fieldE01MOVTMM.getBigDecimal();
  }

  /**
  * Set field E01MOVTDD using a String value.
  */
  public void setE01MOVTDD(String newvalue)
  {
    fieldE01MOVTDD.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTDD as a String.
  */
  public String getE01MOVTDD()
  {
    return fieldE01MOVTDD.getString();
  }

  /**
  * Set numeric field E01MOVTDD using a BigDecimal value.
  */
  public void setE01MOVTDD(BigDecimal newvalue)
  {
    fieldE01MOVTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTDD()
  {
    return fieldE01MOVTDD.getBigDecimal();
  }

  /**
  * Set field E01MOVTYY using a String value.
  */
  public void setE01MOVTYY(String newvalue)
  {
    fieldE01MOVTYY.setString(newvalue);
  }

  /**
  * Get value of field E01MOVTYY as a String.
  */
  public String getE01MOVTYY()
  {
    return fieldE01MOVTYY.getString();
  }

  /**
  * Set numeric field E01MOVTYY using a BigDecimal value.
  */
  public void setE01MOVTYY(BigDecimal newvalue)
  {
    fieldE01MOVTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MOVTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MOVTYY()
  {
    return fieldE01MOVTYY.getBigDecimal();
  }

  /**
  * Set field E01TOTTIM using a String value.
  */
  public void setE01TOTTIM(String newvalue)
  {
    fieldE01TOTTIM.setString(newvalue);
  }

  /**
  * Get value of field E01TOTTIM as a String.
  */
  public String getE01TOTTIM()
  {
    return fieldE01TOTTIM.getString();
  }

  /**
  * Set numeric field E01TOTTIM using a BigDecimal value.
  */
  public void setE01TOTTIM(BigDecimal newvalue)
  {
    fieldE01TOTTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTTIM()
  {
    return fieldE01TOTTIM.getBigDecimal();
  }

  /**
  * Set field E01TOTVRA using a String value.
  */
  public void setE01TOTVRA(String newvalue)
  {
    fieldE01TOTVRA.setString(newvalue);
  }

  /**
  * Get value of field E01TOTVRA as a String.
  */
  public String getE01TOTVRA()
  {
    return fieldE01TOTVRA.getString();
  }

  /**
  * Set numeric field E01TOTVRA using a BigDecimal value.
  */
  public void setE01TOTVRA(BigDecimal newvalue)
  {
    fieldE01TOTVRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTVRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTVRA()
  {
    return fieldE01TOTVRA.getBigDecimal();
  }

}
