package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECN000001 physical file definition.
* 
* File level identifier is 1151111124620.
* Record format level identifier is 4125EBF91FE0B.
*/

public class ECN000001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CDRRTB",
                                     "E01CDRSFL",
                                     "E01CDRCCY",
                                     "E01CDRDTM",
                                     "E01CDRDTD",
                                     "E01CDRDTY",
                                     "E01CDRMXR",
                                     "E01CDRMIR",
                                     "E01CDRDPE",
                                     "E01CDRBAS",
                                     "E01CDRFTB",
                                     "E01CDRFTY",
                                     "E01CDRBSE",
                                     "E01CDRPRT",
                                     "E01CDBRTN",
                                     "E01CDRDSC",
                                     "E01CDROPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CDRRTB",
                                   "E01CDRSFL",
                                   "E01CDRCCY",
                                   "E01CDRDTM",
                                   "E01CDRDTD",
                                   "E01CDRDTY",
                                   "E01CDRMXR",
                                   "E01CDRMIR",
                                   "E01CDRDPE",
                                   "E01CDRBAS",
                                   "E01CDRFTB",
                                   "E01CDRFTY",
                                   "E01CDRBSE",
                                   "E01CDRPRT",
                                   "E01CDBRTN",
                                   "E01CDRDSC",
                                   "E01CDROPE"
                                 };
  final static String fid = "1151111124620";
  final static String rid = "4125EBF91FE0B";
  final static String fmtname = "ECN000001";
  final int FIELDCOUNT = 26;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CDRRTB = null;
  private CharacterField fieldE01CDRSFL = null;
  private CharacterField fieldE01CDRCCY = null;
  private DecimalField fieldE01CDRDTM = null;
  private DecimalField fieldE01CDRDTD = null;
  private DecimalField fieldE01CDRDTY = null;
  private DecimalField fieldE01CDRMXR = null;
  private DecimalField fieldE01CDRMIR = null;
  private DecimalField fieldE01CDRDPE = null;
  private DecimalField fieldE01CDRBAS = null;
  private CharacterField fieldE01CDRFTB = null;
  private CharacterField fieldE01CDRFTY = null;
  private DecimalField fieldE01CDRBSE = null;
  private DecimalField fieldE01CDRPRT = null;
  private DecimalField fieldE01CDBRTN = null;
  private CharacterField fieldE01CDRDSC = null;
  private CharacterField fieldE01CDROPE = null;

  /**
  * Constructor for ECN000001Message.
  */
  public ECN000001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 163;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CDRRTB =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01CDRRTB");
    fields[10] = fieldE01CDRSFL =
    new CharacterField(message, HEADERSIZE + 44, 1, "E01CDRSFL");
    fields[11] = fieldE01CDRCCY =
    new CharacterField(message, HEADERSIZE + 45, 3, "E01CDRCCY");
    fields[12] = fieldE01CDRDTM =
    new DecimalField(message, HEADERSIZE + 48, 3, 0, "E01CDRDTM");
    fields[13] = fieldE01CDRDTD =
    new DecimalField(message, HEADERSIZE + 51, 3, 0, "E01CDRDTD");
    fields[14] = fieldE01CDRDTY =
    new DecimalField(message, HEADERSIZE + 54, 5, 0, "E01CDRDTY");
    fields[15] = fieldE01CDRMXR =
    new DecimalField(message, HEADERSIZE + 59, 11, 6, "E01CDRMXR");
    fields[16] = fieldE01CDRMIR =
    new DecimalField(message, HEADERSIZE + 70, 11, 6, "E01CDRMIR");
    fields[17] = fieldE01CDRDPE =
    new DecimalField(message, HEADERSIZE + 81, 4, 0, "E01CDRDPE");
    fields[18] = fieldE01CDRBAS =
    new DecimalField(message, HEADERSIZE + 85, 4, 0, "E01CDRBAS");
    fields[19] = fieldE01CDRFTB =
    new CharacterField(message, HEADERSIZE + 89, 2, "E01CDRFTB");
    fields[20] = fieldE01CDRFTY =
    new CharacterField(message, HEADERSIZE + 91, 2, "E01CDRFTY");
    fields[21] = fieldE01CDRBSE =
    new DecimalField(message, HEADERSIZE + 93, 11, 6, "E01CDRBSE");
    fields[22] = fieldE01CDRPRT =
    new DecimalField(message, HEADERSIZE + 104, 11, 3, "E01CDRPRT");
    fields[23] = fieldE01CDBRTN =
    new DecimalField(message, HEADERSIZE + 115, 2, 0, "E01CDBRTN");
    fields[24] = fieldE01CDRDSC =
    new CharacterField(message, HEADERSIZE + 117, 45, "E01CDRDSC");
    fields[25] = fieldE01CDROPE =
    new CharacterField(message, HEADERSIZE + 162, 1, "E01CDROPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CDRRTB using a String value.
  */
  public void setE01CDRRTB(String newvalue)
  {
    fieldE01CDRRTB.setString(newvalue);
  }

  /**
  * Get value of field E01CDRRTB as a String.
  */
  public String getE01CDRRTB()
  {
    return fieldE01CDRRTB.getString();
  }

  /**
  * Set field E01CDRSFL using a String value.
  */
  public void setE01CDRSFL(String newvalue)
  {
    fieldE01CDRSFL.setString(newvalue);
  }

  /**
  * Get value of field E01CDRSFL as a String.
  */
  public String getE01CDRSFL()
  {
    return fieldE01CDRSFL.getString();
  }

  /**
  * Set field E01CDRCCY using a String value.
  */
  public void setE01CDRCCY(String newvalue)
  {
    fieldE01CDRCCY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRCCY as a String.
  */
  public String getE01CDRCCY()
  {
    return fieldE01CDRCCY.getString();
  }

  /**
  * Set field E01CDRDTM using a String value.
  */
  public void setE01CDRDTM(String newvalue)
  {
    fieldE01CDRDTM.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDTM as a String.
  */
  public String getE01CDRDTM()
  {
    return fieldE01CDRDTM.getString();
  }

  /**
  * Set numeric field E01CDRDTM using a BigDecimal value.
  */
  public void setE01CDRDTM(BigDecimal newvalue)
  {
    fieldE01CDRDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDTM()
  {
    return fieldE01CDRDTM.getBigDecimal();
  }

  /**
  * Set field E01CDRDTD using a String value.
  */
  public void setE01CDRDTD(String newvalue)
  {
    fieldE01CDRDTD.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDTD as a String.
  */
  public String getE01CDRDTD()
  {
    return fieldE01CDRDTD.getString();
  }

  /**
  * Set numeric field E01CDRDTD using a BigDecimal value.
  */
  public void setE01CDRDTD(BigDecimal newvalue)
  {
    fieldE01CDRDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDTD()
  {
    return fieldE01CDRDTD.getBigDecimal();
  }

  /**
  * Set field E01CDRDTY using a String value.
  */
  public void setE01CDRDTY(String newvalue)
  {
    fieldE01CDRDTY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDTY as a String.
  */
  public String getE01CDRDTY()
  {
    return fieldE01CDRDTY.getString();
  }

  /**
  * Set numeric field E01CDRDTY using a BigDecimal value.
  */
  public void setE01CDRDTY(BigDecimal newvalue)
  {
    fieldE01CDRDTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDTY()
  {
    return fieldE01CDRDTY.getBigDecimal();
  }

  /**
  * Set field E01CDRMXR using a String value.
  */
  public void setE01CDRMXR(String newvalue)
  {
    fieldE01CDRMXR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMXR as a String.
  */
  public String getE01CDRMXR()
  {
    return fieldE01CDRMXR.getString();
  }

  /**
  * Set numeric field E01CDRMXR using a BigDecimal value.
  */
  public void setE01CDRMXR(BigDecimal newvalue)
  {
    fieldE01CDRMXR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRMXR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRMXR()
  {
    return fieldE01CDRMXR.getBigDecimal();
  }

  /**
  * Set field E01CDRMIR using a String value.
  */
  public void setE01CDRMIR(String newvalue)
  {
    fieldE01CDRMIR.setString(newvalue);
  }

  /**
  * Get value of field E01CDRMIR as a String.
  */
  public String getE01CDRMIR()
  {
    return fieldE01CDRMIR.getString();
  }

  /**
  * Set numeric field E01CDRMIR using a BigDecimal value.
  */
  public void setE01CDRMIR(BigDecimal newvalue)
  {
    fieldE01CDRMIR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRMIR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRMIR()
  {
    return fieldE01CDRMIR.getBigDecimal();
  }

  /**
  * Set field E01CDRDPE using a String value.
  */
  public void setE01CDRDPE(String newvalue)
  {
    fieldE01CDRDPE.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDPE as a String.
  */
  public String getE01CDRDPE()
  {
    return fieldE01CDRDPE.getString();
  }

  /**
  * Set numeric field E01CDRDPE using a BigDecimal value.
  */
  public void setE01CDRDPE(BigDecimal newvalue)
  {
    fieldE01CDRDPE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRDPE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRDPE()
  {
    return fieldE01CDRDPE.getBigDecimal();
  }

  /**
  * Set field E01CDRBAS using a String value.
  */
  public void setE01CDRBAS(String newvalue)
  {
    fieldE01CDRBAS.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBAS as a String.
  */
  public String getE01CDRBAS()
  {
    return fieldE01CDRBAS.getString();
  }

  /**
  * Set numeric field E01CDRBAS using a BigDecimal value.
  */
  public void setE01CDRBAS(BigDecimal newvalue)
  {
    fieldE01CDRBAS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBAS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBAS()
  {
    return fieldE01CDRBAS.getBigDecimal();
  }

  /**
  * Set field E01CDRFTB using a String value.
  */
  public void setE01CDRFTB(String newvalue)
  {
    fieldE01CDRFTB.setString(newvalue);
  }

  /**
  * Get value of field E01CDRFTB as a String.
  */
  public String getE01CDRFTB()
  {
    return fieldE01CDRFTB.getString();
  }

  /**
  * Set field E01CDRFTY using a String value.
  */
  public void setE01CDRFTY(String newvalue)
  {
    fieldE01CDRFTY.setString(newvalue);
  }

  /**
  * Get value of field E01CDRFTY as a String.
  */
  public String getE01CDRFTY()
  {
    return fieldE01CDRFTY.getString();
  }

  /**
  * Set field E01CDRBSE using a String value.
  */
  public void setE01CDRBSE(String newvalue)
  {
    fieldE01CDRBSE.setString(newvalue);
  }

  /**
  * Get value of field E01CDRBSE as a String.
  */
  public String getE01CDRBSE()
  {
    return fieldE01CDRBSE.getString();
  }

  /**
  * Set numeric field E01CDRBSE using a BigDecimal value.
  */
  public void setE01CDRBSE(BigDecimal newvalue)
  {
    fieldE01CDRBSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRBSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRBSE()
  {
    return fieldE01CDRBSE.getBigDecimal();
  }

  /**
  * Set field E01CDRPRT using a String value.
  */
  public void setE01CDRPRT(String newvalue)
  {
    fieldE01CDRPRT.setString(newvalue);
  }

  /**
  * Get value of field E01CDRPRT as a String.
  */
  public String getE01CDRPRT()
  {
    return fieldE01CDRPRT.getString();
  }

  /**
  * Set numeric field E01CDRPRT using a BigDecimal value.
  */
  public void setE01CDRPRT(BigDecimal newvalue)
  {
    fieldE01CDRPRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDRPRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDRPRT()
  {
    return fieldE01CDRPRT.getBigDecimal();
  }

  /**
  * Set field E01CDBRTN using a String value.
  */
  public void setE01CDBRTN(String newvalue)
  {
    fieldE01CDBRTN.setString(newvalue);
  }

  /**
  * Get value of field E01CDBRTN as a String.
  */
  public String getE01CDBRTN()
  {
    return fieldE01CDBRTN.getString();
  }

  /**
  * Set numeric field E01CDBRTN using a BigDecimal value.
  */
  public void setE01CDBRTN(BigDecimal newvalue)
  {
    fieldE01CDBRTN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CDBRTN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CDBRTN()
  {
    return fieldE01CDBRTN.getBigDecimal();
  }

  /**
  * Set field E01CDRDSC using a String value.
  */
  public void setE01CDRDSC(String newvalue)
  {
    fieldE01CDRDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CDRDSC as a String.
  */
  public String getE01CDRDSC()
  {
    return fieldE01CDRDSC.getString();
  }

  /**
  * Set field E01CDROPE using a String value.
  */
  public void setE01CDROPE(String newvalue)
  {
    fieldE01CDROPE.setString(newvalue);
  }

  /**
  * Get value of field E01CDROPE as a String.
  */
  public String getE01CDROPE()
  {
    return fieldE01CDROPE.getString();
  }

}
