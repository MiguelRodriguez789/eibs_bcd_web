package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIE023001 physical file definition.
* 
* File level identifier is 1130611113210.
* Record format level identifier is 329431B519966.
*/

public class EIE023001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01MIVACC",
                                     "E01MIVCUN",
                                     "E01MIVIIC",
                                     "E01MIVCCY",
                                     "E01MIVPTY",
                                     "E01MIVBNK",
                                     "E01MIVCQY",
                                     "E01MIVCNV",
                                     "E01MIVMKP",
                                     "E01MIVCAM",
                                     "E01MIVMQY",
                                     "E01MIVMNV",
                                     "E01MIVMMP",
                                     "E01MIVMAM",
                                     "E01MIVHAM",
                                     "E01MIVMXC",
                                     "E01CAVBAL",
                                     "E01MAVBAL",
                                     "D01ISIDSC",
                                     "D01CUSNA1",
                                     "E01RWDFRC",
                                     "E01SWDREC",
                                     "E01SWDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01MIVACC",
                                   "E01MIVCUN",
                                   "E01MIVIIC",
                                   "E01MIVCCY",
                                   "E01MIVPTY",
                                   "E01MIVBNK",
                                   "E01MIVCQY",
                                   "E01MIVCNV",
                                   "E01MIVMKP",
                                   "E01MIVCAM",
                                   "E01MIVMQY",
                                   "E01MIVMNV",
                                   "E01MIVMMP",
                                   "E01MIVMAM",
                                   "E01MIVHAM",
                                   "E01MIVMXC",
                                   "E01CAVBAL",
                                   "E01MAVBAL",
                                   "D01ISIDSC",
                                   "D01CUSNA1",
                                   "E01RWDFRC",
                                   "E01SWDREC",
                                   "E01SWDOPE"
                                 };
  final static String fid = "1130611113210";
  final static String rid = "329431B519966";
  final static String fmtname = "EIE023001";
  final int FIELDCOUNT = 32;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01MIVACC = null;
  private DecimalField fieldE01MIVCUN = null;
  private DecimalField fieldE01MIVIIC = null;
  private CharacterField fieldE01MIVCCY = null;
  private CharacterField fieldE01MIVPTY = null;
  private CharacterField fieldE01MIVBNK = null;
  private DecimalField fieldE01MIVCQY = null;
  private DecimalField fieldE01MIVCNV = null;
  private DecimalField fieldE01MIVMKP = null;
  private DecimalField fieldE01MIVCAM = null;
  private DecimalField fieldE01MIVMQY = null;
  private DecimalField fieldE01MIVMNV = null;
  private DecimalField fieldE01MIVMMP = null;
  private DecimalField fieldE01MIVMAM = null;
  private DecimalField fieldE01MIVHAM = null;
  private DecimalField fieldE01MIVMXC = null;
  private DecimalField fieldE01CAVBAL = null;
  private DecimalField fieldE01MAVBAL = null;
  private CharacterField fieldD01ISIDSC = null;
  private CharacterField fieldD01CUSNA1 = null;
  private DecimalField fieldE01RWDFRC = null;
  private DecimalField fieldE01SWDREC = null;
  private CharacterField fieldE01SWDOPE = null;

  /**
  * Constructor for EIE023001Message.
  */
  public EIE023001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 482;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01MIVACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01MIVACC");
    fields[10] = fieldE01MIVCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E01MIVCUN");
    fields[11] = fieldE01MIVIIC =
    new DecimalField(message, HEADERSIZE + 65, 13, 0, "E01MIVIIC");
    fields[12] = fieldE01MIVCCY =
    new CharacterField(message, HEADERSIZE + 78, 3, "E01MIVCCY");
    fields[13] = fieldE01MIVPTY =
    new CharacterField(message, HEADERSIZE + 81, 4, "E01MIVPTY");
    fields[14] = fieldE01MIVBNK =
    new CharacterField(message, HEADERSIZE + 85, 2, "E01MIVBNK");
    fields[15] = fieldE01MIVCQY =
    new DecimalField(message, HEADERSIZE + 87, 23, 8, "E01MIVCQY");
    fields[16] = fieldE01MIVCNV =
    new DecimalField(message, HEADERSIZE + 110, 23, 6, "E01MIVCNV");
    fields[17] = fieldE01MIVMKP =
    new DecimalField(message, HEADERSIZE + 133, 23, 8, "E01MIVMKP");
    fields[18] = fieldE01MIVCAM =
    new DecimalField(message, HEADERSIZE + 156, 23, 6, "E01MIVCAM");
    fields[19] = fieldE01MIVMQY =
    new DecimalField(message, HEADERSIZE + 179, 23, 8, "E01MIVMQY");
    fields[20] = fieldE01MIVMNV =
    new DecimalField(message, HEADERSIZE + 202, 23, 6, "E01MIVMNV");
    fields[21] = fieldE01MIVMMP =
    new DecimalField(message, HEADERSIZE + 225, 23, 8, "E01MIVMMP");
    fields[22] = fieldE01MIVMAM =
    new DecimalField(message, HEADERSIZE + 248, 23, 6, "E01MIVMAM");
    fields[23] = fieldE01MIVHAM =
    new DecimalField(message, HEADERSIZE + 271, 17, 2, "E01MIVHAM");
    fields[24] = fieldE01MIVMXC =
    new DecimalField(message, HEADERSIZE + 288, 11, 6, "E01MIVMXC");
    fields[25] = fieldE01CAVBAL =
    new DecimalField(message, HEADERSIZE + 299, 23, 6, "E01CAVBAL");
    fields[26] = fieldE01MAVBAL =
    new DecimalField(message, HEADERSIZE + 322, 23, 6, "E01MAVBAL");
    fields[27] = fieldD01ISIDSC =
    new CharacterField(message, HEADERSIZE + 345, 60, "D01ISIDSC");
    fields[28] = fieldD01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 405, 60, "D01CUSNA1");
    fields[29] = fieldE01RWDFRC =
    new DecimalField(message, HEADERSIZE + 465, 8, 0, "E01RWDFRC");
    fields[30] = fieldE01SWDREC =
    new DecimalField(message, HEADERSIZE + 473, 8, 0, "E01SWDREC");
    fields[31] = fieldE01SWDOPE =
    new CharacterField(message, HEADERSIZE + 481, 1, "E01SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01MIVACC using a String value.
  */
  public void setE01MIVACC(String newvalue)
  {
    fieldE01MIVACC.setString(newvalue);
  }

  /**
  * Get value of field E01MIVACC as a String.
  */
  public String getE01MIVACC()
  {
    return fieldE01MIVACC.getString();
  }

  /**
  * Set numeric field E01MIVACC using a BigDecimal value.
  */
  public void setE01MIVACC(BigDecimal newvalue)
  {
    fieldE01MIVACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVACC()
  {
    return fieldE01MIVACC.getBigDecimal();
  }

  /**
  * Set field E01MIVCUN using a String value.
  */
  public void setE01MIVCUN(String newvalue)
  {
    fieldE01MIVCUN.setString(newvalue);
  }

  /**
  * Get value of field E01MIVCUN as a String.
  */
  public String getE01MIVCUN()
  {
    return fieldE01MIVCUN.getString();
  }

  /**
  * Set numeric field E01MIVCUN using a BigDecimal value.
  */
  public void setE01MIVCUN(BigDecimal newvalue)
  {
    fieldE01MIVCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVCUN()
  {
    return fieldE01MIVCUN.getBigDecimal();
  }

  /**
  * Set field E01MIVIIC using a String value.
  */
  public void setE01MIVIIC(String newvalue)
  {
    fieldE01MIVIIC.setString(newvalue);
  }

  /**
  * Get value of field E01MIVIIC as a String.
  */
  public String getE01MIVIIC()
  {
    return fieldE01MIVIIC.getString();
  }

  /**
  * Set numeric field E01MIVIIC using a BigDecimal value.
  */
  public void setE01MIVIIC(BigDecimal newvalue)
  {
    fieldE01MIVIIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVIIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVIIC()
  {
    return fieldE01MIVIIC.getBigDecimal();
  }

  /**
  * Set field E01MIVCCY using a String value.
  */
  public void setE01MIVCCY(String newvalue)
  {
    fieldE01MIVCCY.setString(newvalue);
  }

  /**
  * Get value of field E01MIVCCY as a String.
  */
  public String getE01MIVCCY()
  {
    return fieldE01MIVCCY.getString();
  }

  /**
  * Set field E01MIVPTY using a String value.
  */
  public void setE01MIVPTY(String newvalue)
  {
    fieldE01MIVPTY.setString(newvalue);
  }

  /**
  * Get value of field E01MIVPTY as a String.
  */
  public String getE01MIVPTY()
  {
    return fieldE01MIVPTY.getString();
  }

  /**
  * Set field E01MIVBNK using a String value.
  */
  public void setE01MIVBNK(String newvalue)
  {
    fieldE01MIVBNK.setString(newvalue);
  }

  /**
  * Get value of field E01MIVBNK as a String.
  */
  public String getE01MIVBNK()
  {
    return fieldE01MIVBNK.getString();
  }

  /**
  * Set field E01MIVCQY using a String value.
  */
  public void setE01MIVCQY(String newvalue)
  {
    fieldE01MIVCQY.setString(newvalue);
  }

  /**
  * Get value of field E01MIVCQY as a String.
  */
  public String getE01MIVCQY()
  {
    return fieldE01MIVCQY.getString();
  }

  /**
  * Set numeric field E01MIVCQY using a BigDecimal value.
  */
  public void setE01MIVCQY(BigDecimal newvalue)
  {
    fieldE01MIVCQY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVCQY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVCQY()
  {
    return fieldE01MIVCQY.getBigDecimal();
  }

  /**
  * Set field E01MIVCNV using a String value.
  */
  public void setE01MIVCNV(String newvalue)
  {
    fieldE01MIVCNV.setString(newvalue);
  }

  /**
  * Get value of field E01MIVCNV as a String.
  */
  public String getE01MIVCNV()
  {
    return fieldE01MIVCNV.getString();
  }

  /**
  * Set numeric field E01MIVCNV using a BigDecimal value.
  */
  public void setE01MIVCNV(BigDecimal newvalue)
  {
    fieldE01MIVCNV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVCNV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVCNV()
  {
    return fieldE01MIVCNV.getBigDecimal();
  }

  /**
  * Set field E01MIVMKP using a String value.
  */
  public void setE01MIVMKP(String newvalue)
  {
    fieldE01MIVMKP.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMKP as a String.
  */
  public String getE01MIVMKP()
  {
    return fieldE01MIVMKP.getString();
  }

  /**
  * Set numeric field E01MIVMKP using a BigDecimal value.
  */
  public void setE01MIVMKP(BigDecimal newvalue)
  {
    fieldE01MIVMKP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMKP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMKP()
  {
    return fieldE01MIVMKP.getBigDecimal();
  }

  /**
  * Set field E01MIVCAM using a String value.
  */
  public void setE01MIVCAM(String newvalue)
  {
    fieldE01MIVCAM.setString(newvalue);
  }

  /**
  * Get value of field E01MIVCAM as a String.
  */
  public String getE01MIVCAM()
  {
    return fieldE01MIVCAM.getString();
  }

  /**
  * Set numeric field E01MIVCAM using a BigDecimal value.
  */
  public void setE01MIVCAM(BigDecimal newvalue)
  {
    fieldE01MIVCAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVCAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVCAM()
  {
    return fieldE01MIVCAM.getBigDecimal();
  }

  /**
  * Set field E01MIVMQY using a String value.
  */
  public void setE01MIVMQY(String newvalue)
  {
    fieldE01MIVMQY.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMQY as a String.
  */
  public String getE01MIVMQY()
  {
    return fieldE01MIVMQY.getString();
  }

  /**
  * Set numeric field E01MIVMQY using a BigDecimal value.
  */
  public void setE01MIVMQY(BigDecimal newvalue)
  {
    fieldE01MIVMQY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMQY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMQY()
  {
    return fieldE01MIVMQY.getBigDecimal();
  }

  /**
  * Set field E01MIVMNV using a String value.
  */
  public void setE01MIVMNV(String newvalue)
  {
    fieldE01MIVMNV.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMNV as a String.
  */
  public String getE01MIVMNV()
  {
    return fieldE01MIVMNV.getString();
  }

  /**
  * Set numeric field E01MIVMNV using a BigDecimal value.
  */
  public void setE01MIVMNV(BigDecimal newvalue)
  {
    fieldE01MIVMNV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMNV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMNV()
  {
    return fieldE01MIVMNV.getBigDecimal();
  }

  /**
  * Set field E01MIVMMP using a String value.
  */
  public void setE01MIVMMP(String newvalue)
  {
    fieldE01MIVMMP.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMMP as a String.
  */
  public String getE01MIVMMP()
  {
    return fieldE01MIVMMP.getString();
  }

  /**
  * Set numeric field E01MIVMMP using a BigDecimal value.
  */
  public void setE01MIVMMP(BigDecimal newvalue)
  {
    fieldE01MIVMMP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMMP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMMP()
  {
    return fieldE01MIVMMP.getBigDecimal();
  }

  /**
  * Set field E01MIVMAM using a String value.
  */
  public void setE01MIVMAM(String newvalue)
  {
    fieldE01MIVMAM.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMAM as a String.
  */
  public String getE01MIVMAM()
  {
    return fieldE01MIVMAM.getString();
  }

  /**
  * Set numeric field E01MIVMAM using a BigDecimal value.
  */
  public void setE01MIVMAM(BigDecimal newvalue)
  {
    fieldE01MIVMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMAM()
  {
    return fieldE01MIVMAM.getBigDecimal();
  }

  /**
  * Set field E01MIVHAM using a String value.
  */
  public void setE01MIVHAM(String newvalue)
  {
    fieldE01MIVHAM.setString(newvalue);
  }

  /**
  * Get value of field E01MIVHAM as a String.
  */
  public String getE01MIVHAM()
  {
    return fieldE01MIVHAM.getString();
  }

  /**
  * Set numeric field E01MIVHAM using a BigDecimal value.
  */
  public void setE01MIVHAM(BigDecimal newvalue)
  {
    fieldE01MIVHAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVHAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVHAM()
  {
    return fieldE01MIVHAM.getBigDecimal();
  }

  /**
  * Set field E01MIVMXC using a String value.
  */
  public void setE01MIVMXC(String newvalue)
  {
    fieldE01MIVMXC.setString(newvalue);
  }

  /**
  * Get value of field E01MIVMXC as a String.
  */
  public String getE01MIVMXC()
  {
    return fieldE01MIVMXC.getString();
  }

  /**
  * Set numeric field E01MIVMXC using a BigDecimal value.
  */
  public void setE01MIVMXC(BigDecimal newvalue)
  {
    fieldE01MIVMXC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MIVMXC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MIVMXC()
  {
    return fieldE01MIVMXC.getBigDecimal();
  }

  /**
  * Set field E01CAVBAL using a String value.
  */
  public void setE01CAVBAL(String newvalue)
  {
    fieldE01CAVBAL.setString(newvalue);
  }

  /**
  * Get value of field E01CAVBAL as a String.
  */
  public String getE01CAVBAL()
  {
    return fieldE01CAVBAL.getString();
  }

  /**
  * Set numeric field E01CAVBAL using a BigDecimal value.
  */
  public void setE01CAVBAL(BigDecimal newvalue)
  {
    fieldE01CAVBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CAVBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CAVBAL()
  {
    return fieldE01CAVBAL.getBigDecimal();
  }

  /**
  * Set field E01MAVBAL using a String value.
  */
  public void setE01MAVBAL(String newvalue)
  {
    fieldE01MAVBAL.setString(newvalue);
  }

  /**
  * Get value of field E01MAVBAL as a String.
  */
  public String getE01MAVBAL()
  {
    return fieldE01MAVBAL.getString();
  }

  /**
  * Set numeric field E01MAVBAL using a BigDecimal value.
  */
  public void setE01MAVBAL(BigDecimal newvalue)
  {
    fieldE01MAVBAL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MAVBAL as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MAVBAL()
  {
    return fieldE01MAVBAL.getBigDecimal();
  }

  /**
  * Set field D01ISIDSC using a String value.
  */
  public void setD01ISIDSC(String newvalue)
  {
    fieldD01ISIDSC.setString(newvalue);
  }

  /**
  * Get value of field D01ISIDSC as a String.
  */
  public String getD01ISIDSC()
  {
    return fieldD01ISIDSC.getString();
  }

  /**
  * Set field D01CUSNA1 using a String value.
  */
  public void setD01CUSNA1(String newvalue)
  {
    fieldD01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field D01CUSNA1 as a String.
  */
  public String getD01CUSNA1()
  {
    return fieldD01CUSNA1.getString();
  }

  /**
  * Set field E01RWDFRC using a String value.
  */
  public void setE01RWDFRC(String newvalue)
  {
    fieldE01RWDFRC.setString(newvalue);
  }

  /**
  * Get value of field E01RWDFRC as a String.
  */
  public String getE01RWDFRC()
  {
    return fieldE01RWDFRC.getString();
  }

  /**
  * Set numeric field E01RWDFRC using a BigDecimal value.
  */
  public void setE01RWDFRC(BigDecimal newvalue)
  {
    fieldE01RWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RWDFRC()
  {
    return fieldE01RWDFRC.getBigDecimal();
  }

  /**
  * Set field E01SWDREC using a String value.
  */
  public void setE01SWDREC(String newvalue)
  {
    fieldE01SWDREC.setString(newvalue);
  }

  /**
  * Get value of field E01SWDREC as a String.
  */
  public String getE01SWDREC()
  {
    return fieldE01SWDREC.getString();
  }

  /**
  * Set numeric field E01SWDREC using a BigDecimal value.
  */
  public void setE01SWDREC(BigDecimal newvalue)
  {
    fieldE01SWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SWDREC()
  {
    return fieldE01SWDREC.getBigDecimal();
  }

  /**
  * Set field E01SWDOPE using a String value.
  */
  public void setE01SWDOPE(String newvalue)
  {
    fieldE01SWDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01SWDOPE as a String.
  */
  public String getE01SWDOPE()
  {
    return fieldE01SWDOPE.getString();
  }

}
