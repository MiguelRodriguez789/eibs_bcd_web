package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA009005 physical file definition.
* 
* File level identifier is 1151015123203.
* Record format level identifier is 5398013320F15.
*/

public class ERA009005Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H05USERID",
                                     "H05PROGRM",
                                     "H05TIMSYS",
                                     "H05SCRCOD",
                                     "H05OPECOD",
                                     "H05FLGMAS",
                                     "H05FLGWK1",
                                     "H05FLGWK2",
                                     "H05FLGWK3",
                                     "E05CODFIL",
                                     "E05NOMFIL",
                                     "E05ROCCUN",
                                     "E05CUSNA1",
                                     "E05RW4REF",
                                     "E05RW4OPE",
                                     "E05RW4FNG",
                                     "E05NUMREG",
                                     "E05OPECDE"
                                   };
  final static String tnames[] = {
                                   "H05USERID",
                                   "H05PROGRM",
                                   "H05TIMSYS",
                                   "H05SCRCOD",
                                   "H05OPECOD",
                                   "H05FLGMAS",
                                   "H05FLGWK1",
                                   "H05FLGWK2",
                                   "H05FLGWK3",
                                   "E05CODFIL",
                                   "E05NOMFIL",
                                   "E05ROCCUN",
                                   "E05CUSNA1",
                                   "E05RW4REF",
                                   "E05RW4OPE",
                                   "E05RW4FNG",
                                   "E05NUMREG",
                                   "E05OPECDE"
                                 };
  final static String fid = "1151015123203";
  final static String rid = "5398013320F15";
  final static String fmtname = "ERA009005";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH05USERID = null;
  private CharacterField fieldH05PROGRM = null;
  private CharacterField fieldH05TIMSYS = null;
  private CharacterField fieldH05SCRCOD = null;
  private CharacterField fieldH05OPECOD = null;
  private CharacterField fieldH05FLGMAS = null;
  private CharacterField fieldH05FLGWK1 = null;
  private CharacterField fieldH05FLGWK2 = null;
  private CharacterField fieldH05FLGWK3 = null;
  private CharacterField fieldE05CODFIL = null;
  private CharacterField fieldE05NOMFIL = null;
  private DecimalField fieldE05ROCCUN = null;
  private CharacterField fieldE05CUSNA1 = null;
  private DecimalField fieldE05RW4REF = null;
  private CharacterField fieldE05RW4OPE = null;
  private CharacterField fieldE05RW4FNG = null;
  private DecimalField fieldE05NUMREG = null;
  private CharacterField fieldE05OPECDE = null;

  /**
  * Constructor for ERA009005Message.
  */
  public ERA009005Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 250;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH05USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H05USERID");
    fields[1] = fieldH05PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H05PROGRM");
    fields[2] = fieldH05TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H05TIMSYS");
    fields[3] = fieldH05SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H05SCRCOD");
    fields[4] = fieldH05OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H05OPECOD");
    fields[5] = fieldH05FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H05FLGMAS");
    fields[6] = fieldH05FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H05FLGWK1");
    fields[7] = fieldH05FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H05FLGWK2");
    fields[8] = fieldH05FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H05FLGWK3");
    fields[9] = fieldE05CODFIL =
    new CharacterField(message, HEADERSIZE + 42, 10, "E05CODFIL");
    fields[10] = fieldE05NOMFIL =
    new CharacterField(message, HEADERSIZE + 52, 60, "E05NOMFIL");
    fields[11] = fieldE05ROCCUN =
    new DecimalField(message, HEADERSIZE + 112, 10, 0, "E05ROCCUN");
    fields[12] = fieldE05CUSNA1 =
    new CharacterField(message, HEADERSIZE + 122, 60, "E05CUSNA1");
    fields[13] = fieldE05RW4REF =
    new DecimalField(message, HEADERSIZE + 182, 21, 0, "E05RW4REF");
    fields[14] = fieldE05RW4OPE =
    new CharacterField(message, HEADERSIZE + 203, 19, "E05RW4OPE");
    fields[15] = fieldE05RW4FNG =
    new CharacterField(message, HEADERSIZE + 222, 20, "E05RW4FNG");
    fields[16] = fieldE05NUMREG =
    new DecimalField(message, HEADERSIZE + 242, 7, 0, "E05NUMREG");
    fields[17] = fieldE05OPECDE =
    new CharacterField(message, HEADERSIZE + 249, 1, "E05OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H05USERID using a String value.
  */
  public void setH05USERID(String newvalue)
  {
    fieldH05USERID.setString(newvalue);
  }

  /**
  * Get value of field H05USERID as a String.
  */
  public String getH05USERID()
  {
    return fieldH05USERID.getString();
  }

  /**
  * Set field H05PROGRM using a String value.
  */
  public void setH05PROGRM(String newvalue)
  {
    fieldH05PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H05PROGRM as a String.
  */
  public String getH05PROGRM()
  {
    return fieldH05PROGRM.getString();
  }

  /**
  * Set field H05TIMSYS using a String value.
  */
  public void setH05TIMSYS(String newvalue)
  {
    fieldH05TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H05TIMSYS as a String.
  */
  public String getH05TIMSYS()
  {
    return fieldH05TIMSYS.getString();
  }

  /**
  * Set field H05SCRCOD using a String value.
  */
  public void setH05SCRCOD(String newvalue)
  {
    fieldH05SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H05SCRCOD as a String.
  */
  public String getH05SCRCOD()
  {
    return fieldH05SCRCOD.getString();
  }

  /**
  * Set field H05OPECOD using a String value.
  */
  public void setH05OPECOD(String newvalue)
  {
    fieldH05OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H05OPECOD as a String.
  */
  public String getH05OPECOD()
  {
    return fieldH05OPECOD.getString();
  }

  /**
  * Set field H05FLGMAS using a String value.
  */
  public void setH05FLGMAS(String newvalue)
  {
    fieldH05FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H05FLGMAS as a String.
  */
  public String getH05FLGMAS()
  {
    return fieldH05FLGMAS.getString();
  }

  /**
  * Set field H05FLGWK1 using a String value.
  */
  public void setH05FLGWK1(String newvalue)
  {
    fieldH05FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK1 as a String.
  */
  public String getH05FLGWK1()
  {
    return fieldH05FLGWK1.getString();
  }

  /**
  * Set field H05FLGWK2 using a String value.
  */
  public void setH05FLGWK2(String newvalue)
  {
    fieldH05FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK2 as a String.
  */
  public String getH05FLGWK2()
  {
    return fieldH05FLGWK2.getString();
  }

  /**
  * Set field H05FLGWK3 using a String value.
  */
  public void setH05FLGWK3(String newvalue)
  {
    fieldH05FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H05FLGWK3 as a String.
  */
  public String getH05FLGWK3()
  {
    return fieldH05FLGWK3.getString();
  }

  /**
  * Set field E05CODFIL using a String value.
  */
  public void setE05CODFIL(String newvalue)
  {
    fieldE05CODFIL.setString(newvalue);
  }

  /**
  * Get value of field E05CODFIL as a String.
  */
  public String getE05CODFIL()
  {
    return fieldE05CODFIL.getString();
  }

  /**
  * Set field E05NOMFIL using a String value.
  */
  public void setE05NOMFIL(String newvalue)
  {
    fieldE05NOMFIL.setString(newvalue);
  }

  /**
  * Get value of field E05NOMFIL as a String.
  */
  public String getE05NOMFIL()
  {
    return fieldE05NOMFIL.getString();
  }

  /**
  * Set field E05ROCCUN using a String value.
  */
  public void setE05ROCCUN(String newvalue)
  {
    fieldE05ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E05ROCCUN as a String.
  */
  public String getE05ROCCUN()
  {
    return fieldE05ROCCUN.getString();
  }

  /**
  * Set numeric field E05ROCCUN using a BigDecimal value.
  */
  public void setE05ROCCUN(BigDecimal newvalue)
  {
    fieldE05ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05ROCCUN()
  {
    return fieldE05ROCCUN.getBigDecimal();
  }

  /**
  * Set field E05CUSNA1 using a String value.
  */
  public void setE05CUSNA1(String newvalue)
  {
    fieldE05CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E05CUSNA1 as a String.
  */
  public String getE05CUSNA1()
  {
    return fieldE05CUSNA1.getString();
  }

  /**
  * Set field E05RW4REF using a String value.
  */
  public void setE05RW4REF(String newvalue)
  {
    fieldE05RW4REF.setString(newvalue);
  }

  /**
  * Get value of field E05RW4REF as a String.
  */
  public String getE05RW4REF()
  {
    return fieldE05RW4REF.getString();
  }

  /**
  * Set numeric field E05RW4REF using a BigDecimal value.
  */
  public void setE05RW4REF(BigDecimal newvalue)
  {
    fieldE05RW4REF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05RW4REF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05RW4REF()
  {
    return fieldE05RW4REF.getBigDecimal();
  }

  /**
  * Set field E05RW4OPE using a String value.
  */
  public void setE05RW4OPE(String newvalue)
  {
    fieldE05RW4OPE.setString(newvalue);
  }

  /**
  * Get value of field E05RW4OPE as a String.
  */
  public String getE05RW4OPE()
  {
    return fieldE05RW4OPE.getString();
  }

  /**
  * Set field E05RW4FNG using a String value.
  */
  public void setE05RW4FNG(String newvalue)
  {
    fieldE05RW4FNG.setString(newvalue);
  }

  /**
  * Get value of field E05RW4FNG as a String.
  */
  public String getE05RW4FNG()
  {
    return fieldE05RW4FNG.getString();
  }

  /**
  * Set field E05NUMREG using a String value.
  */
  public void setE05NUMREG(String newvalue)
  {
    fieldE05NUMREG.setString(newvalue);
  }

  /**
  * Get value of field E05NUMREG as a String.
  */
  public String getE05NUMREG()
  {
    return fieldE05NUMREG.getString();
  }

  /**
  * Set numeric field E05NUMREG using a BigDecimal value.
  */
  public void setE05NUMREG(BigDecimal newvalue)
  {
    fieldE05NUMREG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E05NUMREG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE05NUMREG()
  {
    return fieldE05NUMREG.getBigDecimal();
  }

  /**
  * Set field E05OPECDE using a String value.
  */
  public void setE05OPECDE(String newvalue)
  {
    fieldE05OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E05OPECDE as a String.
  */
  public String getE05OPECDE()
  {
    return fieldE05OPECDE.getString();
  }

}
