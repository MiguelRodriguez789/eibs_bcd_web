package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EFRM00011 physical file definition.
* 
* File level identifier is 1181128162508.
* Record format level identifier is 377B6ED40BC14.
*/

public class EFRM00011Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H11USERID",
                                     "H11PROGRM",
                                     "H11TIMSYS",
                                     "H11SCRCOD",
                                     "H11OPECOD",
                                     "H11FLGMAS",
                                     "H11FLGWK1",
                                     "H11FLGWK2",
                                     "H11FLGWK3",
                                     "E11DLPACC",
                                     "E11DLPPNU",
                                     "E11DLPPDM",
                                     "E11DLPPDD",
                                     "E11DLPPDY",
                                     "E11PAYDTE",
                                     "E11DLPRTE",
                                     "E11DLPINT",
                                     "E11DLPTX1",
                                     "E11DLPTX2",
                                     "E11DLPSPR",
                                     "E11DLPTOT",
                                     "E11ENDFLD"
                                   };
  final static String tnames[] = {
                                   "*user",
                                   "*program",
                                   "*time",
                                   "*sourceCode",
                                   "*opeCode",
                                   "*flagMas",
                                   "*flagWk1",
                                   "*flagWk2",
                                   "revFlag",
                                   "accountNumber",
                                   "paymentNumber",
                                   "paymMonth",
                                   "paymDay",
                                   "paymYear",
                                   "paymentDateMMDDYY",
                                   "tasanominal",
                                   "interest",
                                   "retefuente",
                                   "cree",
                                   "tasaefectiva",
                                   "totalPayment",
                                   "endOfFile"
                                 };
  final static String fid = "1181128162508";
  final static String rid = "377B6ED40BC14";
  final static String fmtname = "EFRM00011";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH11USERID = null;
  private CharacterField fieldH11PROGRM = null;
  private CharacterField fieldH11TIMSYS = null;
  private CharacterField fieldH11SCRCOD = null;
  private CharacterField fieldH11OPECOD = null;
  private CharacterField fieldH11FLGMAS = null;
  private CharacterField fieldH11FLGWK1 = null;
  private CharacterField fieldH11FLGWK2 = null;
  private CharacterField fieldH11FLGWK3 = null;
  private DecimalField fieldE11DLPACC = null;
  private DecimalField fieldE11DLPPNU = null;
  private DecimalField fieldE11DLPPDM = null;
  private DecimalField fieldE11DLPPDD = null;
  private DecimalField fieldE11DLPPDY = null;
  private DecimalField fieldE11PAYDTE = null;
  private DecimalField fieldE11DLPRTE = null;
  private DecimalField fieldE11DLPINT = null;
  private DecimalField fieldE11DLPTX1 = null;
  private DecimalField fieldE11DLPTX2 = null;
  private DecimalField fieldE11DLPSPR = null;
  private DecimalField fieldE11DLPTOT = null;
  private CharacterField fieldE11ENDFLD = null;

  /**
  * Constructor for EFRM00011Message.
  */
  public EFRM00011Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 172;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH11USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "*user");
    fields[1] = fieldH11PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "*program");
    fields[2] = fieldH11TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "*time");
    fields[3] = fieldH11SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "*sourceCode");
    fields[4] = fieldH11OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "*opeCode");
    fields[5] = fieldH11FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "*flagMas");
    fields[6] = fieldH11FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "*flagWk1");
    fields[7] = fieldH11FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "*flagWk2");
    fields[8] = fieldH11FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "revFlag");
    fields[9] = fieldE11DLPACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "accountNumber");
    fields[10] = fieldE11DLPPNU =
    new DecimalField(message, HEADERSIZE + 55, 6, 0, "paymentNumber");
    fields[11] = fieldE11DLPPDM =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "paymMonth");
    fields[12] = fieldE11DLPPDD =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "paymDay");
    fields[13] = fieldE11DLPPDY =
    new DecimalField(message, HEADERSIZE + 67, 5, 0, "paymYear");
    fields[14] = fieldE11PAYDTE =
    new DecimalField(message, HEADERSIZE + 72, 9, 0, "paymentDateMMDDYY");
    fields[15] = fieldE11DLPRTE =
    new DecimalField(message, HEADERSIZE + 81, 11, 6, "tasanominal");
    fields[16] = fieldE11DLPINT =
    new DecimalField(message, HEADERSIZE + 92, 17, 2, "interest");
    fields[17] = fieldE11DLPTX1 =
    new DecimalField(message, HEADERSIZE + 109, 17, 2, "retefuente");
    fields[18] = fieldE11DLPTX2 =
    new DecimalField(message, HEADERSIZE + 126, 17, 2, "cree");
    fields[19] = fieldE11DLPSPR =
    new DecimalField(message, HEADERSIZE + 143, 11, 6, "tasaefectiva");
    fields[20] = fieldE11DLPTOT =
    new DecimalField(message, HEADERSIZE + 154, 17, 2, "totalPayment");
    fields[21] = fieldE11ENDFLD =
    new CharacterField(message, HEADERSIZE + 171, 1, "endOfFile");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H11USERID using a String value.
  */
  public void setH11USERID(String newvalue)
  {
    fieldH11USERID.setString(newvalue);
  }

  /**
  * Get value of field H11USERID as a String.
  */
  public String getH11USERID()
  {
    return fieldH11USERID.getString();
  }

  /**
  * Set field H11PROGRM using a String value.
  */
  public void setH11PROGRM(String newvalue)
  {
    fieldH11PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H11PROGRM as a String.
  */
  public String getH11PROGRM()
  {
    return fieldH11PROGRM.getString();
  }

  /**
  * Set field H11TIMSYS using a String value.
  */
  public void setH11TIMSYS(String newvalue)
  {
    fieldH11TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H11TIMSYS as a String.
  */
  public String getH11TIMSYS()
  {
    return fieldH11TIMSYS.getString();
  }

  /**
  * Set field H11SCRCOD using a String value.
  */
  public void setH11SCRCOD(String newvalue)
  {
    fieldH11SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H11SCRCOD as a String.
  */
  public String getH11SCRCOD()
  {
    return fieldH11SCRCOD.getString();
  }

  /**
  * Set field H11OPECOD using a String value.
  */
  public void setH11OPECOD(String newvalue)
  {
    fieldH11OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H11OPECOD as a String.
  */
  public String getH11OPECOD()
  {
    return fieldH11OPECOD.getString();
  }

  /**
  * Set field H11FLGMAS using a String value.
  */
  public void setH11FLGMAS(String newvalue)
  {
    fieldH11FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H11FLGMAS as a String.
  */
  public String getH11FLGMAS()
  {
    return fieldH11FLGMAS.getString();
  }

  /**
  * Set field H11FLGWK1 using a String value.
  */
  public void setH11FLGWK1(String newvalue)
  {
    fieldH11FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK1 as a String.
  */
  public String getH11FLGWK1()
  {
    return fieldH11FLGWK1.getString();
  }

  /**
  * Set field H11FLGWK2 using a String value.
  */
  public void setH11FLGWK2(String newvalue)
  {
    fieldH11FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK2 as a String.
  */
  public String getH11FLGWK2()
  {
    return fieldH11FLGWK2.getString();
  }

  /**
  * Set field H11FLGWK3 using a String value.
  */
  public void setH11FLGWK3(String newvalue)
  {
    fieldH11FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK3 as a String.
  */
  public String getH11FLGWK3()
  {
    return fieldH11FLGWK3.getString();
  }

  /**
  * Set field E11DLPACC using a String value.
  */
  public void setE11DLPACC(String newvalue)
  {
    fieldE11DLPACC.setString(newvalue);
  }

  /**
  * Get value of field E11DLPACC as a String.
  */
  public String getE11DLPACC()
  {
    return fieldE11DLPACC.getString();
  }

  /**
  * Set numeric field E11DLPACC using a BigDecimal value.
  */
  public void setE11DLPACC(BigDecimal newvalue)
  {
    fieldE11DLPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPACC()
  {
    return fieldE11DLPACC.getBigDecimal();
  }

  /**
  * Set field E11DLPPNU using a String value.
  */
  public void setE11DLPPNU(String newvalue)
  {
    fieldE11DLPPNU.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPNU as a String.
  */
  public String getE11DLPPNU()
  {
    return fieldE11DLPPNU.getString();
  }

  /**
  * Set numeric field E11DLPPNU using a BigDecimal value.
  */
  public void setE11DLPPNU(BigDecimal newvalue)
  {
    fieldE11DLPPNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPNU()
  {
    return fieldE11DLPPNU.getBigDecimal();
  }

  /**
  * Set field E11DLPPDM using a String value.
  */
  public void setE11DLPPDM(String newvalue)
  {
    fieldE11DLPPDM.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDM as a String.
  */
  public String getE11DLPPDM()
  {
    return fieldE11DLPPDM.getString();
  }

  /**
  * Set numeric field E11DLPPDM using a BigDecimal value.
  */
  public void setE11DLPPDM(BigDecimal newvalue)
  {
    fieldE11DLPPDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDM()
  {
    return fieldE11DLPPDM.getBigDecimal();
  }

  /**
  * Set field E11DLPPDD using a String value.
  */
  public void setE11DLPPDD(String newvalue)
  {
    fieldE11DLPPDD.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDD as a String.
  */
  public String getE11DLPPDD()
  {
    return fieldE11DLPPDD.getString();
  }

  /**
  * Set numeric field E11DLPPDD using a BigDecimal value.
  */
  public void setE11DLPPDD(BigDecimal newvalue)
  {
    fieldE11DLPPDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDD()
  {
    return fieldE11DLPPDD.getBigDecimal();
  }

  /**
  * Set field E11DLPPDY using a String value.
  */
  public void setE11DLPPDY(String newvalue)
  {
    fieldE11DLPPDY.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDY as a String.
  */
  public String getE11DLPPDY()
  {
    return fieldE11DLPPDY.getString();
  }

  /**
  * Set numeric field E11DLPPDY using a BigDecimal value.
  */
  public void setE11DLPPDY(BigDecimal newvalue)
  {
    fieldE11DLPPDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDY()
  {
    return fieldE11DLPPDY.getBigDecimal();
  }

  /**
  * Set field E11PAYDTE using a String value.
  */
  public void setE11PAYDTE(String newvalue)
  {
    fieldE11PAYDTE.setString(newvalue);
  }

  /**
  * Get value of field E11PAYDTE as a String.
  */
  public String getE11PAYDTE()
  {
    return fieldE11PAYDTE.getString();
  }

  /**
  * Set numeric field E11PAYDTE using a BigDecimal value.
  */
  public void setE11PAYDTE(BigDecimal newvalue)
  {
    fieldE11PAYDTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11PAYDTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11PAYDTE()
  {
    return fieldE11PAYDTE.getBigDecimal();
  }

  /**
  * Set field E11DLPRTE using a String value.
  */
  public void setE11DLPRTE(String newvalue)
  {
    fieldE11DLPRTE.setString(newvalue);
  }

  /**
  * Get value of field E11DLPRTE as a String.
  */
  public String getE11DLPRTE()
  {
    return fieldE11DLPRTE.getString();
  }

  /**
  * Set numeric field E11DLPRTE using a BigDecimal value.
  */
  public void setE11DLPRTE(BigDecimal newvalue)
  {
    fieldE11DLPRTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPRTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPRTE()
  {
    return fieldE11DLPRTE.getBigDecimal();
  }

  /**
  * Set field E11DLPINT using a String value.
  */
  public void setE11DLPINT(String newvalue)
  {
    fieldE11DLPINT.setString(newvalue);
  }

  /**
  * Get value of field E11DLPINT as a String.
  */
  public String getE11DLPINT()
  {
    return fieldE11DLPINT.getString();
  }

  /**
  * Set numeric field E11DLPINT using a BigDecimal value.
  */
  public void setE11DLPINT(BigDecimal newvalue)
  {
    fieldE11DLPINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPINT()
  {
    return fieldE11DLPINT.getBigDecimal();
  }

  /**
  * Set field E11DLPTX1 using a String value.
  */
  public void setE11DLPTX1(String newvalue)
  {
    fieldE11DLPTX1.setString(newvalue);
  }

  /**
  * Get value of field E11DLPTX1 as a String.
  */
  public String getE11DLPTX1()
  {
    return fieldE11DLPTX1.getString();
  }

  /**
  * Set numeric field E11DLPTX1 using a BigDecimal value.
  */
  public void setE11DLPTX1(BigDecimal newvalue)
  {
    fieldE11DLPTX1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPTX1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPTX1()
  {
    return fieldE11DLPTX1.getBigDecimal();
  }

  /**
  * Set field E11DLPTX2 using a String value.
  */
  public void setE11DLPTX2(String newvalue)
  {
    fieldE11DLPTX2.setString(newvalue);
  }

  /**
  * Get value of field E11DLPTX2 as a String.
  */
  public String getE11DLPTX2()
  {
    return fieldE11DLPTX2.getString();
  }

  /**
  * Set numeric field E11DLPTX2 using a BigDecimal value.
  */
  public void setE11DLPTX2(BigDecimal newvalue)
  {
    fieldE11DLPTX2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPTX2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPTX2()
  {
    return fieldE11DLPTX2.getBigDecimal();
  }

  /**
  * Set field E11DLPSPR using a String value.
  */
  public void setE11DLPSPR(String newvalue)
  {
    fieldE11DLPSPR.setString(newvalue);
  }

  /**
  * Get value of field E11DLPSPR as a String.
  */
  public String getE11DLPSPR()
  {
    return fieldE11DLPSPR.getString();
  }

  /**
  * Set numeric field E11DLPSPR using a BigDecimal value.
  */
  public void setE11DLPSPR(BigDecimal newvalue)
  {
    fieldE11DLPSPR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPSPR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPSPR()
  {
    return fieldE11DLPSPR.getBigDecimal();
  }

  /**
  * Set field E11DLPTOT using a String value.
  */
  public void setE11DLPTOT(String newvalue)
  {
    fieldE11DLPTOT.setString(newvalue);
  }

  /**
  * Get value of field E11DLPTOT as a String.
  */
  public String getE11DLPTOT()
  {
    return fieldE11DLPTOT.getString();
  }

  /**
  * Set numeric field E11DLPTOT using a BigDecimal value.
  */
  public void setE11DLPTOT(BigDecimal newvalue)
  {
    fieldE11DLPTOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPTOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPTOT()
  {
    return fieldE11DLPTOT.getBigDecimal();
  }

  /**
  * Set field E11ENDFLD using a String value.
  */
  public void setE11ENDFLD(String newvalue)
  {
    fieldE11ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E11ENDFLD as a String.
  */
  public String getE11ENDFLD()
  {
    return fieldE11ENDFLD.getString();
  }

}
