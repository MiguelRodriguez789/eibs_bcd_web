package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EBP016201 physical file definition.
* 
* File level identifier is 1161229103910.
* Record format level identifier is 410FE1FF16C7A.
*/

public class EBP016201Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01BPPNUM",
                                     "E01BPPSEQ",
                                     "E01BPPORD",
                                     "E01BPPAMT",
                                     "E01BPPHLD",
                                     "E01BPPTAX",
                                     "E01BPPOTH",
                                     "E01BPPPDM",
                                     "E01BPPPDD",
                                     "E01BPPPDY",
                                     "E01BPPREF",
                                     "E01BPPPYM",
                                     "E01BPPPVI",
                                     "E01BPPPVID",
                                     "E01BPPSTS",
                                     "E01BPPSTSD",
                                     "E01ACT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01BPPNUM",
                                   "E01BPPSEQ",
                                   "E01BPPORD",
                                   "E01BPPAMT",
                                   "E01BPPHLD",
                                   "E01BPPTAX",
                                   "E01BPPOTH",
                                   "E01BPPPDM",
                                   "E01BPPPDD",
                                   "E01BPPPDY",
                                   "E01BPPREF",
                                   "E01BPPPYM",
                                   "E01BPPPVI",
                                   "E01BPPPVID",
                                   "E01BPPSTS",
                                   "E01BPPSTSD",
                                   "E01ACT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1161229103910";
  final static String rid = "410FE1FF16C7A";
  final static String fmtname = "EBP016201";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01BPPNUM = null;
  private DecimalField fieldE01BPPSEQ = null;
  private DecimalField fieldE01BPPORD = null;
  private DecimalField fieldE01BPPAMT = null;
  private DecimalField fieldE01BPPHLD = null;
  private DecimalField fieldE01BPPTAX = null;
  private DecimalField fieldE01BPPOTH = null;
  private DecimalField fieldE01BPPPDM = null;
  private DecimalField fieldE01BPPPDD = null;
  private DecimalField fieldE01BPPPDY = null;
  private DecimalField fieldE01BPPREF = null;
  private DecimalField fieldE01BPPPYM = null;
  private CharacterField fieldE01BPPPVI = null;
  private CharacterField fieldE01BPPPVID = null;
  private CharacterField fieldE01BPPSTS = null;
  private CharacterField fieldE01BPPSTSD = null;
  private CharacterField fieldE01ACT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EBP016201Message.
  */
  public EBP016201Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 283;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01BPPNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01BPPNUM");
    fields[10] = fieldE01BPPSEQ =
    new DecimalField(message, HEADERSIZE + 55, 4, 0, "E01BPPSEQ");
    fields[11] = fieldE01BPPORD =
    new DecimalField(message, HEADERSIZE + 59, 13, 0, "E01BPPORD");
    fields[12] = fieldE01BPPAMT =
    new DecimalField(message, HEADERSIZE + 72, 17, 2, "E01BPPAMT");
    fields[13] = fieldE01BPPHLD =
    new DecimalField(message, HEADERSIZE + 89, 17, 2, "E01BPPHLD");
    fields[14] = fieldE01BPPTAX =
    new DecimalField(message, HEADERSIZE + 106, 17, 2, "E01BPPTAX");
    fields[15] = fieldE01BPPOTH =
    new DecimalField(message, HEADERSIZE + 123, 17, 2, "E01BPPOTH");
    fields[16] = fieldE01BPPPDM =
    new DecimalField(message, HEADERSIZE + 140, 3, 0, "E01BPPPDM");
    fields[17] = fieldE01BPPPDD =
    new DecimalField(message, HEADERSIZE + 143, 3, 0, "E01BPPPDD");
    fields[18] = fieldE01BPPPDY =
    new DecimalField(message, HEADERSIZE + 146, 5, 0, "E01BPPPDY");
    fields[19] = fieldE01BPPREF =
    new DecimalField(message, HEADERSIZE + 151, 17, 0, "E01BPPREF");
    fields[20] = fieldE01BPPPYM =
    new DecimalField(message, HEADERSIZE + 168, 13, 0, "E01BPPPYM");
    fields[21] = fieldE01BPPPVI =
    new CharacterField(message, HEADERSIZE + 181, 1, "E01BPPPVI");
    fields[22] = fieldE01BPPPVID =
    new CharacterField(message, HEADERSIZE + 182, 45, "E01BPPPVID");
    fields[23] = fieldE01BPPSTS =
    new CharacterField(message, HEADERSIZE + 227, 1, "E01BPPSTS");
    fields[24] = fieldE01BPPSTSD =
    new CharacterField(message, HEADERSIZE + 228, 45, "E01BPPSTSD");
    fields[25] = fieldE01ACT =
    new CharacterField(message, HEADERSIZE + 273, 1, "E01ACT");
    fields[26] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 274, 8, 0, "E01NUMREC");
    fields[27] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 282, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01BPPNUM using a String value.
  */
  public void setE01BPPNUM(String newvalue)
  {
    fieldE01BPPNUM.setString(newvalue);
  }

  /**
  * Get value of field E01BPPNUM as a String.
  */
  public String getE01BPPNUM()
  {
    return fieldE01BPPNUM.getString();
  }

  /**
  * Set numeric field E01BPPNUM using a BigDecimal value.
  */
  public void setE01BPPNUM(BigDecimal newvalue)
  {
    fieldE01BPPNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPNUM()
  {
    return fieldE01BPPNUM.getBigDecimal();
  }

  /**
  * Set field E01BPPSEQ using a String value.
  */
  public void setE01BPPSEQ(String newvalue)
  {
    fieldE01BPPSEQ.setString(newvalue);
  }

  /**
  * Get value of field E01BPPSEQ as a String.
  */
  public String getE01BPPSEQ()
  {
    return fieldE01BPPSEQ.getString();
  }

  /**
  * Set numeric field E01BPPSEQ using a BigDecimal value.
  */
  public void setE01BPPSEQ(BigDecimal newvalue)
  {
    fieldE01BPPSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPSEQ()
  {
    return fieldE01BPPSEQ.getBigDecimal();
  }

  /**
  * Set field E01BPPORD using a String value.
  */
  public void setE01BPPORD(String newvalue)
  {
    fieldE01BPPORD.setString(newvalue);
  }

  /**
  * Get value of field E01BPPORD as a String.
  */
  public String getE01BPPORD()
  {
    return fieldE01BPPORD.getString();
  }

  /**
  * Set numeric field E01BPPORD using a BigDecimal value.
  */
  public void setE01BPPORD(BigDecimal newvalue)
  {
    fieldE01BPPORD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPORD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPORD()
  {
    return fieldE01BPPORD.getBigDecimal();
  }

  /**
  * Set field E01BPPAMT using a String value.
  */
  public void setE01BPPAMT(String newvalue)
  {
    fieldE01BPPAMT.setString(newvalue);
  }

  /**
  * Get value of field E01BPPAMT as a String.
  */
  public String getE01BPPAMT()
  {
    return fieldE01BPPAMT.getString();
  }

  /**
  * Set numeric field E01BPPAMT using a BigDecimal value.
  */
  public void setE01BPPAMT(BigDecimal newvalue)
  {
    fieldE01BPPAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPAMT()
  {
    return fieldE01BPPAMT.getBigDecimal();
  }

  /**
  * Set field E01BPPHLD using a String value.
  */
  public void setE01BPPHLD(String newvalue)
  {
    fieldE01BPPHLD.setString(newvalue);
  }

  /**
  * Get value of field E01BPPHLD as a String.
  */
  public String getE01BPPHLD()
  {
    return fieldE01BPPHLD.getString();
  }

  /**
  * Set numeric field E01BPPHLD using a BigDecimal value.
  */
  public void setE01BPPHLD(BigDecimal newvalue)
  {
    fieldE01BPPHLD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPHLD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPHLD()
  {
    return fieldE01BPPHLD.getBigDecimal();
  }

  /**
  * Set field E01BPPTAX using a String value.
  */
  public void setE01BPPTAX(String newvalue)
  {
    fieldE01BPPTAX.setString(newvalue);
  }

  /**
  * Get value of field E01BPPTAX as a String.
  */
  public String getE01BPPTAX()
  {
    return fieldE01BPPTAX.getString();
  }

  /**
  * Set numeric field E01BPPTAX using a BigDecimal value.
  */
  public void setE01BPPTAX(BigDecimal newvalue)
  {
    fieldE01BPPTAX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPTAX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPTAX()
  {
    return fieldE01BPPTAX.getBigDecimal();
  }

  /**
  * Set field E01BPPOTH using a String value.
  */
  public void setE01BPPOTH(String newvalue)
  {
    fieldE01BPPOTH.setString(newvalue);
  }

  /**
  * Get value of field E01BPPOTH as a String.
  */
  public String getE01BPPOTH()
  {
    return fieldE01BPPOTH.getString();
  }

  /**
  * Set numeric field E01BPPOTH using a BigDecimal value.
  */
  public void setE01BPPOTH(BigDecimal newvalue)
  {
    fieldE01BPPOTH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPOTH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPOTH()
  {
    return fieldE01BPPOTH.getBigDecimal();
  }

  /**
  * Set field E01BPPPDM using a String value.
  */
  public void setE01BPPPDM(String newvalue)
  {
    fieldE01BPPPDM.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPDM as a String.
  */
  public String getE01BPPPDM()
  {
    return fieldE01BPPPDM.getString();
  }

  /**
  * Set numeric field E01BPPPDM using a BigDecimal value.
  */
  public void setE01BPPPDM(BigDecimal newvalue)
  {
    fieldE01BPPPDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPPDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPPDM()
  {
    return fieldE01BPPPDM.getBigDecimal();
  }

  /**
  * Set field E01BPPPDD using a String value.
  */
  public void setE01BPPPDD(String newvalue)
  {
    fieldE01BPPPDD.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPDD as a String.
  */
  public String getE01BPPPDD()
  {
    return fieldE01BPPPDD.getString();
  }

  /**
  * Set numeric field E01BPPPDD using a BigDecimal value.
  */
  public void setE01BPPPDD(BigDecimal newvalue)
  {
    fieldE01BPPPDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPPDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPPDD()
  {
    return fieldE01BPPPDD.getBigDecimal();
  }

  /**
  * Set field E01BPPPDY using a String value.
  */
  public void setE01BPPPDY(String newvalue)
  {
    fieldE01BPPPDY.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPDY as a String.
  */
  public String getE01BPPPDY()
  {
    return fieldE01BPPPDY.getString();
  }

  /**
  * Set numeric field E01BPPPDY using a BigDecimal value.
  */
  public void setE01BPPPDY(BigDecimal newvalue)
  {
    fieldE01BPPPDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPPDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPPDY()
  {
    return fieldE01BPPPDY.getBigDecimal();
  }

  /**
  * Set field E01BPPREF using a String value.
  */
  public void setE01BPPREF(String newvalue)
  {
    fieldE01BPPREF.setString(newvalue);
  }

  /**
  * Get value of field E01BPPREF as a String.
  */
  public String getE01BPPREF()
  {
    return fieldE01BPPREF.getString();
  }

  /**
  * Set numeric field E01BPPREF using a BigDecimal value.
  */
  public void setE01BPPREF(BigDecimal newvalue)
  {
    fieldE01BPPREF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPREF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPREF()
  {
    return fieldE01BPPREF.getBigDecimal();
  }

  /**
  * Set field E01BPPPYM using a String value.
  */
  public void setE01BPPPYM(String newvalue)
  {
    fieldE01BPPPYM.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPYM as a String.
  */
  public String getE01BPPPYM()
  {
    return fieldE01BPPPYM.getString();
  }

  /**
  * Set numeric field E01BPPPYM using a BigDecimal value.
  */
  public void setE01BPPPYM(BigDecimal newvalue)
  {
    fieldE01BPPPYM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01BPPPYM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01BPPPYM()
  {
    return fieldE01BPPPYM.getBigDecimal();
  }

  /**
  * Set field E01BPPPVI using a String value.
  */
  public void setE01BPPPVI(String newvalue)
  {
    fieldE01BPPPVI.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPVI as a String.
  */
  public String getE01BPPPVI()
  {
    return fieldE01BPPPVI.getString();
  }

  /**
  * Set field E01BPPPVID using a String value.
  */
  public void setE01BPPPVID(String newvalue)
  {
    fieldE01BPPPVID.setString(newvalue);
  }

  /**
  * Get value of field E01BPPPVID as a String.
  */
  public String getE01BPPPVID()
  {
    return fieldE01BPPPVID.getString();
  }

  /**
  * Set field E01BPPSTS using a String value.
  */
  public void setE01BPPSTS(String newvalue)
  {
    fieldE01BPPSTS.setString(newvalue);
  }

  /**
  * Get value of field E01BPPSTS as a String.
  */
  public String getE01BPPSTS()
  {
    return fieldE01BPPSTS.getString();
  }

  /**
  * Set field E01BPPSTSD using a String value.
  */
  public void setE01BPPSTSD(String newvalue)
  {
    fieldE01BPPSTSD.setString(newvalue);
  }

  /**
  * Get value of field E01BPPSTSD as a String.
  */
  public String getE01BPPSTSD()
  {
    return fieldE01BPPSTSD.getString();
  }

  /**
  * Set field E01ACT using a String value.
  */
  public void setE01ACT(String newvalue)
  {
    fieldE01ACT.setString(newvalue);
  }

  /**
  * Get value of field E01ACT as a String.
  */
  public String getE01ACT()
  {
    return fieldE01ACT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
