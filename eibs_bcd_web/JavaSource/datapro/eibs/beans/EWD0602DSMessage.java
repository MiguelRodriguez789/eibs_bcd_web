package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0602DS physical file definition.
* 
* File level identifier is 1151106051319.
* Record format level identifier is 39CEF2CD85DB2.
*/

public class EWD0602DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSELEDO",
                                     "EWDSELCIU",
                                     "EWDSELMUN",
                                     "EWDSELCLO",
                                     "EWDSELCDP",
                                     "EWDMEXCDP",
                                     "EWDMEXCLO",
                                     "EWDMEXTCL",
                                     "EWDMEXMUN",
                                     "EWDMEXEDO",
                                     "EWDMEXCIU",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSELEDO",
                                   "EWDSELCIU",
                                   "EWDSELMUN",
                                   "EWDSELCLO",
                                   "EWDSELCDP",
                                   "EWDMEXCDP",
                                   "EWDMEXCLO",
                                   "EWDMEXTCL",
                                   "EWDMEXMUN",
                                   "EWDMEXEDO",
                                   "EWDMEXCIU",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1151106051319";
  final static String rid = "39CEF2CD85DB2";
  final static String fmtname = "EWD0602DS";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSELEDO = null;
  private CharacterField fieldEWDSELCIU = null;
  private CharacterField fieldEWDSELMUN = null;
  private CharacterField fieldEWDSELCLO = null;
  private CharacterField fieldEWDSELCDP = null;
  private CharacterField fieldEWDMEXCDP = null;
  private CharacterField fieldEWDMEXCLO = null;
  private CharacterField fieldEWDMEXTCL = null;
  private CharacterField fieldEWDMEXMUN = null;
  private CharacterField fieldEWDMEXEDO = null;
  private CharacterField fieldEWDMEXCIU = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0602DSMessage.
  */
  public EWD0602DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 299;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSELEDO =
    new CharacterField(message, HEADERSIZE + 0, 30, "EWDSELEDO");
    fields[1] = fieldEWDSELCIU =
    new CharacterField(message, HEADERSIZE + 30, 30, "EWDSELCIU");
    fields[2] = fieldEWDSELMUN =
    new CharacterField(message, HEADERSIZE + 60, 30, "EWDSELMUN");
    fields[3] = fieldEWDSELCLO =
    new CharacterField(message, HEADERSIZE + 90, 30, "EWDSELCLO");
    fields[4] = fieldEWDSELCDP =
    new CharacterField(message, HEADERSIZE + 120, 10, "EWDSELCDP");
    fields[5] = fieldEWDMEXCDP =
    new CharacterField(message, HEADERSIZE + 130, 10, "EWDMEXCDP");
    fields[6] = fieldEWDMEXCLO =
    new CharacterField(message, HEADERSIZE + 140, 30, "EWDMEXCLO");
    fields[7] = fieldEWDMEXTCL =
    new CharacterField(message, HEADERSIZE + 170, 30, "EWDMEXTCL");
    fields[8] = fieldEWDMEXMUN =
    new CharacterField(message, HEADERSIZE + 200, 30, "EWDMEXMUN");
    fields[9] = fieldEWDMEXEDO =
    new CharacterField(message, HEADERSIZE + 230, 30, "EWDMEXEDO");
    fields[10] = fieldEWDMEXCIU =
    new CharacterField(message, HEADERSIZE + 260, 30, "EWDMEXCIU");
    fields[11] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 290, 8, 0, "EWDREC");
    fields[12] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 298, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSELEDO using a String value.
  */
  public void setEWDSELEDO(String newvalue)
  {
    fieldEWDSELEDO.setString(newvalue);
  }

  /**
  * Get value of field EWDSELEDO as a String.
  */
  public String getEWDSELEDO()
  {
    return fieldEWDSELEDO.getString();
  }

  /**
  * Set field EWDSELCIU using a String value.
  */
  public void setEWDSELCIU(String newvalue)
  {
    fieldEWDSELCIU.setString(newvalue);
  }

  /**
  * Get value of field EWDSELCIU as a String.
  */
  public String getEWDSELCIU()
  {
    return fieldEWDSELCIU.getString();
  }

  /**
  * Set field EWDSELMUN using a String value.
  */
  public void setEWDSELMUN(String newvalue)
  {
    fieldEWDSELMUN.setString(newvalue);
  }

  /**
  * Get value of field EWDSELMUN as a String.
  */
  public String getEWDSELMUN()
  {
    return fieldEWDSELMUN.getString();
  }

  /**
  * Set field EWDSELCLO using a String value.
  */
  public void setEWDSELCLO(String newvalue)
  {
    fieldEWDSELCLO.setString(newvalue);
  }

  /**
  * Get value of field EWDSELCLO as a String.
  */
  public String getEWDSELCLO()
  {
    return fieldEWDSELCLO.getString();
  }

  /**
  * Set field EWDSELCDP using a String value.
  */
  public void setEWDSELCDP(String newvalue)
  {
    fieldEWDSELCDP.setString(newvalue);
  }

  /**
  * Get value of field EWDSELCDP as a String.
  */
  public String getEWDSELCDP()
  {
    return fieldEWDSELCDP.getString();
  }

  /**
  * Set field EWDMEXCDP using a String value.
  */
  public void setEWDMEXCDP(String newvalue)
  {
    fieldEWDMEXCDP.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXCDP as a String.
  */
  public String getEWDMEXCDP()
  {
    return fieldEWDMEXCDP.getString();
  }

  /**
  * Set field EWDMEXCLO using a String value.
  */
  public void setEWDMEXCLO(String newvalue)
  {
    fieldEWDMEXCLO.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXCLO as a String.
  */
  public String getEWDMEXCLO()
  {
    return fieldEWDMEXCLO.getString();
  }

  /**
  * Set field EWDMEXTCL using a String value.
  */
  public void setEWDMEXTCL(String newvalue)
  {
    fieldEWDMEXTCL.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXTCL as a String.
  */
  public String getEWDMEXTCL()
  {
    return fieldEWDMEXTCL.getString();
  }

  /**
  * Set field EWDMEXMUN using a String value.
  */
  public void setEWDMEXMUN(String newvalue)
  {
    fieldEWDMEXMUN.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXMUN as a String.
  */
  public String getEWDMEXMUN()
  {
    return fieldEWDMEXMUN.getString();
  }

  /**
  * Set field EWDMEXEDO using a String value.
  */
  public void setEWDMEXEDO(String newvalue)
  {
    fieldEWDMEXEDO.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXEDO as a String.
  */
  public String getEWDMEXEDO()
  {
    return fieldEWDMEXEDO.getString();
  }

  /**
  * Set field EWDMEXCIU using a String value.
  */
  public void setEWDMEXCIU(String newvalue)
  {
    fieldEWDMEXCIU.setString(newvalue);
  }

  /**
  * Get value of field EWDMEXCIU as a String.
  */
  public String getEWDMEXCIU()
  {
    return fieldEWDMEXCIU.getString();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
