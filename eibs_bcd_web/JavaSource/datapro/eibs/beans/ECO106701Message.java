package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO106701 physical file definition.
* 
* File level identifier is 1150714111637.
* Record format level identifier is 276240FF65425.
*/

public class ECO106701Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01TCHBNK",
                                     "E01TCHBNN",
                                     "E01TCHBRN",
                                     "E01TCHBRM",
                                     "E01TCHCSN",
                                     "E01TCHTID",
                                     "E01TCHSTS",
                                     "E01TCHSTN",
                                     "E01TCHCDM",
                                     "E01TCHCDD",
                                     "E01TCHCDY",
                                     "E01TCHCRU"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01TCHBNK",
                                   "E01TCHBNN",
                                   "E01TCHBRN",
                                   "E01TCHBRM",
                                   "E01TCHCSN",
                                   "E01TCHTID",
                                   "E01TCHSTS",
                                   "E01TCHSTN",
                                   "E01TCHCDM",
                                   "E01TCHCDD",
                                   "E01TCHCDY",
                                   "E01TCHCRU"
                                 };
  final static String fid = "1150714111637";
  final static String rid = "276240FF65425";
  final static String fmtname = "ECO106701";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01TCHBNK = null;
  private CharacterField fieldE01TCHBNN = null;
  private DecimalField fieldE01TCHBRN = null;
  private CharacterField fieldE01TCHBRM = null;
  private DecimalField fieldE01TCHCSN = null;
  private CharacterField fieldE01TCHTID = null;
  private CharacterField fieldE01TCHSTS = null;
  private CharacterField fieldE01TCHSTN = null;
  private DecimalField fieldE01TCHCDM = null;
  private DecimalField fieldE01TCHCDD = null;
  private DecimalField fieldE01TCHCDY = null;
  private CharacterField fieldE01TCHCRU = null;

  /**
  * Constructor for ECO106701Message.
  */
  public ECO106701Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 219;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01TCHBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01TCHBNK");
    fields[10] = fieldE01TCHBNN =
    new CharacterField(message, HEADERSIZE + 44, 45, "E01TCHBNN");
    fields[11] = fieldE01TCHBRN =
    new DecimalField(message, HEADERSIZE + 89, 5, 0, "E01TCHBRN");
    fields[12] = fieldE01TCHBRM =
    new CharacterField(message, HEADERSIZE + 94, 45, "E01TCHBRM");
    fields[13] = fieldE01TCHCSN =
    new DecimalField(message, HEADERSIZE + 139, 3, 0, "E01TCHCSN");
    fields[14] = fieldE01TCHTID =
    new CharacterField(message, HEADERSIZE + 142, 10, "E01TCHTID");
    fields[15] = fieldE01TCHSTS =
    new CharacterField(message, HEADERSIZE + 152, 1, "E01TCHSTS");
    fields[16] = fieldE01TCHSTN =
    new CharacterField(message, HEADERSIZE + 153, 45, "E01TCHSTN");
    fields[17] = fieldE01TCHCDM =
    new DecimalField(message, HEADERSIZE + 198, 3, 0, "E01TCHCDM");
    fields[18] = fieldE01TCHCDD =
    new DecimalField(message, HEADERSIZE + 201, 3, 0, "E01TCHCDD");
    fields[19] = fieldE01TCHCDY =
    new DecimalField(message, HEADERSIZE + 204, 5, 0, "E01TCHCDY");
    fields[20] = fieldE01TCHCRU =
    new CharacterField(message, HEADERSIZE + 209, 10, "E01TCHCRU");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01TCHBNK using a String value.
  */
  public void setE01TCHBNK(String newvalue)
  {
    fieldE01TCHBNK.setString(newvalue);
  }

  /**
  * Get value of field E01TCHBNK as a String.
  */
  public String getE01TCHBNK()
  {
    return fieldE01TCHBNK.getString();
  }

  /**
  * Set field E01TCHBNN using a String value.
  */
  public void setE01TCHBNN(String newvalue)
  {
    fieldE01TCHBNN.setString(newvalue);
  }

  /**
  * Get value of field E01TCHBNN as a String.
  */
  public String getE01TCHBNN()
  {
    return fieldE01TCHBNN.getString();
  }

  /**
  * Set field E01TCHBRN using a String value.
  */
  public void setE01TCHBRN(String newvalue)
  {
    fieldE01TCHBRN.setString(newvalue);
  }

  /**
  * Get value of field E01TCHBRN as a String.
  */
  public String getE01TCHBRN()
  {
    return fieldE01TCHBRN.getString();
  }

  /**
  * Set numeric field E01TCHBRN using a BigDecimal value.
  */
  public void setE01TCHBRN(BigDecimal newvalue)
  {
    fieldE01TCHBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TCHBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TCHBRN()
  {
    return fieldE01TCHBRN.getBigDecimal();
  }

  /**
  * Set field E01TCHBRM using a String value.
  */
  public void setE01TCHBRM(String newvalue)
  {
    fieldE01TCHBRM.setString(newvalue);
  }

  /**
  * Get value of field E01TCHBRM as a String.
  */
  public String getE01TCHBRM()
  {
    return fieldE01TCHBRM.getString();
  }

  /**
  * Set field E01TCHCSN using a String value.
  */
  public void setE01TCHCSN(String newvalue)
  {
    fieldE01TCHCSN.setString(newvalue);
  }

  /**
  * Get value of field E01TCHCSN as a String.
  */
  public String getE01TCHCSN()
  {
    return fieldE01TCHCSN.getString();
  }

  /**
  * Set numeric field E01TCHCSN using a BigDecimal value.
  */
  public void setE01TCHCSN(BigDecimal newvalue)
  {
    fieldE01TCHCSN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TCHCSN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TCHCSN()
  {
    return fieldE01TCHCSN.getBigDecimal();
  }

  /**
  * Set field E01TCHTID using a String value.
  */
  public void setE01TCHTID(String newvalue)
  {
    fieldE01TCHTID.setString(newvalue);
  }

  /**
  * Get value of field E01TCHTID as a String.
  */
  public String getE01TCHTID()
  {
    return fieldE01TCHTID.getString();
  }

  /**
  * Set field E01TCHSTS using a String value.
  */
  public void setE01TCHSTS(String newvalue)
  {
    fieldE01TCHSTS.setString(newvalue);
  }

  /**
  * Get value of field E01TCHSTS as a String.
  */
  public String getE01TCHSTS()
  {
    return fieldE01TCHSTS.getString();
  }

  /**
  * Set field E01TCHSTN using a String value.
  */
  public void setE01TCHSTN(String newvalue)
  {
    fieldE01TCHSTN.setString(newvalue);
  }

  /**
  * Get value of field E01TCHSTN as a String.
  */
  public String getE01TCHSTN()
  {
    return fieldE01TCHSTN.getString();
  }

  /**
  * Set field E01TCHCDM using a String value.
  */
  public void setE01TCHCDM(String newvalue)
  {
    fieldE01TCHCDM.setString(newvalue);
  }

  /**
  * Get value of field E01TCHCDM as a String.
  */
  public String getE01TCHCDM()
  {
    return fieldE01TCHCDM.getString();
  }

  /**
  * Set numeric field E01TCHCDM using a BigDecimal value.
  */
  public void setE01TCHCDM(BigDecimal newvalue)
  {
    fieldE01TCHCDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TCHCDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TCHCDM()
  {
    return fieldE01TCHCDM.getBigDecimal();
  }

  /**
  * Set field E01TCHCDD using a String value.
  */
  public void setE01TCHCDD(String newvalue)
  {
    fieldE01TCHCDD.setString(newvalue);
  }

  /**
  * Get value of field E01TCHCDD as a String.
  */
  public String getE01TCHCDD()
  {
    return fieldE01TCHCDD.getString();
  }

  /**
  * Set numeric field E01TCHCDD using a BigDecimal value.
  */
  public void setE01TCHCDD(BigDecimal newvalue)
  {
    fieldE01TCHCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TCHCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TCHCDD()
  {
    return fieldE01TCHCDD.getBigDecimal();
  }

  /**
  * Set field E01TCHCDY using a String value.
  */
  public void setE01TCHCDY(String newvalue)
  {
    fieldE01TCHCDY.setString(newvalue);
  }

  /**
  * Get value of field E01TCHCDY as a String.
  */
  public String getE01TCHCDY()
  {
    return fieldE01TCHCDY.getString();
  }

  /**
  * Set numeric field E01TCHCDY using a BigDecimal value.
  */
  public void setE01TCHCDY(BigDecimal newvalue)
  {
    fieldE01TCHCDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TCHCDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TCHCDY()
  {
    return fieldE01TCHCDY.getBigDecimal();
  }

  /**
  * Set field E01TCHCRU using a String value.
  */
  public void setE01TCHCRU(String newvalue)
  {
    fieldE01TCHCRU.setString(newvalue);
  }

  /**
  * Get value of field E01TCHCRU as a String.
  */
  public String getE01TCHCRU()
  {
    return fieldE01TCHCRU.getString();
  }

}
