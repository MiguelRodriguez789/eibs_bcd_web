package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EVFTEMPF01 physical file definition.
* 
* File level identifier is 1120304210334.
* Record format level identifier is 286B330CCE896.
*/

public class EVFTEMPF01Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "SRCSEQ",
                                     "SRCDAT",
                                     "SRCDTA"
                                   };
  final static String tnames[] = {
                                   "SRCSEQ",
                                   "SRCDAT",
                                   "SRCDTA"
                                 };
  final static String fid = "1120304210334";
  final static String rid = "286B330CCE896";
  final static String fmtname = "EVFTEMPF01";
  final int FIELDCOUNT = 3;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldSRCSEQ = null;
  private DecimalField fieldSRCDAT = null;
  private CharacterField fieldSRCDTA = null;

  /**
  * Constructor for EVFTEMPF01Message.
  */
  public EVFTEMPF01Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 115;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldSRCSEQ =
    new DecimalField(message, HEADERSIZE + 0, 8, 2, "SRCSEQ");
    fields[1] = fieldSRCDAT =
    new DecimalField(message, HEADERSIZE + 8, 7, 0, "SRCDAT");
    fields[2] = fieldSRCDTA =
    new CharacterField(message, HEADERSIZE + 15, 100, "SRCDTA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field SRCSEQ using a String value.
  */
  public void setSRCSEQ(String newvalue)
  {
    fieldSRCSEQ.setString(newvalue);
  }

  /**
  * Get value of field SRCSEQ as a String.
  */
  public String getSRCSEQ()
  {
    return fieldSRCSEQ.getString();
  }

  /**
  * Set numeric field SRCSEQ using a BigDecimal value.
  */
  public void setSRCSEQ(BigDecimal newvalue)
  {
    fieldSRCSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SRCSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalSRCSEQ()
  {
    return fieldSRCSEQ.getBigDecimal();
  }

  /**
  * Set field SRCDAT using a String value.
  */
  public void setSRCDAT(String newvalue)
  {
    fieldSRCDAT.setString(newvalue);
  }

  /**
  * Get value of field SRCDAT as a String.
  */
  public String getSRCDAT()
  {
    return fieldSRCDAT.getString();
  }

  /**
  * Set numeric field SRCDAT using a BigDecimal value.
  */
  public void setSRCDAT(BigDecimal newvalue)
  {
    fieldSRCDAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SRCDAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalSRCDAT()
  {
    return fieldSRCDAT.getBigDecimal();
  }

  /**
  * Set field SRCDTA using a String value.
  */
  public void setSRCDTA(String newvalue)
  {
    fieldSRCDTA.setString(newvalue);
  }

  /**
  * Get value of field SRCDTA as a String.
  */
  public String getSRCDTA()
  {
    return fieldSRCDTA.getString();
  }

}
