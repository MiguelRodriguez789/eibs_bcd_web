package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO010001 physical file definition.
* 
* File level identifier is 1150902175138.
* Record format level identifier is 3A2D6AF41E247.
*/

public class ECO010001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01EMPCUN",
                                     "E01EMPNUM",
                                     "E01EMPNA1",
                                     "E01CONCUN",
                                     "E01CONNA1",
                                     "E01CUSUSR",
                                     "E01CUSRMK",
                                     "E01SELCUN",
                                     "E01SELIDN",
                                     "E01SELNME",
                                     "E01SELBRN"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01EMPCUN",
                                   "E01EMPNUM",
                                   "E01EMPNA1",
                                   "E01CONCUN",
                                   "E01CONNA1",
                                   "E01CUSUSR",
                                   "E01CUSRMK",
                                   "E01SELCUN",
                                   "E01SELIDN",
                                   "E01SELNME",
                                   "E01SELBRN"
                                 };
  final static String fid = "1150902175138";
  final static String rid = "3A2D6AF41E247";
  final static String fmtname = "ECO010001";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01EMPCUN = null;
  private DecimalField fieldE01EMPNUM = null;
  private CharacterField fieldE01EMPNA1 = null;
  private DecimalField fieldE01CONCUN = null;
  private CharacterField fieldE01CONNA1 = null;
  private CharacterField fieldE01CUSUSR = null;
  private CharacterField fieldE01CUSRMK = null;
  private DecimalField fieldE01SELCUN = null;
  private CharacterField fieldE01SELIDN = null;
  private CharacterField fieldE01SELNME = null;
  private DecimalField fieldE01SELBRN = null;

  /**
  * Constructor for ECO010001Message.
  */
  public ECO010001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 350;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01EMPCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01EMPCUN");
    fields[10] = fieldE01EMPNUM =
    new DecimalField(message, HEADERSIZE + 52, 13, 0, "E01EMPNUM");
    fields[11] = fieldE01EMPNA1 =
    new CharacterField(message, HEADERSIZE + 65, 60, "E01EMPNA1");
    fields[12] = fieldE01CONCUN =
    new DecimalField(message, HEADERSIZE + 125, 10, 0, "E01CONCUN");
    fields[13] = fieldE01CONNA1 =
    new CharacterField(message, HEADERSIZE + 135, 60, "E01CONNA1");
    fields[14] = fieldE01CUSUSR =
    new CharacterField(message, HEADERSIZE + 195, 10, "E01CUSUSR");
    fields[15] = fieldE01CUSRMK =
    new CharacterField(message, HEADERSIZE + 205, 60, "E01CUSRMK");
    fields[16] = fieldE01SELCUN =
    new DecimalField(message, HEADERSIZE + 265, 10, 0, "E01SELCUN");
    fields[17] = fieldE01SELIDN =
    new CharacterField(message, HEADERSIZE + 275, 25, "E01SELIDN");
    fields[18] = fieldE01SELNME =
    new CharacterField(message, HEADERSIZE + 300, 45, "E01SELNME");
    fields[19] = fieldE01SELBRN =
    new DecimalField(message, HEADERSIZE + 345, 5, 0, "E01SELBRN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01EMPCUN using a String value.
  */
  public void setE01EMPCUN(String newvalue)
  {
    fieldE01EMPCUN.setString(newvalue);
  }

  /**
  * Get value of field E01EMPCUN as a String.
  */
  public String getE01EMPCUN()
  {
    return fieldE01EMPCUN.getString();
  }

  /**
  * Set numeric field E01EMPCUN using a BigDecimal value.
  */
  public void setE01EMPCUN(BigDecimal newvalue)
  {
    fieldE01EMPCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EMPCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EMPCUN()
  {
    return fieldE01EMPCUN.getBigDecimal();
  }

  /**
  * Set field E01EMPNUM using a String value.
  */
  public void setE01EMPNUM(String newvalue)
  {
    fieldE01EMPNUM.setString(newvalue);
  }

  /**
  * Get value of field E01EMPNUM as a String.
  */
  public String getE01EMPNUM()
  {
    return fieldE01EMPNUM.getString();
  }

  /**
  * Set numeric field E01EMPNUM using a BigDecimal value.
  */
  public void setE01EMPNUM(BigDecimal newvalue)
  {
    fieldE01EMPNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01EMPNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01EMPNUM()
  {
    return fieldE01EMPNUM.getBigDecimal();
  }

  /**
  * Set field E01EMPNA1 using a String value.
  */
  public void setE01EMPNA1(String newvalue)
  {
    fieldE01EMPNA1.setString(newvalue);
  }

  /**
  * Get value of field E01EMPNA1 as a String.
  */
  public String getE01EMPNA1()
  {
    return fieldE01EMPNA1.getString();
  }

  /**
  * Set field E01CONCUN using a String value.
  */
  public void setE01CONCUN(String newvalue)
  {
    fieldE01CONCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CONCUN as a String.
  */
  public String getE01CONCUN()
  {
    return fieldE01CONCUN.getString();
  }

  /**
  * Set numeric field E01CONCUN using a BigDecimal value.
  */
  public void setE01CONCUN(BigDecimal newvalue)
  {
    fieldE01CONCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CONCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CONCUN()
  {
    return fieldE01CONCUN.getBigDecimal();
  }

  /**
  * Set field E01CONNA1 using a String value.
  */
  public void setE01CONNA1(String newvalue)
  {
    fieldE01CONNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CONNA1 as a String.
  */
  public String getE01CONNA1()
  {
    return fieldE01CONNA1.getString();
  }

  /**
  * Set field E01CUSUSR using a String value.
  */
  public void setE01CUSUSR(String newvalue)
  {
    fieldE01CUSUSR.setString(newvalue);
  }

  /**
  * Get value of field E01CUSUSR as a String.
  */
  public String getE01CUSUSR()
  {
    return fieldE01CUSUSR.getString();
  }

  /**
  * Set field E01CUSRMK using a String value.
  */
  public void setE01CUSRMK(String newvalue)
  {
    fieldE01CUSRMK.setString(newvalue);
  }

  /**
  * Get value of field E01CUSRMK as a String.
  */
  public String getE01CUSRMK()
  {
    return fieldE01CUSRMK.getString();
  }

  /**
  * Set field E01SELCUN using a String value.
  */
  public void setE01SELCUN(String newvalue)
  {
    fieldE01SELCUN.setString(newvalue);
  }

  /**
  * Get value of field E01SELCUN as a String.
  */
  public String getE01SELCUN()
  {
    return fieldE01SELCUN.getString();
  }

  /**
  * Set numeric field E01SELCUN using a BigDecimal value.
  */
  public void setE01SELCUN(BigDecimal newvalue)
  {
    fieldE01SELCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SELCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SELCUN()
  {
    return fieldE01SELCUN.getBigDecimal();
  }

  /**
  * Set field E01SELIDN using a String value.
  */
  public void setE01SELIDN(String newvalue)
  {
    fieldE01SELIDN.setString(newvalue);
  }

  /**
  * Get value of field E01SELIDN as a String.
  */
  public String getE01SELIDN()
  {
    return fieldE01SELIDN.getString();
  }

  /**
  * Set field E01SELNME using a String value.
  */
  public void setE01SELNME(String newvalue)
  {
    fieldE01SELNME.setString(newvalue);
  }

  /**
  * Get value of field E01SELNME as a String.
  */
  public String getE01SELNME()
  {
    return fieldE01SELNME.getString();
  }

  /**
  * Set field E01SELBRN using a String value.
  */
  public void setE01SELBRN(String newvalue)
  {
    fieldE01SELBRN.setString(newvalue);
  }

  /**
  * Get value of field E01SELBRN as a String.
  */
  public String getE01SELBRN()
  {
    return fieldE01SELBRN.getString();
  }

  /**
  * Set numeric field E01SELBRN using a BigDecimal value.
  */
  public void setE01SELBRN(BigDecimal newvalue)
  {
    fieldE01SELBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SELBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SELBRN()
  {
    return fieldE01SELBRN.getBigDecimal();
  }

}
