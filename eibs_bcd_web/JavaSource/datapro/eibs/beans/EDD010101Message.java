package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDD010101 physical file definition.
* 
* File level identifier is 1170117131827.
* Record format level identifier is 4048BDB7C7860.
*/

public class EDD010101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTFEM",
                                     "E01CNTFED",
                                     "E01CNTFEY",
                                     "E01ACTION",
                                     "E01USERLI",
                                     "E01DATMLI",
                                     "E01DATDLI",
                                     "E01DATYLI",
                                     "E01TIMELI"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTFEM",
                                   "E01CNTFED",
                                   "E01CNTFEY",
                                   "E01ACTION",
                                   "E01USERLI",
                                   "E01DATMLI",
                                   "E01DATDLI",
                                   "E01DATYLI",
                                   "E01TIMELI"
                                 };
  final static String fid = "1170117131827";
  final static String rid = "4048BDB7C7860";
  final static String fmtname = "EDD010101";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CNTFEM = null;
  private DecimalField fieldE01CNTFED = null;
  private DecimalField fieldE01CNTFEY = null;
  private CharacterField fieldE01ACTION = null;
  private CharacterField fieldE01USERLI = null;
  private DecimalField fieldE01DATMLI = null;
  private DecimalField fieldE01DATDLI = null;
  private DecimalField fieldE01DATYLI = null;
  private CharacterField fieldE01TIMELI = null;

  /**
  * Constructor for EDD010101Message.
  */
  public EDD010101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 101;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTFEM =
    new DecimalField(message, HEADERSIZE + 42, 3, 0, "E01CNTFEM");
    fields[10] = fieldE01CNTFED =
    new DecimalField(message, HEADERSIZE + 45, 3, 0, "E01CNTFED");
    fields[11] = fieldE01CNTFEY =
    new DecimalField(message, HEADERSIZE + 48, 5, 0, "E01CNTFEY");
    fields[12] = fieldE01ACTION =
    new CharacterField(message, HEADERSIZE + 53, 1, "E01ACTION");
    fields[13] = fieldE01USERLI =
    new CharacterField(message, HEADERSIZE + 54, 10, "E01USERLI");
    fields[14] = fieldE01DATMLI =
    new DecimalField(message, HEADERSIZE + 64, 3, 0, "E01DATMLI");
    fields[15] = fieldE01DATDLI =
    new DecimalField(message, HEADERSIZE + 67, 3, 0, "E01DATDLI");
    fields[16] = fieldE01DATYLI =
    new DecimalField(message, HEADERSIZE + 70, 5, 0, "E01DATYLI");
    fields[17] = fieldE01TIMELI =
    new CharacterField(message, HEADERSIZE + 75, 26, "E01TIMELI");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTFEM using a String value.
  */
  public void setE01CNTFEM(String newvalue)
  {
    fieldE01CNTFEM.setString(newvalue);
  }

  /**
  * Get value of field E01CNTFEM as a String.
  */
  public String getE01CNTFEM()
  {
    return fieldE01CNTFEM.getString();
  }

  /**
  * Set numeric field E01CNTFEM using a BigDecimal value.
  */
  public void setE01CNTFEM(BigDecimal newvalue)
  {
    fieldE01CNTFEM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNTFEM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNTFEM()
  {
    return fieldE01CNTFEM.getBigDecimal();
  }

  /**
  * Set field E01CNTFED using a String value.
  */
  public void setE01CNTFED(String newvalue)
  {
    fieldE01CNTFED.setString(newvalue);
  }

  /**
  * Get value of field E01CNTFED as a String.
  */
  public String getE01CNTFED()
  {
    return fieldE01CNTFED.getString();
  }

  /**
  * Set numeric field E01CNTFED using a BigDecimal value.
  */
  public void setE01CNTFED(BigDecimal newvalue)
  {
    fieldE01CNTFED.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNTFED as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNTFED()
  {
    return fieldE01CNTFED.getBigDecimal();
  }

  /**
  * Set field E01CNTFEY using a String value.
  */
  public void setE01CNTFEY(String newvalue)
  {
    fieldE01CNTFEY.setString(newvalue);
  }

  /**
  * Get value of field E01CNTFEY as a String.
  */
  public String getE01CNTFEY()
  {
    return fieldE01CNTFEY.getString();
  }

  /**
  * Set numeric field E01CNTFEY using a BigDecimal value.
  */
  public void setE01CNTFEY(BigDecimal newvalue)
  {
    fieldE01CNTFEY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CNTFEY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CNTFEY()
  {
    return fieldE01CNTFEY.getBigDecimal();
  }

  /**
  * Set field E01ACTION using a String value.
  */
  public void setE01ACTION(String newvalue)
  {
    fieldE01ACTION.setString(newvalue);
  }

  /**
  * Get value of field E01ACTION as a String.
  */
  public String getE01ACTION()
  {
    return fieldE01ACTION.getString();
  }

  /**
  * Set field E01USERLI using a String value.
  */
  public void setE01USERLI(String newvalue)
  {
    fieldE01USERLI.setString(newvalue);
  }

  /**
  * Get value of field E01USERLI as a String.
  */
  public String getE01USERLI()
  {
    return fieldE01USERLI.getString();
  }

  /**
  * Set field E01DATMLI using a String value.
  */
  public void setE01DATMLI(String newvalue)
  {
    fieldE01DATMLI.setString(newvalue);
  }

  /**
  * Get value of field E01DATMLI as a String.
  */
  public String getE01DATMLI()
  {
    return fieldE01DATMLI.getString();
  }

  /**
  * Set numeric field E01DATMLI using a BigDecimal value.
  */
  public void setE01DATMLI(BigDecimal newvalue)
  {
    fieldE01DATMLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATMLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATMLI()
  {
    return fieldE01DATMLI.getBigDecimal();
  }

  /**
  * Set field E01DATDLI using a String value.
  */
  public void setE01DATDLI(String newvalue)
  {
    fieldE01DATDLI.setString(newvalue);
  }

  /**
  * Get value of field E01DATDLI as a String.
  */
  public String getE01DATDLI()
  {
    return fieldE01DATDLI.getString();
  }

  /**
  * Set numeric field E01DATDLI using a BigDecimal value.
  */
  public void setE01DATDLI(BigDecimal newvalue)
  {
    fieldE01DATDLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATDLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATDLI()
  {
    return fieldE01DATDLI.getBigDecimal();
  }

  /**
  * Set field E01DATYLI using a String value.
  */
  public void setE01DATYLI(String newvalue)
  {
    fieldE01DATYLI.setString(newvalue);
  }

  /**
  * Get value of field E01DATYLI as a String.
  */
  public String getE01DATYLI()
  {
    return fieldE01DATYLI.getString();
  }

  /**
  * Set numeric field E01DATYLI using a BigDecimal value.
  */
  public void setE01DATYLI(BigDecimal newvalue)
  {
    fieldE01DATYLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DATYLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DATYLI()
  {
    return fieldE01DATYLI.getBigDecimal();
  }

  /**
  * Set field E01TIMELI using a String value.
  */
  public void setE01TIMELI(String newvalue)
  {
    fieldE01TIMELI.setString(newvalue);
  }

  /**
  * Get value of field E01TIMELI as a String.
  */
  public String getE01TIMELI()
  {
    return fieldE01TIMELI.getString();
  }

}
