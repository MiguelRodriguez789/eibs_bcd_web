package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EPV101011 physical file definition.
* 
* File level identifier is 1130611113306.
* Record format level identifier is 3D1695A11906A.
*/

public class EPV101011Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H11USERID",
                                     "H11PROGRM",
                                     "H11TIMSYS",
                                     "H11SCRCOD",
                                     "H11OPECOD",
                                     "H11FLGMAS",
                                     "H11FLGWK1",
                                     "H11FLGWK2",
                                     "H11FLGWK3",
                                     "E11PVMNUM",
                                     "E11PVMCUN",
                                     "E11DLPPNU",
                                     "E11DLPPDY",
                                     "E11DLPPDM",
                                     "E11DLPPDD",
                                     "E11DLPPPM",
                                     "E11DLPIPM",
                                     "E11DLPTOT"
                                   };
  final static String tnames[] = {
                                   "H11USERID",
                                   "H11PROGRM",
                                   "H11TIMSYS",
                                   "H11SCRCOD",
                                   "H11OPECOD",
                                   "H11FLGMAS",
                                   "H11FLGWK1",
                                   "H11FLGWK2",
                                   "H11FLGWK3",
                                   "E11PVMNUM",
                                   "E11PVMCUN",
                                   "E11DLPPNU",
                                   "E11DLPPDY",
                                   "E11DLPPDM",
                                   "E11DLPPDD",
                                   "E11DLPPPM",
                                   "E11DLPIPM",
                                   "E11DLPTOT"
                                 };
  final static String fid = "1130611113306";
  final static String rid = "3D1695A11906A";
  final static String fmtname = "EPV101011";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH11USERID = null;
  private CharacterField fieldH11PROGRM = null;
  private CharacterField fieldH11TIMSYS = null;
  private CharacterField fieldH11SCRCOD = null;
  private CharacterField fieldH11OPECOD = null;
  private CharacterField fieldH11FLGMAS = null;
  private CharacterField fieldH11FLGWK1 = null;
  private CharacterField fieldH11FLGWK2 = null;
  private CharacterField fieldH11FLGWK3 = null;
  private DecimalField fieldE11PVMNUM = null;
  private DecimalField fieldE11PVMCUN = null;
  private DecimalField fieldE11DLPPNU = null;
  private DecimalField fieldE11DLPPDY = null;
  private DecimalField fieldE11DLPPDM = null;
  private DecimalField fieldE11DLPPDD = null;
  private DecimalField fieldE11DLPPPM = null;
  private DecimalField fieldE11DLPIPM = null;
  private DecimalField fieldE11DLPTOT = null;

  /**
  * Constructor for EPV101011Message.
  */
  public EPV101011Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 133;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH11USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H11USERID");
    fields[1] = fieldH11PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H11PROGRM");
    fields[2] = fieldH11TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H11TIMSYS");
    fields[3] = fieldH11SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H11SCRCOD");
    fields[4] = fieldH11OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H11OPECOD");
    fields[5] = fieldH11FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H11FLGMAS");
    fields[6] = fieldH11FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H11FLGWK1");
    fields[7] = fieldH11FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H11FLGWK2");
    fields[8] = fieldH11FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H11FLGWK3");
    fields[9] = fieldE11PVMNUM =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E11PVMNUM");
    fields[10] = fieldE11PVMCUN =
    new DecimalField(message, HEADERSIZE + 55, 10, 0, "E11PVMCUN");
    fields[11] = fieldE11DLPPNU =
    new DecimalField(message, HEADERSIZE + 65, 6, 0, "E11DLPPNU");
    fields[12] = fieldE11DLPPDY =
    new DecimalField(message, HEADERSIZE + 71, 5, 0, "E11DLPPDY");
    fields[13] = fieldE11DLPPDM =
    new DecimalField(message, HEADERSIZE + 76, 3, 0, "E11DLPPDM");
    fields[14] = fieldE11DLPPDD =
    new DecimalField(message, HEADERSIZE + 79, 3, 0, "E11DLPPDD");
    fields[15] = fieldE11DLPPPM =
    new DecimalField(message, HEADERSIZE + 82, 17, 2, "E11DLPPPM");
    fields[16] = fieldE11DLPIPM =
    new DecimalField(message, HEADERSIZE + 99, 17, 2, "E11DLPIPM");
    fields[17] = fieldE11DLPTOT =
    new DecimalField(message, HEADERSIZE + 116, 17, 2, "E11DLPTOT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H11USERID using a String value.
  */
  public void setH11USERID(String newvalue)
  {
    fieldH11USERID.setString(newvalue);
  }

  /**
  * Get value of field H11USERID as a String.
  */
  public String getH11USERID()
  {
    return fieldH11USERID.getString();
  }

  /**
  * Set field H11PROGRM using a String value.
  */
  public void setH11PROGRM(String newvalue)
  {
    fieldH11PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H11PROGRM as a String.
  */
  public String getH11PROGRM()
  {
    return fieldH11PROGRM.getString();
  }

  /**
  * Set field H11TIMSYS using a String value.
  */
  public void setH11TIMSYS(String newvalue)
  {
    fieldH11TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H11TIMSYS as a String.
  */
  public String getH11TIMSYS()
  {
    return fieldH11TIMSYS.getString();
  }

  /**
  * Set field H11SCRCOD using a String value.
  */
  public void setH11SCRCOD(String newvalue)
  {
    fieldH11SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H11SCRCOD as a String.
  */
  public String getH11SCRCOD()
  {
    return fieldH11SCRCOD.getString();
  }

  /**
  * Set field H11OPECOD using a String value.
  */
  public void setH11OPECOD(String newvalue)
  {
    fieldH11OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H11OPECOD as a String.
  */
  public String getH11OPECOD()
  {
    return fieldH11OPECOD.getString();
  }

  /**
  * Set field H11FLGMAS using a String value.
  */
  public void setH11FLGMAS(String newvalue)
  {
    fieldH11FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H11FLGMAS as a String.
  */
  public String getH11FLGMAS()
  {
    return fieldH11FLGMAS.getString();
  }

  /**
  * Set field H11FLGWK1 using a String value.
  */
  public void setH11FLGWK1(String newvalue)
  {
    fieldH11FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK1 as a String.
  */
  public String getH11FLGWK1()
  {
    return fieldH11FLGWK1.getString();
  }

  /**
  * Set field H11FLGWK2 using a String value.
  */
  public void setH11FLGWK2(String newvalue)
  {
    fieldH11FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK2 as a String.
  */
  public String getH11FLGWK2()
  {
    return fieldH11FLGWK2.getString();
  }

  /**
  * Set field H11FLGWK3 using a String value.
  */
  public void setH11FLGWK3(String newvalue)
  {
    fieldH11FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H11FLGWK3 as a String.
  */
  public String getH11FLGWK3()
  {
    return fieldH11FLGWK3.getString();
  }

  /**
  * Set field E11PVMNUM using a String value.
  */
  public void setE11PVMNUM(String newvalue)
  {
    fieldE11PVMNUM.setString(newvalue);
  }

  /**
  * Get value of field E11PVMNUM as a String.
  */
  public String getE11PVMNUM()
  {
    return fieldE11PVMNUM.getString();
  }

  /**
  * Set numeric field E11PVMNUM using a BigDecimal value.
  */
  public void setE11PVMNUM(BigDecimal newvalue)
  {
    fieldE11PVMNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11PVMNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11PVMNUM()
  {
    return fieldE11PVMNUM.getBigDecimal();
  }

  /**
  * Set field E11PVMCUN using a String value.
  */
  public void setE11PVMCUN(String newvalue)
  {
    fieldE11PVMCUN.setString(newvalue);
  }

  /**
  * Get value of field E11PVMCUN as a String.
  */
  public String getE11PVMCUN()
  {
    return fieldE11PVMCUN.getString();
  }

  /**
  * Set numeric field E11PVMCUN using a BigDecimal value.
  */
  public void setE11PVMCUN(BigDecimal newvalue)
  {
    fieldE11PVMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11PVMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11PVMCUN()
  {
    return fieldE11PVMCUN.getBigDecimal();
  }

  /**
  * Set field E11DLPPNU using a String value.
  */
  public void setE11DLPPNU(String newvalue)
  {
    fieldE11DLPPNU.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPNU as a String.
  */
  public String getE11DLPPNU()
  {
    return fieldE11DLPPNU.getString();
  }

  /**
  * Set numeric field E11DLPPNU using a BigDecimal value.
  */
  public void setE11DLPPNU(BigDecimal newvalue)
  {
    fieldE11DLPPNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPNU()
  {
    return fieldE11DLPPNU.getBigDecimal();
  }

  /**
  * Set field E11DLPPDY using a String value.
  */
  public void setE11DLPPDY(String newvalue)
  {
    fieldE11DLPPDY.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDY as a String.
  */
  public String getE11DLPPDY()
  {
    return fieldE11DLPPDY.getString();
  }

  /**
  * Set numeric field E11DLPPDY using a BigDecimal value.
  */
  public void setE11DLPPDY(BigDecimal newvalue)
  {
    fieldE11DLPPDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDY()
  {
    return fieldE11DLPPDY.getBigDecimal();
  }

  /**
  * Set field E11DLPPDM using a String value.
  */
  public void setE11DLPPDM(String newvalue)
  {
    fieldE11DLPPDM.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDM as a String.
  */
  public String getE11DLPPDM()
  {
    return fieldE11DLPPDM.getString();
  }

  /**
  * Set numeric field E11DLPPDM using a BigDecimal value.
  */
  public void setE11DLPPDM(BigDecimal newvalue)
  {
    fieldE11DLPPDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDM()
  {
    return fieldE11DLPPDM.getBigDecimal();
  }

  /**
  * Set field E11DLPPDD using a String value.
  */
  public void setE11DLPPDD(String newvalue)
  {
    fieldE11DLPPDD.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPDD as a String.
  */
  public String getE11DLPPDD()
  {
    return fieldE11DLPPDD.getString();
  }

  /**
  * Set numeric field E11DLPPDD using a BigDecimal value.
  */
  public void setE11DLPPDD(BigDecimal newvalue)
  {
    fieldE11DLPPDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPDD()
  {
    return fieldE11DLPPDD.getBigDecimal();
  }

  /**
  * Set field E11DLPPPM using a String value.
  */
  public void setE11DLPPPM(String newvalue)
  {
    fieldE11DLPPPM.setString(newvalue);
  }

  /**
  * Get value of field E11DLPPPM as a String.
  */
  public String getE11DLPPPM()
  {
    return fieldE11DLPPPM.getString();
  }

  /**
  * Set numeric field E11DLPPPM using a BigDecimal value.
  */
  public void setE11DLPPPM(BigDecimal newvalue)
  {
    fieldE11DLPPPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPPPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPPPM()
  {
    return fieldE11DLPPPM.getBigDecimal();
  }

  /**
  * Set field E11DLPIPM using a String value.
  */
  public void setE11DLPIPM(String newvalue)
  {
    fieldE11DLPIPM.setString(newvalue);
  }

  /**
  * Get value of field E11DLPIPM as a String.
  */
  public String getE11DLPIPM()
  {
    return fieldE11DLPIPM.getString();
  }

  /**
  * Set numeric field E11DLPIPM using a BigDecimal value.
  */
  public void setE11DLPIPM(BigDecimal newvalue)
  {
    fieldE11DLPIPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPIPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPIPM()
  {
    return fieldE11DLPIPM.getBigDecimal();
  }

  /**
  * Set field E11DLPTOT using a String value.
  */
  public void setE11DLPTOT(String newvalue)
  {
    fieldE11DLPTOT.setString(newvalue);
  }

  /**
  * Get value of field E11DLPTOT as a String.
  */
  public String getE11DLPTOT()
  {
    return fieldE11DLPTOT.getString();
  }

  /**
  * Set numeric field E11DLPTOT using a BigDecimal value.
  */
  public void setE11DLPTOT(BigDecimal newvalue)
  {
    fieldE11DLPTOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E11DLPTOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE11DLPTOT()
  {
    return fieldE11DLPTOT.getBigDecimal();
  }

}
