package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIE006501 physical file definition.
* 
* File level identifier is 1130611113208.
* Record format level identifier is 3F0DEF2F54A94.
*/

public class EIE006501Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01MSTIIC",
                                     "E01IICDSC",
                                     "E01MSTPRF",
                                     "E01PRFDSC",
                                     "E01MSTCFR",
                                     "E01MSTNRT",
                                     "E01MSTDT1",
                                     "E01MSTDT2",
                                     "E01MSTDT3",
                                     "E01RECNUM",
                                     "E01RECOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01MSTIIC",
                                   "E01IICDSC",
                                   "E01MSTPRF",
                                   "E01PRFDSC",
                                   "E01MSTCFR",
                                   "E01MSTNRT",
                                   "E01MSTDT1",
                                   "E01MSTDT2",
                                   "E01MSTDT3",
                                   "E01RECNUM",
                                   "E01RECOPE"
                                 };
  final static String fid = "1130611113208";
  final static String rid = "3F0DEF2F54A94";
  final static String fmtname = "EIE006501";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01MSTIIC = null;
  private CharacterField fieldE01IICDSC = null;
  private DecimalField fieldE01MSTPRF = null;
  private CharacterField fieldE01PRFDSC = null;
  private DecimalField fieldE01MSTCFR = null;
  private DecimalField fieldE01MSTNRT = null;
  private DecimalField fieldE01MSTDT1 = null;
  private DecimalField fieldE01MSTDT2 = null;
  private DecimalField fieldE01MSTDT3 = null;
  private DecimalField fieldE01RECNUM = null;
  private CharacterField fieldE01RECOPE = null;

  /**
  * Constructor for EIE006501Message.
  */
  public EIE006501Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 227;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01MSTIIC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E01MSTIIC");
    fields[10] = fieldE01IICDSC =
    new CharacterField(message, HEADERSIZE + 55, 60, "E01IICDSC");
    fields[11] = fieldE01MSTPRF =
    new DecimalField(message, HEADERSIZE + 115, 10, 0, "E01MSTPRF");
    fields[12] = fieldE01PRFDSC =
    new CharacterField(message, HEADERSIZE + 125, 60, "E01PRFDSC");
    fields[13] = fieldE01MSTCFR =
    new DecimalField(message, HEADERSIZE + 185, 11, 6, "E01MSTCFR");
    fields[14] = fieldE01MSTNRT =
    new DecimalField(message, HEADERSIZE + 196, 11, 6, "E01MSTNRT");
    fields[15] = fieldE01MSTDT1 =
    new DecimalField(message, HEADERSIZE + 207, 3, 0, "E01MSTDT1");
    fields[16] = fieldE01MSTDT2 =
    new DecimalField(message, HEADERSIZE + 210, 3, 0, "E01MSTDT2");
    fields[17] = fieldE01MSTDT3 =
    new DecimalField(message, HEADERSIZE + 213, 5, 0, "E01MSTDT3");
    fields[18] = fieldE01RECNUM =
    new DecimalField(message, HEADERSIZE + 218, 8, 0, "E01RECNUM");
    fields[19] = fieldE01RECOPE =
    new CharacterField(message, HEADERSIZE + 226, 1, "E01RECOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01MSTIIC using a String value.
  */
  public void setE01MSTIIC(String newvalue)
  {
    fieldE01MSTIIC.setString(newvalue);
  }

  /**
  * Get value of field E01MSTIIC as a String.
  */
  public String getE01MSTIIC()
  {
    return fieldE01MSTIIC.getString();
  }

  /**
  * Set numeric field E01MSTIIC using a BigDecimal value.
  */
  public void setE01MSTIIC(BigDecimal newvalue)
  {
    fieldE01MSTIIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTIIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTIIC()
  {
    return fieldE01MSTIIC.getBigDecimal();
  }

  /**
  * Set field E01IICDSC using a String value.
  */
  public void setE01IICDSC(String newvalue)
  {
    fieldE01IICDSC.setString(newvalue);
  }

  /**
  * Get value of field E01IICDSC as a String.
  */
  public String getE01IICDSC()
  {
    return fieldE01IICDSC.getString();
  }

  /**
  * Set field E01MSTPRF using a String value.
  */
  public void setE01MSTPRF(String newvalue)
  {
    fieldE01MSTPRF.setString(newvalue);
  }

  /**
  * Get value of field E01MSTPRF as a String.
  */
  public String getE01MSTPRF()
  {
    return fieldE01MSTPRF.getString();
  }

  /**
  * Set numeric field E01MSTPRF using a BigDecimal value.
  */
  public void setE01MSTPRF(BigDecimal newvalue)
  {
    fieldE01MSTPRF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTPRF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTPRF()
  {
    return fieldE01MSTPRF.getBigDecimal();
  }

  /**
  * Set field E01PRFDSC using a String value.
  */
  public void setE01PRFDSC(String newvalue)
  {
    fieldE01PRFDSC.setString(newvalue);
  }

  /**
  * Get value of field E01PRFDSC as a String.
  */
  public String getE01PRFDSC()
  {
    return fieldE01PRFDSC.getString();
  }

  /**
  * Set field E01MSTCFR using a String value.
  */
  public void setE01MSTCFR(String newvalue)
  {
    fieldE01MSTCFR.setString(newvalue);
  }

  /**
  * Get value of field E01MSTCFR as a String.
  */
  public String getE01MSTCFR()
  {
    return fieldE01MSTCFR.getString();
  }

  /**
  * Set numeric field E01MSTCFR using a BigDecimal value.
  */
  public void setE01MSTCFR(BigDecimal newvalue)
  {
    fieldE01MSTCFR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTCFR as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTCFR()
  {
    return fieldE01MSTCFR.getBigDecimal();
  }

  /**
  * Set field E01MSTNRT using a String value.
  */
  public void setE01MSTNRT(String newvalue)
  {
    fieldE01MSTNRT.setString(newvalue);
  }

  /**
  * Get value of field E01MSTNRT as a String.
  */
  public String getE01MSTNRT()
  {
    return fieldE01MSTNRT.getString();
  }

  /**
  * Set numeric field E01MSTNRT using a BigDecimal value.
  */
  public void setE01MSTNRT(BigDecimal newvalue)
  {
    fieldE01MSTNRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTNRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTNRT()
  {
    return fieldE01MSTNRT.getBigDecimal();
  }

  /**
  * Set field E01MSTDT1 using a String value.
  */
  public void setE01MSTDT1(String newvalue)
  {
    fieldE01MSTDT1.setString(newvalue);
  }

  /**
  * Get value of field E01MSTDT1 as a String.
  */
  public String getE01MSTDT1()
  {
    return fieldE01MSTDT1.getString();
  }

  /**
  * Set numeric field E01MSTDT1 using a BigDecimal value.
  */
  public void setE01MSTDT1(BigDecimal newvalue)
  {
    fieldE01MSTDT1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTDT1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTDT1()
  {
    return fieldE01MSTDT1.getBigDecimal();
  }

  /**
  * Set field E01MSTDT2 using a String value.
  */
  public void setE01MSTDT2(String newvalue)
  {
    fieldE01MSTDT2.setString(newvalue);
  }

  /**
  * Get value of field E01MSTDT2 as a String.
  */
  public String getE01MSTDT2()
  {
    return fieldE01MSTDT2.getString();
  }

  /**
  * Set numeric field E01MSTDT2 using a BigDecimal value.
  */
  public void setE01MSTDT2(BigDecimal newvalue)
  {
    fieldE01MSTDT2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTDT2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTDT2()
  {
    return fieldE01MSTDT2.getBigDecimal();
  }

  /**
  * Set field E01MSTDT3 using a String value.
  */
  public void setE01MSTDT3(String newvalue)
  {
    fieldE01MSTDT3.setString(newvalue);
  }

  /**
  * Get value of field E01MSTDT3 as a String.
  */
  public String getE01MSTDT3()
  {
    return fieldE01MSTDT3.getString();
  }

  /**
  * Set numeric field E01MSTDT3 using a BigDecimal value.
  */
  public void setE01MSTDT3(BigDecimal newvalue)
  {
    fieldE01MSTDT3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MSTDT3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MSTDT3()
  {
    return fieldE01MSTDT3.getBigDecimal();
  }

  /**
  * Set field E01RECNUM using a String value.
  */
  public void setE01RECNUM(String newvalue)
  {
    fieldE01RECNUM.setString(newvalue);
  }

  /**
  * Get value of field E01RECNUM as a String.
  */
  public String getE01RECNUM()
  {
    return fieldE01RECNUM.getString();
  }

  /**
  * Set numeric field E01RECNUM using a BigDecimal value.
  */
  public void setE01RECNUM(BigDecimal newvalue)
  {
    fieldE01RECNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RECNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RECNUM()
  {
    return fieldE01RECNUM.getBigDecimal();
  }

  /**
  * Set field E01RECOPE using a String value.
  */
  public void setE01RECOPE(String newvalue)
  {
    fieldE01RECOPE.setString(newvalue);
  }

  /**
  * Get value of field E01RECOPE as a String.
  */
  public String getE01RECOPE()
  {
    return fieldE01RECOPE.getString();
  }

}
