package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0048DS physical file definition.
* 
* File level identifier is 1150109180237.
* Record format level identifier is 3FD2D0E90699B.
*/

public class EWD0048DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDCOD",
                                     "EWDDSC",
                                     "EWDRES",
                                     "EWDDLC",
                                     "EWDAGC",
                                     "EWDAIM",
                                     "EWDACO",
                                     "EWDLMM",
                                     "EWDLMD",
                                     "EWDLMY",
                                     "EWDLMT",
                                     "EWDOPE",
                                     "EWDUSR"
                                   };
  final static String tnames[] = {
                                   "EWDCOD",
                                   "EWDDSC",
                                   "EWDRES",
                                   "EWDDLC",
                                   "EWDAGC",
                                   "EWDAIM",
                                   "EWDACO",
                                   "EWDLMM",
                                   "EWDLMD",
                                   "EWDLMY",
                                   "EWDLMT",
                                   "EWDOPE",
                                   "EWDUSR"
                                 };
  final static String fid = "1150109180237";
  final static String rid = "3FD2D0E90699B";
  final static String fmtname = "EWD0048DS";
  final int FIELDCOUNT = 13;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDCOD = null;
  private CharacterField fieldEWDDSC = null;
  private CharacterField fieldEWDRES = null;
  private CharacterField fieldEWDDLC = null;
  private CharacterField fieldEWDAGC = null;
  private CharacterField fieldEWDAIM = null;
  private CharacterField fieldEWDACO = null;
  private DecimalField fieldEWDLMM = null;
  private DecimalField fieldEWDLMD = null;
  private DecimalField fieldEWDLMY = null;
  private CharacterField fieldEWDLMT = null;
  private CharacterField fieldEWDOPE = null;
  private CharacterField fieldEWDUSR = null;

  /**
  * Constructor for EWD0048DSMessage.
  */
  public EWD0048DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 118;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDCOD =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDCOD");
    fields[1] = fieldEWDDSC =
    new CharacterField(message, HEADERSIZE + 2, 60, "EWDDSC");
    fields[2] = fieldEWDRES =
    new CharacterField(message, HEADERSIZE + 62, 4, "EWDRES");
    fields[3] = fieldEWDDLC =
    new CharacterField(message, HEADERSIZE + 66, 1, "EWDDLC");
    fields[4] = fieldEWDAGC =
    new CharacterField(message, HEADERSIZE + 67, 1, "EWDAGC");
    fields[5] = fieldEWDAIM =
    new CharacterField(message, HEADERSIZE + 68, 1, "EWDAIM");
    fields[6] = fieldEWDACO =
    new CharacterField(message, HEADERSIZE + 69, 1, "EWDACO");
    fields[7] = fieldEWDLMM =
    new DecimalField(message, HEADERSIZE + 70, 3, 0, "EWDLMM");
    fields[8] = fieldEWDLMD =
    new DecimalField(message, HEADERSIZE + 73, 3, 0, "EWDLMD");
    fields[9] = fieldEWDLMY =
    new DecimalField(message, HEADERSIZE + 76, 5, 0, "EWDLMY");
    fields[10] = fieldEWDLMT =
    new CharacterField(message, HEADERSIZE + 81, 26, "EWDLMT");
    fields[11] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 107, 1, "EWDOPE");
    fields[12] = fieldEWDUSR =
    new CharacterField(message, HEADERSIZE + 108, 10, "EWDUSR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDCOD using a String value.
  */
  public void setEWDCOD(String newvalue)
  {
    fieldEWDCOD.setString(newvalue);
  }

  /**
  * Get value of field EWDCOD as a String.
  */
  public String getEWDCOD()
  {
    return fieldEWDCOD.getString();
  }

  /**
  * Set field EWDDSC using a String value.
  */
  public void setEWDDSC(String newvalue)
  {
    fieldEWDDSC.setString(newvalue);
  }

  /**
  * Get value of field EWDDSC as a String.
  */
  public String getEWDDSC()
  {
    return fieldEWDDSC.getString();
  }

  /**
  * Set field EWDRES using a String value.
  */
  public void setEWDRES(String newvalue)
  {
    fieldEWDRES.setString(newvalue);
  }

  /**
  * Get value of field EWDRES as a String.
  */
  public String getEWDRES()
  {
    return fieldEWDRES.getString();
  }

  /**
  * Set field EWDDLC using a String value.
  */
  public void setEWDDLC(String newvalue)
  {
    fieldEWDDLC.setString(newvalue);
  }

  /**
  * Get value of field EWDDLC as a String.
  */
  public String getEWDDLC()
  {
    return fieldEWDDLC.getString();
  }

  /**
  * Set field EWDAGC using a String value.
  */
  public void setEWDAGC(String newvalue)
  {
    fieldEWDAGC.setString(newvalue);
  }

  /**
  * Get value of field EWDAGC as a String.
  */
  public String getEWDAGC()
  {
    return fieldEWDAGC.getString();
  }

  /**
  * Set field EWDAIM using a String value.
  */
  public void setEWDAIM(String newvalue)
  {
    fieldEWDAIM.setString(newvalue);
  }

  /**
  * Get value of field EWDAIM as a String.
  */
  public String getEWDAIM()
  {
    return fieldEWDAIM.getString();
  }

  /**
  * Set field EWDACO using a String value.
  */
  public void setEWDACO(String newvalue)
  {
    fieldEWDACO.setString(newvalue);
  }

  /**
  * Get value of field EWDACO as a String.
  */
  public String getEWDACO()
  {
    return fieldEWDACO.getString();
  }

  /**
  * Set field EWDLMM using a String value.
  */
  public void setEWDLMM(String newvalue)
  {
    fieldEWDLMM.setString(newvalue);
  }

  /**
  * Get value of field EWDLMM as a String.
  */
  public String getEWDLMM()
  {
    return fieldEWDLMM.getString();
  }

  /**
  * Set numeric field EWDLMM using a BigDecimal value.
  */
  public void setEWDLMM(BigDecimal newvalue)
  {
    fieldEWDLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDLMM()
  {
    return fieldEWDLMM.getBigDecimal();
  }

  /**
  * Set field EWDLMD using a String value.
  */
  public void setEWDLMD(String newvalue)
  {
    fieldEWDLMD.setString(newvalue);
  }

  /**
  * Get value of field EWDLMD as a String.
  */
  public String getEWDLMD()
  {
    return fieldEWDLMD.getString();
  }

  /**
  * Set numeric field EWDLMD using a BigDecimal value.
  */
  public void setEWDLMD(BigDecimal newvalue)
  {
    fieldEWDLMD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDLMD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDLMD()
  {
    return fieldEWDLMD.getBigDecimal();
  }

  /**
  * Set field EWDLMY using a String value.
  */
  public void setEWDLMY(String newvalue)
  {
    fieldEWDLMY.setString(newvalue);
  }

  /**
  * Get value of field EWDLMY as a String.
  */
  public String getEWDLMY()
  {
    return fieldEWDLMY.getString();
  }

  /**
  * Set numeric field EWDLMY using a BigDecimal value.
  */
  public void setEWDLMY(BigDecimal newvalue)
  {
    fieldEWDLMY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDLMY as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDLMY()
  {
    return fieldEWDLMY.getBigDecimal();
  }

  /**
  * Set field EWDLMT using a String value.
  */
  public void setEWDLMT(String newvalue)
  {
    fieldEWDLMT.setString(newvalue);
  }

  /**
  * Get value of field EWDLMT as a String.
  */
  public String getEWDLMT()
  {
    return fieldEWDLMT.getString();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

  /**
  * Set field EWDUSR using a String value.
  */
  public void setEWDUSR(String newvalue)
  {
    fieldEWDUSR.setString(newvalue);
  }

  /**
  * Get value of field EWDUSR as a String.
  */
  public String getEWDUSR()
  {
    return fieldEWDUSR.getString();
  }

}
