package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDI010101 physical file definition.
* 
* File level identifier is 1160912132619.
* Record format level identifier is 56CF85A22604E.
*/

public class EDI010101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DCITNU",
                                     "E01DCISEQ",
                                     "E01DCIACD",
                                     "E01DCIEDS",
                                     "E01DCISDS",
                                     "E01DCIFRE",
                                     "E01DCILVL",
                                     "E01TBLADD",
                                     "E01TBLTYP",
                                     "E01TBLILV",
                                     "E01TBLRQP",
                                     "E01DCIOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DCITNU",
                                   "E01DCISEQ",
                                   "E01DCIACD",
                                   "E01DCIEDS",
                                   "E01DCISDS",
                                   "E01DCIFRE",
                                   "E01DCILVL",
                                   "E01TBLADD",
                                   "E01TBLTYP",
                                   "E01TBLILV",
                                   "E01TBLRQP",
                                   "E01DCIOPE"
                                 };
  final static String fid = "1160912132619";
  final static String rid = "56CF85A22604E";
  final static String fmtname = "EDI010101";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DCITNU = null;
  private DecimalField fieldE01DCISEQ = null;
  private CharacterField fieldE01DCIACD = null;
  private CharacterField fieldE01DCIEDS = null;
  private CharacterField fieldE01DCISDS = null;
  private CharacterField fieldE01DCIFRE = null;
  private CharacterField fieldE01DCILVL = null;
  private CharacterField fieldE01TBLADD = null;
  private CharacterField fieldE01TBLTYP = null;
  private DecimalField fieldE01TBLILV = null;
  private DecimalField fieldE01TBLRQP = null;
  private CharacterField fieldE01DCIOPE = null;

  /**
  * Constructor for EDI010101Message.
  */
  public EDI010101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 180;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DCITNU =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01DCITNU");
    fields[10] = fieldE01DCISEQ =
    new DecimalField(message, HEADERSIZE + 44, 4, 0, "E01DCISEQ");
    fields[11] = fieldE01DCIACD =
    new CharacterField(message, HEADERSIZE + 48, 2, "E01DCIACD");
    fields[12] = fieldE01DCIEDS =
    new CharacterField(message, HEADERSIZE + 50, 60, "E01DCIEDS");
    fields[13] = fieldE01DCISDS =
    new CharacterField(message, HEADERSIZE + 110, 60, "E01DCISDS");
    fields[14] = fieldE01DCIFRE =
    new CharacterField(message, HEADERSIZE + 170, 1, "E01DCIFRE");
    fields[15] = fieldE01DCILVL =
    new CharacterField(message, HEADERSIZE + 171, 1, "E01DCILVL");
    fields[16] = fieldE01TBLADD =
    new CharacterField(message, HEADERSIZE + 172, 1, "E01TBLADD");
    fields[17] = fieldE01TBLTYP =
    new CharacterField(message, HEADERSIZE + 173, 2, "E01TBLTYP");
    fields[18] = fieldE01TBLILV =
    new DecimalField(message, HEADERSIZE + 175, 2, 0, "E01TBLILV");
    fields[19] = fieldE01TBLRQP =
    new DecimalField(message, HEADERSIZE + 177, 2, 0, "E01TBLRQP");
    fields[20] = fieldE01DCIOPE =
    new CharacterField(message, HEADERSIZE + 179, 1, "E01DCIOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DCITNU using a String value.
  */
  public void setE01DCITNU(String newvalue)
  {
    fieldE01DCITNU.setString(newvalue);
  }

  /**
  * Get value of field E01DCITNU as a String.
  */
  public String getE01DCITNU()
  {
    return fieldE01DCITNU.getString();
  }

  /**
  * Set field E01DCISEQ using a String value.
  */
  public void setE01DCISEQ(String newvalue)
  {
    fieldE01DCISEQ.setString(newvalue);
  }

  /**
  * Get value of field E01DCISEQ as a String.
  */
  public String getE01DCISEQ()
  {
    return fieldE01DCISEQ.getString();
  }

  /**
  * Set numeric field E01DCISEQ using a BigDecimal value.
  */
  public void setE01DCISEQ(BigDecimal newvalue)
  {
    fieldE01DCISEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DCISEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DCISEQ()
  {
    return fieldE01DCISEQ.getBigDecimal();
  }

  /**
  * Set field E01DCIACD using a String value.
  */
  public void setE01DCIACD(String newvalue)
  {
    fieldE01DCIACD.setString(newvalue);
  }

  /**
  * Get value of field E01DCIACD as a String.
  */
  public String getE01DCIACD()
  {
    return fieldE01DCIACD.getString();
  }

  /**
  * Set field E01DCIEDS using a String value.
  */
  public void setE01DCIEDS(String newvalue)
  {
    fieldE01DCIEDS.setString(newvalue);
  }

  /**
  * Get value of field E01DCIEDS as a String.
  */
  public String getE01DCIEDS()
  {
    return fieldE01DCIEDS.getString();
  }

  /**
  * Set field E01DCISDS using a String value.
  */
  public void setE01DCISDS(String newvalue)
  {
    fieldE01DCISDS.setString(newvalue);
  }

  /**
  * Get value of field E01DCISDS as a String.
  */
  public String getE01DCISDS()
  {
    return fieldE01DCISDS.getString();
  }

  /**
  * Set field E01DCIFRE using a String value.
  */
  public void setE01DCIFRE(String newvalue)
  {
    fieldE01DCIFRE.setString(newvalue);
  }

  /**
  * Get value of field E01DCIFRE as a String.
  */
  public String getE01DCIFRE()
  {
    return fieldE01DCIFRE.getString();
  }

  /**
  * Set field E01DCILVL using a String value.
  */
  public void setE01DCILVL(String newvalue)
  {
    fieldE01DCILVL.setString(newvalue);
  }

  /**
  * Get value of field E01DCILVL as a String.
  */
  public String getE01DCILVL()
  {
    return fieldE01DCILVL.getString();
  }

  /**
  * Set field E01TBLADD using a String value.
  */
  public void setE01TBLADD(String newvalue)
  {
    fieldE01TBLADD.setString(newvalue);
  }

  /**
  * Get value of field E01TBLADD as a String.
  */
  public String getE01TBLADD()
  {
    return fieldE01TBLADD.getString();
  }

  /**
  * Set field E01TBLTYP using a String value.
  */
  public void setE01TBLTYP(String newvalue)
  {
    fieldE01TBLTYP.setString(newvalue);
  }

  /**
  * Get value of field E01TBLTYP as a String.
  */
  public String getE01TBLTYP()
  {
    return fieldE01TBLTYP.getString();
  }

  /**
  * Set field E01TBLILV using a String value.
  */
  public void setE01TBLILV(String newvalue)
  {
    fieldE01TBLILV.setString(newvalue);
  }

  /**
  * Get value of field E01TBLILV as a String.
  */
  public String getE01TBLILV()
  {
    return fieldE01TBLILV.getString();
  }

  /**
  * Set numeric field E01TBLILV using a BigDecimal value.
  */
  public void setE01TBLILV(BigDecimal newvalue)
  {
    fieldE01TBLILV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TBLILV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TBLILV()
  {
    return fieldE01TBLILV.getBigDecimal();
  }

  /**
  * Set field E01TBLRQP using a String value.
  */
  public void setE01TBLRQP(String newvalue)
  {
    fieldE01TBLRQP.setString(newvalue);
  }

  /**
  * Get value of field E01TBLRQP as a String.
  */
  public String getE01TBLRQP()
  {
    return fieldE01TBLRQP.getString();
  }

  /**
  * Set numeric field E01TBLRQP using a BigDecimal value.
  */
  public void setE01TBLRQP(BigDecimal newvalue)
  {
    fieldE01TBLRQP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TBLRQP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TBLRQP()
  {
    return fieldE01TBLRQP.getBigDecimal();
  }

  /**
  * Set field E01DCIOPE using a String value.
  */
  public void setE01DCIOPE(String newvalue)
  {
    fieldE01DCIOPE.setString(newvalue);
  }

  /**
  * Get value of field E01DCIOPE as a String.
  */
  public String getE01DCIOPE()
  {
    return fieldE01DCIOPE.getString();
  }

}
