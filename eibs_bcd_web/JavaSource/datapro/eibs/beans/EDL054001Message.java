package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL054001 physical file definition.
* 
* File level identifier is 1161115160332.
* Record format level identifier is 595B653D78439.
*/

public class EDL054001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01DLVBNK",
                                     "E01DLVTYP",
                                     "E01DLVTBL",
                                     "E01DLVDSC",
                                     "E01DLVDE1",
                                     "E01DLVDAB",
                                     "E01DLVUS1",
                                     "E01DLVUS2",
                                     "E01CDROPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01DLVBNK",
                                   "E01DLVTYP",
                                   "E01DLVTBL",
                                   "E01DLVDSC",
                                   "E01DLVDE1",
                                   "E01DLVDAB",
                                   "E01DLVUS1",
                                   "E01DLVUS2",
                                   "E01CDROPE"
                                 };
  final static String fid = "1161115160332";
  final static String rid = "595B653D78439";
  final static String fmtname = "EDL054001";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01DLVBNK = null;
  private CharacterField fieldE01DLVTYP = null;
  private CharacterField fieldE01DLVTBL = null;
  private CharacterField fieldE01DLVDSC = null;
  private CharacterField fieldE01DLVDE1 = null;
  private DecimalField fieldE01DLVDAB = null;
  private CharacterField fieldE01DLVUS1 = null;
  private CharacterField fieldE01DLVUS2 = null;
  private CharacterField fieldE01CDROPE = null;

  /**
  * Constructor for EDL054001Message.
  */
  public EDL054001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 168;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01DLVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01DLVBNK");
    fields[10] = fieldE01DLVTYP =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01DLVTYP");
    fields[11] = fieldE01DLVTBL =
    new CharacterField(message, HEADERSIZE + 48, 2, "E01DLVTBL");
    fields[12] = fieldE01DLVDSC =
    new CharacterField(message, HEADERSIZE + 50, 45, "E01DLVDSC");
    fields[13] = fieldE01DLVDE1 =
    new CharacterField(message, HEADERSIZE + 95, 60, "E01DLVDE1");
    fields[14] = fieldE01DLVDAB =
    new DecimalField(message, HEADERSIZE + 155, 4, 0, "E01DLVDAB");
    fields[15] = fieldE01DLVUS1 =
    new CharacterField(message, HEADERSIZE + 159, 4, "E01DLVUS1");
    fields[16] = fieldE01DLVUS2 =
    new CharacterField(message, HEADERSIZE + 163, 4, "E01DLVUS2");
    fields[17] = fieldE01CDROPE =
    new CharacterField(message, HEADERSIZE + 167, 1, "E01CDROPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01DLVBNK using a String value.
  */
  public void setE01DLVBNK(String newvalue)
  {
    fieldE01DLVBNK.setString(newvalue);
  }

  /**
  * Get value of field E01DLVBNK as a String.
  */
  public String getE01DLVBNK()
  {
    return fieldE01DLVBNK.getString();
  }

  /**
  * Set field E01DLVTYP using a String value.
  */
  public void setE01DLVTYP(String newvalue)
  {
    fieldE01DLVTYP.setString(newvalue);
  }

  /**
  * Get value of field E01DLVTYP as a String.
  */
  public String getE01DLVTYP()
  {
    return fieldE01DLVTYP.getString();
  }

  /**
  * Set field E01DLVTBL using a String value.
  */
  public void setE01DLVTBL(String newvalue)
  {
    fieldE01DLVTBL.setString(newvalue);
  }

  /**
  * Get value of field E01DLVTBL as a String.
  */
  public String getE01DLVTBL()
  {
    return fieldE01DLVTBL.getString();
  }

  /**
  * Set field E01DLVDSC using a String value.
  */
  public void setE01DLVDSC(String newvalue)
  {
    fieldE01DLVDSC.setString(newvalue);
  }

  /**
  * Get value of field E01DLVDSC as a String.
  */
  public String getE01DLVDSC()
  {
    return fieldE01DLVDSC.getString();
  }

  /**
  * Set field E01DLVDE1 using a String value.
  */
  public void setE01DLVDE1(String newvalue)
  {
    fieldE01DLVDE1.setString(newvalue);
  }

  /**
  * Get value of field E01DLVDE1 as a String.
  */
  public String getE01DLVDE1()
  {
    return fieldE01DLVDE1.getString();
  }

  /**
  * Set field E01DLVDAB using a String value.
  */
  public void setE01DLVDAB(String newvalue)
  {
    fieldE01DLVDAB.setString(newvalue);
  }

  /**
  * Get value of field E01DLVDAB as a String.
  */
  public String getE01DLVDAB()
  {
    return fieldE01DLVDAB.getString();
  }

  /**
  * Set numeric field E01DLVDAB using a BigDecimal value.
  */
  public void setE01DLVDAB(BigDecimal newvalue)
  {
    fieldE01DLVDAB.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DLVDAB as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DLVDAB()
  {
    return fieldE01DLVDAB.getBigDecimal();
  }

  /**
  * Set field E01DLVUS1 using a String value.
  */
  public void setE01DLVUS1(String newvalue)
  {
    fieldE01DLVUS1.setString(newvalue);
  }

  /**
  * Get value of field E01DLVUS1 as a String.
  */
  public String getE01DLVUS1()
  {
    return fieldE01DLVUS1.getString();
  }

  /**
  * Set field E01DLVUS2 using a String value.
  */
  public void setE01DLVUS2(String newvalue)
  {
    fieldE01DLVUS2.setString(newvalue);
  }

  /**
  * Get value of field E01DLVUS2 as a String.
  */
  public String getE01DLVUS2()
  {
    return fieldE01DLVUS2.getString();
  }

  /**
  * Set field E01CDROPE using a String value.
  */
  public void setE01CDROPE(String newvalue)
  {
    fieldE01CDROPE.setString(newvalue);
  }

  /**
  * Get value of field E01CDROPE as a String.
  */
  public String getE01CDROPE()
  {
    return fieldE01CDROPE.getString();
  }

}
