package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL089001 physical file definition.
* 
* File level identifier is 1130611112921.
* Record format level identifier is 40D3ED0A4CD44.
*/

public class EDL089001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01SELCUS",
                                     "E01SELNME",
                                     "E01SELTYP",
                                     "E01CUSNA1",
                                     "E01CUMMA1",
                                     "E01MONBSE",
                                     "E01MONMEX",
                                     "E01DLDDID",
                                     "E01TOTBSE",
                                     "E01TOTMEX",
                                     "E01DLDSEL",
                                     "E01ENDFLD"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01SELCUS",
                                   "E01SELNME",
                                   "E01SELTYP",
                                   "E01CUSNA1",
                                   "E01CUMMA1",
                                   "E01MONBSE",
                                   "E01MONMEX",
                                   "E01DLDDID",
                                   "E01TOTBSE",
                                   "E01TOTMEX",
                                   "E01DLDSEL",
                                   "E01ENDFLD"
                                 };
  final static String fid = "1130611112921";
  final static String rid = "40D3ED0A4CD44";
  final static String fmtname = "EDL089001";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01SELCUS = null;
  private CharacterField fieldE01SELNME = null;
  private CharacterField fieldE01SELTYP = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CUMMA1 = null;
  private DecimalField fieldE01MONBSE = null;
  private DecimalField fieldE01MONMEX = null;
  private CharacterField fieldE01DLDDID = null;
  private DecimalField fieldE01TOTBSE = null;
  private DecimalField fieldE01TOTMEX = null;
  private CharacterField fieldE01DLDSEL = null;
  private CharacterField fieldE01ENDFLD = null;

  /**
  * Constructor for EDL089001Message.
  */
  public EDL089001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 313;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01SELCUS =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01SELCUS");
    fields[10] = fieldE01SELNME =
    new CharacterField(message, HEADERSIZE + 52, 45, "E01SELNME");
    fields[11] = fieldE01SELTYP =
    new CharacterField(message, HEADERSIZE + 97, 1, "E01SELTYP");
    fields[12] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 98, 60, "E01CUSNA1");
    fields[13] = fieldE01CUMMA1 =
    new CharacterField(message, HEADERSIZE + 158, 60, "E01CUMMA1");
    fields[14] = fieldE01MONBSE =
    new DecimalField(message, HEADERSIZE + 218, 17, 2, "E01MONBSE");
    fields[15] = fieldE01MONMEX =
    new DecimalField(message, HEADERSIZE + 235, 17, 2, "E01MONMEX");
    fields[16] = fieldE01DLDDID =
    new CharacterField(message, HEADERSIZE + 252, 25, "E01DLDDID");
    fields[17] = fieldE01TOTBSE =
    new DecimalField(message, HEADERSIZE + 277, 17, 2, "E01TOTBSE");
    fields[18] = fieldE01TOTMEX =
    new DecimalField(message, HEADERSIZE + 294, 17, 2, "E01TOTMEX");
    fields[19] = fieldE01DLDSEL =
    new CharacterField(message, HEADERSIZE + 311, 1, "E01DLDSEL");
    fields[20] = fieldE01ENDFLD =
    new CharacterField(message, HEADERSIZE + 312, 1, "E01ENDFLD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01SELCUS using a String value.
  */
  public void setE01SELCUS(String newvalue)
  {
    fieldE01SELCUS.setString(newvalue);
  }

  /**
  * Get value of field E01SELCUS as a String.
  */
  public String getE01SELCUS()
  {
    return fieldE01SELCUS.getString();
  }

  /**
  * Set numeric field E01SELCUS using a BigDecimal value.
  */
  public void setE01SELCUS(BigDecimal newvalue)
  {
    fieldE01SELCUS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01SELCUS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01SELCUS()
  {
    return fieldE01SELCUS.getBigDecimal();
  }

  /**
  * Set field E01SELNME using a String value.
  */
  public void setE01SELNME(String newvalue)
  {
    fieldE01SELNME.setString(newvalue);
  }

  /**
  * Get value of field E01SELNME as a String.
  */
  public String getE01SELNME()
  {
    return fieldE01SELNME.getString();
  }

  /**
  * Set field E01SELTYP using a String value.
  */
  public void setE01SELTYP(String newvalue)
  {
    fieldE01SELTYP.setString(newvalue);
  }

  /**
  * Get value of field E01SELTYP as a String.
  */
  public String getE01SELTYP()
  {
    return fieldE01SELTYP.getString();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUMMA1 using a String value.
  */
  public void setE01CUMMA1(String newvalue)
  {
    fieldE01CUMMA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUMMA1 as a String.
  */
  public String getE01CUMMA1()
  {
    return fieldE01CUMMA1.getString();
  }

  /**
  * Set field E01MONBSE using a String value.
  */
  public void setE01MONBSE(String newvalue)
  {
    fieldE01MONBSE.setString(newvalue);
  }

  /**
  * Get value of field E01MONBSE as a String.
  */
  public String getE01MONBSE()
  {
    return fieldE01MONBSE.getString();
  }

  /**
  * Set numeric field E01MONBSE using a BigDecimal value.
  */
  public void setE01MONBSE(BigDecimal newvalue)
  {
    fieldE01MONBSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MONBSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MONBSE()
  {
    return fieldE01MONBSE.getBigDecimal();
  }

  /**
  * Set field E01MONMEX using a String value.
  */
  public void setE01MONMEX(String newvalue)
  {
    fieldE01MONMEX.setString(newvalue);
  }

  /**
  * Get value of field E01MONMEX as a String.
  */
  public String getE01MONMEX()
  {
    return fieldE01MONMEX.getString();
  }

  /**
  * Set numeric field E01MONMEX using a BigDecimal value.
  */
  public void setE01MONMEX(BigDecimal newvalue)
  {
    fieldE01MONMEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MONMEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MONMEX()
  {
    return fieldE01MONMEX.getBigDecimal();
  }

  /**
  * Set field E01DLDDID using a String value.
  */
  public void setE01DLDDID(String newvalue)
  {
    fieldE01DLDDID.setString(newvalue);
  }

  /**
  * Get value of field E01DLDDID as a String.
  */
  public String getE01DLDDID()
  {
    return fieldE01DLDDID.getString();
  }

  /**
  * Set field E01TOTBSE using a String value.
  */
  public void setE01TOTBSE(String newvalue)
  {
    fieldE01TOTBSE.setString(newvalue);
  }

  /**
  * Get value of field E01TOTBSE as a String.
  */
  public String getE01TOTBSE()
  {
    return fieldE01TOTBSE.getString();
  }

  /**
  * Set numeric field E01TOTBSE using a BigDecimal value.
  */
  public void setE01TOTBSE(BigDecimal newvalue)
  {
    fieldE01TOTBSE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTBSE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTBSE()
  {
    return fieldE01TOTBSE.getBigDecimal();
  }

  /**
  * Set field E01TOTMEX using a String value.
  */
  public void setE01TOTMEX(String newvalue)
  {
    fieldE01TOTMEX.setString(newvalue);
  }

  /**
  * Get value of field E01TOTMEX as a String.
  */
  public String getE01TOTMEX()
  {
    return fieldE01TOTMEX.getString();
  }

  /**
  * Set numeric field E01TOTMEX using a BigDecimal value.
  */
  public void setE01TOTMEX(BigDecimal newvalue)
  {
    fieldE01TOTMEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TOTMEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TOTMEX()
  {
    return fieldE01TOTMEX.getBigDecimal();
  }

  /**
  * Set field E01DLDSEL using a String value.
  */
  public void setE01DLDSEL(String newvalue)
  {
    fieldE01DLDSEL.setString(newvalue);
  }

  /**
  * Get value of field E01DLDSEL as a String.
  */
  public String getE01DLDSEL()
  {
    return fieldE01DLDSEL.getString();
  }

  /**
  * Set field E01ENDFLD using a String value.
  */
  public void setE01ENDFLD(String newvalue)
  {
    fieldE01ENDFLD.setString(newvalue);
  }

  /**
  * Get value of field E01ENDFLD as a String.
  */
  public String getE01ENDFLD()
  {
    return fieldE01ENDFLD.getString();
  }

}
