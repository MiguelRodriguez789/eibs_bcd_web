package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL053502 physical file definition.
* 
* File level identifier is 1140718114158.
* Record format level identifier is 3C88144472E81.
*/

public class EDL053502Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02MRTBNK",
                                     "E02MRTCCY",
                                     "E02MRTPRD",
                                     "E02MRTPDM",
                                     "E02MRTPDD",
                                     "E02MRTPDY",
                                     "E02MRTTMI",
                                     "E02MRTTMM",
                                     "E02MRTTTA"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02MRTBNK",
                                   "E02MRTCCY",
                                   "E02MRTPRD",
                                   "E02MRTPDM",
                                   "E02MRTPDD",
                                   "E02MRTPDY",
                                   "E02MRTTMI",
                                   "E02MRTTMM",
                                   "E02MRTTTA"
                                 };
  final static String fid = "1140718114158";
  final static String rid = "3C88144472E81";
  final static String fmtname = "EDL053502";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02MRTBNK = null;
  private CharacterField fieldE02MRTCCY = null;
  private CharacterField fieldE02MRTPRD = null;
  private DecimalField fieldE02MRTPDM = null;
  private DecimalField fieldE02MRTPDD = null;
  private DecimalField fieldE02MRTPDY = null;
  private DecimalField fieldE02MRTTMI = null;
  private DecimalField fieldE02MRTTMM = null;
  private CharacterField fieldE02MRTTTA = null;

  /**
  * Constructor for EDL053502Message.
  */
  public EDL053502Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 85;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02MRTBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02MRTBNK");
    fields[10] = fieldE02MRTCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E02MRTCCY");
    fields[11] = fieldE02MRTPRD =
    new CharacterField(message, HEADERSIZE + 47, 4, "E02MRTPRD");
    fields[12] = fieldE02MRTPDM =
    new DecimalField(message, HEADERSIZE + 51, 3, 0, "E02MRTPDM");
    fields[13] = fieldE02MRTPDD =
    new DecimalField(message, HEADERSIZE + 54, 3, 0, "E02MRTPDD");
    fields[14] = fieldE02MRTPDY =
    new DecimalField(message, HEADERSIZE + 57, 5, 0, "E02MRTPDY");
    fields[15] = fieldE02MRTTMI =
    new DecimalField(message, HEADERSIZE + 62, 11, 6, "E02MRTTMI");
    fields[16] = fieldE02MRTTMM =
    new DecimalField(message, HEADERSIZE + 73, 11, 6, "E02MRTTMM");
    fields[17] = fieldE02MRTTTA =
    new CharacterField(message, HEADERSIZE + 84, 1, "E02MRTTTA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02MRTBNK using a String value.
  */
  public void setE02MRTBNK(String newvalue)
  {
    fieldE02MRTBNK.setString(newvalue);
  }

  /**
  * Get value of field E02MRTBNK as a String.
  */
  public String getE02MRTBNK()
  {
    return fieldE02MRTBNK.getString();
  }

  /**
  * Set field E02MRTCCY using a String value.
  */
  public void setE02MRTCCY(String newvalue)
  {
    fieldE02MRTCCY.setString(newvalue);
  }

  /**
  * Get value of field E02MRTCCY as a String.
  */
  public String getE02MRTCCY()
  {
    return fieldE02MRTCCY.getString();
  }

  /**
  * Set field E02MRTPRD using a String value.
  */
  public void setE02MRTPRD(String newvalue)
  {
    fieldE02MRTPRD.setString(newvalue);
  }

  /**
  * Get value of field E02MRTPRD as a String.
  */
  public String getE02MRTPRD()
  {
    return fieldE02MRTPRD.getString();
  }

  /**
  * Set field E02MRTPDM using a String value.
  */
  public void setE02MRTPDM(String newvalue)
  {
    fieldE02MRTPDM.setString(newvalue);
  }

  /**
  * Get value of field E02MRTPDM as a String.
  */
  public String getE02MRTPDM()
  {
    return fieldE02MRTPDM.getString();
  }

  /**
  * Set numeric field E02MRTPDM using a BigDecimal value.
  */
  public void setE02MRTPDM(BigDecimal newvalue)
  {
    fieldE02MRTPDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MRTPDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MRTPDM()
  {
    return fieldE02MRTPDM.getBigDecimal();
  }

  /**
  * Set field E02MRTPDD using a String value.
  */
  public void setE02MRTPDD(String newvalue)
  {
    fieldE02MRTPDD.setString(newvalue);
  }

  /**
  * Get value of field E02MRTPDD as a String.
  */
  public String getE02MRTPDD()
  {
    return fieldE02MRTPDD.getString();
  }

  /**
  * Set numeric field E02MRTPDD using a BigDecimal value.
  */
  public void setE02MRTPDD(BigDecimal newvalue)
  {
    fieldE02MRTPDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MRTPDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MRTPDD()
  {
    return fieldE02MRTPDD.getBigDecimal();
  }

  /**
  * Set field E02MRTPDY using a String value.
  */
  public void setE02MRTPDY(String newvalue)
  {
    fieldE02MRTPDY.setString(newvalue);
  }

  /**
  * Get value of field E02MRTPDY as a String.
  */
  public String getE02MRTPDY()
  {
    return fieldE02MRTPDY.getString();
  }

  /**
  * Set numeric field E02MRTPDY using a BigDecimal value.
  */
  public void setE02MRTPDY(BigDecimal newvalue)
  {
    fieldE02MRTPDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MRTPDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MRTPDY()
  {
    return fieldE02MRTPDY.getBigDecimal();
  }

  /**
  * Set field E02MRTTMI using a String value.
  */
  public void setE02MRTTMI(String newvalue)
  {
    fieldE02MRTTMI.setString(newvalue);
  }

  /**
  * Get value of field E02MRTTMI as a String.
  */
  public String getE02MRTTMI()
  {
    return fieldE02MRTTMI.getString();
  }

  /**
  * Set numeric field E02MRTTMI using a BigDecimal value.
  */
  public void setE02MRTTMI(BigDecimal newvalue)
  {
    fieldE02MRTTMI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MRTTMI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MRTTMI()
  {
    return fieldE02MRTTMI.getBigDecimal();
  }

  /**
  * Set field E02MRTTMM using a String value.
  */
  public void setE02MRTTMM(String newvalue)
  {
    fieldE02MRTTMM.setString(newvalue);
  }

  /**
  * Get value of field E02MRTTMM as a String.
  */
  public String getE02MRTTMM()
  {
    return fieldE02MRTTMM.getString();
  }

  /**
  * Set numeric field E02MRTTMM using a BigDecimal value.
  */
  public void setE02MRTTMM(BigDecimal newvalue)
  {
    fieldE02MRTTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MRTTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MRTTMM()
  {
    return fieldE02MRTTMM.getBigDecimal();
  }

  /**
  * Set field E02MRTTTA using a String value.
  */
  public void setE02MRTTTA(String newvalue)
  {
    fieldE02MRTTTA.setString(newvalue);
  }

  /**
  * Get value of field E02MRTTTA as a String.
  */
  public String getE02MRTTTA()
  {
    return fieldE02MRTTTA.getString();
  }

}
