package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL0100DS physical file definition.
* 
* File level identifier is 1130611112848.
* Record format level identifier is 5A0929472629D.
*/

public class ECL0100DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01TIIDCL",
                                     "E01IDNCLI",
                                     "E01FLAGPR",
                                     "E01NROCTA",
                                     "E01NROCHE",
                                     "E01MTOCHE",
                                     "E01FECDTA",
                                     "E01FECDTM",
                                     "E01FECDTD",
                                     "E01NOMBEN",
                                     "E01OBSERV",
                                     "E01USUTRA",
                                     "E01USUSUP",
                                     "E01CLASUP",
                                     "E01NOMCLI",
                                     "E01AUTCCH"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01TIIDCL",
                                   "E01IDNCLI",
                                   "E01FLAGPR",
                                   "E01NROCTA",
                                   "E01NROCHE",
                                   "E01MTOCHE",
                                   "E01FECDTA",
                                   "E01FECDTM",
                                   "E01FECDTD",
                                   "E01NOMBEN",
                                   "E01OBSERV",
                                   "E01USUTRA",
                                   "E01USUSUP",
                                   "E01CLASUP",
                                   "E01NOMCLI",
                                   "E01AUTCCH"
                                 };
  final static String fid = "1130611112848";
  final static String rid = "5A0929472629D";
  final static String fmtname = "ECL0100DS";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01TIIDCL = null;
  private CharacterField fieldE01IDNCLI = null;
  private CharacterField fieldE01FLAGPR = null;
  private CharacterField fieldE01NROCTA = null;
  private DecimalField fieldE01NROCHE = null;
  private DecimalField fieldE01MTOCHE = null;
  private DecimalField fieldE01FECDTA = null;
  private DecimalField fieldE01FECDTM = null;
  private DecimalField fieldE01FECDTD = null;
  private CharacterField fieldE01NOMBEN = null;
  private CharacterField fieldE01OBSERV = null;
  private CharacterField fieldE01USUTRA = null;
  private CharacterField fieldE01USUSUP = null;
  private CharacterField fieldE01CLASUP = null;
  private CharacterField fieldE01NOMCLI = null;
  private DecimalField fieldE01AUTCCH = null;

  /**
  * Constructor for ECL0100DSMessage.
  */
  public ECL0100DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 324;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01TIIDCL =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01TIIDCL");
    fields[10] = fieldE01IDNCLI =
    new CharacterField(message, HEADERSIZE + 43, 25, "E01IDNCLI");
    fields[11] = fieldE01FLAGPR =
    new CharacterField(message, HEADERSIZE + 68, 1, "E01FLAGPR");
    fields[12] = fieldE01NROCTA =
    new CharacterField(message, HEADERSIZE + 69, 20, "E01NROCTA");
    fields[13] = fieldE01NROCHE =
    new DecimalField(message, HEADERSIZE + 89, 14, 0, "E01NROCHE");
    fields[14] = fieldE01MTOCHE =
    new DecimalField(message, HEADERSIZE + 103, 17, 2, "E01MTOCHE");
    fields[15] = fieldE01FECDTA =
    new DecimalField(message, HEADERSIZE + 120, 5, 0, "E01FECDTA");
    fields[16] = fieldE01FECDTM =
    new DecimalField(message, HEADERSIZE + 125, 3, 0, "E01FECDTM");
    fields[17] = fieldE01FECDTD =
    new DecimalField(message, HEADERSIZE + 128, 3, 0, "E01FECDTD");
    fields[18] = fieldE01NOMBEN =
    new CharacterField(message, HEADERSIZE + 131, 45, "E01NOMBEN");
    fields[19] = fieldE01OBSERV =
    new CharacterField(message, HEADERSIZE + 176, 60, "E01OBSERV");
    fields[20] = fieldE01USUTRA =
    new CharacterField(message, HEADERSIZE + 236, 10, "E01USUTRA");
    fields[21] = fieldE01USUSUP =
    new CharacterField(message, HEADERSIZE + 246, 10, "E01USUSUP");
    fields[22] = fieldE01CLASUP =
    new CharacterField(message, HEADERSIZE + 256, 10, "E01CLASUP");
    fields[23] = fieldE01NOMCLI =
    new CharacterField(message, HEADERSIZE + 266, 45, "E01NOMCLI");
    fields[24] = fieldE01AUTCCH =
    new DecimalField(message, HEADERSIZE + 311, 13, 0, "E01AUTCCH");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01TIIDCL using a String value.
  */
  public void setE01TIIDCL(String newvalue)
  {
    fieldE01TIIDCL.setString(newvalue);
  }

  /**
  * Get value of field E01TIIDCL as a String.
  */
  public String getE01TIIDCL()
  {
    return fieldE01TIIDCL.getString();
  }

  /**
  * Set field E01IDNCLI using a String value.
  */
  public void setE01IDNCLI(String newvalue)
  {
    fieldE01IDNCLI.setString(newvalue);
  }

  /**
  * Get value of field E01IDNCLI as a String.
  */
  public String getE01IDNCLI()
  {
    return fieldE01IDNCLI.getString();
  }

  /**
  * Set field E01FLAGPR using a String value.
  */
  public void setE01FLAGPR(String newvalue)
  {
    fieldE01FLAGPR.setString(newvalue);
  }

  /**
  * Get value of field E01FLAGPR as a String.
  */
  public String getE01FLAGPR()
  {
    return fieldE01FLAGPR.getString();
  }

  /**
  * Set field E01NROCTA using a String value.
  */
  public void setE01NROCTA(String newvalue)
  {
    fieldE01NROCTA.setString(newvalue);
  }

  /**
  * Get value of field E01NROCTA as a String.
  */
  public String getE01NROCTA()
  {
    return fieldE01NROCTA.getString();
  }

  /**
  * Set field E01NROCHE using a String value.
  */
  public void setE01NROCHE(String newvalue)
  {
    fieldE01NROCHE.setString(newvalue);
  }

  /**
  * Get value of field E01NROCHE as a String.
  */
  public String getE01NROCHE()
  {
    return fieldE01NROCHE.getString();
  }

  /**
  * Set numeric field E01NROCHE using a BigDecimal value.
  */
  public void setE01NROCHE(BigDecimal newvalue)
  {
    fieldE01NROCHE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NROCHE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NROCHE()
  {
    return fieldE01NROCHE.getBigDecimal();
  }

  /**
  * Set field E01MTOCHE using a String value.
  */
  public void setE01MTOCHE(String newvalue)
  {
    fieldE01MTOCHE.setString(newvalue);
  }

  /**
  * Get value of field E01MTOCHE as a String.
  */
  public String getE01MTOCHE()
  {
    return fieldE01MTOCHE.getString();
  }

  /**
  * Set numeric field E01MTOCHE using a BigDecimal value.
  */
  public void setE01MTOCHE(BigDecimal newvalue)
  {
    fieldE01MTOCHE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MTOCHE as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MTOCHE()
  {
    return fieldE01MTOCHE.getBigDecimal();
  }

  /**
  * Set field E01FECDTA using a String value.
  */
  public void setE01FECDTA(String newvalue)
  {
    fieldE01FECDTA.setString(newvalue);
  }

  /**
  * Get value of field E01FECDTA as a String.
  */
  public String getE01FECDTA()
  {
    return fieldE01FECDTA.getString();
  }

  /**
  * Set numeric field E01FECDTA using a BigDecimal value.
  */
  public void setE01FECDTA(BigDecimal newvalue)
  {
    fieldE01FECDTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FECDTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FECDTA()
  {
    return fieldE01FECDTA.getBigDecimal();
  }

  /**
  * Set field E01FECDTM using a String value.
  */
  public void setE01FECDTM(String newvalue)
  {
    fieldE01FECDTM.setString(newvalue);
  }

  /**
  * Get value of field E01FECDTM as a String.
  */
  public String getE01FECDTM()
  {
    return fieldE01FECDTM.getString();
  }

  /**
  * Set numeric field E01FECDTM using a BigDecimal value.
  */
  public void setE01FECDTM(BigDecimal newvalue)
  {
    fieldE01FECDTM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FECDTM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FECDTM()
  {
    return fieldE01FECDTM.getBigDecimal();
  }

  /**
  * Set field E01FECDTD using a String value.
  */
  public void setE01FECDTD(String newvalue)
  {
    fieldE01FECDTD.setString(newvalue);
  }

  /**
  * Get value of field E01FECDTD as a String.
  */
  public String getE01FECDTD()
  {
    return fieldE01FECDTD.getString();
  }

  /**
  * Set numeric field E01FECDTD using a BigDecimal value.
  */
  public void setE01FECDTD(BigDecimal newvalue)
  {
    fieldE01FECDTD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01FECDTD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01FECDTD()
  {
    return fieldE01FECDTD.getBigDecimal();
  }

  /**
  * Set field E01NOMBEN using a String value.
  */
  public void setE01NOMBEN(String newvalue)
  {
    fieldE01NOMBEN.setString(newvalue);
  }

  /**
  * Get value of field E01NOMBEN as a String.
  */
  public String getE01NOMBEN()
  {
    return fieldE01NOMBEN.getString();
  }

  /**
  * Set field E01OBSERV using a String value.
  */
  public void setE01OBSERV(String newvalue)
  {
    fieldE01OBSERV.setString(newvalue);
  }

  /**
  * Get value of field E01OBSERV as a String.
  */
  public String getE01OBSERV()
  {
    return fieldE01OBSERV.getString();
  }

  /**
  * Set field E01USUTRA using a String value.
  */
  public void setE01USUTRA(String newvalue)
  {
    fieldE01USUTRA.setString(newvalue);
  }

  /**
  * Get value of field E01USUTRA as a String.
  */
  public String getE01USUTRA()
  {
    return fieldE01USUTRA.getString();
  }

  /**
  * Set field E01USUSUP using a String value.
  */
  public void setE01USUSUP(String newvalue)
  {
    fieldE01USUSUP.setString(newvalue);
  }

  /**
  * Get value of field E01USUSUP as a String.
  */
  public String getE01USUSUP()
  {
    return fieldE01USUSUP.getString();
  }

  /**
  * Set field E01CLASUP using a String value.
  */
  public void setE01CLASUP(String newvalue)
  {
    fieldE01CLASUP.setString(newvalue);
  }

  /**
  * Get value of field E01CLASUP as a String.
  */
  public String getE01CLASUP()
  {
    return fieldE01CLASUP.getString();
  }

  /**
  * Set field E01NOMCLI using a String value.
  */
  public void setE01NOMCLI(String newvalue)
  {
    fieldE01NOMCLI.setString(newvalue);
  }

  /**
  * Get value of field E01NOMCLI as a String.
  */
  public String getE01NOMCLI()
  {
    return fieldE01NOMCLI.getString();
  }

  /**
  * Set field E01AUTCCH using a String value.
  */
  public void setE01AUTCCH(String newvalue)
  {
    fieldE01AUTCCH.setString(newvalue);
  }

  /**
  * Get value of field E01AUTCCH as a String.
  */
  public String getE01AUTCCH()
  {
    return fieldE01AUTCCH.getString();
  }

  /**
  * Set numeric field E01AUTCCH using a BigDecimal value.
  */
  public void setE01AUTCCH(BigDecimal newvalue)
  {
    fieldE01AUTCCH.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01AUTCCH as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01AUTCCH()
  {
    return fieldE01AUTCCH.getBigDecimal();
  }

}
