package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL0190DS physical file definition.
* 
* File level identifier is 1130611112848.
* Record format level identifier is 4537BFEC6206C.
*/

public class ECL0190DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01TIPIDE",
                                     "E01USRIDN",
                                     "E01NROTAR",
                                     "E01NROCVV",
                                     "E01MOTSUS",
                                     "E01MESVCT",
                                     "E01ANOVCT",
                                     "E01TIPPRO",
                                     "E01STBNA1"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01TIPIDE",
                                   "E01USRIDN",
                                   "E01NROTAR",
                                   "E01NROCVV",
                                   "E01MOTSUS",
                                   "E01MESVCT",
                                   "E01ANOVCT",
                                   "E01TIPPRO",
                                   "E01STBNA1"
                                 };
  final static String fid = "1130611112848";
  final static String rid = "4537BFEC6206C";
  final static String fmtname = "ECL0190DS";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01TIPIDE = null;
  private CharacterField fieldE01USRIDN = null;
  private CharacterField fieldE01NROTAR = null;
  private DecimalField fieldE01NROCVV = null;
  private CharacterField fieldE01MOTSUS = null;
  private DecimalField fieldE01MESVCT = null;
  private DecimalField fieldE01ANOVCT = null;
  private DecimalField fieldE01TIPPRO = null;
  private CharacterField fieldE01STBNA1 = null;

  /**
  * Constructor for ECL0190DSMessage.
  */
  public ECL0190DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 149;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01TIPIDE =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01TIPIDE");
    fields[10] = fieldE01USRIDN =
    new CharacterField(message, HEADERSIZE + 43, 25, "E01USRIDN");
    fields[11] = fieldE01NROTAR =
    new CharacterField(message, HEADERSIZE + 68, 20, "E01NROTAR");
    fields[12] = fieldE01NROCVV =
    new DecimalField(message, HEADERSIZE + 88, 4, 0, "E01NROCVV");
    fields[13] = fieldE01MOTSUS =
    new CharacterField(message, HEADERSIZE + 92, 2, "E01MOTSUS");
    fields[14] = fieldE01MESVCT =
    new DecimalField(message, HEADERSIZE + 94, 3, 0, "E01MESVCT");
    fields[15] = fieldE01ANOVCT =
    new DecimalField(message, HEADERSIZE + 97, 5, 0, "E01ANOVCT");
    fields[16] = fieldE01TIPPRO =
    new DecimalField(message, HEADERSIZE + 102, 2, 0, "E01TIPPRO");
    fields[17] = fieldE01STBNA1 =
    new CharacterField(message, HEADERSIZE + 104, 45, "E01STBNA1");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01TIPIDE using a String value.
  */
  public void setE01TIPIDE(String newvalue)
  {
    fieldE01TIPIDE.setString(newvalue);
  }

  /**
  * Get value of field E01TIPIDE as a String.
  */
  public String getE01TIPIDE()
  {
    return fieldE01TIPIDE.getString();
  }

  /**
  * Set field E01USRIDN using a String value.
  */
  public void setE01USRIDN(String newvalue)
  {
    fieldE01USRIDN.setString(newvalue);
  }

  /**
  * Get value of field E01USRIDN as a String.
  */
  public String getE01USRIDN()
  {
    return fieldE01USRIDN.getString();
  }

  /**
  * Set field E01NROTAR using a String value.
  */
  public void setE01NROTAR(String newvalue)
  {
    fieldE01NROTAR.setString(newvalue);
  }

  /**
  * Get value of field E01NROTAR as a String.
  */
  public String getE01NROTAR()
  {
    return fieldE01NROTAR.getString();
  }

  /**
  * Set field E01NROCVV using a String value.
  */
  public void setE01NROCVV(String newvalue)
  {
    fieldE01NROCVV.setString(newvalue);
  }

  /**
  * Get value of field E01NROCVV as a String.
  */
  public String getE01NROCVV()
  {
    return fieldE01NROCVV.getString();
  }

  /**
  * Set numeric field E01NROCVV using a BigDecimal value.
  */
  public void setE01NROCVV(BigDecimal newvalue)
  {
    fieldE01NROCVV.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NROCVV as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NROCVV()
  {
    return fieldE01NROCVV.getBigDecimal();
  }

  /**
  * Set field E01MOTSUS using a String value.
  */
  public void setE01MOTSUS(String newvalue)
  {
    fieldE01MOTSUS.setString(newvalue);
  }

  /**
  * Get value of field E01MOTSUS as a String.
  */
  public String getE01MOTSUS()
  {
    return fieldE01MOTSUS.getString();
  }

  /**
  * Set field E01MESVCT using a String value.
  */
  public void setE01MESVCT(String newvalue)
  {
    fieldE01MESVCT.setString(newvalue);
  }

  /**
  * Get value of field E01MESVCT as a String.
  */
  public String getE01MESVCT()
  {
    return fieldE01MESVCT.getString();
  }

  /**
  * Set numeric field E01MESVCT using a BigDecimal value.
  */
  public void setE01MESVCT(BigDecimal newvalue)
  {
    fieldE01MESVCT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01MESVCT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01MESVCT()
  {
    return fieldE01MESVCT.getBigDecimal();
  }

  /**
  * Set field E01ANOVCT using a String value.
  */
  public void setE01ANOVCT(String newvalue)
  {
    fieldE01ANOVCT.setString(newvalue);
  }

  /**
  * Get value of field E01ANOVCT as a String.
  */
  public String getE01ANOVCT()
  {
    return fieldE01ANOVCT.getString();
  }

  /**
  * Set numeric field E01ANOVCT using a BigDecimal value.
  */
  public void setE01ANOVCT(BigDecimal newvalue)
  {
    fieldE01ANOVCT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01ANOVCT as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01ANOVCT()
  {
    return fieldE01ANOVCT.getBigDecimal();
  }

  /**
  * Set field E01TIPPRO using a String value.
  */
  public void setE01TIPPRO(String newvalue)
  {
    fieldE01TIPPRO.setString(newvalue);
  }

  /**
  * Get value of field E01TIPPRO as a String.
  */
  public String getE01TIPPRO()
  {
    return fieldE01TIPPRO.getString();
  }

  /**
  * Set numeric field E01TIPPRO using a BigDecimal value.
  */
  public void setE01TIPPRO(BigDecimal newvalue)
  {
    fieldE01TIPPRO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TIPPRO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TIPPRO()
  {
    return fieldE01TIPPRO.getBigDecimal();
  }

  /**
  * Set field E01STBNA1 using a String value.
  */
  public void setE01STBNA1(String newvalue)
  {
    fieldE01STBNA1.setString(newvalue);
  }

  /**
  * Get value of field E01STBNA1 as a String.
  */
  public String getE01STBNA1()
  {
    return fieldE01STBNA1.getString();
  }

}
