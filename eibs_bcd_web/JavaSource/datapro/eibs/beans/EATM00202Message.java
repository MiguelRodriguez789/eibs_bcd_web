package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EATM00202 physical file definition.
* 
* File level identifier is 1181220114839.
* Record format level identifier is 483229B850A8A.
*/

public class EATM00202Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02MOVBNK",
                                     "E02MOVCCY",
                                     "E02MOVTID",
                                     "E02MOVTYR",
                                     "D02MOVTYR",
                                     "E02MOVTMM",
                                     "E02MOVTDD",
                                     "E02MOVTYY",
                                     "E02MOVTIM",
                                     "E02MOVBTY",
                                     "D02MOVBTY",
                                     "E02MOVBAN",
                                     "E02MOVDEN",
                                     "E02MOVQTY",
                                     "E02MOVVRA",
                                     "E02MOVCMM",
                                     "E02MOVCDD",
                                     "E02MOVCYY",
                                     "E02MOVCMU",
                                     "E02MOVLMM",
                                     "E02MOVLDD",
                                     "E02MOVLYY",
                                     "E02MOVLMU",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02MOVBNK",
                                   "E02MOVCCY",
                                   "E02MOVTID",
                                   "E02MOVTYR",
                                   "D02MOVTYR",
                                   "E02MOVTMM",
                                   "E02MOVTDD",
                                   "E02MOVTYY",
                                   "E02MOVTIM",
                                   "E02MOVBTY",
                                   "D02MOVBTY",
                                   "E02MOVBAN",
                                   "E02MOVDEN",
                                   "E02MOVQTY",
                                   "E02MOVVRA",
                                   "E02MOVCMM",
                                   "E02MOVCDD",
                                   "E02MOVCYY",
                                   "E02MOVCMU",
                                   "E02MOVLMM",
                                   "E02MOVLDD",
                                   "E02MOVLYY",
                                   "E02MOVLMU",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1181220114839";
  final static String rid = "483229B850A8A";
  final static String fmtname = "EATM00202";
  final int FIELDCOUNT = 34;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02MOVBNK = null;
  private CharacterField fieldE02MOVCCY = null;
  private CharacterField fieldE02MOVTID = null;
  private CharacterField fieldE02MOVTYR = null;
  private CharacterField fieldD02MOVTYR = null;
  private DecimalField fieldE02MOVTMM = null;
  private DecimalField fieldE02MOVTDD = null;
  private DecimalField fieldE02MOVTYY = null;
  private DecimalField fieldE02MOVTIM = null;
  private CharacterField fieldE02MOVBTY = null;
  private CharacterField fieldD02MOVBTY = null;
  private DecimalField fieldE02MOVBAN = null;
  private DecimalField fieldE02MOVDEN = null;
  private DecimalField fieldE02MOVQTY = null;
  private DecimalField fieldE02MOVVRA = null;
  private DecimalField fieldE02MOVCMM = null;
  private DecimalField fieldE02MOVCDD = null;
  private DecimalField fieldE02MOVCYY = null;
  private CharacterField fieldE02MOVCMU = null;
  private DecimalField fieldE02MOVLMM = null;
  private DecimalField fieldE02MOVLDD = null;
  private DecimalField fieldE02MOVLYY = null;
  private CharacterField fieldE02MOVLMU = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EATM00202Message.
  */
  public EATM00202Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 290;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02MOVBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02MOVBNK");
    fields[10] = fieldE02MOVCCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E02MOVCCY");
    fields[11] = fieldE02MOVTID =
    new CharacterField(message, HEADERSIZE + 47, 10, "E02MOVTID");
    fields[12] = fieldE02MOVTYR =
    new CharacterField(message, HEADERSIZE + 57, 1, "E02MOVTYR");
    fields[13] = fieldD02MOVTYR =
    new CharacterField(message, HEADERSIZE + 58, 60, "D02MOVTYR");
    fields[14] = fieldE02MOVTMM =
    new DecimalField(message, HEADERSIZE + 118, 3, 0, "E02MOVTMM");
    fields[15] = fieldE02MOVTDD =
    new DecimalField(message, HEADERSIZE + 121, 3, 0, "E02MOVTDD");
    fields[16] = fieldE02MOVTYY =
    new DecimalField(message, HEADERSIZE + 124, 5, 0, "E02MOVTYY");
    fields[17] = fieldE02MOVTIM =
    new DecimalField(message, HEADERSIZE + 129, 7, 0, "E02MOVTIM");
    fields[18] = fieldE02MOVBTY =
    new CharacterField(message, HEADERSIZE + 136, 1, "E02MOVBTY");
    fields[19] = fieldD02MOVBTY =
    new CharacterField(message, HEADERSIZE + 137, 60, "D02MOVBTY");
    fields[20] = fieldE02MOVBAN =
    new DecimalField(message, HEADERSIZE + 197, 5, 0, "E02MOVBAN");
    fields[21] = fieldE02MOVDEN =
    new DecimalField(message, HEADERSIZE + 202, 8, 0, "E02MOVDEN");
    fields[22] = fieldE02MOVQTY =
    new DecimalField(message, HEADERSIZE + 210, 8, 0, "E02MOVQTY");
    fields[23] = fieldE02MOVVRA =
    new DecimalField(message, HEADERSIZE + 218, 21, 2, "E02MOVVRA");
    fields[24] = fieldE02MOVCMM =
    new DecimalField(message, HEADERSIZE + 239, 3, 0, "E02MOVCMM");
    fields[25] = fieldE02MOVCDD =
    new DecimalField(message, HEADERSIZE + 242, 3, 0, "E02MOVCDD");
    fields[26] = fieldE02MOVCYY =
    new DecimalField(message, HEADERSIZE + 245, 5, 0, "E02MOVCYY");
    fields[27] = fieldE02MOVCMU =
    new CharacterField(message, HEADERSIZE + 250, 10, "E02MOVCMU");
    fields[28] = fieldE02MOVLMM =
    new DecimalField(message, HEADERSIZE + 260, 3, 0, "E02MOVLMM");
    fields[29] = fieldE02MOVLDD =
    new DecimalField(message, HEADERSIZE + 263, 3, 0, "E02MOVLDD");
    fields[30] = fieldE02MOVLYY =
    new DecimalField(message, HEADERSIZE + 266, 5, 0, "E02MOVLYY");
    fields[31] = fieldE02MOVLMU =
    new CharacterField(message, HEADERSIZE + 271, 10, "E02MOVLMU");
    fields[32] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 281, 8, 0, "E02NUMREC");
    fields[33] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 289, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02MOVBNK using a String value.
  */
  public void setE02MOVBNK(String newvalue)
  {
    fieldE02MOVBNK.setString(newvalue);
  }

  /**
  * Get value of field E02MOVBNK as a String.
  */
  public String getE02MOVBNK()
  {
    return fieldE02MOVBNK.getString();
  }

  /**
  * Set field E02MOVCCY using a String value.
  */
  public void setE02MOVCCY(String newvalue)
  {
    fieldE02MOVCCY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVCCY as a String.
  */
  public String getE02MOVCCY()
  {
    return fieldE02MOVCCY.getString();
  }

  /**
  * Set field E02MOVTID using a String value.
  */
  public void setE02MOVTID(String newvalue)
  {
    fieldE02MOVTID.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTID as a String.
  */
  public String getE02MOVTID()
  {
    return fieldE02MOVTID.getString();
  }

  /**
  * Set field E02MOVTYR using a String value.
  */
  public void setE02MOVTYR(String newvalue)
  {
    fieldE02MOVTYR.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTYR as a String.
  */
  public String getE02MOVTYR()
  {
    return fieldE02MOVTYR.getString();
  }

  /**
  * Set field D02MOVTYR using a String value.
  */
  public void setD02MOVTYR(String newvalue)
  {
    fieldD02MOVTYR.setString(newvalue);
  }

  /**
  * Get value of field D02MOVTYR as a String.
  */
  public String getD02MOVTYR()
  {
    return fieldD02MOVTYR.getString();
  }

  /**
  * Set field E02MOVTMM using a String value.
  */
  public void setE02MOVTMM(String newvalue)
  {
    fieldE02MOVTMM.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTMM as a String.
  */
  public String getE02MOVTMM()
  {
    return fieldE02MOVTMM.getString();
  }

  /**
  * Set numeric field E02MOVTMM using a BigDecimal value.
  */
  public void setE02MOVTMM(BigDecimal newvalue)
  {
    fieldE02MOVTMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVTMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVTMM()
  {
    return fieldE02MOVTMM.getBigDecimal();
  }

  /**
  * Set field E02MOVTDD using a String value.
  */
  public void setE02MOVTDD(String newvalue)
  {
    fieldE02MOVTDD.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTDD as a String.
  */
  public String getE02MOVTDD()
  {
    return fieldE02MOVTDD.getString();
  }

  /**
  * Set numeric field E02MOVTDD using a BigDecimal value.
  */
  public void setE02MOVTDD(BigDecimal newvalue)
  {
    fieldE02MOVTDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVTDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVTDD()
  {
    return fieldE02MOVTDD.getBigDecimal();
  }

  /**
  * Set field E02MOVTYY using a String value.
  */
  public void setE02MOVTYY(String newvalue)
  {
    fieldE02MOVTYY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTYY as a String.
  */
  public String getE02MOVTYY()
  {
    return fieldE02MOVTYY.getString();
  }

  /**
  * Set numeric field E02MOVTYY using a BigDecimal value.
  */
  public void setE02MOVTYY(BigDecimal newvalue)
  {
    fieldE02MOVTYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVTYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVTYY()
  {
    return fieldE02MOVTYY.getBigDecimal();
  }

  /**
  * Set field E02MOVTIM using a String value.
  */
  public void setE02MOVTIM(String newvalue)
  {
    fieldE02MOVTIM.setString(newvalue);
  }

  /**
  * Get value of field E02MOVTIM as a String.
  */
  public String getE02MOVTIM()
  {
    return fieldE02MOVTIM.getString();
  }

  /**
  * Set numeric field E02MOVTIM using a BigDecimal value.
  */
  public void setE02MOVTIM(BigDecimal newvalue)
  {
    fieldE02MOVTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVTIM()
  {
    return fieldE02MOVTIM.getBigDecimal();
  }

  /**
  * Set field E02MOVBTY using a String value.
  */
  public void setE02MOVBTY(String newvalue)
  {
    fieldE02MOVBTY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVBTY as a String.
  */
  public String getE02MOVBTY()
  {
    return fieldE02MOVBTY.getString();
  }

  /**
  * Set field D02MOVBTY using a String value.
  */
  public void setD02MOVBTY(String newvalue)
  {
    fieldD02MOVBTY.setString(newvalue);
  }

  /**
  * Get value of field D02MOVBTY as a String.
  */
  public String getD02MOVBTY()
  {
    return fieldD02MOVBTY.getString();
  }

  /**
  * Set field E02MOVBAN using a String value.
  */
  public void setE02MOVBAN(String newvalue)
  {
    fieldE02MOVBAN.setString(newvalue);
  }

  /**
  * Get value of field E02MOVBAN as a String.
  */
  public String getE02MOVBAN()
  {
    return fieldE02MOVBAN.getString();
  }

  /**
  * Set numeric field E02MOVBAN using a BigDecimal value.
  */
  public void setE02MOVBAN(BigDecimal newvalue)
  {
    fieldE02MOVBAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVBAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVBAN()
  {
    return fieldE02MOVBAN.getBigDecimal();
  }

  /**
  * Set field E02MOVDEN using a String value.
  */
  public void setE02MOVDEN(String newvalue)
  {
    fieldE02MOVDEN.setString(newvalue);
  }

  /**
  * Get value of field E02MOVDEN as a String.
  */
  public String getE02MOVDEN()
  {
    return fieldE02MOVDEN.getString();
  }

  /**
  * Set numeric field E02MOVDEN using a BigDecimal value.
  */
  public void setE02MOVDEN(BigDecimal newvalue)
  {
    fieldE02MOVDEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVDEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVDEN()
  {
    return fieldE02MOVDEN.getBigDecimal();
  }

  /**
  * Set field E02MOVQTY using a String value.
  */
  public void setE02MOVQTY(String newvalue)
  {
    fieldE02MOVQTY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVQTY as a String.
  */
  public String getE02MOVQTY()
  {
    return fieldE02MOVQTY.getString();
  }

  /**
  * Set numeric field E02MOVQTY using a BigDecimal value.
  */
  public void setE02MOVQTY(BigDecimal newvalue)
  {
    fieldE02MOVQTY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVQTY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVQTY()
  {
    return fieldE02MOVQTY.getBigDecimal();
  }

  /**
  * Set field E02MOVVRA using a String value.
  */
  public void setE02MOVVRA(String newvalue)
  {
    fieldE02MOVVRA.setString(newvalue);
  }

  /**
  * Get value of field E02MOVVRA as a String.
  */
  public String getE02MOVVRA()
  {
    return fieldE02MOVVRA.getString();
  }

  /**
  * Set numeric field E02MOVVRA using a BigDecimal value.
  */
  public void setE02MOVVRA(BigDecimal newvalue)
  {
    fieldE02MOVVRA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVVRA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVVRA()
  {
    return fieldE02MOVVRA.getBigDecimal();
  }

  /**
  * Set field E02MOVCMM using a String value.
  */
  public void setE02MOVCMM(String newvalue)
  {
    fieldE02MOVCMM.setString(newvalue);
  }

  /**
  * Get value of field E02MOVCMM as a String.
  */
  public String getE02MOVCMM()
  {
    return fieldE02MOVCMM.getString();
  }

  /**
  * Set numeric field E02MOVCMM using a BigDecimal value.
  */
  public void setE02MOVCMM(BigDecimal newvalue)
  {
    fieldE02MOVCMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVCMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVCMM()
  {
    return fieldE02MOVCMM.getBigDecimal();
  }

  /**
  * Set field E02MOVCDD using a String value.
  */
  public void setE02MOVCDD(String newvalue)
  {
    fieldE02MOVCDD.setString(newvalue);
  }

  /**
  * Get value of field E02MOVCDD as a String.
  */
  public String getE02MOVCDD()
  {
    return fieldE02MOVCDD.getString();
  }

  /**
  * Set numeric field E02MOVCDD using a BigDecimal value.
  */
  public void setE02MOVCDD(BigDecimal newvalue)
  {
    fieldE02MOVCDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVCDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVCDD()
  {
    return fieldE02MOVCDD.getBigDecimal();
  }

  /**
  * Set field E02MOVCYY using a String value.
  */
  public void setE02MOVCYY(String newvalue)
  {
    fieldE02MOVCYY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVCYY as a String.
  */
  public String getE02MOVCYY()
  {
    return fieldE02MOVCYY.getString();
  }

  /**
  * Set numeric field E02MOVCYY using a BigDecimal value.
  */
  public void setE02MOVCYY(BigDecimal newvalue)
  {
    fieldE02MOVCYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVCYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVCYY()
  {
    return fieldE02MOVCYY.getBigDecimal();
  }

  /**
  * Set field E02MOVCMU using a String value.
  */
  public void setE02MOVCMU(String newvalue)
  {
    fieldE02MOVCMU.setString(newvalue);
  }

  /**
  * Get value of field E02MOVCMU as a String.
  */
  public String getE02MOVCMU()
  {
    return fieldE02MOVCMU.getString();
  }

  /**
  * Set field E02MOVLMM using a String value.
  */
  public void setE02MOVLMM(String newvalue)
  {
    fieldE02MOVLMM.setString(newvalue);
  }

  /**
  * Get value of field E02MOVLMM as a String.
  */
  public String getE02MOVLMM()
  {
    return fieldE02MOVLMM.getString();
  }

  /**
  * Set numeric field E02MOVLMM using a BigDecimal value.
  */
  public void setE02MOVLMM(BigDecimal newvalue)
  {
    fieldE02MOVLMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVLMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVLMM()
  {
    return fieldE02MOVLMM.getBigDecimal();
  }

  /**
  * Set field E02MOVLDD using a String value.
  */
  public void setE02MOVLDD(String newvalue)
  {
    fieldE02MOVLDD.setString(newvalue);
  }

  /**
  * Get value of field E02MOVLDD as a String.
  */
  public String getE02MOVLDD()
  {
    return fieldE02MOVLDD.getString();
  }

  /**
  * Set numeric field E02MOVLDD using a BigDecimal value.
  */
  public void setE02MOVLDD(BigDecimal newvalue)
  {
    fieldE02MOVLDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVLDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVLDD()
  {
    return fieldE02MOVLDD.getBigDecimal();
  }

  /**
  * Set field E02MOVLYY using a String value.
  */
  public void setE02MOVLYY(String newvalue)
  {
    fieldE02MOVLYY.setString(newvalue);
  }

  /**
  * Get value of field E02MOVLYY as a String.
  */
  public String getE02MOVLYY()
  {
    return fieldE02MOVLYY.getString();
  }

  /**
  * Set numeric field E02MOVLYY using a BigDecimal value.
  */
  public void setE02MOVLYY(BigDecimal newvalue)
  {
    fieldE02MOVLYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02MOVLYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02MOVLYY()
  {
    return fieldE02MOVLYY.getBigDecimal();
  }

  /**
  * Set field E02MOVLMU using a String value.
  */
  public void setE02MOVLMU(String newvalue)
  {
    fieldE02MOVLMU.setString(newvalue);
  }

  /**
  * Get value of field E02MOVLMU as a String.
  */
  public String getE02MOVLMU()
  {
    return fieldE02MOVLMU.getString();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
