package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA009004 physical file definition.
* 
* File level identifier is 1151016132627.
* Record format level identifier is 3C68CBC24C6B4.
*/

public class ERA009004Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "E04CODFIL",
                                     "E04NOMFIL",
                                     "E04ROCCUN",
                                     "E04CUSNA1",
                                     "E04RW2ACC",
                                     "E04RW2REF",
                                     "E04RW2CUN",
                                     "E04RW2TID",
                                     "E04RW2IDN",
                                     "D04RW2NM1",
                                     "E04NUMREG",
                                     "E04OPECDE"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "E04CODFIL",
                                   "E04NOMFIL",
                                   "E04ROCCUN",
                                   "E04CUSNA1",
                                   "E04RW2ACC",
                                   "E04RW2REF",
                                   "E04RW2CUN",
                                   "E04RW2TID",
                                   "E04RW2IDN",
                                   "D04RW2NM1",
                                   "E04NUMREG",
                                   "E04OPECDE"
                                 };
  final static String fid = "1151016132627";
  final static String rid = "3C68CBC24C6B4";
  final static String fmtname = "ERA009004";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private CharacterField fieldE04CODFIL = null;
  private CharacterField fieldE04NOMFIL = null;
  private DecimalField fieldE04ROCCUN = null;
  private CharacterField fieldE04CUSNA1 = null;
  private CharacterField fieldE04RW2ACC = null;
  private DecimalField fieldE04RW2REF = null;
  private CharacterField fieldE04RW2CUN = null;
  private CharacterField fieldE04RW2TID = null;
  private DecimalField fieldE04RW2IDN = null;
  private CharacterField fieldD04RW2NM1 = null;
  private DecimalField fieldE04NUMREG = null;
  private CharacterField fieldE04OPECDE = null;

  /**
  * Constructor for ERA009004Message.
  */
  public ERA009004Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 328;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldE04CODFIL =
    new CharacterField(message, HEADERSIZE + 42, 10, "E04CODFIL");
    fields[10] = fieldE04NOMFIL =
    new CharacterField(message, HEADERSIZE + 52, 60, "E04NOMFIL");
    fields[11] = fieldE04ROCCUN =
    new DecimalField(message, HEADERSIZE + 112, 10, 0, "E04ROCCUN");
    fields[12] = fieldE04CUSNA1 =
    new CharacterField(message, HEADERSIZE + 122, 60, "E04CUSNA1");
    fields[13] = fieldE04RW2ACC =
    new CharacterField(message, HEADERSIZE + 182, 20, "E04RW2ACC");
    fields[14] = fieldE04RW2REF =
    new DecimalField(message, HEADERSIZE + 202, 21, 0, "E04RW2REF");
    fields[15] = fieldE04RW2CUN =
    new CharacterField(message, HEADERSIZE + 223, 12, "E04RW2CUN");
    fields[16] = fieldE04RW2TID =
    new CharacterField(message, HEADERSIZE + 235, 10, "E04RW2TID");
    fields[17] = fieldE04RW2IDN =
    new DecimalField(message, HEADERSIZE + 245, 15, 0, "E04RW2IDN");
    fields[18] = fieldD04RW2NM1 =
    new CharacterField(message, HEADERSIZE + 260, 60, "D04RW2NM1");
    fields[19] = fieldE04NUMREG =
    new DecimalField(message, HEADERSIZE + 320, 7, 0, "E04NUMREG");
    fields[20] = fieldE04OPECDE =
    new CharacterField(message, HEADERSIZE + 327, 1, "E04OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field E04CODFIL using a String value.
  */
  public void setE04CODFIL(String newvalue)
  {
    fieldE04CODFIL.setString(newvalue);
  }

  /**
  * Get value of field E04CODFIL as a String.
  */
  public String getE04CODFIL()
  {
    return fieldE04CODFIL.getString();
  }

  /**
  * Set field E04NOMFIL using a String value.
  */
  public void setE04NOMFIL(String newvalue)
  {
    fieldE04NOMFIL.setString(newvalue);
  }

  /**
  * Get value of field E04NOMFIL as a String.
  */
  public String getE04NOMFIL()
  {
    return fieldE04NOMFIL.getString();
  }

  /**
  * Set field E04ROCCUN using a String value.
  */
  public void setE04ROCCUN(String newvalue)
  {
    fieldE04ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCCUN as a String.
  */
  public String getE04ROCCUN()
  {
    return fieldE04ROCCUN.getString();
  }

  /**
  * Set numeric field E04ROCCUN using a BigDecimal value.
  */
  public void setE04ROCCUN(BigDecimal newvalue)
  {
    fieldE04ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCCUN()
  {
    return fieldE04ROCCUN.getBigDecimal();
  }

  /**
  * Set field E04CUSNA1 using a String value.
  */
  public void setE04CUSNA1(String newvalue)
  {
    fieldE04CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E04CUSNA1 as a String.
  */
  public String getE04CUSNA1()
  {
    return fieldE04CUSNA1.getString();
  }

  /**
  * Set field E04RW2ACC using a String value.
  */
  public void setE04RW2ACC(String newvalue)
  {
    fieldE04RW2ACC.setString(newvalue);
  }

  /**
  * Get value of field E04RW2ACC as a String.
  */
  public String getE04RW2ACC()
  {
    return fieldE04RW2ACC.getString();
  }

  /**
  * Set field E04RW2REF using a String value.
  */
  public void setE04RW2REF(String newvalue)
  {
    fieldE04RW2REF.setString(newvalue);
  }

  /**
  * Get value of field E04RW2REF as a String.
  */
  public String getE04RW2REF()
  {
    return fieldE04RW2REF.getString();
  }

  /**
  * Set numeric field E04RW2REF using a BigDecimal value.
  */
  public void setE04RW2REF(BigDecimal newvalue)
  {
    fieldE04RW2REF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04RW2REF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04RW2REF()
  {
    return fieldE04RW2REF.getBigDecimal();
  }

  /**
  * Set field E04RW2CUN using a String value.
  */
  public void setE04RW2CUN(String newvalue)
  {
    fieldE04RW2CUN.setString(newvalue);
  }

  /**
  * Get value of field E04RW2CUN as a String.
  */
  public String getE04RW2CUN()
  {
    return fieldE04RW2CUN.getString();
  }

  /**
  * Set field E04RW2TID using a String value.
  */
  public void setE04RW2TID(String newvalue)
  {
    fieldE04RW2TID.setString(newvalue);
  }

  /**
  * Get value of field E04RW2TID as a String.
  */
  public String getE04RW2TID()
  {
    return fieldE04RW2TID.getString();
  }

  /**
  * Set field E04RW2IDN using a String value.
  */
  public void setE04RW2IDN(String newvalue)
  {
    fieldE04RW2IDN.setString(newvalue);
  }

  /**
  * Get value of field E04RW2IDN as a String.
  */
  public String getE04RW2IDN()
  {
    return fieldE04RW2IDN.getString();
  }

  /**
  * Set numeric field E04RW2IDN using a BigDecimal value.
  */
  public void setE04RW2IDN(BigDecimal newvalue)
  {
    fieldE04RW2IDN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04RW2IDN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04RW2IDN()
  {
    return fieldE04RW2IDN.getBigDecimal();
  }

  /**
  * Set field D04RW2NM1 using a String value.
  */
  public void setD04RW2NM1(String newvalue)
  {
    fieldD04RW2NM1.setString(newvalue);
  }

  /**
  * Get value of field D04RW2NM1 as a String.
  */
  public String getD04RW2NM1()
  {
    return fieldD04RW2NM1.getString();
  }

  /**
  * Set field E04NUMREG using a String value.
  */
  public void setE04NUMREG(String newvalue)
  {
    fieldE04NUMREG.setString(newvalue);
  }

  /**
  * Get value of field E04NUMREG as a String.
  */
  public String getE04NUMREG()
  {
    return fieldE04NUMREG.getString();
  }

  /**
  * Set numeric field E04NUMREG using a BigDecimal value.
  */
  public void setE04NUMREG(BigDecimal newvalue)
  {
    fieldE04NUMREG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04NUMREG as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04NUMREG()
  {
    return fieldE04NUMREG.getBigDecimal();
  }

  /**
  * Set field E04OPECDE using a String value.
  */
  public void setE04OPECDE(String newvalue)
  {
    fieldE04OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E04OPECDE as a String.
  */
  public String getE04OPECDE()
  {
    return fieldE04OPECDE.getString();
  }

}
