package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0060DS physical file definition.
* 
* File level identifier is 1131025112238.
* Record format level identifier is 4BD63302BD5A7.
*/

public class EWD0060DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDSTY",
                                     "EWDSBK",
                                     "EWDSCY",
                                     "EWDSSH",
                                     "EWDSST",
                                     "EWDCKN",
                                     "EWDBNF",
                                     "EWDAPL",
                                     "EWDDS1",
                                     "EWDDS2",
                                     "EWDBID",
                                     "EWDAID",
                                     "EWDCKM",
                                     "EWDCKD",
                                     "EWDCKY",
                                     "EWDAMT",
                                     "EWDREC",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDSTY",
                                   "EWDSBK",
                                   "EWDSCY",
                                   "EWDSSH",
                                   "EWDSST",
                                   "EWDCKN",
                                   "EWDBNF",
                                   "EWDAPL",
                                   "EWDDS1",
                                   "EWDDS2",
                                   "EWDBID",
                                   "EWDAID",
                                   "EWDCKM",
                                   "EWDCKD",
                                   "EWDCKY",
                                   "EWDAMT",
                                   "EWDREC",
                                   "EWDOPE"
                                 };
  final static String fid = "1131025112238";
  final static String rid = "4BD63302BD5A7";
  final static String fmtname = "EWD0060DS";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDSTY = null;
  private CharacterField fieldEWDSBK = null;
  private CharacterField fieldEWDSCY = null;
  private CharacterField fieldEWDSSH = null;
  private CharacterField fieldEWDSST = null;
  private DecimalField fieldEWDCKN = null;
  private CharacterField fieldEWDBNF = null;
  private CharacterField fieldEWDAPL = null;
  private CharacterField fieldEWDDS1 = null;
  private CharacterField fieldEWDDS2 = null;
  private CharacterField fieldEWDBID = null;
  private CharacterField fieldEWDAID = null;
  private DecimalField fieldEWDCKM = null;
  private DecimalField fieldEWDCKD = null;
  private DecimalField fieldEWDCKY = null;
  private DecimalField fieldEWDAMT = null;
  private DecimalField fieldEWDREC = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0060DSMessage.
  */
  public EWD0060DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 371;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDSTY =
    new CharacterField(message, HEADERSIZE + 0, 1, "EWDSTY");
    fields[1] = fieldEWDSBK =
    new CharacterField(message, HEADERSIZE + 1, 2, "EWDSBK");
    fields[2] = fieldEWDSCY =
    new CharacterField(message, HEADERSIZE + 3, 3, "EWDSCY");
    fields[3] = fieldEWDSSH =
    new CharacterField(message, HEADERSIZE + 6, 25, "EWDSSH");
    fields[4] = fieldEWDSST =
    new CharacterField(message, HEADERSIZE + 31, 1, "EWDSST");
    fields[5] = fieldEWDCKN =
    new DecimalField(message, HEADERSIZE + 32, 12, 0, "EWDCKN");
    fields[6] = fieldEWDBNF =
    new CharacterField(message, HEADERSIZE + 44, 60, "EWDBNF");
    fields[7] = fieldEWDAPL =
    new CharacterField(message, HEADERSIZE + 104, 60, "EWDAPL");
    fields[8] = fieldEWDDS1 =
    new CharacterField(message, HEADERSIZE + 164, 60, "EWDDS1");
    fields[9] = fieldEWDDS2 =
    new CharacterField(message, HEADERSIZE + 224, 60, "EWDDS2");
    fields[10] = fieldEWDBID =
    new CharacterField(message, HEADERSIZE + 284, 25, "EWDBID");
    fields[11] = fieldEWDAID =
    new CharacterField(message, HEADERSIZE + 309, 25, "EWDAID");
    fields[12] = fieldEWDCKM =
    new DecimalField(message, HEADERSIZE + 334, 3, 0, "EWDCKM");
    fields[13] = fieldEWDCKD =
    new DecimalField(message, HEADERSIZE + 337, 3, 0, "EWDCKD");
    fields[14] = fieldEWDCKY =
    new DecimalField(message, HEADERSIZE + 340, 5, 0, "EWDCKY");
    fields[15] = fieldEWDAMT =
    new DecimalField(message, HEADERSIZE + 345, 17, 2, "EWDAMT");
    fields[16] = fieldEWDREC =
    new DecimalField(message, HEADERSIZE + 362, 8, 0, "EWDREC");
    fields[17] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 370, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDSTY using a String value.
  */
  public void setEWDSTY(String newvalue)
  {
    fieldEWDSTY.setString(newvalue);
  }

  /**
  * Get value of field EWDSTY as a String.
  */
  public String getEWDSTY()
  {
    return fieldEWDSTY.getString();
  }

  /**
  * Set field EWDSBK using a String value.
  */
  public void setEWDSBK(String newvalue)
  {
    fieldEWDSBK.setString(newvalue);
  }

  /**
  * Get value of field EWDSBK as a String.
  */
  public String getEWDSBK()
  {
    return fieldEWDSBK.getString();
  }

  /**
  * Set field EWDSCY using a String value.
  */
  public void setEWDSCY(String newvalue)
  {
    fieldEWDSCY.setString(newvalue);
  }

  /**
  * Get value of field EWDSCY as a String.
  */
  public String getEWDSCY()
  {
    return fieldEWDSCY.getString();
  }

  /**
  * Set field EWDSSH using a String value.
  */
  public void setEWDSSH(String newvalue)
  {
    fieldEWDSSH.setString(newvalue);
  }

  /**
  * Get value of field EWDSSH as a String.
  */
  public String getEWDSSH()
  {
    return fieldEWDSSH.getString();
  }

  /**
  * Set field EWDSST using a String value.
  */
  public void setEWDSST(String newvalue)
  {
    fieldEWDSST.setString(newvalue);
  }

  /**
  * Get value of field EWDSST as a String.
  */
  public String getEWDSST()
  {
    return fieldEWDSST.getString();
  }

  /**
  * Set field EWDCKN using a String value.
  */
  public void setEWDCKN(String newvalue)
  {
    fieldEWDCKN.setString(newvalue);
  }

  /**
  * Get value of field EWDCKN as a String.
  */
  public String getEWDCKN()
  {
    return fieldEWDCKN.getString();
  }

  /**
  * Set numeric field EWDCKN using a BigDecimal value.
  */
  public void setEWDCKN(BigDecimal newvalue)
  {
    fieldEWDCKN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCKN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCKN()
  {
    return fieldEWDCKN.getBigDecimal();
  }

  /**
  * Set field EWDBNF using a String value.
  */
  public void setEWDBNF(String newvalue)
  {
    fieldEWDBNF.setString(newvalue);
  }

  /**
  * Get value of field EWDBNF as a String.
  */
  public String getEWDBNF()
  {
    return fieldEWDBNF.getString();
  }

  /**
  * Set field EWDAPL using a String value.
  */
  public void setEWDAPL(String newvalue)
  {
    fieldEWDAPL.setString(newvalue);
  }

  /**
  * Get value of field EWDAPL as a String.
  */
  public String getEWDAPL()
  {
    return fieldEWDAPL.getString();
  }

  /**
  * Set field EWDDS1 using a String value.
  */
  public void setEWDDS1(String newvalue)
  {
    fieldEWDDS1.setString(newvalue);
  }

  /**
  * Get value of field EWDDS1 as a String.
  */
  public String getEWDDS1()
  {
    return fieldEWDDS1.getString();
  }

  /**
  * Set field EWDDS2 using a String value.
  */
  public void setEWDDS2(String newvalue)
  {
    fieldEWDDS2.setString(newvalue);
  }

  /**
  * Get value of field EWDDS2 as a String.
  */
  public String getEWDDS2()
  {
    return fieldEWDDS2.getString();
  }

  /**
  * Set field EWDBID using a String value.
  */
  public void setEWDBID(String newvalue)
  {
    fieldEWDBID.setString(newvalue);
  }

  /**
  * Get value of field EWDBID as a String.
  */
  public String getEWDBID()
  {
    return fieldEWDBID.getString();
  }

  /**
  * Set field EWDAID using a String value.
  */
  public void setEWDAID(String newvalue)
  {
    fieldEWDAID.setString(newvalue);
  }

  /**
  * Get value of field EWDAID as a String.
  */
  public String getEWDAID()
  {
    return fieldEWDAID.getString();
  }

  /**
  * Set field EWDCKM using a String value.
  */
  public void setEWDCKM(String newvalue)
  {
    fieldEWDCKM.setString(newvalue);
  }

  /**
  * Get value of field EWDCKM as a String.
  */
  public String getEWDCKM()
  {
    return fieldEWDCKM.getString();
  }

  /**
  * Set numeric field EWDCKM using a BigDecimal value.
  */
  public void setEWDCKM(BigDecimal newvalue)
  {
    fieldEWDCKM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCKM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCKM()
  {
    return fieldEWDCKM.getBigDecimal();
  }

  /**
  * Set field EWDCKD using a String value.
  */
  public void setEWDCKD(String newvalue)
  {
    fieldEWDCKD.setString(newvalue);
  }

  /**
  * Get value of field EWDCKD as a String.
  */
  public String getEWDCKD()
  {
    return fieldEWDCKD.getString();
  }

  /**
  * Set numeric field EWDCKD using a BigDecimal value.
  */
  public void setEWDCKD(BigDecimal newvalue)
  {
    fieldEWDCKD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCKD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCKD()
  {
    return fieldEWDCKD.getBigDecimal();
  }

  /**
  * Set field EWDCKY using a String value.
  */
  public void setEWDCKY(String newvalue)
  {
    fieldEWDCKY.setString(newvalue);
  }

  /**
  * Get value of field EWDCKY as a String.
  */
  public String getEWDCKY()
  {
    return fieldEWDCKY.getString();
  }

  /**
  * Set numeric field EWDCKY using a BigDecimal value.
  */
  public void setEWDCKY(BigDecimal newvalue)
  {
    fieldEWDCKY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCKY as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCKY()
  {
    return fieldEWDCKY.getBigDecimal();
  }

  /**
  * Set field EWDAMT using a String value.
  */
  public void setEWDAMT(String newvalue)
  {
    fieldEWDAMT.setString(newvalue);
  }

  /**
  * Get value of field EWDAMT as a String.
  */
  public String getEWDAMT()
  {
    return fieldEWDAMT.getString();
  }

  /**
  * Set numeric field EWDAMT using a BigDecimal value.
  */
  public void setEWDAMT(BigDecimal newvalue)
  {
    fieldEWDAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDAMT()
  {
    return fieldEWDAMT.getBigDecimal();
  }

  /**
  * Set field EWDREC using a String value.
  */
  public void setEWDREC(String newvalue)
  {
    fieldEWDREC.setString(newvalue);
  }

  /**
  * Get value of field EWDREC as a String.
  */
  public String getEWDREC()
  {
    return fieldEWDREC.getString();
  }

  /**
  * Set numeric field EWDREC using a BigDecimal value.
  */
  public void setEWDREC(BigDecimal newvalue)
  {
    fieldEWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDREC()
  {
    return fieldEWDREC.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
