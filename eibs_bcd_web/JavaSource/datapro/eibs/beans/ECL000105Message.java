package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL000105 physical file definition.
* 
* File level identifier is 1100706173536.
* Record format level identifier is 4EDB214E6F682.
*/

public class ECL000105Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "CNOCFL",
                                     "CNORCD",
                                     "CNODSC",
                                     "CNOFRP",
                                     "CNOCHG",
                                     "CNODCC",
                                     "CNOPAF",
                                     "CNOADI",
                                     "CNOAPC",
                                     "CNOCPF",
                                     "CNOF01",
                                     "CNODCB",
                                     "CNOSCG",
                                     "CNOMID",
                                     "CNOMIC",
                                     "CNOF02",
                                     "CNOCPC",
                                     "CNOTCF",
                                     "CNOMXC",
                                     "CNOMNC",
                                     "CNOIVA",
                                     "CNOCST",
                                     "CNOF03",
                                     "CNOACD",
                                     "CNOACS",
                                     "CNOF04"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "CNOCFL",
                                   "CNORCD",
                                   "CNODSC",
                                   "CNOFRP",
                                   "CNOCHG",
                                   "CNODCC",
                                   "CNOPAF",
                                   "CNOADI",
                                   "CNOAPC",
                                   "CNOCPF",
                                   "CNOF01",
                                   "CNODCB",
                                   "CNOSCG",
                                   "CNOMID",
                                   "CNOMIC",
                                   "CNOF02",
                                   "CNOCPC",
                                   "CNOTCF",
                                   "CNOMXC",
                                   "CNOMNC",
                                   "CNOIVA",
                                   "CNOCST",
                                   "CNOF03",
                                   "CNOACD",
                                   "CNOACS",
                                   "CNOF04"
                                 };
  final static String fid = "1100706173536";
  final static String rid = "4EDB214E6F682";
  final static String fmtname = "ECL000105";
  final int FIELDCOUNT = 35;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldCNOCFL = null;
  private CharacterField fieldCNORCD = null;
  private CharacterField fieldCNODSC = null;
  private DecimalField fieldCNOFRP = null;
  private DecimalField fieldCNOCHG = null;
  private CharacterField fieldCNODCC = null;
  private CharacterField fieldCNOPAF = null;
  private CharacterField fieldCNOADI = null;
  private CharacterField fieldCNOAPC = null;
  private CharacterField fieldCNOCPF = null;
  private CharacterField fieldCNOF01 = null;
  private CharacterField fieldCNODCB = null;
  private DecimalField fieldCNOSCG = null;
  private CharacterField fieldCNOMID = null;
  private CharacterField fieldCNOMIC = null;
  private CharacterField fieldCNOF02 = null;
  private CharacterField fieldCNOCPC = null;
  private CharacterField fieldCNOTCF = null;
  private DecimalField fieldCNOMXC = null;
  private DecimalField fieldCNOMNC = null;
  private CharacterField fieldCNOIVA = null;
  private DecimalField fieldCNOCST = null;
  private CharacterField fieldCNOF03 = null;
  private CharacterField fieldCNOACD = null;
  private DecimalField fieldCNOACS = null;
  private CharacterField fieldCNOF04 = null;

  /**
  * Constructor for ECL000105Message.
  */
  public ECL000105Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 202;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldCNOCFL =
    new CharacterField(message, HEADERSIZE + 42, 2, "CNOCFL");
    fields[10] = fieldCNORCD =
    new CharacterField(message, HEADERSIZE + 44, 4, "CNORCD");
    fields[11] = fieldCNODSC =
    new CharacterField(message, HEADERSIZE + 48, 35, "CNODSC");
    fields[12] = fieldCNOFRP =
    new DecimalField(message, HEADERSIZE + 83, 6, 0, "CNOFRP");
    fields[13] = fieldCNOCHG =
    new DecimalField(message, HEADERSIZE + 89, 15, 2, "CNOCHG");
    fields[14] = fieldCNODCC =
    new CharacterField(message, HEADERSIZE + 104, 2, "CNODCC");
    fields[15] = fieldCNOPAF =
    new CharacterField(message, HEADERSIZE + 106, 1, "CNOPAF");
    fields[16] = fieldCNOADI =
    new CharacterField(message, HEADERSIZE + 107, 1, "CNOADI");
    fields[17] = fieldCNOAPC =
    new CharacterField(message, HEADERSIZE + 108, 1, "CNOAPC");
    fields[18] = fieldCNOCPF =
    new CharacterField(message, HEADERSIZE + 109, 1, "CNOCPF");
    fields[19] = fieldCNOF01 =
    new CharacterField(message, HEADERSIZE + 110, 1, "CNOF01");
    fields[20] = fieldCNODCB =
    new CharacterField(message, HEADERSIZE + 111, 1, "CNODCB");
    fields[21] = fieldCNOSCG =
    new DecimalField(message, HEADERSIZE + 112, 17, 0, "CNOSCG");
    fields[22] = fieldCNOMID =
    new CharacterField(message, HEADERSIZE + 129, 6, "CNOMID");
    fields[23] = fieldCNOMIC =
    new CharacterField(message, HEADERSIZE + 135, 6, "CNOMIC");
    fields[24] = fieldCNOF02 =
    new CharacterField(message, HEADERSIZE + 141, 3, "CNOF02");
    fields[25] = fieldCNOCPC =
    new CharacterField(message, HEADERSIZE + 144, 4, "CNOCPC");
    fields[26] = fieldCNOTCF =
    new CharacterField(message, HEADERSIZE + 148, 1, "CNOTCF");
    fields[27] = fieldCNOMXC =
    new DecimalField(message, HEADERSIZE + 149, 15, 2, "CNOMXC");
    fields[28] = fieldCNOMNC =
    new DecimalField(message, HEADERSIZE + 164, 15, 2, "CNOMNC");
    fields[29] = fieldCNOIVA =
    new CharacterField(message, HEADERSIZE + 179, 1, "CNOIVA");
    fields[30] = fieldCNOCST =
    new DecimalField(message, HEADERSIZE + 180, 9, 3, "CNOCST");
    fields[31] = fieldCNOF03 =
    new CharacterField(message, HEADERSIZE + 189, 1, "CNOF03");
    fields[32] = fieldCNOACD =
    new CharacterField(message, HEADERSIZE + 190, 2, "CNOACD");
    fields[33] = fieldCNOACS =
    new DecimalField(message, HEADERSIZE + 192, 9, 3, "CNOACS");
    fields[34] = fieldCNOF04 =
    new CharacterField(message, HEADERSIZE + 201, 1, "CNOF04");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field CNOCFL using a String value.
  */
  public void setCNOCFL(String newvalue)
  {
    fieldCNOCFL.setString(newvalue);
  }

  /**
  * Get value of field CNOCFL as a String.
  */
  public String getCNOCFL()
  {
    return fieldCNOCFL.getString();
  }

  /**
  * Set field CNORCD using a String value.
  */
  public void setCNORCD(String newvalue)
  {
    fieldCNORCD.setString(newvalue);
  }

  /**
  * Get value of field CNORCD as a String.
  */
  public String getCNORCD()
  {
    return fieldCNORCD.getString();
  }

  /**
  * Set field CNODSC using a String value.
  */
  public void setCNODSC(String newvalue)
  {
    fieldCNODSC.setString(newvalue);
  }

  /**
  * Get value of field CNODSC as a String.
  */
  public String getCNODSC()
  {
    return fieldCNODSC.getString();
  }

  /**
  * Set field CNOFRP using a String value.
  */
  public void setCNOFRP(String newvalue)
  {
    fieldCNOFRP.setString(newvalue);
  }

  /**
  * Get value of field CNOFRP as a String.
  */
  public String getCNOFRP()
  {
    return fieldCNOFRP.getString();
  }

  /**
  * Set numeric field CNOFRP using a BigDecimal value.
  */
  public void setCNOFRP(BigDecimal newvalue)
  {
    fieldCNOFRP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOFRP as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOFRP()
  {
    return fieldCNOFRP.getBigDecimal();
  }

  /**
  * Set field CNOCHG using a String value.
  */
  public void setCNOCHG(String newvalue)
  {
    fieldCNOCHG.setString(newvalue);
  }

  /**
  * Get value of field CNOCHG as a String.
  */
  public String getCNOCHG()
  {
    return fieldCNOCHG.getString();
  }

  /**
  * Set numeric field CNOCHG using a BigDecimal value.
  */
  public void setCNOCHG(BigDecimal newvalue)
  {
    fieldCNOCHG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOCHG as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOCHG()
  {
    return fieldCNOCHG.getBigDecimal();
  }

  /**
  * Set field CNODCC using a String value.
  */
  public void setCNODCC(String newvalue)
  {
    fieldCNODCC.setString(newvalue);
  }

  /**
  * Get value of field CNODCC as a String.
  */
  public String getCNODCC()
  {
    return fieldCNODCC.getString();
  }

  /**
  * Set field CNOPAF using a String value.
  */
  public void setCNOPAF(String newvalue)
  {
    fieldCNOPAF.setString(newvalue);
  }

  /**
  * Get value of field CNOPAF as a String.
  */
  public String getCNOPAF()
  {
    return fieldCNOPAF.getString();
  }

  /**
  * Set field CNOADI using a String value.
  */
  public void setCNOADI(String newvalue)
  {
    fieldCNOADI.setString(newvalue);
  }

  /**
  * Get value of field CNOADI as a String.
  */
  public String getCNOADI()
  {
    return fieldCNOADI.getString();
  }

  /**
  * Set field CNOAPC using a String value.
  */
  public void setCNOAPC(String newvalue)
  {
    fieldCNOAPC.setString(newvalue);
  }

  /**
  * Get value of field CNOAPC as a String.
  */
  public String getCNOAPC()
  {
    return fieldCNOAPC.getString();
  }

  /**
  * Set field CNOCPF using a String value.
  */
  public void setCNOCPF(String newvalue)
  {
    fieldCNOCPF.setString(newvalue);
  }

  /**
  * Get value of field CNOCPF as a String.
  */
  public String getCNOCPF()
  {
    return fieldCNOCPF.getString();
  }

  /**
  * Set field CNOF01 using a String value.
  */
  public void setCNOF01(String newvalue)
  {
    fieldCNOF01.setString(newvalue);
  }

  /**
  * Get value of field CNOF01 as a String.
  */
  public String getCNOF01()
  {
    return fieldCNOF01.getString();
  }

  /**
  * Set field CNODCB using a String value.
  */
  public void setCNODCB(String newvalue)
  {
    fieldCNODCB.setString(newvalue);
  }

  /**
  * Get value of field CNODCB as a String.
  */
  public String getCNODCB()
  {
    return fieldCNODCB.getString();
  }

  /**
  * Set field CNOSCG using a String value.
  */
  public void setCNOSCG(String newvalue)
  {
    fieldCNOSCG.setString(newvalue);
  }

  /**
  * Get value of field CNOSCG as a String.
  */
  public String getCNOSCG()
  {
    return fieldCNOSCG.getString();
  }

  /**
  * Set numeric field CNOSCG using a BigDecimal value.
  */
  public void setCNOSCG(BigDecimal newvalue)
  {
    fieldCNOSCG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOSCG as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOSCG()
  {
    return fieldCNOSCG.getBigDecimal();
  }

  /**
  * Set field CNOMID using a String value.
  */
  public void setCNOMID(String newvalue)
  {
    fieldCNOMID.setString(newvalue);
  }

  /**
  * Get value of field CNOMID as a String.
  */
  public String getCNOMID()
  {
    return fieldCNOMID.getString();
  }

  /**
  * Set field CNOMIC using a String value.
  */
  public void setCNOMIC(String newvalue)
  {
    fieldCNOMIC.setString(newvalue);
  }

  /**
  * Get value of field CNOMIC as a String.
  */
  public String getCNOMIC()
  {
    return fieldCNOMIC.getString();
  }

  /**
  * Set field CNOF02 using a String value.
  */
  public void setCNOF02(String newvalue)
  {
    fieldCNOF02.setString(newvalue);
  }

  /**
  * Get value of field CNOF02 as a String.
  */
  public String getCNOF02()
  {
    return fieldCNOF02.getString();
  }

  /**
  * Set field CNOCPC using a String value.
  */
  public void setCNOCPC(String newvalue)
  {
    fieldCNOCPC.setString(newvalue);
  }

  /**
  * Get value of field CNOCPC as a String.
  */
  public String getCNOCPC()
  {
    return fieldCNOCPC.getString();
  }

  /**
  * Set field CNOTCF using a String value.
  */
  public void setCNOTCF(String newvalue)
  {
    fieldCNOTCF.setString(newvalue);
  }

  /**
  * Get value of field CNOTCF as a String.
  */
  public String getCNOTCF()
  {
    return fieldCNOTCF.getString();
  }

  /**
  * Set field CNOMXC using a String value.
  */
  public void setCNOMXC(String newvalue)
  {
    fieldCNOMXC.setString(newvalue);
  }

  /**
  * Get value of field CNOMXC as a String.
  */
  public String getCNOMXC()
  {
    return fieldCNOMXC.getString();
  }

  /**
  * Set numeric field CNOMXC using a BigDecimal value.
  */
  public void setCNOMXC(BigDecimal newvalue)
  {
    fieldCNOMXC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOMXC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOMXC()
  {
    return fieldCNOMXC.getBigDecimal();
  }

  /**
  * Set field CNOMNC using a String value.
  */
  public void setCNOMNC(String newvalue)
  {
    fieldCNOMNC.setString(newvalue);
  }

  /**
  * Get value of field CNOMNC as a String.
  */
  public String getCNOMNC()
  {
    return fieldCNOMNC.getString();
  }

  /**
  * Set numeric field CNOMNC using a BigDecimal value.
  */
  public void setCNOMNC(BigDecimal newvalue)
  {
    fieldCNOMNC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOMNC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOMNC()
  {
    return fieldCNOMNC.getBigDecimal();
  }

  /**
  * Set field CNOIVA using a String value.
  */
  public void setCNOIVA(String newvalue)
  {
    fieldCNOIVA.setString(newvalue);
  }

  /**
  * Get value of field CNOIVA as a String.
  */
  public String getCNOIVA()
  {
    return fieldCNOIVA.getString();
  }

  /**
  * Set field CNOCST using a String value.
  */
  public void setCNOCST(String newvalue)
  {
    fieldCNOCST.setString(newvalue);
  }

  /**
  * Get value of field CNOCST as a String.
  */
  public String getCNOCST()
  {
    return fieldCNOCST.getString();
  }

  /**
  * Set numeric field CNOCST using a BigDecimal value.
  */
  public void setCNOCST(BigDecimal newvalue)
  {
    fieldCNOCST.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOCST as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOCST()
  {
    return fieldCNOCST.getBigDecimal();
  }

  /**
  * Set field CNOF03 using a String value.
  */
  public void setCNOF03(String newvalue)
  {
    fieldCNOF03.setString(newvalue);
  }

  /**
  * Get value of field CNOF03 as a String.
  */
  public String getCNOF03()
  {
    return fieldCNOF03.getString();
  }

  /**
  * Set field CNOACD using a String value.
  */
  public void setCNOACD(String newvalue)
  {
    fieldCNOACD.setString(newvalue);
  }

  /**
  * Get value of field CNOACD as a String.
  */
  public String getCNOACD()
  {
    return fieldCNOACD.getString();
  }

  /**
  * Set field CNOACS using a String value.
  */
  public void setCNOACS(String newvalue)
  {
    fieldCNOACS.setString(newvalue);
  }

  /**
  * Get value of field CNOACS as a String.
  */
  public String getCNOACS()
  {
    return fieldCNOACS.getString();
  }

  /**
  * Set numeric field CNOACS using a BigDecimal value.
  */
  public void setCNOACS(BigDecimal newvalue)
  {
    fieldCNOACS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CNOACS as a BigDecimal.
  */
  public BigDecimal getBigDecimalCNOACS()
  {
    return fieldCNOACS.getBigDecimal();
  }

  /**
  * Set field CNOF04 using a String value.
  */
  public void setCNOF04(String newvalue)
  {
    fieldCNOF04.setString(newvalue);
  }

  /**
  * Get value of field CNOF04 as a String.
  */
  public String getCNOF04()
  {
    return fieldCNOF04.getString();
  }

}
