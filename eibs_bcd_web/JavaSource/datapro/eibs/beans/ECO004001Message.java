package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECO004001 physical file definition.
* 
* File level identifier is 1140617171148.
* Record format level identifier is 33C39A867B295.
*/

public class ECO004001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CCNCUN",
                                     "E01CCNCOD",
                                     "E01CCNDSC",
                                     "E01CCNSTS",
                                     "E01CCNFIM",
                                     "E01CCNFID",
                                     "E01CCNFIY",
                                     "E01CCNFVM",
                                     "E01CCNFVD",
                                     "E01CCNFVY",
                                     "E01CCNSTA"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CCNCUN",
                                   "E01CCNCOD",
                                   "E01CCNDSC",
                                   "E01CCNSTS",
                                   "E01CCNFIM",
                                   "E01CCNFID",
                                   "E01CCNFIY",
                                   "E01CCNFVM",
                                   "E01CCNFVD",
                                   "E01CCNFVY",
                                   "E01CCNSTA"
                                 };
  final static String fid = "1140617171148";
  final static String rid = "33C39A867B295";
  final static String fmtname = "ECO004001";
  final int FIELDCOUNT = 20;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldE01CCNCUN = null;
  private CharacterField fieldE01CCNCOD = null;
  private CharacterField fieldE01CCNDSC = null;
  private CharacterField fieldE01CCNSTS = null;
  private DecimalField fieldE01CCNFIM = null;
  private DecimalField fieldE01CCNFID = null;
  private DecimalField fieldE01CCNFIY = null;
  private DecimalField fieldE01CCNFVM = null;
  private DecimalField fieldE01CCNFVD = null;
  private DecimalField fieldE01CCNFVY = null;
  private CharacterField fieldE01CCNSTA = null;

  /**
  * Constructor for ECO004001Message.
  */
  public ECO004001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 125;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CCNCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E01CCNCUN");
    fields[10] = fieldE01CCNCOD =
    new CharacterField(message, HEADERSIZE + 52, 4, "E01CCNCOD");
    fields[11] = fieldE01CCNDSC =
    new CharacterField(message, HEADERSIZE + 56, 45, "E01CCNDSC");
    fields[12] = fieldE01CCNSTS =
    new CharacterField(message, HEADERSIZE + 101, 1, "E01CCNSTS");
    fields[13] = fieldE01CCNFIM =
    new DecimalField(message, HEADERSIZE + 102, 3, 0, "E01CCNFIM");
    fields[14] = fieldE01CCNFID =
    new DecimalField(message, HEADERSIZE + 105, 3, 0, "E01CCNFID");
    fields[15] = fieldE01CCNFIY =
    new DecimalField(message, HEADERSIZE + 108, 5, 0, "E01CCNFIY");
    fields[16] = fieldE01CCNFVM =
    new DecimalField(message, HEADERSIZE + 113, 3, 0, "E01CCNFVM");
    fields[17] = fieldE01CCNFVD =
    new DecimalField(message, HEADERSIZE + 116, 3, 0, "E01CCNFVD");
    fields[18] = fieldE01CCNFVY =
    new DecimalField(message, HEADERSIZE + 119, 5, 0, "E01CCNFVY");
    fields[19] = fieldE01CCNSTA =
    new CharacterField(message, HEADERSIZE + 124, 1, "E01CCNSTA");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CCNCUN using a String value.
  */
  public void setE01CCNCUN(String newvalue)
  {
    fieldE01CCNCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CCNCUN as a String.
  */
  public String getE01CCNCUN()
  {
    return fieldE01CCNCUN.getString();
  }

  /**
  * Set numeric field E01CCNCUN using a BigDecimal value.
  */
  public void setE01CCNCUN(BigDecimal newvalue)
  {
    fieldE01CCNCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNCUN()
  {
    return fieldE01CCNCUN.getBigDecimal();
  }

  /**
  * Set field E01CCNCOD using a String value.
  */
  public void setE01CCNCOD(String newvalue)
  {
    fieldE01CCNCOD.setString(newvalue);
  }

  /**
  * Get value of field E01CCNCOD as a String.
  */
  public String getE01CCNCOD()
  {
    return fieldE01CCNCOD.getString();
  }

  /**
  * Set field E01CCNDSC using a String value.
  */
  public void setE01CCNDSC(String newvalue)
  {
    fieldE01CCNDSC.setString(newvalue);
  }

  /**
  * Get value of field E01CCNDSC as a String.
  */
  public String getE01CCNDSC()
  {
    return fieldE01CCNDSC.getString();
  }

  /**
  * Set field E01CCNSTS using a String value.
  */
  public void setE01CCNSTS(String newvalue)
  {
    fieldE01CCNSTS.setString(newvalue);
  }

  /**
  * Get value of field E01CCNSTS as a String.
  */
  public String getE01CCNSTS()
  {
    return fieldE01CCNSTS.getString();
  }

  /**
  * Set field E01CCNFIM using a String value.
  */
  public void setE01CCNFIM(String newvalue)
  {
    fieldE01CCNFIM.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFIM as a String.
  */
  public String getE01CCNFIM()
  {
    return fieldE01CCNFIM.getString();
  }

  /**
  * Set numeric field E01CCNFIM using a BigDecimal value.
  */
  public void setE01CCNFIM(BigDecimal newvalue)
  {
    fieldE01CCNFIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFIM()
  {
    return fieldE01CCNFIM.getBigDecimal();
  }

  /**
  * Set field E01CCNFID using a String value.
  */
  public void setE01CCNFID(String newvalue)
  {
    fieldE01CCNFID.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFID as a String.
  */
  public String getE01CCNFID()
  {
    return fieldE01CCNFID.getString();
  }

  /**
  * Set numeric field E01CCNFID using a BigDecimal value.
  */
  public void setE01CCNFID(BigDecimal newvalue)
  {
    fieldE01CCNFID.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFID as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFID()
  {
    return fieldE01CCNFID.getBigDecimal();
  }

  /**
  * Set field E01CCNFIY using a String value.
  */
  public void setE01CCNFIY(String newvalue)
  {
    fieldE01CCNFIY.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFIY as a String.
  */
  public String getE01CCNFIY()
  {
    return fieldE01CCNFIY.getString();
  }

  /**
  * Set numeric field E01CCNFIY using a BigDecimal value.
  */
  public void setE01CCNFIY(BigDecimal newvalue)
  {
    fieldE01CCNFIY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFIY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFIY()
  {
    return fieldE01CCNFIY.getBigDecimal();
  }

  /**
  * Set field E01CCNFVM using a String value.
  */
  public void setE01CCNFVM(String newvalue)
  {
    fieldE01CCNFVM.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFVM as a String.
  */
  public String getE01CCNFVM()
  {
    return fieldE01CCNFVM.getString();
  }

  /**
  * Set numeric field E01CCNFVM using a BigDecimal value.
  */
  public void setE01CCNFVM(BigDecimal newvalue)
  {
    fieldE01CCNFVM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFVM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFVM()
  {
    return fieldE01CCNFVM.getBigDecimal();
  }

  /**
  * Set field E01CCNFVD using a String value.
  */
  public void setE01CCNFVD(String newvalue)
  {
    fieldE01CCNFVD.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFVD as a String.
  */
  public String getE01CCNFVD()
  {
    return fieldE01CCNFVD.getString();
  }

  /**
  * Set numeric field E01CCNFVD using a BigDecimal value.
  */
  public void setE01CCNFVD(BigDecimal newvalue)
  {
    fieldE01CCNFVD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFVD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFVD()
  {
    return fieldE01CCNFVD.getBigDecimal();
  }

  /**
  * Set field E01CCNFVY using a String value.
  */
  public void setE01CCNFVY(String newvalue)
  {
    fieldE01CCNFVY.setString(newvalue);
  }

  /**
  * Get value of field E01CCNFVY as a String.
  */
  public String getE01CCNFVY()
  {
    return fieldE01CCNFVY.getString();
  }

  /**
  * Set numeric field E01CCNFVY using a BigDecimal value.
  */
  public void setE01CCNFVY(BigDecimal newvalue)
  {
    fieldE01CCNFVY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CCNFVY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CCNFVY()
  {
    return fieldE01CCNFVY.getBigDecimal();
  }

  /**
  * Set field E01CCNSTA using a String value.
  */
  public void setE01CCNSTA(String newvalue)
  {
    fieldE01CCNSTA.setString(newvalue);
  }

  /**
  * Get value of field E01CCNSTA as a String.
  */
  public String getE01CCNSTA()
  {
    return fieldE01CCNSTA.getString();
  }

}
