package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDP076001 physical file definition.
* 
* File level identifier is 1130611113115.
* Record format level identifier is 327D6B3AA0F99.
*/

public class EDP076001Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01CNTLAN",
                                     "E01CUMBNI",
                                     "E01CUSNA1",
                                     "E01CUSNA2",
                                     "E01CUMCUN",
                                     "E01CUMMAN",
                                     "E01CUMBSX",
                                     "E01CUMRCN",
                                     "E01DEAOAM",
                                     "E01DEAPRI",
                                     "E01RECPOS",
                                     "E01OPECDE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01CNTLAN",
                                   "E01CUMBNI",
                                   "E01CUSNA1",
                                   "E01CUSNA2",
                                   "E01CUMCUN",
                                   "E01CUMMAN",
                                   "E01CUMBSX",
                                   "E01CUMRCN",
                                   "E01DEAOAM",
                                   "E01DEAPRI",
                                   "E01RECPOS",
                                   "E01OPECDE"
                                 };
  final static String fid = "1130611113115";
  final static String rid = "327D6B3AA0F99";
  final static String fmtname = "EDP076001";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01CNTLAN = null;
  private CharacterField fieldE01CUMBNI = null;
  private CharacterField fieldE01CUSNA1 = null;
  private CharacterField fieldE01CUSNA2 = null;
  private DecimalField fieldE01CUMCUN = null;
  private DecimalField fieldE01CUMMAN = null;
  private CharacterField fieldE01CUMBSX = null;
  private DecimalField fieldE01CUMRCN = null;
  private DecimalField fieldE01DEAOAM = null;
  private DecimalField fieldE01DEAPRI = null;
  private DecimalField fieldE01RECPOS = null;
  private CharacterField fieldE01OPECDE = null;

  /**
  * Constructor for EDP076001Message.
  */
  public EDP076001Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 228;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01CNTLAN =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01CNTLAN");
    fields[10] = fieldE01CUMBNI =
    new CharacterField(message, HEADERSIZE + 43, 25, "E01CUMBNI");
    fields[11] = fieldE01CUSNA1 =
    new CharacterField(message, HEADERSIZE + 68, 45, "E01CUSNA1");
    fields[12] = fieldE01CUSNA2 =
    new CharacterField(message, HEADERSIZE + 113, 45, "E01CUSNA2");
    fields[13] = fieldE01CUMCUN =
    new DecimalField(message, HEADERSIZE + 158, 13, 0, "E01CUMCUN");
    fields[14] = fieldE01CUMMAN =
    new DecimalField(message, HEADERSIZE + 171, 3, 0, "E01CUMMAN");
    fields[15] = fieldE01CUMBSX =
    new CharacterField(message, HEADERSIZE + 174, 1, "E01CUMBSX");
    fields[16] = fieldE01CUMRCN =
    new DecimalField(message, HEADERSIZE + 175, 10, 0, "E01CUMRCN");
    fields[17] = fieldE01DEAOAM =
    new DecimalField(message, HEADERSIZE + 185, 17, 2, "E01DEAOAM");
    fields[18] = fieldE01DEAPRI =
    new DecimalField(message, HEADERSIZE + 202, 17, 2, "E01DEAPRI");
    fields[19] = fieldE01RECPOS =
    new DecimalField(message, HEADERSIZE + 219, 8, 0, "E01RECPOS");
    fields[20] = fieldE01OPECDE =
    new CharacterField(message, HEADERSIZE + 227, 1, "E01OPECDE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01CNTLAN using a String value.
  */
  public void setE01CNTLAN(String newvalue)
  {
    fieldE01CNTLAN.setString(newvalue);
  }

  /**
  * Get value of field E01CNTLAN as a String.
  */
  public String getE01CNTLAN()
  {
    return fieldE01CNTLAN.getString();
  }

  /**
  * Set field E01CUMBNI using a String value.
  */
  public void setE01CUMBNI(String newvalue)
  {
    fieldE01CUMBNI.setString(newvalue);
  }

  /**
  * Get value of field E01CUMBNI as a String.
  */
  public String getE01CUMBNI()
  {
    return fieldE01CUMBNI.getString();
  }

  /**
  * Set field E01CUSNA1 using a String value.
  */
  public void setE01CUSNA1(String newvalue)
  {
    fieldE01CUSNA1.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA1 as a String.
  */
  public String getE01CUSNA1()
  {
    return fieldE01CUSNA1.getString();
  }

  /**
  * Set field E01CUSNA2 using a String value.
  */
  public void setE01CUSNA2(String newvalue)
  {
    fieldE01CUSNA2.setString(newvalue);
  }

  /**
  * Get value of field E01CUSNA2 as a String.
  */
  public String getE01CUSNA2()
  {
    return fieldE01CUSNA2.getString();
  }

  /**
  * Set field E01CUMCUN using a String value.
  */
  public void setE01CUMCUN(String newvalue)
  {
    fieldE01CUMCUN.setString(newvalue);
  }

  /**
  * Get value of field E01CUMCUN as a String.
  */
  public String getE01CUMCUN()
  {
    return fieldE01CUMCUN.getString();
  }

  /**
  * Set numeric field E01CUMCUN using a BigDecimal value.
  */
  public void setE01CUMCUN(BigDecimal newvalue)
  {
    fieldE01CUMCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUMCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUMCUN()
  {
    return fieldE01CUMCUN.getBigDecimal();
  }

  /**
  * Set field E01CUMMAN using a String value.
  */
  public void setE01CUMMAN(String newvalue)
  {
    fieldE01CUMMAN.setString(newvalue);
  }

  /**
  * Get value of field E01CUMMAN as a String.
  */
  public String getE01CUMMAN()
  {
    return fieldE01CUMMAN.getString();
  }

  /**
  * Set numeric field E01CUMMAN using a BigDecimal value.
  */
  public void setE01CUMMAN(BigDecimal newvalue)
  {
    fieldE01CUMMAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUMMAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUMMAN()
  {
    return fieldE01CUMMAN.getBigDecimal();
  }

  /**
  * Set field E01CUMBSX using a String value.
  */
  public void setE01CUMBSX(String newvalue)
  {
    fieldE01CUMBSX.setString(newvalue);
  }

  /**
  * Get value of field E01CUMBSX as a String.
  */
  public String getE01CUMBSX()
  {
    return fieldE01CUMBSX.getString();
  }

  /**
  * Set field E01CUMRCN using a String value.
  */
  public void setE01CUMRCN(String newvalue)
  {
    fieldE01CUMRCN.setString(newvalue);
  }

  /**
  * Get value of field E01CUMRCN as a String.
  */
  public String getE01CUMRCN()
  {
    return fieldE01CUMRCN.getString();
  }

  /**
  * Set numeric field E01CUMRCN using a BigDecimal value.
  */
  public void setE01CUMRCN(BigDecimal newvalue)
  {
    fieldE01CUMRCN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01CUMRCN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01CUMRCN()
  {
    return fieldE01CUMRCN.getBigDecimal();
  }

  /**
  * Set field E01DEAOAM using a String value.
  */
  public void setE01DEAOAM(String newvalue)
  {
    fieldE01DEAOAM.setString(newvalue);
  }

  /**
  * Get value of field E01DEAOAM as a String.
  */
  public String getE01DEAOAM()
  {
    return fieldE01DEAOAM.getString();
  }

  /**
  * Set numeric field E01DEAOAM using a BigDecimal value.
  */
  public void setE01DEAOAM(BigDecimal newvalue)
  {
    fieldE01DEAOAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEAOAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEAOAM()
  {
    return fieldE01DEAOAM.getBigDecimal();
  }

  /**
  * Set field E01DEAPRI using a String value.
  */
  public void setE01DEAPRI(String newvalue)
  {
    fieldE01DEAPRI.setString(newvalue);
  }

  /**
  * Get value of field E01DEAPRI as a String.
  */
  public String getE01DEAPRI()
  {
    return fieldE01DEAPRI.getString();
  }

  /**
  * Set numeric field E01DEAPRI using a BigDecimal value.
  */
  public void setE01DEAPRI(BigDecimal newvalue)
  {
    fieldE01DEAPRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01DEAPRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01DEAPRI()
  {
    return fieldE01DEAPRI.getBigDecimal();
  }

  /**
  * Set field E01RECPOS using a String value.
  */
  public void setE01RECPOS(String newvalue)
  {
    fieldE01RECPOS.setString(newvalue);
  }

  /**
  * Get value of field E01RECPOS as a String.
  */
  public String getE01RECPOS()
  {
    return fieldE01RECPOS.getString();
  }

  /**
  * Set numeric field E01RECPOS using a BigDecimal value.
  */
  public void setE01RECPOS(BigDecimal newvalue)
  {
    fieldE01RECPOS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01RECPOS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01RECPOS()
  {
    return fieldE01RECPOS.getBigDecimal();
  }

  /**
  * Set field E01OPECDE using a String value.
  */
  public void setE01OPECDE(String newvalue)
  {
    fieldE01OPECDE.setString(newvalue);
  }

  /**
  * Get value of field E01OPECDE as a String.
  */
  public String getE01OPECDE()
  {
    return fieldE01OPECDE.getString();
  }

}
