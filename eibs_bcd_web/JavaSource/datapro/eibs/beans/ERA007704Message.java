package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ERA007704 physical file definition.
* 
* File level identifier is 1150505111746.
* Record format level identifier is 4716FA09EEF6D.
*/

public class ERA007704Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H04USERID",
                                     "H04PROGRM",
                                     "H04TIMSYS",
                                     "H04SCRCOD",
                                     "H04OPECOD",
                                     "H04FLGMAS",
                                     "H04FLGWK1",
                                     "H04FLGWK2",
                                     "H04FLGWK3",
                                     "E04ROCCUN",
                                     "E04ROCIDN",
                                     "E04ROCREF",
                                     "E04ROCTIP",
                                     "E04ROCFIN",
                                     "E04ROCFFI",
                                     "E04ROCDES",
                                     "E04ROCSTS",
                                     "E04ROCGEN"
                                   };
  final static String tnames[] = {
                                   "H04USERID",
                                   "H04PROGRM",
                                   "H04TIMSYS",
                                   "H04SCRCOD",
                                   "H04OPECOD",
                                   "H04FLGMAS",
                                   "H04FLGWK1",
                                   "H04FLGWK2",
                                   "H04FLGWK3",
                                   "E04ROCCUN",
                                   "E04ROCIDN",
                                   "E04ROCREF",
                                   "E04ROCTIP",
                                   "E04ROCFIN",
                                   "E04ROCFFI",
                                   "E04ROCDES",
                                   "E04ROCSTS",
                                   "E04ROCGEN"
                                 };
  final static String fid = "1150505111746";
  final static String rid = "4716FA09EEF6D";
  final static String fmtname = "ERA007704";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH04USERID = null;
  private CharacterField fieldH04PROGRM = null;
  private CharacterField fieldH04TIMSYS = null;
  private CharacterField fieldH04SCRCOD = null;
  private CharacterField fieldH04OPECOD = null;
  private CharacterField fieldH04FLGMAS = null;
  private CharacterField fieldH04FLGWK1 = null;
  private CharacterField fieldH04FLGWK2 = null;
  private CharacterField fieldH04FLGWK3 = null;
  private DecimalField fieldE04ROCCUN = null;
  private CharacterField fieldE04ROCIDN = null;
  private DecimalField fieldE04ROCREF = null;
  private CharacterField fieldE04ROCTIP = null;
  private DecimalField fieldE04ROCFIN = null;
  private DecimalField fieldE04ROCFFI = null;
  private CharacterField fieldE04ROCDES = null;
  private CharacterField fieldE04ROCSTS = null;
  private CharacterField fieldE04ROCGEN = null;

  /**
  * Constructor for ERA007704Message.
  */
  public ERA007704Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 509;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH04USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H04USERID");
    fields[1] = fieldH04PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H04PROGRM");
    fields[2] = fieldH04TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H04TIMSYS");
    fields[3] = fieldH04SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H04SCRCOD");
    fields[4] = fieldH04OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H04OPECOD");
    fields[5] = fieldH04FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H04FLGMAS");
    fields[6] = fieldH04FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H04FLGWK1");
    fields[7] = fieldH04FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H04FLGWK2");
    fields[8] = fieldH04FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H04FLGWK3");
    fields[9] = fieldE04ROCCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "E04ROCCUN");
    fields[10] = fieldE04ROCIDN =
    new CharacterField(message, HEADERSIZE + 52, 25, "E04ROCIDN");
    fields[11] = fieldE04ROCREF =
    new DecimalField(message, HEADERSIZE + 77, 14, 0, "E04ROCREF");
    fields[12] = fieldE04ROCTIP =
    new CharacterField(message, HEADERSIZE + 91, 100, "E04ROCTIP");
    fields[13] = fieldE04ROCFIN =
    new DecimalField(message, HEADERSIZE + 191, 9, 0, "E04ROCFIN");
    fields[14] = fieldE04ROCFFI =
    new DecimalField(message, HEADERSIZE + 200, 9, 0, "E04ROCFFI");
    fields[15] = fieldE04ROCDES =
    new CharacterField(message, HEADERSIZE + 209, 100, "E04ROCDES");
    fields[16] = fieldE04ROCSTS =
    new CharacterField(message, HEADERSIZE + 309, 100, "E04ROCSTS");
    fields[17] = fieldE04ROCGEN =
    new CharacterField(message, HEADERSIZE + 409, 100, "E04ROCGEN");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H04USERID using a String value.
  */
  public void setH04USERID(String newvalue)
  {
    fieldH04USERID.setString(newvalue);
  }

  /**
  * Get value of field H04USERID as a String.
  */
  public String getH04USERID()
  {
    return fieldH04USERID.getString();
  }

  /**
  * Set field H04PROGRM using a String value.
  */
  public void setH04PROGRM(String newvalue)
  {
    fieldH04PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H04PROGRM as a String.
  */
  public String getH04PROGRM()
  {
    return fieldH04PROGRM.getString();
  }

  /**
  * Set field H04TIMSYS using a String value.
  */
  public void setH04TIMSYS(String newvalue)
  {
    fieldH04TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H04TIMSYS as a String.
  */
  public String getH04TIMSYS()
  {
    return fieldH04TIMSYS.getString();
  }

  /**
  * Set field H04SCRCOD using a String value.
  */
  public void setH04SCRCOD(String newvalue)
  {
    fieldH04SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H04SCRCOD as a String.
  */
  public String getH04SCRCOD()
  {
    return fieldH04SCRCOD.getString();
  }

  /**
  * Set field H04OPECOD using a String value.
  */
  public void setH04OPECOD(String newvalue)
  {
    fieldH04OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H04OPECOD as a String.
  */
  public String getH04OPECOD()
  {
    return fieldH04OPECOD.getString();
  }

  /**
  * Set field H04FLGMAS using a String value.
  */
  public void setH04FLGMAS(String newvalue)
  {
    fieldH04FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H04FLGMAS as a String.
  */
  public String getH04FLGMAS()
  {
    return fieldH04FLGMAS.getString();
  }

  /**
  * Set field H04FLGWK1 using a String value.
  */
  public void setH04FLGWK1(String newvalue)
  {
    fieldH04FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK1 as a String.
  */
  public String getH04FLGWK1()
  {
    return fieldH04FLGWK1.getString();
  }

  /**
  * Set field H04FLGWK2 using a String value.
  */
  public void setH04FLGWK2(String newvalue)
  {
    fieldH04FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK2 as a String.
  */
  public String getH04FLGWK2()
  {
    return fieldH04FLGWK2.getString();
  }

  /**
  * Set field H04FLGWK3 using a String value.
  */
  public void setH04FLGWK3(String newvalue)
  {
    fieldH04FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H04FLGWK3 as a String.
  */
  public String getH04FLGWK3()
  {
    return fieldH04FLGWK3.getString();
  }

  /**
  * Set field E04ROCCUN using a String value.
  */
  public void setE04ROCCUN(String newvalue)
  {
    fieldE04ROCCUN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCCUN as a String.
  */
  public String getE04ROCCUN()
  {
    return fieldE04ROCCUN.getString();
  }

  /**
  * Set numeric field E04ROCCUN using a BigDecimal value.
  */
  public void setE04ROCCUN(BigDecimal newvalue)
  {
    fieldE04ROCCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCCUN()
  {
    return fieldE04ROCCUN.getBigDecimal();
  }

  /**
  * Set field E04ROCIDN using a String value.
  */
  public void setE04ROCIDN(String newvalue)
  {
    fieldE04ROCIDN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCIDN as a String.
  */
  public String getE04ROCIDN()
  {
    return fieldE04ROCIDN.getString();
  }

  /**
  * Set field E04ROCREF using a String value.
  */
  public void setE04ROCREF(String newvalue)
  {
    fieldE04ROCREF.setString(newvalue);
  }

  /**
  * Get value of field E04ROCREF as a String.
  */
  public String getE04ROCREF()
  {
    return fieldE04ROCREF.getString();
  }

  /**
  * Set numeric field E04ROCREF using a BigDecimal value.
  */
  public void setE04ROCREF(BigDecimal newvalue)
  {
    fieldE04ROCREF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCREF as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCREF()
  {
    return fieldE04ROCREF.getBigDecimal();
  }

  /**
  * Set field E04ROCTIP using a String value.
  */
  public void setE04ROCTIP(String newvalue)
  {
    fieldE04ROCTIP.setString(newvalue);
  }

  /**
  * Get value of field E04ROCTIP as a String.
  */
  public String getE04ROCTIP()
  {
    return fieldE04ROCTIP.getString();
  }

  /**
  * Set field E04ROCFIN using a String value.
  */
  public void setE04ROCFIN(String newvalue)
  {
    fieldE04ROCFIN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCFIN as a String.
  */
  public String getE04ROCFIN()
  {
    return fieldE04ROCFIN.getString();
  }

  /**
  * Set numeric field E04ROCFIN using a BigDecimal value.
  */
  public void setE04ROCFIN(BigDecimal newvalue)
  {
    fieldE04ROCFIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCFIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCFIN()
  {
    return fieldE04ROCFIN.getBigDecimal();
  }

  /**
  * Set field E04ROCFFI using a String value.
  */
  public void setE04ROCFFI(String newvalue)
  {
    fieldE04ROCFFI.setString(newvalue);
  }

  /**
  * Get value of field E04ROCFFI as a String.
  */
  public String getE04ROCFFI()
  {
    return fieldE04ROCFFI.getString();
  }

  /**
  * Set numeric field E04ROCFFI using a BigDecimal value.
  */
  public void setE04ROCFFI(BigDecimal newvalue)
  {
    fieldE04ROCFFI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E04ROCFFI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE04ROCFFI()
  {
    return fieldE04ROCFFI.getBigDecimal();
  }

  /**
  * Set field E04ROCDES using a String value.
  */
  public void setE04ROCDES(String newvalue)
  {
    fieldE04ROCDES.setString(newvalue);
  }

  /**
  * Get value of field E04ROCDES as a String.
  */
  public String getE04ROCDES()
  {
    return fieldE04ROCDES.getString();
  }

  /**
  * Set field E04ROCSTS using a String value.
  */
  public void setE04ROCSTS(String newvalue)
  {
    fieldE04ROCSTS.setString(newvalue);
  }

  /**
  * Get value of field E04ROCSTS as a String.
  */
  public String getE04ROCSTS()
  {
    return fieldE04ROCSTS.getString();
  }

  /**
  * Set field E04ROCGEN using a String value.
  */
  public void setE04ROCGEN(String newvalue)
  {
    fieldE04ROCGEN.setString(newvalue);
  }

  /**
  * Get value of field E04ROCGEN as a String.
  */
  public String getE04ROCGEN()
  {
    return fieldE04ROCGEN.getString();
  }

}
