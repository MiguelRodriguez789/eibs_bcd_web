package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0750DS physical file definition.
* 
* File level identifier is 1130611113510.
* Record format level identifier is 37E94C8039005.
*/

public class EWD0750DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RBSBNK",
                                     "RBSCOD",
                                     "RBSTYP",
                                     "RBSLOC",
                                     "RBSDSC",
                                     "RBSSER",
                                     "RBSKEY",
                                     "RBSKNU",
                                     "RBSRC1",
                                     "RBSRC2",
                                     "RBSRC3",
                                     "RWDFRC",
                                     "SWDREC",
                                     "TYPDSC",
                                     "LOCDSC",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RBSBNK",
                                   "RBSCOD",
                                   "RBSTYP",
                                   "RBSLOC",
                                   "RBSDSC",
                                   "RBSSER",
                                   "RBSKEY",
                                   "RBSKNU",
                                   "RBSRC1",
                                   "RBSRC2",
                                   "RBSRC3",
                                   "RWDFRC",
                                   "SWDREC",
                                   "TYPDSC",
                                   "LOCDSC",
                                   "SWDOPE"
                                 };
  final static String fid = "1130611113510";
  final static String rid = "37E94C8039005";
  final static String fmtname = "EWD0750DS";
  final int FIELDCOUNT = 16;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRBSBNK = null;
  private DecimalField fieldRBSCOD = null;
  private DecimalField fieldRBSTYP = null;
  private CharacterField fieldRBSLOC = null;
  private CharacterField fieldRBSDSC = null;
  private DecimalField fieldRBSSER = null;
  private DecimalField fieldRBSKEY = null;
  private DecimalField fieldRBSKNU = null;
  private DecimalField fieldRBSRC1 = null;
  private DecimalField fieldRBSRC2 = null;
  private DecimalField fieldRBSRC3 = null;
  private DecimalField fieldRWDFRC = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldTYPDSC = null;
  private CharacterField fieldLOCDSC = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0750DSMessage.
  */
  public EWD0750DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 284;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRBSBNK =
    new CharacterField(message, HEADERSIZE + 0, 2, "RBSBNK");
    fields[1] = fieldRBSCOD =
    new DecimalField(message, HEADERSIZE + 2, 13, 0, "RBSCOD");
    fields[2] = fieldRBSTYP =
    new DecimalField(message, HEADERSIZE + 15, 5, 0, "RBSTYP");
    fields[3] = fieldRBSLOC =
    new CharacterField(message, HEADERSIZE + 20, 4, "RBSLOC");
    fields[4] = fieldRBSDSC =
    new CharacterField(message, HEADERSIZE + 24, 60, "RBSDSC");
    fields[5] = fieldRBSSER =
    new DecimalField(message, HEADERSIZE + 84, 14, 0, "RBSSER");
    fields[6] = fieldRBSKEY =
    new DecimalField(message, HEADERSIZE + 98, 14, 0, "RBSKEY");
    fields[7] = fieldRBSKNU =
    new DecimalField(message, HEADERSIZE + 112, 4, 0, "RBSKNU");
    fields[8] = fieldRBSRC1 =
    new DecimalField(message, HEADERSIZE + 116, 3, 0, "RBSRC1");
    fields[9] = fieldRBSRC2 =
    new DecimalField(message, HEADERSIZE + 119, 3, 0, "RBSRC2");
    fields[10] = fieldRBSRC3 =
    new DecimalField(message, HEADERSIZE + 122, 5, 0, "RBSRC3");
    fields[11] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 127, 8, 0, "RWDFRC");
    fields[12] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 135, 8, 0, "SWDREC");
    fields[13] = fieldTYPDSC =
    new CharacterField(message, HEADERSIZE + 143, 60, "TYPDSC");
    fields[14] = fieldLOCDSC =
    new CharacterField(message, HEADERSIZE + 203, 80, "LOCDSC");
    fields[15] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 283, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RBSBNK using a String value.
  */
  public void setRBSBNK(String newvalue)
  {
    fieldRBSBNK.setString(newvalue);
  }

  /**
  * Get value of field RBSBNK as a String.
  */
  public String getRBSBNK()
  {
    return fieldRBSBNK.getString();
  }

  /**
  * Set field RBSCOD using a String value.
  */
  public void setRBSCOD(String newvalue)
  {
    fieldRBSCOD.setString(newvalue);
  }

  /**
  * Get value of field RBSCOD as a String.
  */
  public String getRBSCOD()
  {
    return fieldRBSCOD.getString();
  }

  /**
  * Set numeric field RBSCOD using a BigDecimal value.
  */
  public void setRBSCOD(BigDecimal newvalue)
  {
    fieldRBSCOD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSCOD as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSCOD()
  {
    return fieldRBSCOD.getBigDecimal();
  }

  /**
  * Set field RBSTYP using a String value.
  */
  public void setRBSTYP(String newvalue)
  {
    fieldRBSTYP.setString(newvalue);
  }

  /**
  * Get value of field RBSTYP as a String.
  */
  public String getRBSTYP()
  {
    return fieldRBSTYP.getString();
  }

  /**
  * Set numeric field RBSTYP using a BigDecimal value.
  */
  public void setRBSTYP(BigDecimal newvalue)
  {
    fieldRBSTYP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSTYP as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSTYP()
  {
    return fieldRBSTYP.getBigDecimal();
  }

  /**
  * Set field RBSLOC using a String value.
  */
  public void setRBSLOC(String newvalue)
  {
    fieldRBSLOC.setString(newvalue);
  }

  /**
  * Get value of field RBSLOC as a String.
  */
  public String getRBSLOC()
  {
    return fieldRBSLOC.getString();
  }

  /**
  * Set field RBSDSC using a String value.
  */
  public void setRBSDSC(String newvalue)
  {
    fieldRBSDSC.setString(newvalue);
  }

  /**
  * Get value of field RBSDSC as a String.
  */
  public String getRBSDSC()
  {
    return fieldRBSDSC.getString();
  }

  /**
  * Set field RBSSER using a String value.
  */
  public void setRBSSER(String newvalue)
  {
    fieldRBSSER.setString(newvalue);
  }

  /**
  * Get value of field RBSSER as a String.
  */
  public String getRBSSER()
  {
    return fieldRBSSER.getString();
  }

  /**
  * Set numeric field RBSSER using a BigDecimal value.
  */
  public void setRBSSER(BigDecimal newvalue)
  {
    fieldRBSSER.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSSER as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSSER()
  {
    return fieldRBSSER.getBigDecimal();
  }

  /**
  * Set field RBSKEY using a String value.
  */
  public void setRBSKEY(String newvalue)
  {
    fieldRBSKEY.setString(newvalue);
  }

  /**
  * Get value of field RBSKEY as a String.
  */
  public String getRBSKEY()
  {
    return fieldRBSKEY.getString();
  }

  /**
  * Set numeric field RBSKEY using a BigDecimal value.
  */
  public void setRBSKEY(BigDecimal newvalue)
  {
    fieldRBSKEY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSKEY as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSKEY()
  {
    return fieldRBSKEY.getBigDecimal();
  }

  /**
  * Set field RBSKNU using a String value.
  */
  public void setRBSKNU(String newvalue)
  {
    fieldRBSKNU.setString(newvalue);
  }

  /**
  * Get value of field RBSKNU as a String.
  */
  public String getRBSKNU()
  {
    return fieldRBSKNU.getString();
  }

  /**
  * Set numeric field RBSKNU using a BigDecimal value.
  */
  public void setRBSKNU(BigDecimal newvalue)
  {
    fieldRBSKNU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSKNU as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSKNU()
  {
    return fieldRBSKNU.getBigDecimal();
  }

  /**
  * Set field RBSRC1 using a String value.
  */
  public void setRBSRC1(String newvalue)
  {
    fieldRBSRC1.setString(newvalue);
  }

  /**
  * Get value of field RBSRC1 as a String.
  */
  public String getRBSRC1()
  {
    return fieldRBSRC1.getString();
  }

  /**
  * Set numeric field RBSRC1 using a BigDecimal value.
  */
  public void setRBSRC1(BigDecimal newvalue)
  {
    fieldRBSRC1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSRC1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSRC1()
  {
    return fieldRBSRC1.getBigDecimal();
  }

  /**
  * Set field RBSRC2 using a String value.
  */
  public void setRBSRC2(String newvalue)
  {
    fieldRBSRC2.setString(newvalue);
  }

  /**
  * Get value of field RBSRC2 as a String.
  */
  public String getRBSRC2()
  {
    return fieldRBSRC2.getString();
  }

  /**
  * Set numeric field RBSRC2 using a BigDecimal value.
  */
  public void setRBSRC2(BigDecimal newvalue)
  {
    fieldRBSRC2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSRC2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSRC2()
  {
    return fieldRBSRC2.getBigDecimal();
  }

  /**
  * Set field RBSRC3 using a String value.
  */
  public void setRBSRC3(String newvalue)
  {
    fieldRBSRC3.setString(newvalue);
  }

  /**
  * Get value of field RBSRC3 as a String.
  */
  public String getRBSRC3()
  {
    return fieldRBSRC3.getString();
  }

  /**
  * Set numeric field RBSRC3 using a BigDecimal value.
  */
  public void setRBSRC3(BigDecimal newvalue)
  {
    fieldRBSRC3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RBSRC3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalRBSRC3()
  {
    return fieldRBSRC3.getBigDecimal();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field TYPDSC using a String value.
  */
  public void setTYPDSC(String newvalue)
  {
    fieldTYPDSC.setString(newvalue);
  }

  /**
  * Get value of field TYPDSC as a String.
  */
  public String getTYPDSC()
  {
    return fieldTYPDSC.getString();
  }

  /**
  * Set field LOCDSC using a String value.
  */
  public void setLOCDSC(String newvalue)
  {
    fieldLOCDSC.setString(newvalue);
  }

  /**
  * Get value of field LOCDSC as a String.
  */
  public String getLOCDSC()
  {
    return fieldLOCDSC.getString();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
