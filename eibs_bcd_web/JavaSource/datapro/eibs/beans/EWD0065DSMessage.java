package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0065DS physical file definition.
* 
* File level identifier is 1160805181249.
* Record format level identifier is 44FCDCEDDC166.
*/

public class EWD0065DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RCVUSR",
                                     "RCVSHR",
                                     "RCVTYP",
                                     "RCVSEL",
                                     "RCVFRC",
                                     "SNDNUM",
                                     "SNDLGT",
                                     "SDSLGT",
                                     "SNDNME",
                                     "SNDFNA",
                                     "SNDLN1",
                                     "SNDLN2",
                                     "SNDACA",
                                     "SNDFN2",
                                     "SNDSHN",
                                     "SNDIDN",
                                     "SNDTID",
                                     "SNDPID",
                                     "SNDOFC",
                                     "SDSOFC",
                                     "SNDIDM",
                                     "SNDIDD",
                                     "SNDIDY",
                                     "SNDREC",
                                     "SNDOPE"
                                   };
  final static String tnames[] = {
                                   "RCVUSR",
                                   "RCVSHR",
                                   "RCVTYP",
                                   "RCVSEL",
                                   "RCVFRC",
                                   "SNDNUM",
                                   "SNDLGT",
                                   "SDSLGT",
                                   "SNDNME",
                                   "SNDFNA",
                                   "SNDLN1",
                                   "SNDLN2",
                                   "SNDACA",
                                   "SNDFN2",
                                   "SNDSHN",
                                   "SNDIDN",
                                   "SNDTID",
                                   "SNDPID",
                                   "SNDOFC",
                                   "SDSOFC",
                                   "SNDIDM",
                                   "SNDIDD",
                                   "SNDIDY",
                                   "SNDREC",
                                   "SNDOPE"
                                 };
  final static String fid = "1160805181249";
  final static String rid = "44FCDCEDDC166";
  final static String fmtname = "EWD0065DS";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRCVUSR = null;
  private CharacterField fieldRCVSHR = null;
  private CharacterField fieldRCVTYP = null;
  private CharacterField fieldRCVSEL = null;
  private DecimalField fieldRCVFRC = null;
  private DecimalField fieldSNDNUM = null;
  private CharacterField fieldSNDLGT = null;
  private CharacterField fieldSDSLGT = null;
  private CharacterField fieldSNDNME = null;
  private CharacterField fieldSNDFNA = null;
  private CharacterField fieldSNDLN1 = null;
  private CharacterField fieldSNDLN2 = null;
  private CharacterField fieldSNDACA = null;
  private CharacterField fieldSNDFN2 = null;
  private CharacterField fieldSNDSHN = null;
  private CharacterField fieldSNDIDN = null;
  private CharacterField fieldSNDTID = null;
  private CharacterField fieldSNDPID = null;
  private CharacterField fieldSNDOFC = null;
  private CharacterField fieldSDSOFC = null;
  private DecimalField fieldSNDIDM = null;
  private DecimalField fieldSNDIDD = null;
  private DecimalField fieldSNDIDY = null;
  private DecimalField fieldSNDREC = null;
  private CharacterField fieldSNDOPE = null;

  /**
  * Constructor for EWD0065DSMessage.
  */
  public EWD0065DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 508;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRCVUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RCVUSR");
    fields[1] = fieldRCVSHR =
    new CharacterField(message, HEADERSIZE + 10, 45, "RCVSHR");
    fields[2] = fieldRCVTYP =
    new CharacterField(message, HEADERSIZE + 55, 1, "RCVTYP");
    fields[3] = fieldRCVSEL =
    new CharacterField(message, HEADERSIZE + 56, 1, "RCVSEL");
    fields[4] = fieldRCVFRC =
    new DecimalField(message, HEADERSIZE + 57, 8, 0, "RCVFRC");
    fields[5] = fieldSNDNUM =
    new DecimalField(message, HEADERSIZE + 65, 10, 0, "SNDNUM");
    fields[6] = fieldSNDLGT =
    new CharacterField(message, HEADERSIZE + 75, 1, "SNDLGT");
    fields[7] = fieldSDSLGT =
    new CharacterField(message, HEADERSIZE + 76, 20, "SDSLGT");
    fields[8] = fieldSNDNME =
    new CharacterField(message, HEADERSIZE + 96, 60, "SNDNME");
    fields[9] = fieldSNDFNA =
    new CharacterField(message, HEADERSIZE + 156, 45, "SNDFNA");
    fields[10] = fieldSNDLN1 =
    new CharacterField(message, HEADERSIZE + 201, 45, "SNDLN1");
    fields[11] = fieldSNDLN2 =
    new CharacterField(message, HEADERSIZE + 246, 45, "SNDLN2");
    fields[12] = fieldSNDACA =
    new CharacterField(message, HEADERSIZE + 291, 45, "SNDACA");
    fields[13] = fieldSNDFN2 =
    new CharacterField(message, HEADERSIZE + 336, 45, "SNDFN2");
    fields[14] = fieldSNDSHN =
    new CharacterField(message, HEADERSIZE + 381, 25, "SNDSHN");
    fields[15] = fieldSNDIDN =
    new CharacterField(message, HEADERSIZE + 406, 25, "SNDIDN");
    fields[16] = fieldSNDTID =
    new CharacterField(message, HEADERSIZE + 431, 4, "SNDTID");
    fields[17] = fieldSNDPID =
    new CharacterField(message, HEADERSIZE + 435, 4, "SNDPID");
    fields[18] = fieldSNDOFC =
    new CharacterField(message, HEADERSIZE + 439, 4, "SNDOFC");
    fields[19] = fieldSDSOFC =
    new CharacterField(message, HEADERSIZE + 443, 45, "SDSOFC");
    fields[20] = fieldSNDIDM =
    new DecimalField(message, HEADERSIZE + 488, 3, 0, "SNDIDM");
    fields[21] = fieldSNDIDD =
    new DecimalField(message, HEADERSIZE + 491, 3, 0, "SNDIDD");
    fields[22] = fieldSNDIDY =
    new DecimalField(message, HEADERSIZE + 494, 5, 0, "SNDIDY");
    fields[23] = fieldSNDREC =
    new DecimalField(message, HEADERSIZE + 499, 8, 0, "SNDREC");
    fields[24] = fieldSNDOPE =
    new CharacterField(message, HEADERSIZE + 507, 1, "SNDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RCVUSR using a String value.
  */
  public void setRCVUSR(String newvalue)
  {
    fieldRCVUSR.setString(newvalue);
  }

  /**
  * Get value of field RCVUSR as a String.
  */
  public String getRCVUSR()
  {
    return fieldRCVUSR.getString();
  }

  /**
  * Set field RCVSHR using a String value.
  */
  public void setRCVSHR(String newvalue)
  {
    fieldRCVSHR.setString(newvalue);
  }

  /**
  * Get value of field RCVSHR as a String.
  */
  public String getRCVSHR()
  {
    return fieldRCVSHR.getString();
  }

  /**
  * Set field RCVTYP using a String value.
  */
  public void setRCVTYP(String newvalue)
  {
    fieldRCVTYP.setString(newvalue);
  }

  /**
  * Get value of field RCVTYP as a String.
  */
  public String getRCVTYP()
  {
    return fieldRCVTYP.getString();
  }

  /**
  * Set field RCVSEL using a String value.
  */
  public void setRCVSEL(String newvalue)
  {
    fieldRCVSEL.setString(newvalue);
  }

  /**
  * Get value of field RCVSEL as a String.
  */
  public String getRCVSEL()
  {
    return fieldRCVSEL.getString();
  }

  /**
  * Set field RCVFRC using a String value.
  */
  public void setRCVFRC(String newvalue)
  {
    fieldRCVFRC.setString(newvalue);
  }

  /**
  * Get value of field RCVFRC as a String.
  */
  public String getRCVFRC()
  {
    return fieldRCVFRC.getString();
  }

  /**
  * Set numeric field RCVFRC using a BigDecimal value.
  */
  public void setRCVFRC(BigDecimal newvalue)
  {
    fieldRCVFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RCVFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRCVFRC()
  {
    return fieldRCVFRC.getBigDecimal();
  }

  /**
  * Set field SNDNUM using a String value.
  */
  public void setSNDNUM(String newvalue)
  {
    fieldSNDNUM.setString(newvalue);
  }

  /**
  * Get value of field SNDNUM as a String.
  */
  public String getSNDNUM()
  {
    return fieldSNDNUM.getString();
  }

  /**
  * Set numeric field SNDNUM using a BigDecimal value.
  */
  public void setSNDNUM(BigDecimal newvalue)
  {
    fieldSNDNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SNDNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSNDNUM()
  {
    return fieldSNDNUM.getBigDecimal();
  }

  /**
  * Set field SNDLGT using a String value.
  */
  public void setSNDLGT(String newvalue)
  {
    fieldSNDLGT.setString(newvalue);
  }

  /**
  * Get value of field SNDLGT as a String.
  */
  public String getSNDLGT()
  {
    return fieldSNDLGT.getString();
  }

  /**
  * Set field SDSLGT using a String value.
  */
  public void setSDSLGT(String newvalue)
  {
    fieldSDSLGT.setString(newvalue);
  }

  /**
  * Get value of field SDSLGT as a String.
  */
  public String getSDSLGT()
  {
    return fieldSDSLGT.getString();
  }

  /**
  * Set field SNDNME using a String value.
  */
  public void setSNDNME(String newvalue)
  {
    fieldSNDNME.setString(newvalue);
  }

  /**
  * Get value of field SNDNME as a String.
  */
  public String getSNDNME()
  {
    return fieldSNDNME.getString();
  }

  /**
  * Set field SNDFNA using a String value.
  */
  public void setSNDFNA(String newvalue)
  {
    fieldSNDFNA.setString(newvalue);
  }

  /**
  * Get value of field SNDFNA as a String.
  */
  public String getSNDFNA()
  {
    return fieldSNDFNA.getString();
  }

  /**
  * Set field SNDLN1 using a String value.
  */
  public void setSNDLN1(String newvalue)
  {
    fieldSNDLN1.setString(newvalue);
  }

  /**
  * Get value of field SNDLN1 as a String.
  */
  public String getSNDLN1()
  {
    return fieldSNDLN1.getString();
  }

  /**
  * Set field SNDLN2 using a String value.
  */
  public void setSNDLN2(String newvalue)
  {
    fieldSNDLN2.setString(newvalue);
  }

  /**
  * Get value of field SNDLN2 as a String.
  */
  public String getSNDLN2()
  {
    return fieldSNDLN2.getString();
  }

  /**
  * Set field SNDACA using a String value.
  */
  public void setSNDACA(String newvalue)
  {
    fieldSNDACA.setString(newvalue);
  }

  /**
  * Get value of field SNDACA as a String.
  */
  public String getSNDACA()
  {
    return fieldSNDACA.getString();
  }

  /**
  * Set field SNDFN2 using a String value.
  */
  public void setSNDFN2(String newvalue)
  {
    fieldSNDFN2.setString(newvalue);
  }

  /**
  * Get value of field SNDFN2 as a String.
  */
  public String getSNDFN2()
  {
    return fieldSNDFN2.getString();
  }

  /**
  * Set field SNDSHN using a String value.
  */
  public void setSNDSHN(String newvalue)
  {
    fieldSNDSHN.setString(newvalue);
  }

  /**
  * Get value of field SNDSHN as a String.
  */
  public String getSNDSHN()
  {
    return fieldSNDSHN.getString();
  }

  /**
  * Set field SNDIDN using a String value.
  */
  public void setSNDIDN(String newvalue)
  {
    fieldSNDIDN.setString(newvalue);
  }

  /**
  * Get value of field SNDIDN as a String.
  */
  public String getSNDIDN()
  {
    return fieldSNDIDN.getString();
  }

  /**
  * Set field SNDTID using a String value.
  */
  public void setSNDTID(String newvalue)
  {
    fieldSNDTID.setString(newvalue);
  }

  /**
  * Get value of field SNDTID as a String.
  */
  public String getSNDTID()
  {
    return fieldSNDTID.getString();
  }

  /**
  * Set field SNDPID using a String value.
  */
  public void setSNDPID(String newvalue)
  {
    fieldSNDPID.setString(newvalue);
  }

  /**
  * Get value of field SNDPID as a String.
  */
  public String getSNDPID()
  {
    return fieldSNDPID.getString();
  }

  /**
  * Set field SNDOFC using a String value.
  */
  public void setSNDOFC(String newvalue)
  {
    fieldSNDOFC.setString(newvalue);
  }

  /**
  * Get value of field SNDOFC as a String.
  */
  public String getSNDOFC()
  {
    return fieldSNDOFC.getString();
  }

  /**
  * Set field SDSOFC using a String value.
  */
  public void setSDSOFC(String newvalue)
  {
    fieldSDSOFC.setString(newvalue);
  }

  /**
  * Get value of field SDSOFC as a String.
  */
  public String getSDSOFC()
  {
    return fieldSDSOFC.getString();
  }

  /**
  * Set field SNDIDM using a String value.
  */
  public void setSNDIDM(String newvalue)
  {
    fieldSNDIDM.setString(newvalue);
  }

  /**
  * Get value of field SNDIDM as a String.
  */
  public String getSNDIDM()
  {
    return fieldSNDIDM.getString();
  }

  /**
  * Set numeric field SNDIDM using a BigDecimal value.
  */
  public void setSNDIDM(BigDecimal newvalue)
  {
    fieldSNDIDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SNDIDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSNDIDM()
  {
    return fieldSNDIDM.getBigDecimal();
  }

  /**
  * Set field SNDIDD using a String value.
  */
  public void setSNDIDD(String newvalue)
  {
    fieldSNDIDD.setString(newvalue);
  }

  /**
  * Get value of field SNDIDD as a String.
  */
  public String getSNDIDD()
  {
    return fieldSNDIDD.getString();
  }

  /**
  * Set numeric field SNDIDD using a BigDecimal value.
  */
  public void setSNDIDD(BigDecimal newvalue)
  {
    fieldSNDIDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SNDIDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSNDIDD()
  {
    return fieldSNDIDD.getBigDecimal();
  }

  /**
  * Set field SNDIDY using a String value.
  */
  public void setSNDIDY(String newvalue)
  {
    fieldSNDIDY.setString(newvalue);
  }

  /**
  * Get value of field SNDIDY as a String.
  */
  public String getSNDIDY()
  {
    return fieldSNDIDY.getString();
  }

  /**
  * Set numeric field SNDIDY using a BigDecimal value.
  */
  public void setSNDIDY(BigDecimal newvalue)
  {
    fieldSNDIDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SNDIDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSNDIDY()
  {
    return fieldSNDIDY.getBigDecimal();
  }

  /**
  * Set field SNDREC using a String value.
  */
  public void setSNDREC(String newvalue)
  {
    fieldSNDREC.setString(newvalue);
  }

  /**
  * Get value of field SNDREC as a String.
  */
  public String getSNDREC()
  {
    return fieldSNDREC.getString();
  }

  /**
  * Set numeric field SNDREC using a BigDecimal value.
  */
  public void setSNDREC(BigDecimal newvalue)
  {
    fieldSNDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SNDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSNDREC()
  {
    return fieldSNDREC.getBigDecimal();
  }

  /**
  * Set field SNDOPE using a String value.
  */
  public void setSNDOPE(String newvalue)
  {
    fieldSNDOPE.setString(newvalue);
  }

  /**
  * Get value of field SNDOPE as a String.
  */
  public String getSNDOPE()
  {
    return fieldSNDOPE.getString();
  }

}
