package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL052601 physical file definition.
* 
* File level identifier is 1180904102007.
* Record format level identifier is 3D7448B94D60E.
*/

public class EDL052601Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01PCCTPC",
                                     "E01PCCTGA",
                                     "E01PCCCRG",
                                     "E01PCCTPP",
                                     "D01PCCTPP",
                                     "E01PCCCDP",
                                     "E01PCCCCP",
                                     "E01PCCCDI",
                                     "E01PCCCCI",
                                     "E01PCCCDO",
                                     "E01PCCCCO",
                                     "E01PCCCD1",
                                     "E01PCCCC1",
                                     "E01PCCCRC",
                                     "E01PCCCRI",
                                     "E01PCCCRO",
                                     "E01PCCCR1",
                                     "E01PCCOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01PCCTPC",
                                   "E01PCCTGA",
                                   "E01PCCCRG",
                                   "E01PCCTPP",
                                   "D01PCCTPP",
                                   "E01PCCCDP",
                                   "E01PCCCCP",
                                   "E01PCCCDI",
                                   "E01PCCCCI",
                                   "E01PCCCDO",
                                   "E01PCCCCO",
                                   "E01PCCCD1",
                                   "E01PCCCC1",
                                   "E01PCCCRC",
                                   "E01PCCCRI",
                                   "E01PCCCRO",
                                   "E01PCCCR1",
                                   "E01PCCOPE"
                                 };
  final static String fid = "1180904102007";
  final static String rid = "3D7448B94D60E";
  final static String fmtname = "EDL052601";
  final int FIELDCOUNT = 27;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01PCCTPC = null;
  private CharacterField fieldE01PCCTGA = null;
  private CharacterField fieldE01PCCCRG = null;
  private CharacterField fieldE01PCCTPP = null;
  private CharacterField fieldD01PCCTPP = null;
  private DecimalField fieldE01PCCCDP = null;
  private DecimalField fieldE01PCCCCP = null;
  private DecimalField fieldE01PCCCDI = null;
  private DecimalField fieldE01PCCCCI = null;
  private DecimalField fieldE01PCCCDO = null;
  private DecimalField fieldE01PCCCCO = null;
  private DecimalField fieldE01PCCCD1 = null;
  private DecimalField fieldE01PCCCC1 = null;
  private DecimalField fieldE01PCCCRC = null;
  private DecimalField fieldE01PCCCRI = null;
  private DecimalField fieldE01PCCCRO = null;
  private DecimalField fieldE01PCCCR1 = null;
  private CharacterField fieldE01PCCOPE = null;

  /**
  * Constructor for EDL052601Message.
  */
  public EDL052601Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 275;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01PCCTPC =
    new CharacterField(message, HEADERSIZE + 42, 1, "E01PCCTPC");
    fields[10] = fieldE01PCCTGA =
    new CharacterField(message, HEADERSIZE + 43, 4, "E01PCCTGA");
    fields[11] = fieldE01PCCCRG =
    new CharacterField(message, HEADERSIZE + 47, 2, "E01PCCCRG");
    fields[12] = fieldE01PCCTPP =
    new CharacterField(message, HEADERSIZE + 49, 1, "E01PCCTPP");
    fields[13] = fieldD01PCCTPP =
    new CharacterField(message, HEADERSIZE + 50, 20, "D01PCCTPP");
    fields[14] = fieldE01PCCCDP =
    new DecimalField(message, HEADERSIZE + 70, 17, 0, "E01PCCCDP");
    fields[15] = fieldE01PCCCCP =
    new DecimalField(message, HEADERSIZE + 87, 17, 0, "E01PCCCCP");
    fields[16] = fieldE01PCCCDI =
    new DecimalField(message, HEADERSIZE + 104, 17, 0, "E01PCCCDI");
    fields[17] = fieldE01PCCCCI =
    new DecimalField(message, HEADERSIZE + 121, 17, 0, "E01PCCCCI");
    fields[18] = fieldE01PCCCDO =
    new DecimalField(message, HEADERSIZE + 138, 17, 0, "E01PCCCDO");
    fields[19] = fieldE01PCCCCO =
    new DecimalField(message, HEADERSIZE + 155, 17, 0, "E01PCCCCO");
    fields[20] = fieldE01PCCCD1 =
    new DecimalField(message, HEADERSIZE + 172, 17, 0, "E01PCCCD1");
    fields[21] = fieldE01PCCCC1 =
    new DecimalField(message, HEADERSIZE + 189, 17, 0, "E01PCCCC1");
    fields[22] = fieldE01PCCCRC =
    new DecimalField(message, HEADERSIZE + 206, 17, 0, "E01PCCCRC");
    fields[23] = fieldE01PCCCRI =
    new DecimalField(message, HEADERSIZE + 223, 17, 0, "E01PCCCRI");
    fields[24] = fieldE01PCCCRO =
    new DecimalField(message, HEADERSIZE + 240, 17, 0, "E01PCCCRO");
    fields[25] = fieldE01PCCCR1 =
    new DecimalField(message, HEADERSIZE + 257, 17, 0, "E01PCCCR1");
    fields[26] = fieldE01PCCOPE =
    new CharacterField(message, HEADERSIZE + 274, 1, "E01PCCOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01PCCTPC using a String value.
  */
  public void setE01PCCTPC(String newvalue)
  {
    fieldE01PCCTPC.setString(newvalue);
  }

  /**
  * Get value of field E01PCCTPC as a String.
  */
  public String getE01PCCTPC()
  {
    return fieldE01PCCTPC.getString();
  }

  /**
  * Set field E01PCCTGA using a String value.
  */
  public void setE01PCCTGA(String newvalue)
  {
    fieldE01PCCTGA.setString(newvalue);
  }

  /**
  * Get value of field E01PCCTGA as a String.
  */
  public String getE01PCCTGA()
  {
    return fieldE01PCCTGA.getString();
  }

  /**
  * Set field E01PCCCRG using a String value.
  */
  public void setE01PCCCRG(String newvalue)
  {
    fieldE01PCCCRG.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCRG as a String.
  */
  public String getE01PCCCRG()
  {
    return fieldE01PCCCRG.getString();
  }

  /**
  * Set field E01PCCTPP using a String value.
  */
  public void setE01PCCTPP(String newvalue)
  {
    fieldE01PCCTPP.setString(newvalue);
  }

  /**
  * Get value of field E01PCCTPP as a String.
  */
  public String getE01PCCTPP()
  {
    return fieldE01PCCTPP.getString();
  }

  /**
  * Set field D01PCCTPP using a String value.
  */
  public void setD01PCCTPP(String newvalue)
  {
    fieldD01PCCTPP.setString(newvalue);
  }

  /**
  * Get value of field D01PCCTPP as a String.
  */
  public String getD01PCCTPP()
  {
    return fieldD01PCCTPP.getString();
  }

  /**
  * Set field E01PCCCDP using a String value.
  */
  public void setE01PCCCDP(String newvalue)
  {
    fieldE01PCCCDP.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCDP as a String.
  */
  public String getE01PCCCDP()
  {
    return fieldE01PCCCDP.getString();
  }

  /**
  * Set numeric field E01PCCCDP using a BigDecimal value.
  */
  public void setE01PCCCDP(BigDecimal newvalue)
  {
    fieldE01PCCCDP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCDP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCDP()
  {
    return fieldE01PCCCDP.getBigDecimal();
  }

  /**
  * Set field E01PCCCCP using a String value.
  */
  public void setE01PCCCCP(String newvalue)
  {
    fieldE01PCCCCP.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCCP as a String.
  */
  public String getE01PCCCCP()
  {
    return fieldE01PCCCCP.getString();
  }

  /**
  * Set numeric field E01PCCCCP using a BigDecimal value.
  */
  public void setE01PCCCCP(BigDecimal newvalue)
  {
    fieldE01PCCCCP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCCP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCCP()
  {
    return fieldE01PCCCCP.getBigDecimal();
  }

  /**
  * Set field E01PCCCDI using a String value.
  */
  public void setE01PCCCDI(String newvalue)
  {
    fieldE01PCCCDI.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCDI as a String.
  */
  public String getE01PCCCDI()
  {
    return fieldE01PCCCDI.getString();
  }

  /**
  * Set numeric field E01PCCCDI using a BigDecimal value.
  */
  public void setE01PCCCDI(BigDecimal newvalue)
  {
    fieldE01PCCCDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCDI()
  {
    return fieldE01PCCCDI.getBigDecimal();
  }

  /**
  * Set field E01PCCCCI using a String value.
  */
  public void setE01PCCCCI(String newvalue)
  {
    fieldE01PCCCCI.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCCI as a String.
  */
  public String getE01PCCCCI()
  {
    return fieldE01PCCCCI.getString();
  }

  /**
  * Set numeric field E01PCCCCI using a BigDecimal value.
  */
  public void setE01PCCCCI(BigDecimal newvalue)
  {
    fieldE01PCCCCI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCCI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCCI()
  {
    return fieldE01PCCCCI.getBigDecimal();
  }

  /**
  * Set field E01PCCCDO using a String value.
  */
  public void setE01PCCCDO(String newvalue)
  {
    fieldE01PCCCDO.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCDO as a String.
  */
  public String getE01PCCCDO()
  {
    return fieldE01PCCCDO.getString();
  }

  /**
  * Set numeric field E01PCCCDO using a BigDecimal value.
  */
  public void setE01PCCCDO(BigDecimal newvalue)
  {
    fieldE01PCCCDO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCDO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCDO()
  {
    return fieldE01PCCCDO.getBigDecimal();
  }

  /**
  * Set field E01PCCCCO using a String value.
  */
  public void setE01PCCCCO(String newvalue)
  {
    fieldE01PCCCCO.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCCO as a String.
  */
  public String getE01PCCCCO()
  {
    return fieldE01PCCCCO.getString();
  }

  /**
  * Set numeric field E01PCCCCO using a BigDecimal value.
  */
  public void setE01PCCCCO(BigDecimal newvalue)
  {
    fieldE01PCCCCO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCCO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCCO()
  {
    return fieldE01PCCCCO.getBigDecimal();
  }

  /**
  * Set field E01PCCCD1 using a String value.
  */
  public void setE01PCCCD1(String newvalue)
  {
    fieldE01PCCCD1.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCD1 as a String.
  */
  public String getE01PCCCD1()
  {
    return fieldE01PCCCD1.getString();
  }

  /**
  * Set numeric field E01PCCCD1 using a BigDecimal value.
  */
  public void setE01PCCCD1(BigDecimal newvalue)
  {
    fieldE01PCCCD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCD1()
  {
    return fieldE01PCCCD1.getBigDecimal();
  }

  /**
  * Set field E01PCCCC1 using a String value.
  */
  public void setE01PCCCC1(String newvalue)
  {
    fieldE01PCCCC1.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCC1 as a String.
  */
  public String getE01PCCCC1()
  {
    return fieldE01PCCCC1.getString();
  }

  /**
  * Set numeric field E01PCCCC1 using a BigDecimal value.
  */
  public void setE01PCCCC1(BigDecimal newvalue)
  {
    fieldE01PCCCC1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCC1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCC1()
  {
    return fieldE01PCCCC1.getBigDecimal();
  }

  /**
  * Set field E01PCCCRC using a String value.
  */
  public void setE01PCCCRC(String newvalue)
  {
    fieldE01PCCCRC.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCRC as a String.
  */
  public String getE01PCCCRC()
  {
    return fieldE01PCCCRC.getString();
  }

  /**
  * Set numeric field E01PCCCRC using a BigDecimal value.
  */
  public void setE01PCCCRC(BigDecimal newvalue)
  {
    fieldE01PCCCRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCRC()
  {
    return fieldE01PCCCRC.getBigDecimal();
  }

  /**
  * Set field E01PCCCRI using a String value.
  */
  public void setE01PCCCRI(String newvalue)
  {
    fieldE01PCCCRI.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCRI as a String.
  */
  public String getE01PCCCRI()
  {
    return fieldE01PCCCRI.getString();
  }

  /**
  * Set numeric field E01PCCCRI using a BigDecimal value.
  */
  public void setE01PCCCRI(BigDecimal newvalue)
  {
    fieldE01PCCCRI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCRI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCRI()
  {
    return fieldE01PCCCRI.getBigDecimal();
  }

  /**
  * Set field E01PCCCRO using a String value.
  */
  public void setE01PCCCRO(String newvalue)
  {
    fieldE01PCCCRO.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCRO as a String.
  */
  public String getE01PCCCRO()
  {
    return fieldE01PCCCRO.getString();
  }

  /**
  * Set numeric field E01PCCCRO using a BigDecimal value.
  */
  public void setE01PCCCRO(BigDecimal newvalue)
  {
    fieldE01PCCCRO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCRO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCRO()
  {
    return fieldE01PCCCRO.getBigDecimal();
  }

  /**
  * Set field E01PCCCR1 using a String value.
  */
  public void setE01PCCCR1(String newvalue)
  {
    fieldE01PCCCR1.setString(newvalue);
  }

  /**
  * Get value of field E01PCCCR1 as a String.
  */
  public String getE01PCCCR1()
  {
    return fieldE01PCCCR1.getString();
  }

  /**
  * Set numeric field E01PCCCR1 using a BigDecimal value.
  */
  public void setE01PCCCR1(BigDecimal newvalue)
  {
    fieldE01PCCCR1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01PCCCR1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01PCCCR1()
  {
    return fieldE01PCCCR1.getBigDecimal();
  }

  /**
  * Set field E01PCCOPE using a String value.
  */
  public void setE01PCCOPE(String newvalue)
  {
    fieldE01PCCOPE.setString(newvalue);
  }

  /**
  * Get value of field E01PCCOPE as a String.
  */
  public String getE01PCCOPE()
  {
    return fieldE01PCCOPE.getString();
  }

}
