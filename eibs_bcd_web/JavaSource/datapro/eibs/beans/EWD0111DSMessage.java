package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0111DS physical file definition.
* 
* File level identifier is 1130611113450.
* Record format level identifier is 291F6ACE62C24.
*/

public class EWD0111DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "EWDTBL",
                                     "EWDTNM",
                                     "EWDTYP",
                                     "EWDCCY",
                                     "EWDCUN",
                                     "EWDOPE"
                                   };
  final static String tnames[] = {
                                   "EWDTBL",
                                   "EWDTNM",
                                   "EWDTYP",
                                   "EWDCCY",
                                   "EWDCUN",
                                   "EWDOPE"
                                 };
  final static String fid = "1130611113450";
  final static String rid = "291F6ACE62C24";
  final static String fmtname = "EWD0111DS";
  final int FIELDCOUNT = 6;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldEWDTBL = null;
  private CharacterField fieldEWDTNM = null;
  private CharacterField fieldEWDTYP = null;
  private CharacterField fieldEWDCCY = null;
  private DecimalField fieldEWDCUN = null;
  private CharacterField fieldEWDOPE = null;

  /**
  * Constructor for EWD0111DSMessage.
  */
  public EWD0111DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 65;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldEWDTBL =
    new CharacterField(message, HEADERSIZE + 0, 2, "EWDTBL");
    fields[1] = fieldEWDTNM =
    new CharacterField(message, HEADERSIZE + 2, 45, "EWDTNM");
    fields[2] = fieldEWDTYP =
    new CharacterField(message, HEADERSIZE + 47, 4, "EWDTYP");
    fields[3] = fieldEWDCCY =
    new CharacterField(message, HEADERSIZE + 51, 3, "EWDCCY");
    fields[4] = fieldEWDCUN =
    new DecimalField(message, HEADERSIZE + 54, 10, 0, "EWDCUN");
    fields[5] = fieldEWDOPE =
    new CharacterField(message, HEADERSIZE + 64, 1, "EWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field EWDTBL using a String value.
  */
  public void setEWDTBL(String newvalue)
  {
    fieldEWDTBL.setString(newvalue);
  }

  /**
  * Get value of field EWDTBL as a String.
  */
  public String getEWDTBL()
  {
    return fieldEWDTBL.getString();
  }

  /**
  * Set field EWDTNM using a String value.
  */
  public void setEWDTNM(String newvalue)
  {
    fieldEWDTNM.setString(newvalue);
  }

  /**
  * Get value of field EWDTNM as a String.
  */
  public String getEWDTNM()
  {
    return fieldEWDTNM.getString();
  }

  /**
  * Set field EWDTYP using a String value.
  */
  public void setEWDTYP(String newvalue)
  {
    fieldEWDTYP.setString(newvalue);
  }

  /**
  * Get value of field EWDTYP as a String.
  */
  public String getEWDTYP()
  {
    return fieldEWDTYP.getString();
  }

  /**
  * Set field EWDCCY using a String value.
  */
  public void setEWDCCY(String newvalue)
  {
    fieldEWDCCY.setString(newvalue);
  }

  /**
  * Get value of field EWDCCY as a String.
  */
  public String getEWDCCY()
  {
    return fieldEWDCCY.getString();
  }

  /**
  * Set field EWDCUN using a String value.
  */
  public void setEWDCUN(String newvalue)
  {
    fieldEWDCUN.setString(newvalue);
  }

  /**
  * Get value of field EWDCUN as a String.
  */
  public String getEWDCUN()
  {
    return fieldEWDCUN.getString();
  }

  /**
  * Set numeric field EWDCUN using a BigDecimal value.
  */
  public void setEWDCUN(BigDecimal newvalue)
  {
    fieldEWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEWDCUN()
  {
    return fieldEWDCUN.getBigDecimal();
  }

  /**
  * Set field EWDOPE using a String value.
  */
  public void setEWDOPE(String newvalue)
  {
    fieldEWDOPE.setString(newvalue);
  }

  /**
  * Get value of field EWDOPE as a String.
  */
  public String getEWDOPE()
  {
    return fieldEWDOPE.getString();
  }

}
