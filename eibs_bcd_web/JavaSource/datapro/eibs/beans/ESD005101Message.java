package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD005101 physical file definition.
* 
* File level identifier is 1140820194525.
* Record format level identifier is 43B81E2F41D08.
*/

public class ESD005101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H51USR",
                                     "H51PGM",
                                     "H51TIM",
                                     "H51SCR",
                                     "H51OPE",
                                     "H51MAS",
                                     "H51WK1",
                                     "H51WK2",
                                     "H51WK3",
                                     "E51TYP",
                                     "E51CDE",
                                     "E51ACC",
                                     "E51TID",
                                     "E51IDN",
                                     "E51FVM",
                                     "E51FVD",
                                     "E51FVY",
                                     "E51MOT",
                                     "E51RES",
                                     "E511SC",
                                     "E512SC",
                                     "E513SC",
                                     "E514SC",
                                     "E515SC",
                                     "E516SC",
                                     "E517SC",
                                     "E518SC",
                                     "E519SC",
                                     "E510SC"
                                   };
  final static String tnames[] = {
                                   "H51USR",
                                   "H51PGM",
                                   "H51TIM",
                                   "H51SCR",
                                   "H51OPE",
                                   "H51MAS",
                                   "H51WK1",
                                   "H51WK2",
                                   "H51WK3",
                                   "E51TYP",
                                   "E51CDE",
                                   "E51ACC",
                                   "E51TID",
                                   "E51IDN",
                                   "E51FVM",
                                   "E51FVD",
                                   "E51FVY",
                                   "E51MOT",
                                   "E51RES",
                                   "E511SC",
                                   "E512SC",
                                   "E513SC",
                                   "E514SC",
                                   "E515SC",
                                   "E516SC",
                                   "E517SC",
                                   "E518SC",
                                   "E519SC",
                                   "E510SC"
                                 };
  final static String fid = "1140820194525";
  final static String rid = "43B81E2F41D08";
  final static String fmtname = "ESD005101";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH51USR = null;
  private CharacterField fieldH51PGM = null;
  private CharacterField fieldH51TIM = null;
  private CharacterField fieldH51SCR = null;
  private CharacterField fieldH51OPE = null;
  private CharacterField fieldH51MAS = null;
  private CharacterField fieldH51WK1 = null;
  private CharacterField fieldH51WK2 = null;
  private CharacterField fieldH51WK3 = null;
  private CharacterField fieldE51TYP = null;
  private CharacterField fieldE51CDE = null;
  private DecimalField fieldE51ACC = null;
  private CharacterField fieldE51TID = null;
  private CharacterField fieldE51IDN = null;
  private DecimalField fieldE51FVM = null;
  private DecimalField fieldE51FVD = null;
  private DecimalField fieldE51FVY = null;
  private CharacterField fieldE51MOT = null;
  private CharacterField fieldE51RES = null;
  private CharacterField fieldE511SC = null;
  private CharacterField fieldE512SC = null;
  private CharacterField fieldE513SC = null;
  private CharacterField fieldE514SC = null;
  private CharacterField fieldE515SC = null;
  private CharacterField fieldE516SC = null;
  private CharacterField fieldE517SC = null;
  private CharacterField fieldE518SC = null;
  private CharacterField fieldE519SC = null;
  private CharacterField fieldE510SC = null;

  /**
  * Constructor for ESD005101Message.
  */
  public ESD005101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 2496;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH51USR =
    new CharacterField(message, HEADERSIZE + 0, 10, "H51USR");
    fields[1] = fieldH51PGM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H51PGM");
    fields[2] = fieldH51TIM =
    new CharacterField(message, HEADERSIZE + 20, 12, "H51TIM");
    fields[3] = fieldH51SCR =
    new CharacterField(message, HEADERSIZE + 32, 2, "H51SCR");
    fields[4] = fieldH51OPE =
    new CharacterField(message, HEADERSIZE + 34, 4, "H51OPE");
    fields[5] = fieldH51MAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H51MAS");
    fields[6] = fieldH51WK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H51WK1");
    fields[7] = fieldH51WK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H51WK2");
    fields[8] = fieldH51WK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H51WK3");
    fields[9] = fieldE51TYP =
    new CharacterField(message, HEADERSIZE + 42, 4, "E51TYP");
    fields[10] = fieldE51CDE =
    new CharacterField(message, HEADERSIZE + 46, 4, "E51CDE");
    fields[11] = fieldE51ACC =
    new DecimalField(message, HEADERSIZE + 50, 13, 0, "E51ACC");
    fields[12] = fieldE51TID =
    new CharacterField(message, HEADERSIZE + 63, 4, "E51TID");
    fields[13] = fieldE51IDN =
    new CharacterField(message, HEADERSIZE + 67, 25, "E51IDN");
    fields[14] = fieldE51FVM =
    new DecimalField(message, HEADERSIZE + 92, 3, 0, "E51FVM");
    fields[15] = fieldE51FVD =
    new DecimalField(message, HEADERSIZE + 95, 3, 0, "E51FVD");
    fields[16] = fieldE51FVY =
    new DecimalField(message, HEADERSIZE + 98, 5, 0, "E51FVY");
    fields[17] = fieldE51MOT =
    new CharacterField(message, HEADERSIZE + 103, 2, "E51MOT");
    fields[18] = fieldE51RES =
    new CharacterField(message, HEADERSIZE + 105, 92, "E51RES");
    fields[19] = fieldE511SC =
    new CharacterField(message, HEADERSIZE + 197, 242, "E511SC");
    fields[20] = fieldE512SC =
    new CharacterField(message, HEADERSIZE + 439, 242, "E512SC");
    fields[21] = fieldE513SC =
    new CharacterField(message, HEADERSIZE + 681, 242, "E513SC");
    fields[22] = fieldE514SC =
    new CharacterField(message, HEADERSIZE + 923, 242, "E514SC");
    fields[23] = fieldE515SC =
    new CharacterField(message, HEADERSIZE + 1165, 242, "E515SC");
    fields[24] = fieldE516SC =
    new CharacterField(message, HEADERSIZE + 1407, 242, "E516SC");
    fields[25] = fieldE517SC =
    new CharacterField(message, HEADERSIZE + 1649, 242, "E517SC");
    fields[26] = fieldE518SC =
    new CharacterField(message, HEADERSIZE + 1891, 242, "E518SC");
    fields[27] = fieldE519SC =
    new CharacterField(message, HEADERSIZE + 2133, 242, "E519SC");
    fields[28] = fieldE510SC =
    new CharacterField(message, HEADERSIZE + 2375, 121, "E510SC");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H51USR using a String value.
  */
  public void setH51USR(String newvalue)
  {
    fieldH51USR.setString(newvalue);
  }

  /**
  * Get value of field H51USR as a String.
  */
  public String getH51USR()
  {
    return fieldH51USR.getString();
  }

  /**
  * Set field H51PGM using a String value.
  */
  public void setH51PGM(String newvalue)
  {
    fieldH51PGM.setString(newvalue);
  }

  /**
  * Get value of field H51PGM as a String.
  */
  public String getH51PGM()
  {
    return fieldH51PGM.getString();
  }

  /**
  * Set field H51TIM using a String value.
  */
  public void setH51TIM(String newvalue)
  {
    fieldH51TIM.setString(newvalue);
  }

  /**
  * Get value of field H51TIM as a String.
  */
  public String getH51TIM()
  {
    return fieldH51TIM.getString();
  }

  /**
  * Set field H51SCR using a String value.
  */
  public void setH51SCR(String newvalue)
  {
    fieldH51SCR.setString(newvalue);
  }

  /**
  * Get value of field H51SCR as a String.
  */
  public String getH51SCR()
  {
    return fieldH51SCR.getString();
  }

  /**
  * Set field H51OPE using a String value.
  */
  public void setH51OPE(String newvalue)
  {
    fieldH51OPE.setString(newvalue);
  }

  /**
  * Get value of field H51OPE as a String.
  */
  public String getH51OPE()
  {
    return fieldH51OPE.getString();
  }

  /**
  * Set field H51MAS using a String value.
  */
  public void setH51MAS(String newvalue)
  {
    fieldH51MAS.setString(newvalue);
  }

  /**
  * Get value of field H51MAS as a String.
  */
  public String getH51MAS()
  {
    return fieldH51MAS.getString();
  }

  /**
  * Set field H51WK1 using a String value.
  */
  public void setH51WK1(String newvalue)
  {
    fieldH51WK1.setString(newvalue);
  }

  /**
  * Get value of field H51WK1 as a String.
  */
  public String getH51WK1()
  {
    return fieldH51WK1.getString();
  }

  /**
  * Set field H51WK2 using a String value.
  */
  public void setH51WK2(String newvalue)
  {
    fieldH51WK2.setString(newvalue);
  }

  /**
  * Get value of field H51WK2 as a String.
  */
  public String getH51WK2()
  {
    return fieldH51WK2.getString();
  }

  /**
  * Set field H51WK3 using a String value.
  */
  public void setH51WK3(String newvalue)
  {
    fieldH51WK3.setString(newvalue);
  }

  /**
  * Get value of field H51WK3 as a String.
  */
  public String getH51WK3()
  {
    return fieldH51WK3.getString();
  }

  /**
  * Set field E51TYP using a String value.
  */
  public void setE51TYP(String newvalue)
  {
    fieldE51TYP.setString(newvalue);
  }

  /**
  * Get value of field E51TYP as a String.
  */
  public String getE51TYP()
  {
    return fieldE51TYP.getString();
  }

  /**
  * Set field E51CDE using a String value.
  */
  public void setE51CDE(String newvalue)
  {
    fieldE51CDE.setString(newvalue);
  }

  /**
  * Get value of field E51CDE as a String.
  */
  public String getE51CDE()
  {
    return fieldE51CDE.getString();
  }

  /**
  * Set field E51ACC using a String value.
  */
  public void setE51ACC(String newvalue)
  {
    fieldE51ACC.setString(newvalue);
  }

  /**
  * Get value of field E51ACC as a String.
  */
  public String getE51ACC()
  {
    return fieldE51ACC.getString();
  }

  /**
  * Set numeric field E51ACC using a BigDecimal value.
  */
  public void setE51ACC(BigDecimal newvalue)
  {
    fieldE51ACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E51ACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE51ACC()
  {
    return fieldE51ACC.getBigDecimal();
  }

  /**
  * Set field E51TID using a String value.
  */
  public void setE51TID(String newvalue)
  {
    fieldE51TID.setString(newvalue);
  }

  /**
  * Get value of field E51TID as a String.
  */
  public String getE51TID()
  {
    return fieldE51TID.getString();
  }

  /**
  * Set field E51IDN using a String value.
  */
  public void setE51IDN(String newvalue)
  {
    fieldE51IDN.setString(newvalue);
  }

  /**
  * Get value of field E51IDN as a String.
  */
  public String getE51IDN()
  {
    return fieldE51IDN.getString();
  }

  /**
  * Set field E51FVM using a String value.
  */
  public void setE51FVM(String newvalue)
  {
    fieldE51FVM.setString(newvalue);
  }

  /**
  * Get value of field E51FVM as a String.
  */
  public String getE51FVM()
  {
    return fieldE51FVM.getString();
  }

  /**
  * Set numeric field E51FVM using a BigDecimal value.
  */
  public void setE51FVM(BigDecimal newvalue)
  {
    fieldE51FVM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E51FVM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE51FVM()
  {
    return fieldE51FVM.getBigDecimal();
  }

  /**
  * Set field E51FVD using a String value.
  */
  public void setE51FVD(String newvalue)
  {
    fieldE51FVD.setString(newvalue);
  }

  /**
  * Get value of field E51FVD as a String.
  */
  public String getE51FVD()
  {
    return fieldE51FVD.getString();
  }

  /**
  * Set numeric field E51FVD using a BigDecimal value.
  */
  public void setE51FVD(BigDecimal newvalue)
  {
    fieldE51FVD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E51FVD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE51FVD()
  {
    return fieldE51FVD.getBigDecimal();
  }

  /**
  * Set field E51FVY using a String value.
  */
  public void setE51FVY(String newvalue)
  {
    fieldE51FVY.setString(newvalue);
  }

  /**
  * Get value of field E51FVY as a String.
  */
  public String getE51FVY()
  {
    return fieldE51FVY.getString();
  }

  /**
  * Set numeric field E51FVY using a BigDecimal value.
  */
  public void setE51FVY(BigDecimal newvalue)
  {
    fieldE51FVY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E51FVY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE51FVY()
  {
    return fieldE51FVY.getBigDecimal();
  }

  /**
  * Set field E51MOT using a String value.
  */
  public void setE51MOT(String newvalue)
  {
    fieldE51MOT.setString(newvalue);
  }

  /**
  * Get value of field E51MOT as a String.
  */
  public String getE51MOT()
  {
    return fieldE51MOT.getString();
  }

  /**
  * Set field E51RES using a String value.
  */
  public void setE51RES(String newvalue)
  {
    fieldE51RES.setString(newvalue);
  }

  /**
  * Get value of field E51RES as a String.
  */
  public String getE51RES()
  {
    return fieldE51RES.getString();
  }

  /**
  * Set field E511SC using a String value.
  */
  public void setE511SC(String newvalue)
  {
    fieldE511SC.setString(newvalue);
  }

  /**
  * Get value of field E511SC as a String.
  */
  public String getE511SC()
  {
    return fieldE511SC.getString();
  }

  /**
  * Set field E512SC using a String value.
  */
  public void setE512SC(String newvalue)
  {
    fieldE512SC.setString(newvalue);
  }

  /**
  * Get value of field E512SC as a String.
  */
  public String getE512SC()
  {
    return fieldE512SC.getString();
  }

  /**
  * Set field E513SC using a String value.
  */
  public void setE513SC(String newvalue)
  {
    fieldE513SC.setString(newvalue);
  }

  /**
  * Get value of field E513SC as a String.
  */
  public String getE513SC()
  {
    return fieldE513SC.getString();
  }

  /**
  * Set field E514SC using a String value.
  */
  public void setE514SC(String newvalue)
  {
    fieldE514SC.setString(newvalue);
  }

  /**
  * Get value of field E514SC as a String.
  */
  public String getE514SC()
  {
    return fieldE514SC.getString();
  }

  /**
  * Set field E515SC using a String value.
  */
  public void setE515SC(String newvalue)
  {
    fieldE515SC.setString(newvalue);
  }

  /**
  * Get value of field E515SC as a String.
  */
  public String getE515SC()
  {
    return fieldE515SC.getString();
  }

  /**
  * Set field E516SC using a String value.
  */
  public void setE516SC(String newvalue)
  {
    fieldE516SC.setString(newvalue);
  }

  /**
  * Get value of field E516SC as a String.
  */
  public String getE516SC()
  {
    return fieldE516SC.getString();
  }

  /**
  * Set field E517SC using a String value.
  */
  public void setE517SC(String newvalue)
  {
    fieldE517SC.setString(newvalue);
  }

  /**
  * Get value of field E517SC as a String.
  */
  public String getE517SC()
  {
    return fieldE517SC.getString();
  }

  /**
  * Set field E518SC using a String value.
  */
  public void setE518SC(String newvalue)
  {
    fieldE518SC.setString(newvalue);
  }

  /**
  * Get value of field E518SC as a String.
  */
  public String getE518SC()
  {
    return fieldE518SC.getString();
  }

  /**
  * Set field E519SC using a String value.
  */
  public void setE519SC(String newvalue)
  {
    fieldE519SC.setString(newvalue);
  }

  /**
  * Get value of field E519SC as a String.
  */
  public String getE519SC()
  {
    return fieldE519SC.getString();
  }

  /**
  * Set field E510SC using a String value.
  */
  public void setE510SC(String newvalue)
  {
    fieldE510SC.setString(newvalue);
  }

  /**
  * Get value of field E510SC as a String.
  */
  public String getE510SC()
  {
    return fieldE510SC.getString();
  }

}
