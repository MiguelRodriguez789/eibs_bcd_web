package datapro.eibs.beans; 

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECA001401 physical file definition.
* 
* File level identifier is 1180124232752.
* Record format level identifier is 575024C8295D4.
*/

public class ECA001401Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01TRIBNK",
                                     "E01TRICUN",
                                     "D01TRICUN",
                                     "E01TRIACC",
                                     "E01TRIVND",
                                     "D01TRIVND",
                                     "E01TRINOE",
                                     "D01TRINOE",
                                     "E01TRICMM",
                                     "E01TRICDD",
                                     "E01TRICYY",
                                     "E01TRICMU",
                                     "E01TRICTT",
                                     "E01TRILMM",
                                     "E01TRILDD",
                                     "E01TRILYY",
                                     "E01TRILMU",
                                     "E01TRILTT",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01TRIBNK",
                                   "E01TRICUN",
                                   "D01TRICUN",
                                   "E01TRIACC",
                                   "E01TRIVND",
                                   "D01TRIVND",
                                   "E01TRINOE",
                                   "D01TRINOE",
                                   "E01TRICMM",
                                   "E01TRICDD",
                                   "E01TRICYY",
                                   "E01TRICMU",
                                   "E01TRICTT",
                                   "E01TRILMM",
                                   "E01TRILDD",
                                   "E01TRILYY",
                                   "E01TRILMU",
                                   "E01TRILTT",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1180124232752";
  final static String rid = "575024C8295D4";
  final static String fmtname = "ECA001401";
  final int FIELDCOUNT = 29;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01TRIBNK = null;
  private DecimalField fieldE01TRICUN = null;
  private CharacterField fieldD01TRICUN = null;
  private DecimalField fieldE01TRIACC = null;
  private CharacterField fieldE01TRIVND = null;
  private CharacterField fieldD01TRIVND = null;
  private CharacterField fieldE01TRINOE = null;
  private CharacterField fieldD01TRINOE = null;
  private DecimalField fieldE01TRICMM = null;
  private DecimalField fieldE01TRICDD = null;
  private DecimalField fieldE01TRICYY = null;
  private CharacterField fieldE01TRICMU = null;
  private CharacterField fieldE01TRICTT = null;
  private DecimalField fieldE01TRILMM = null;
  private DecimalField fieldE01TRILDD = null;
  private DecimalField fieldE01TRILYY = null;
  private CharacterField fieldE01TRILMU = null;
  private CharacterField fieldE01TRILTT = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ECA001401Message.
  */
  public ECA001401Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 334;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01TRIBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01TRIBNK");
    fields[10] = fieldE01TRICUN =
    new DecimalField(message, HEADERSIZE + 44, 10, 0, "E01TRICUN");
    fields[11] = fieldD01TRICUN =
    new CharacterField(message, HEADERSIZE + 54, 60, "D01TRICUN");
    fields[12] = fieldE01TRIACC =
    new DecimalField(message, HEADERSIZE + 114, 13, 0, "E01TRIACC");
    fields[13] = fieldE01TRIVND =
    new CharacterField(message, HEADERSIZE + 127, 4, "E01TRIVND");
    fields[14] = fieldD01TRIVND =
    new CharacterField(message, HEADERSIZE + 131, 45, "D01TRIVND");
    fields[15] = fieldE01TRINOE =
    new CharacterField(message, HEADERSIZE + 176, 10, "E01TRINOE");
    fields[16] = fieldD01TRINOE =
    new CharacterField(message, HEADERSIZE + 186, 45, "D01TRINOE");
    fields[17] = fieldE01TRICMM =
    new DecimalField(message, HEADERSIZE + 231, 3, 0, "E01TRICMM");
    fields[18] = fieldE01TRICDD =
    new DecimalField(message, HEADERSIZE + 234, 3, 0, "E01TRICDD");
    fields[19] = fieldE01TRICYY =
    new DecimalField(message, HEADERSIZE + 237, 5, 0, "E01TRICYY");
    fields[20] = fieldE01TRICMU =
    new CharacterField(message, HEADERSIZE + 242, 10, "E01TRICMU");
    fields[21] = fieldE01TRICTT =
    new CharacterField(message, HEADERSIZE + 252, 26, "E01TRICTT");
    fields[22] = fieldE01TRILMM =
    new DecimalField(message, HEADERSIZE + 278, 3, 0, "E01TRILMM");
    fields[23] = fieldE01TRILDD =
    new DecimalField(message, HEADERSIZE + 281, 3, 0, "E01TRILDD");
    fields[24] = fieldE01TRILYY =
    new DecimalField(message, HEADERSIZE + 284, 5, 0, "E01TRILYY");
    fields[25] = fieldE01TRILMU =
    new CharacterField(message, HEADERSIZE + 289, 10, "E01TRILMU");
    fields[26] = fieldE01TRILTT =
    new CharacterField(message, HEADERSIZE + 299, 26, "E01TRILTT");
    fields[27] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 325, 8, 0, "E01NUMREC");
    fields[28] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 333, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01TRIBNK using a String value.
  */
  public void setE01TRIBNK(String newvalue)
  {
    fieldE01TRIBNK.setString(newvalue);
  }

  /**
  * Get value of field E01TRIBNK as a String.
  */
  public String getE01TRIBNK()
  {
    return fieldE01TRIBNK.getString();
  }

  /**
  * Set field E01TRICUN using a String value.
  */
  public void setE01TRICUN(String newvalue)
  {
    fieldE01TRICUN.setString(newvalue);
  }

  /**
  * Get value of field E01TRICUN as a String.
  */
  public String getE01TRICUN()
  {
    return fieldE01TRICUN.getString();
  }

  /**
  * Set numeric field E01TRICUN using a BigDecimal value.
  */
  public void setE01TRICUN(BigDecimal newvalue)
  {
    fieldE01TRICUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRICUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRICUN()
  {
    return fieldE01TRICUN.getBigDecimal();
  }

  /**
  * Set field D01TRICUN using a String value.
  */
  public void setD01TRICUN(String newvalue)
  {
    fieldD01TRICUN.setString(newvalue);
  }

  /**
  * Get value of field D01TRICUN as a String.
  */
  public String getD01TRICUN()
  {
    return fieldD01TRICUN.getString();
  }

  /**
  * Set field E01TRIACC using a String value.
  */
  public void setE01TRIACC(String newvalue)
  {
    fieldE01TRIACC.setString(newvalue);
  }

  /**
  * Get value of field E01TRIACC as a String.
  */
  public String getE01TRIACC()
  {
    return fieldE01TRIACC.getString();
  }

  /**
  * Set numeric field E01TRIACC using a BigDecimal value.
  */
  public void setE01TRIACC(BigDecimal newvalue)
  {
    fieldE01TRIACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRIACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRIACC()
  {
    return fieldE01TRIACC.getBigDecimal();
  }

  /**
  * Set field E01TRIVND using a String value.
  */
  public void setE01TRIVND(String newvalue)
  {
    fieldE01TRIVND.setString(newvalue);
  }

  /**
  * Get value of field E01TRIVND as a String.
  */
  public String getE01TRIVND()
  {
    return fieldE01TRIVND.getString();
  }

  /**
  * Set field D01TRIVND using a String value.
  */
  public void setD01TRIVND(String newvalue)
  {
    fieldD01TRIVND.setString(newvalue);
  }

  /**
  * Get value of field D01TRIVND as a String.
  */
  public String getD01TRIVND()
  {
    return fieldD01TRIVND.getString();
  }

  /**
  * Set field E01TRINOE using a String value.
  */
  public void setE01TRINOE(String newvalue)
  {
    fieldE01TRINOE.setString(newvalue);
  }

  /**
  * Get value of field E01TRINOE as a String.
  */
  public String getE01TRINOE()
  {
    return fieldE01TRINOE.getString();
  }

  /**
  * Set field D01TRINOE using a String value.
  */
  public void setD01TRINOE(String newvalue)
  {
    fieldD01TRINOE.setString(newvalue);
  }

  /**
  * Get value of field D01TRINOE as a String.
  */
  public String getD01TRINOE()
  {
    return fieldD01TRINOE.getString();
  }

  /**
  * Set field E01TRICMM using a String value.
  */
  public void setE01TRICMM(String newvalue)
  {
    fieldE01TRICMM.setString(newvalue);
  }

  /**
  * Get value of field E01TRICMM as a String.
  */
  public String getE01TRICMM()
  {
    return fieldE01TRICMM.getString();
  }

  /**
  * Set numeric field E01TRICMM using a BigDecimal value.
  */
  public void setE01TRICMM(BigDecimal newvalue)
  {
    fieldE01TRICMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRICMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRICMM()
  {
    return fieldE01TRICMM.getBigDecimal();
  }

  /**
  * Set field E01TRICDD using a String value.
  */
  public void setE01TRICDD(String newvalue)
  {
    fieldE01TRICDD.setString(newvalue);
  }

  /**
  * Get value of field E01TRICDD as a String.
  */
  public String getE01TRICDD()
  {
    return fieldE01TRICDD.getString();
  }

  /**
  * Set numeric field E01TRICDD using a BigDecimal value.
  */
  public void setE01TRICDD(BigDecimal newvalue)
  {
    fieldE01TRICDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRICDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRICDD()
  {
    return fieldE01TRICDD.getBigDecimal();
  }

  /**
  * Set field E01TRICYY using a String value.
  */
  public void setE01TRICYY(String newvalue)
  {
    fieldE01TRICYY.setString(newvalue);
  }

  /**
  * Get value of field E01TRICYY as a String.
  */
  public String getE01TRICYY()
  {
    return fieldE01TRICYY.getString();
  }

  /**
  * Set numeric field E01TRICYY using a BigDecimal value.
  */
  public void setE01TRICYY(BigDecimal newvalue)
  {
    fieldE01TRICYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRICYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRICYY()
  {
    return fieldE01TRICYY.getBigDecimal();
  }

  /**
  * Set field E01TRICMU using a String value.
  */
  public void setE01TRICMU(String newvalue)
  {
    fieldE01TRICMU.setString(newvalue);
  }

  /**
  * Get value of field E01TRICMU as a String.
  */
  public String getE01TRICMU()
  {
    return fieldE01TRICMU.getString();
  }

  /**
  * Set field E01TRICTT using a String value.
  */
  public void setE01TRICTT(String newvalue)
  {
    fieldE01TRICTT.setString(newvalue);
  }

  /**
  * Get value of field E01TRICTT as a String.
  */
  public String getE01TRICTT()
  {
    return fieldE01TRICTT.getString();
  }

  /**
  * Set field E01TRILMM using a String value.
  */
  public void setE01TRILMM(String newvalue)
  {
    fieldE01TRILMM.setString(newvalue);
  }

  /**
  * Get value of field E01TRILMM as a String.
  */
  public String getE01TRILMM()
  {
    return fieldE01TRILMM.getString();
  }

  /**
  * Set numeric field E01TRILMM using a BigDecimal value.
  */
  public void setE01TRILMM(BigDecimal newvalue)
  {
    fieldE01TRILMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRILMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRILMM()
  {
    return fieldE01TRILMM.getBigDecimal();
  }

  /**
  * Set field E01TRILDD using a String value.
  */
  public void setE01TRILDD(String newvalue)
  {
    fieldE01TRILDD.setString(newvalue);
  }

  /**
  * Get value of field E01TRILDD as a String.
  */
  public String getE01TRILDD()
  {
    return fieldE01TRILDD.getString();
  }

  /**
  * Set numeric field E01TRILDD using a BigDecimal value.
  */
  public void setE01TRILDD(BigDecimal newvalue)
  {
    fieldE01TRILDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRILDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRILDD()
  {
    return fieldE01TRILDD.getBigDecimal();
  }

  /**
  * Set field E01TRILYY using a String value.
  */
  public void setE01TRILYY(String newvalue)
  {
    fieldE01TRILYY.setString(newvalue);
  }

  /**
  * Get value of field E01TRILYY as a String.
  */
  public String getE01TRILYY()
  {
    return fieldE01TRILYY.getString();
  }

  /**
  * Set numeric field E01TRILYY using a BigDecimal value.
  */
  public void setE01TRILYY(BigDecimal newvalue)
  {
    fieldE01TRILYY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01TRILYY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01TRILYY()
  {
    return fieldE01TRILYY.getBigDecimal();
  }

  /**
  * Set field E01TRILMU using a String value.
  */
  public void setE01TRILMU(String newvalue)
  {
    fieldE01TRILMU.setString(newvalue);
  }

  /**
  * Get value of field E01TRILMU as a String.
  */
  public String getE01TRILMU()
  {
    return fieldE01TRILMU.getString();
  }

  /**
  * Set field E01TRILTT using a String value.
  */
  public void setE01TRILTT(String newvalue)
  {
    fieldE01TRILTT.setString(newvalue);
  }

  /**
  * Get value of field E01TRILTT as a String.
  */
  public String getE01TRILTT()
  {
    return fieldE01TRILTT.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
