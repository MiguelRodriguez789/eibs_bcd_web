package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EIE0330W physical file definition.
* 
* File level identifier is 1130611113211.
* Record format level identifier is 3AAF9CC7CB4F9.
*/

public class EIE0330WMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "INSTIIC",
                                     "INSTDSC",
                                     "INSTTYP",
                                     "CUSTCUN",
                                     "CUSTNA1",
                                     "PORTPRF",
                                     "PORTPDC",
                                     "INSTCCY",
                                     "EXPAMOU",
                                     "INTERTE",
                                     "AMOUINT",
                                     "MTIMAM",
                                     "MTIMAD",
                                     "MTIMAY",
                                     "EVETYP",
                                     "EVETYD",
                                     "HELDBY",
                                     "DISCTYP",
                                     "CONVCAM",
                                     "CAPAHAC",
                                     "CAPCHCY",
                                     "PORTTPR",
                                     "CAPIKPL",
                                     "PAYCAMT",
                                     "CUSTCUT",
                                     "PLEDPGD",
                                     "BALABED",
                                     "EXCHFEX",
                                     "PAYDPY1",
                                     "PAYDPY2",
                                     "PAYDPY3"
                                   };
  final static String tnames[] = {
                                   "INSTIIC",
                                   "INSTDSC",
                                   "INSTTYP",
                                   "CUSTCUN",
                                   "CUSTNA1",
                                   "PORTPRF",
                                   "PORTPDC",
                                   "INSTCCY",
                                   "EXPAMOU",
                                   "INTERTE",
                                   "AMOUINT",
                                   "MTIMAM",
                                   "MTIMAD",
                                   "MTIMAY",
                                   "EVETYP",
                                   "EVETYD",
                                   "HELDBY",
                                   "DISCTYP",
                                   "CONVCAM",
                                   "CAPAHAC",
                                   "CAPCHCY",
                                   "PORTTPR",
                                   "CAPIKPL",
                                   "PAYCAMT",
                                   "CUSTCUT",
                                   "PLEDPGD",
                                   "BALABED",
                                   "EXCHFEX",
                                   "PAYDPY1",
                                   "PAYDPY2",
                                   "PAYDPY3"
                                 };
  final static String fid = "1130611113211";
  final static String rid = "3AAF9CC7CB4F9";
  final static String fmtname = "EIE0330W";
  final int FIELDCOUNT = 31;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldINSTIIC = null;
  private CharacterField fieldINSTDSC = null;
  private CharacterField fieldINSTTYP = null;
  private DecimalField fieldCUSTCUN = null;
  private CharacterField fieldCUSTNA1 = null;
  private DecimalField fieldPORTPRF = null;
  private CharacterField fieldPORTPDC = null;
  private CharacterField fieldINSTCCY = null;
  private DecimalField fieldEXPAMOU = null;
  private DecimalField fieldINTERTE = null;
  private DecimalField fieldAMOUINT = null;
  private DecimalField fieldMTIMAM = null;
  private DecimalField fieldMTIMAD = null;
  private DecimalField fieldMTIMAY = null;
  private CharacterField fieldEVETYP = null;
  private CharacterField fieldEVETYD = null;
  private CharacterField fieldHELDBY = null;
  private CharacterField fieldDISCTYP = null;
  private DecimalField fieldCONVCAM = null;
  private DecimalField fieldCAPAHAC = null;
  private CharacterField fieldCAPCHCY = null;
  private CharacterField fieldPORTTPR = null;
  private DecimalField fieldCAPIKPL = null;
  private DecimalField fieldPAYCAMT = null;
  private CharacterField fieldCUSTCUT = null;
  private CharacterField fieldPLEDPGD = null;
  private DecimalField fieldBALABED = null;
  private CharacterField fieldEXCHFEX = null;
  private DecimalField fieldPAYDPY1 = null;
  private DecimalField fieldPAYDPY2 = null;
  private DecimalField fieldPAYDPY3 = null;

  /**
  * Constructor for EIE0330WMessage.
  */
  public EIE0330WMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 477;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldINSTIIC =
    new DecimalField(message, HEADERSIZE + 0, 13, 0, "INSTIIC");
    fields[1] = fieldINSTDSC =
    new CharacterField(message, HEADERSIZE + 13, 45, "INSTDSC");
    fields[2] = fieldINSTTYP =
    new CharacterField(message, HEADERSIZE + 58, 4, "INSTTYP");
    fields[3] = fieldCUSTCUN =
    new DecimalField(message, HEADERSIZE + 62, 10, 0, "CUSTCUN");
    fields[4] = fieldCUSTNA1 =
    new CharacterField(message, HEADERSIZE + 72, 45, "CUSTNA1");
    fields[5] = fieldPORTPRF =
    new DecimalField(message, HEADERSIZE + 117, 13, 0, "PORTPRF");
    fields[6] = fieldPORTPDC =
    new CharacterField(message, HEADERSIZE + 130, 60, "PORTPDC");
    fields[7] = fieldINSTCCY =
    new CharacterField(message, HEADERSIZE + 190, 3, "INSTCCY");
    fields[8] = fieldEXPAMOU =
    new DecimalField(message, HEADERSIZE + 193, 23, 8, "EXPAMOU");
    fields[9] = fieldINTERTE =
    new DecimalField(message, HEADERSIZE + 216, 11, 6, "INTERTE");
    fields[10] = fieldAMOUINT =
    new DecimalField(message, HEADERSIZE + 227, 23, 6, "AMOUINT");
    fields[11] = fieldMTIMAM =
    new DecimalField(message, HEADERSIZE + 250, 3, 0, "MTIMAM");
    fields[12] = fieldMTIMAD =
    new DecimalField(message, HEADERSIZE + 253, 3, 0, "MTIMAD");
    fields[13] = fieldMTIMAY =
    new DecimalField(message, HEADERSIZE + 256, 5, 0, "MTIMAY");
    fields[14] = fieldEVETYP =
    new CharacterField(message, HEADERSIZE + 261, 1, "EVETYP");
    fields[15] = fieldEVETYD =
    new CharacterField(message, HEADERSIZE + 262, 45, "EVETYD");
    fields[16] = fieldHELDBY =
    new CharacterField(message, HEADERSIZE + 307, 45, "HELDBY");
    fields[17] = fieldDISCTYP =
    new CharacterField(message, HEADERSIZE + 352, 1, "DISCTYP");
    fields[18] = fieldCONVCAM =
    new DecimalField(message, HEADERSIZE + 353, 23, 6, "CONVCAM");
    fields[19] = fieldCAPAHAC =
    new DecimalField(message, HEADERSIZE + 376, 13, 0, "CAPAHAC");
    fields[20] = fieldCAPCHCY =
    new CharacterField(message, HEADERSIZE + 389, 3, "CAPCHCY");
    fields[21] = fieldPORTTPR =
    new CharacterField(message, HEADERSIZE + 392, 1, "PORTTPR");
    fields[22] = fieldCAPIKPL =
    new DecimalField(message, HEADERSIZE + 393, 23, 6, "CAPIKPL");
    fields[23] = fieldPAYCAMT =
    new DecimalField(message, HEADERSIZE + 416, 23, 6, "PAYCAMT");
    fields[24] = fieldCUSTCUT =
    new CharacterField(message, HEADERSIZE + 439, 2, "CUSTCUT");
    fields[25] = fieldPLEDPGD =
    new CharacterField(message, HEADERSIZE + 441, 1, "PLEDPGD");
    fields[26] = fieldBALABED =
    new DecimalField(message, HEADERSIZE + 442, 23, 6, "BALABED");
    fields[27] = fieldEXCHFEX =
    new CharacterField(message, HEADERSIZE + 465, 1, "EXCHFEX");
    fields[28] = fieldPAYDPY1 =
    new DecimalField(message, HEADERSIZE + 466, 3, 0, "PAYDPY1");
    fields[29] = fieldPAYDPY2 =
    new DecimalField(message, HEADERSIZE + 469, 3, 0, "PAYDPY2");
    fields[30] = fieldPAYDPY3 =
    new DecimalField(message, HEADERSIZE + 472, 5, 0, "PAYDPY3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field INSTIIC using a String value.
  */
  public void setINSTIIC(String newvalue)
  {
    fieldINSTIIC.setString(newvalue);
  }

  /**
  * Get value of field INSTIIC as a String.
  */
  public String getINSTIIC()
  {
    return fieldINSTIIC.getString();
  }

  /**
  * Set numeric field INSTIIC using a BigDecimal value.
  */
  public void setINSTIIC(BigDecimal newvalue)
  {
    fieldINSTIIC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSTIIC as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSTIIC()
  {
    return fieldINSTIIC.getBigDecimal();
  }

  /**
  * Set field INSTDSC using a String value.
  */
  public void setINSTDSC(String newvalue)
  {
    fieldINSTDSC.setString(newvalue);
  }

  /**
  * Get value of field INSTDSC as a String.
  */
  public String getINSTDSC()
  {
    return fieldINSTDSC.getString();
  }

  /**
  * Set field INSTTYP using a String value.
  */
  public void setINSTTYP(String newvalue)
  {
    fieldINSTTYP.setString(newvalue);
  }

  /**
  * Get value of field INSTTYP as a String.
  */
  public String getINSTTYP()
  {
    return fieldINSTTYP.getString();
  }

  /**
  * Set field CUSTCUN using a String value.
  */
  public void setCUSTCUN(String newvalue)
  {
    fieldCUSTCUN.setString(newvalue);
  }

  /**
  * Get value of field CUSTCUN as a String.
  */
  public String getCUSTCUN()
  {
    return fieldCUSTCUN.getString();
  }

  /**
  * Set numeric field CUSTCUN using a BigDecimal value.
  */
  public void setCUSTCUN(BigDecimal newvalue)
  {
    fieldCUSTCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CUSTCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalCUSTCUN()
  {
    return fieldCUSTCUN.getBigDecimal();
  }

  /**
  * Set field CUSTNA1 using a String value.
  */
  public void setCUSTNA1(String newvalue)
  {
    fieldCUSTNA1.setString(newvalue);
  }

  /**
  * Get value of field CUSTNA1 as a String.
  */
  public String getCUSTNA1()
  {
    return fieldCUSTNA1.getString();
  }

  /**
  * Set field PORTPRF using a String value.
  */
  public void setPORTPRF(String newvalue)
  {
    fieldPORTPRF.setString(newvalue);
  }

  /**
  * Get value of field PORTPRF as a String.
  */
  public String getPORTPRF()
  {
    return fieldPORTPRF.getString();
  }

  /**
  * Set numeric field PORTPRF using a BigDecimal value.
  */
  public void setPORTPRF(BigDecimal newvalue)
  {
    fieldPORTPRF.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PORTPRF as a BigDecimal.
  */
  public BigDecimal getBigDecimalPORTPRF()
  {
    return fieldPORTPRF.getBigDecimal();
  }

  /**
  * Set field PORTPDC using a String value.
  */
  public void setPORTPDC(String newvalue)
  {
    fieldPORTPDC.setString(newvalue);
  }

  /**
  * Get value of field PORTPDC as a String.
  */
  public String getPORTPDC()
  {
    return fieldPORTPDC.getString();
  }

  /**
  * Set field INSTCCY using a String value.
  */
  public void setINSTCCY(String newvalue)
  {
    fieldINSTCCY.setString(newvalue);
  }

  /**
  * Get value of field INSTCCY as a String.
  */
  public String getINSTCCY()
  {
    return fieldINSTCCY.getString();
  }

  /**
  * Set field EXPAMOU using a String value.
  */
  public void setEXPAMOU(String newvalue)
  {
    fieldEXPAMOU.setString(newvalue);
  }

  /**
  * Get value of field EXPAMOU as a String.
  */
  public String getEXPAMOU()
  {
    return fieldEXPAMOU.getString();
  }

  /**
  * Set numeric field EXPAMOU using a BigDecimal value.
  */
  public void setEXPAMOU(BigDecimal newvalue)
  {
    fieldEXPAMOU.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPAMOU as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPAMOU()
  {
    return fieldEXPAMOU.getBigDecimal();
  }

  /**
  * Set field INTERTE using a String value.
  */
  public void setINTERTE(String newvalue)
  {
    fieldINTERTE.setString(newvalue);
  }

  /**
  * Get value of field INTERTE as a String.
  */
  public String getINTERTE()
  {
    return fieldINTERTE.getString();
  }

  /**
  * Set numeric field INTERTE using a BigDecimal value.
  */
  public void setINTERTE(BigDecimal newvalue)
  {
    fieldINTERTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTERTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTERTE()
  {
    return fieldINTERTE.getBigDecimal();
  }

  /**
  * Set field AMOUINT using a String value.
  */
  public void setAMOUINT(String newvalue)
  {
    fieldAMOUINT.setString(newvalue);
  }

  /**
  * Get value of field AMOUINT as a String.
  */
  public String getAMOUINT()
  {
    return fieldAMOUINT.getString();
  }

  /**
  * Set numeric field AMOUINT using a BigDecimal value.
  */
  public void setAMOUINT(BigDecimal newvalue)
  {
    fieldAMOUINT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field AMOUINT as a BigDecimal.
  */
  public BigDecimal getBigDecimalAMOUINT()
  {
    return fieldAMOUINT.getBigDecimal();
  }

  /**
  * Set field MTIMAM using a String value.
  */
  public void setMTIMAM(String newvalue)
  {
    fieldMTIMAM.setString(newvalue);
  }

  /**
  * Get value of field MTIMAM as a String.
  */
  public String getMTIMAM()
  {
    return fieldMTIMAM.getString();
  }

  /**
  * Set numeric field MTIMAM using a BigDecimal value.
  */
  public void setMTIMAM(BigDecimal newvalue)
  {
    fieldMTIMAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MTIMAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalMTIMAM()
  {
    return fieldMTIMAM.getBigDecimal();
  }

  /**
  * Set field MTIMAD using a String value.
  */
  public void setMTIMAD(String newvalue)
  {
    fieldMTIMAD.setString(newvalue);
  }

  /**
  * Get value of field MTIMAD as a String.
  */
  public String getMTIMAD()
  {
    return fieldMTIMAD.getString();
  }

  /**
  * Set numeric field MTIMAD using a BigDecimal value.
  */
  public void setMTIMAD(BigDecimal newvalue)
  {
    fieldMTIMAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MTIMAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalMTIMAD()
  {
    return fieldMTIMAD.getBigDecimal();
  }

  /**
  * Set field MTIMAY using a String value.
  */
  public void setMTIMAY(String newvalue)
  {
    fieldMTIMAY.setString(newvalue);
  }

  /**
  * Get value of field MTIMAY as a String.
  */
  public String getMTIMAY()
  {
    return fieldMTIMAY.getString();
  }

  /**
  * Set numeric field MTIMAY using a BigDecimal value.
  */
  public void setMTIMAY(BigDecimal newvalue)
  {
    fieldMTIMAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MTIMAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalMTIMAY()
  {
    return fieldMTIMAY.getBigDecimal();
  }

  /**
  * Set field EVETYP using a String value.
  */
  public void setEVETYP(String newvalue)
  {
    fieldEVETYP.setString(newvalue);
  }

  /**
  * Get value of field EVETYP as a String.
  */
  public String getEVETYP()
  {
    return fieldEVETYP.getString();
  }

  /**
  * Set field EVETYD using a String value.
  */
  public void setEVETYD(String newvalue)
  {
    fieldEVETYD.setString(newvalue);
  }

  /**
  * Get value of field EVETYD as a String.
  */
  public String getEVETYD()
  {
    return fieldEVETYD.getString();
  }

  /**
  * Set field HELDBY using a String value.
  */
  public void setHELDBY(String newvalue)
  {
    fieldHELDBY.setString(newvalue);
  }

  /**
  * Get value of field HELDBY as a String.
  */
  public String getHELDBY()
  {
    return fieldHELDBY.getString();
  }

  /**
  * Set field DISCTYP using a String value.
  */
  public void setDISCTYP(String newvalue)
  {
    fieldDISCTYP.setString(newvalue);
  }

  /**
  * Get value of field DISCTYP as a String.
  */
  public String getDISCTYP()
  {
    return fieldDISCTYP.getString();
  }

  /**
  * Set field CONVCAM using a String value.
  */
  public void setCONVCAM(String newvalue)
  {
    fieldCONVCAM.setString(newvalue);
  }

  /**
  * Get value of field CONVCAM as a String.
  */
  public String getCONVCAM()
  {
    return fieldCONVCAM.getString();
  }

  /**
  * Set numeric field CONVCAM using a BigDecimal value.
  */
  public void setCONVCAM(BigDecimal newvalue)
  {
    fieldCONVCAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CONVCAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalCONVCAM()
  {
    return fieldCONVCAM.getBigDecimal();
  }

  /**
  * Set field CAPAHAC using a String value.
  */
  public void setCAPAHAC(String newvalue)
  {
    fieldCAPAHAC.setString(newvalue);
  }

  /**
  * Get value of field CAPAHAC as a String.
  */
  public String getCAPAHAC()
  {
    return fieldCAPAHAC.getString();
  }

  /**
  * Set numeric field CAPAHAC using a BigDecimal value.
  */
  public void setCAPAHAC(BigDecimal newvalue)
  {
    fieldCAPAHAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CAPAHAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalCAPAHAC()
  {
    return fieldCAPAHAC.getBigDecimal();
  }

  /**
  * Set field CAPCHCY using a String value.
  */
  public void setCAPCHCY(String newvalue)
  {
    fieldCAPCHCY.setString(newvalue);
  }

  /**
  * Get value of field CAPCHCY as a String.
  */
  public String getCAPCHCY()
  {
    return fieldCAPCHCY.getString();
  }

  /**
  * Set field PORTTPR using a String value.
  */
  public void setPORTTPR(String newvalue)
  {
    fieldPORTTPR.setString(newvalue);
  }

  /**
  * Get value of field PORTTPR as a String.
  */
  public String getPORTTPR()
  {
    return fieldPORTTPR.getString();
  }

  /**
  * Set field CAPIKPL using a String value.
  */
  public void setCAPIKPL(String newvalue)
  {
    fieldCAPIKPL.setString(newvalue);
  }

  /**
  * Get value of field CAPIKPL as a String.
  */
  public String getCAPIKPL()
  {
    return fieldCAPIKPL.getString();
  }

  /**
  * Set numeric field CAPIKPL using a BigDecimal value.
  */
  public void setCAPIKPL(BigDecimal newvalue)
  {
    fieldCAPIKPL.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CAPIKPL as a BigDecimal.
  */
  public BigDecimal getBigDecimalCAPIKPL()
  {
    return fieldCAPIKPL.getBigDecimal();
  }

  /**
  * Set field PAYCAMT using a String value.
  */
  public void setPAYCAMT(String newvalue)
  {
    fieldPAYCAMT.setString(newvalue);
  }

  /**
  * Get value of field PAYCAMT as a String.
  */
  public String getPAYCAMT()
  {
    return fieldPAYCAMT.getString();
  }

  /**
  * Set numeric field PAYCAMT using a BigDecimal value.
  */
  public void setPAYCAMT(BigDecimal newvalue)
  {
    fieldPAYCAMT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PAYCAMT as a BigDecimal.
  */
  public BigDecimal getBigDecimalPAYCAMT()
  {
    return fieldPAYCAMT.getBigDecimal();
  }

  /**
  * Set field CUSTCUT using a String value.
  */
  public void setCUSTCUT(String newvalue)
  {
    fieldCUSTCUT.setString(newvalue);
  }

  /**
  * Get value of field CUSTCUT as a String.
  */
  public String getCUSTCUT()
  {
    return fieldCUSTCUT.getString();
  }

  /**
  * Set field PLEDPGD using a String value.
  */
  public void setPLEDPGD(String newvalue)
  {
    fieldPLEDPGD.setString(newvalue);
  }

  /**
  * Get value of field PLEDPGD as a String.
  */
  public String getPLEDPGD()
  {
    return fieldPLEDPGD.getString();
  }

  /**
  * Set field BALABED using a String value.
  */
  public void setBALABED(String newvalue)
  {
    fieldBALABED.setString(newvalue);
  }

  /**
  * Get value of field BALABED as a String.
  */
  public String getBALABED()
  {
    return fieldBALABED.getString();
  }

  /**
  * Set numeric field BALABED using a BigDecimal value.
  */
  public void setBALABED(BigDecimal newvalue)
  {
    fieldBALABED.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field BALABED as a BigDecimal.
  */
  public BigDecimal getBigDecimalBALABED()
  {
    return fieldBALABED.getBigDecimal();
  }

  /**
  * Set field EXCHFEX using a String value.
  */
  public void setEXCHFEX(String newvalue)
  {
    fieldEXCHFEX.setString(newvalue);
  }

  /**
  * Get value of field EXCHFEX as a String.
  */
  public String getEXCHFEX()
  {
    return fieldEXCHFEX.getString();
  }

  /**
  * Set field PAYDPY1 using a String value.
  */
  public void setPAYDPY1(String newvalue)
  {
    fieldPAYDPY1.setString(newvalue);
  }

  /**
  * Get value of field PAYDPY1 as a String.
  */
  public String getPAYDPY1()
  {
    return fieldPAYDPY1.getString();
  }

  /**
  * Set numeric field PAYDPY1 using a BigDecimal value.
  */
  public void setPAYDPY1(BigDecimal newvalue)
  {
    fieldPAYDPY1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PAYDPY1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalPAYDPY1()
  {
    return fieldPAYDPY1.getBigDecimal();
  }

  /**
  * Set field PAYDPY2 using a String value.
  */
  public void setPAYDPY2(String newvalue)
  {
    fieldPAYDPY2.setString(newvalue);
  }

  /**
  * Get value of field PAYDPY2 as a String.
  */
  public String getPAYDPY2()
  {
    return fieldPAYDPY2.getString();
  }

  /**
  * Set numeric field PAYDPY2 using a BigDecimal value.
  */
  public void setPAYDPY2(BigDecimal newvalue)
  {
    fieldPAYDPY2.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PAYDPY2 as a BigDecimal.
  */
  public BigDecimal getBigDecimalPAYDPY2()
  {
    return fieldPAYDPY2.getBigDecimal();
  }

  /**
  * Set field PAYDPY3 using a String value.
  */
  public void setPAYDPY3(String newvalue)
  {
    fieldPAYDPY3.setString(newvalue);
  }

  /**
  * Get value of field PAYDPY3 as a String.
  */
  public String getPAYDPY3()
  {
    return fieldPAYDPY3.getString();
  }

  /**
  * Set numeric field PAYDPY3 using a BigDecimal value.
  */
  public void setPAYDPY3(BigDecimal newvalue)
  {
    fieldPAYDPY3.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PAYDPY3 as a BigDecimal.
  */
  public BigDecimal getBigDecimalPAYDPY3()
  {
    return fieldPAYDPY3.getBigDecimal();
  }

}
