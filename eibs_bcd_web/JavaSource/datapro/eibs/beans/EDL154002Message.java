package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL154002 physical file definition.
* 
* File level identifier is 1210723113830.
* Record format level identifier is 42F714FE9835F.
*/

public class EDL154002Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02BNK",
                                     "E02CCY",
                                     "E02TPR",
                                     "E02CDP",
                                     "E02CCP",
                                     "E02CDI",
                                     "E02CCI",
                                     "E02CDO",
                                     "E02CCO",
                                     "E02CD1",
                                     "E02CC1",
                                     "E02RDC",
                                     "E02RCC",
                                     "E02RDI",
                                     "E02RCI",
                                     "E02RDO",
                                     "E02RCO",
                                     "E02NUMREC",
                                     "E02INDOPE"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02BNK",
                                   "E02CCY",
                                   "E02TPR",
                                   "E02CDP",
                                   "E02CCP",
                                   "E02CDI",
                                   "E02CCI",
                                   "E02CDO",
                                   "E02CCO",
                                   "E02CD1",
                                   "E02CC1",
                                   "E02RDC",
                                   "E02RCC",
                                   "E02RDI",
                                   "E02RCI",
                                   "E02RDO",
                                   "E02RCO",
                                   "E02NUMREC",
                                   "E02INDOPE"
                                 };
  final static String fid = "1210723113830";
  final static String rid = "42F714FE9835F";
  final static String fmtname = "EDL154002";
  final int FIELDCOUNT = 28;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private CharacterField fieldE02BNK = null;
  private CharacterField fieldE02CCY = null;
  private CharacterField fieldE02TPR = null;
  private DecimalField fieldE02CDP = null;
  private DecimalField fieldE02CCP = null;
  private DecimalField fieldE02CDI = null;
  private DecimalField fieldE02CCI = null;
  private DecimalField fieldE02CDO = null;
  private DecimalField fieldE02CCO = null;
  private DecimalField fieldE02CD1 = null;
  private DecimalField fieldE02CC1 = null;
  private DecimalField fieldE02RDC = null;
  private DecimalField fieldE02RCC = null;
  private DecimalField fieldE02RDI = null;
  private DecimalField fieldE02RCI = null;
  private DecimalField fieldE02RDO = null;
  private DecimalField fieldE02RCO = null;
  private DecimalField fieldE02NUMREC = null;
  private CharacterField fieldE02INDOPE = null;

  /**
  * Constructor for EDL154002Message.
  */
  public EDL154002Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 295;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02BNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E02BNK");
    fields[10] = fieldE02CCY =
    new CharacterField(message, HEADERSIZE + 44, 3, "E02CCY");
    fields[11] = fieldE02TPR =
    new CharacterField(message, HEADERSIZE + 47, 1, "E02TPR");
    fields[12] = fieldE02CDP =
    new DecimalField(message, HEADERSIZE + 48, 17, 0, "E02CDP");
    fields[13] = fieldE02CCP =
    new DecimalField(message, HEADERSIZE + 65, 17, 0, "E02CCP");
    fields[14] = fieldE02CDI =
    new DecimalField(message, HEADERSIZE + 82, 17, 0, "E02CDI");
    fields[15] = fieldE02CCI =
    new DecimalField(message, HEADERSIZE + 99, 17, 0, "E02CCI");
    fields[16] = fieldE02CDO =
    new DecimalField(message, HEADERSIZE + 116, 17, 0, "E02CDO");
    fields[17] = fieldE02CCO =
    new DecimalField(message, HEADERSIZE + 133, 17, 0, "E02CCO");
    fields[18] = fieldE02CD1 =
    new DecimalField(message, HEADERSIZE + 150, 17, 0, "E02CD1");
    fields[19] = fieldE02CC1 =
    new DecimalField(message, HEADERSIZE + 167, 17, 0, "E02CC1");
    fields[20] = fieldE02RDC =
    new DecimalField(message, HEADERSIZE + 184, 17, 0, "E02RDC");
    fields[21] = fieldE02RCC =
    new DecimalField(message, HEADERSIZE + 201, 17, 0, "E02RCC");
    fields[22] = fieldE02RDI =
    new DecimalField(message, HEADERSIZE + 218, 17, 0, "E02RDI");
    fields[23] = fieldE02RCI =
    new DecimalField(message, HEADERSIZE + 235, 17, 0, "E02RCI");
    fields[24] = fieldE02RDO =
    new DecimalField(message, HEADERSIZE + 252, 17, 0, "E02RDO");
    fields[25] = fieldE02RCO =
    new DecimalField(message, HEADERSIZE + 269, 17, 0, "E02RCO");
    fields[26] = fieldE02NUMREC =
    new DecimalField(message, HEADERSIZE + 286, 8, 0, "E02NUMREC");
    fields[27] = fieldE02INDOPE =
    new CharacterField(message, HEADERSIZE + 294, 1, "E02INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02BNK using a String value.
  */
  public void setE02BNK(String newvalue)
  {
    fieldE02BNK.setString(newvalue);
  }

  /**
  * Get value of field E02BNK as a String.
  */
  public String getE02BNK()
  {
    return fieldE02BNK.getString();
  }

  /**
  * Set field E02CCY using a String value.
  */
  public void setE02CCY(String newvalue)
  {
    fieldE02CCY.setString(newvalue);
  }

  /**
  * Get value of field E02CCY as a String.
  */
  public String getE02CCY()
  {
    return fieldE02CCY.getString();
  }

  /**
  * Set field E02TPR using a String value.
  */
  public void setE02TPR(String newvalue)
  {
    fieldE02TPR.setString(newvalue);
  }

  /**
  * Get value of field E02TPR as a String.
  */
  public String getE02TPR()
  {
    return fieldE02TPR.getString();
  }

  /**
  * Set field E02CDP using a String value.
  */
  public void setE02CDP(String newvalue)
  {
    fieldE02CDP.setString(newvalue);
  }

  /**
  * Get value of field E02CDP as a String.
  */
  public String getE02CDP()
  {
    return fieldE02CDP.getString();
  }

  /**
  * Set numeric field E02CDP using a BigDecimal value.
  */
  public void setE02CDP(BigDecimal newvalue)
  {
    fieldE02CDP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDP()
  {
    return fieldE02CDP.getBigDecimal();
  }

  /**
  * Set field E02CCP using a String value.
  */
  public void setE02CCP(String newvalue)
  {
    fieldE02CCP.setString(newvalue);
  }

  /**
  * Get value of field E02CCP as a String.
  */
  public String getE02CCP()
  {
    return fieldE02CCP.getString();
  }

  /**
  * Set numeric field E02CCP using a BigDecimal value.
  */
  public void setE02CCP(BigDecimal newvalue)
  {
    fieldE02CCP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCP as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCP()
  {
    return fieldE02CCP.getBigDecimal();
  }

  /**
  * Set field E02CDI using a String value.
  */
  public void setE02CDI(String newvalue)
  {
    fieldE02CDI.setString(newvalue);
  }

  /**
  * Get value of field E02CDI as a String.
  */
  public String getE02CDI()
  {
    return fieldE02CDI.getString();
  }

  /**
  * Set numeric field E02CDI using a BigDecimal value.
  */
  public void setE02CDI(BigDecimal newvalue)
  {
    fieldE02CDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDI()
  {
    return fieldE02CDI.getBigDecimal();
  }

  /**
  * Set field E02CCI using a String value.
  */
  public void setE02CCI(String newvalue)
  {
    fieldE02CCI.setString(newvalue);
  }

  /**
  * Get value of field E02CCI as a String.
  */
  public String getE02CCI()
  {
    return fieldE02CCI.getString();
  }

  /**
  * Set numeric field E02CCI using a BigDecimal value.
  */
  public void setE02CCI(BigDecimal newvalue)
  {
    fieldE02CCI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCI()
  {
    return fieldE02CCI.getBigDecimal();
  }

  /**
  * Set field E02CDO using a String value.
  */
  public void setE02CDO(String newvalue)
  {
    fieldE02CDO.setString(newvalue);
  }

  /**
  * Get value of field E02CDO as a String.
  */
  public String getE02CDO()
  {
    return fieldE02CDO.getString();
  }

  /**
  * Set numeric field E02CDO using a BigDecimal value.
  */
  public void setE02CDO(BigDecimal newvalue)
  {
    fieldE02CDO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CDO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CDO()
  {
    return fieldE02CDO.getBigDecimal();
  }

  /**
  * Set field E02CCO using a String value.
  */
  public void setE02CCO(String newvalue)
  {
    fieldE02CCO.setString(newvalue);
  }

  /**
  * Get value of field E02CCO as a String.
  */
  public String getE02CCO()
  {
    return fieldE02CCO.getString();
  }

  /**
  * Set numeric field E02CCO using a BigDecimal value.
  */
  public void setE02CCO(BigDecimal newvalue)
  {
    fieldE02CCO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CCO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CCO()
  {
    return fieldE02CCO.getBigDecimal();
  }

  /**
  * Set field E02CD1 using a String value.
  */
  public void setE02CD1(String newvalue)
  {
    fieldE02CD1.setString(newvalue);
  }

  /**
  * Get value of field E02CD1 as a String.
  */
  public String getE02CD1()
  {
    return fieldE02CD1.getString();
  }

  /**
  * Set numeric field E02CD1 using a BigDecimal value.
  */
  public void setE02CD1(BigDecimal newvalue)
  {
    fieldE02CD1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CD1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CD1()
  {
    return fieldE02CD1.getBigDecimal();
  }

  /**
  * Set field E02CC1 using a String value.
  */
  public void setE02CC1(String newvalue)
  {
    fieldE02CC1.setString(newvalue);
  }

  /**
  * Get value of field E02CC1 as a String.
  */
  public String getE02CC1()
  {
    return fieldE02CC1.getString();
  }

  /**
  * Set numeric field E02CC1 using a BigDecimal value.
  */
  public void setE02CC1(BigDecimal newvalue)
  {
    fieldE02CC1.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02CC1 as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02CC1()
  {
    return fieldE02CC1.getBigDecimal();
  }

  /**
  * Set field E02RDC using a String value.
  */
  public void setE02RDC(String newvalue)
  {
    fieldE02RDC.setString(newvalue);
  }

  /**
  * Get value of field E02RDC as a String.
  */
  public String getE02RDC()
  {
    return fieldE02RDC.getString();
  }

  /**
  * Set numeric field E02RDC using a BigDecimal value.
  */
  public void setE02RDC(BigDecimal newvalue)
  {
    fieldE02RDC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RDC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RDC()
  {
    return fieldE02RDC.getBigDecimal();
  }

  /**
  * Set field E02RCC using a String value.
  */
  public void setE02RCC(String newvalue)
  {
    fieldE02RCC.setString(newvalue);
  }

  /**
  * Get value of field E02RCC as a String.
  */
  public String getE02RCC()
  {
    return fieldE02RCC.getString();
  }

  /**
  * Set numeric field E02RCC using a BigDecimal value.
  */
  public void setE02RCC(BigDecimal newvalue)
  {
    fieldE02RCC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCC()
  {
    return fieldE02RCC.getBigDecimal();
  }

  /**
  * Set field E02RDI using a String value.
  */
  public void setE02RDI(String newvalue)
  {
    fieldE02RDI.setString(newvalue);
  }

  /**
  * Get value of field E02RDI as a String.
  */
  public String getE02RDI()
  {
    return fieldE02RDI.getString();
  }

  /**
  * Set numeric field E02RDI using a BigDecimal value.
  */
  public void setE02RDI(BigDecimal newvalue)
  {
    fieldE02RDI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RDI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RDI()
  {
    return fieldE02RDI.getBigDecimal();
  }

  /**
  * Set field E02RCI using a String value.
  */
  public void setE02RCI(String newvalue)
  {
    fieldE02RCI.setString(newvalue);
  }

  /**
  * Get value of field E02RCI as a String.
  */
  public String getE02RCI()
  {
    return fieldE02RCI.getString();
  }

  /**
  * Set numeric field E02RCI using a BigDecimal value.
  */
  public void setE02RCI(BigDecimal newvalue)
  {
    fieldE02RCI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCI as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCI()
  {
    return fieldE02RCI.getBigDecimal();
  }

  /**
  * Set field E02RDO using a String value.
  */
  public void setE02RDO(String newvalue)
  {
    fieldE02RDO.setString(newvalue);
  }

  /**
  * Get value of field E02RDO as a String.
  */
  public String getE02RDO()
  {
    return fieldE02RDO.getString();
  }

  /**
  * Set numeric field E02RDO using a BigDecimal value.
  */
  public void setE02RDO(BigDecimal newvalue)
  {
    fieldE02RDO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RDO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RDO()
  {
    return fieldE02RDO.getBigDecimal();
  }

  /**
  * Set field E02RCO using a String value.
  */
  public void setE02RCO(String newvalue)
  {
    fieldE02RCO.setString(newvalue);
  }

  /**
  * Get value of field E02RCO as a String.
  */
  public String getE02RCO()
  {
    return fieldE02RCO.getString();
  }

  /**
  * Set numeric field E02RCO using a BigDecimal value.
  */
  public void setE02RCO(BigDecimal newvalue)
  {
    fieldE02RCO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02RCO as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02RCO()
  {
    return fieldE02RCO.getBigDecimal();
  }

  /**
  * Set field E02NUMREC using a String value.
  */
  public void setE02NUMREC(String newvalue)
  {
    fieldE02NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E02NUMREC as a String.
  */
  public String getE02NUMREC()
  {
    return fieldE02NUMREC.getString();
  }

  /**
  * Set numeric field E02NUMREC using a BigDecimal value.
  */
  public void setE02NUMREC(BigDecimal newvalue)
  {
    fieldE02NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02NUMREC()
  {
    return fieldE02NUMREC.getBigDecimal();
  }

  /**
  * Set field E02INDOPE using a String value.
  */
  public void setE02INDOPE(String newvalue)
  {
    fieldE02INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E02INDOPE as a String.
  */
  public String getE02INDOPE()
  {
    return fieldE02INDOPE.getString();
  }

}
