package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EMQ0000DS physical file definition.
* 
* File level identifier is 1180103124306.
* Record format level identifier is 3E155B42AA28E.
*/

public class EMQ0000DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01FILE",
                                     "HDRSTART",
                                     "HDRSERVICE",
                                     "HDRSEQ",
                                     "HDRDATE",
                                     "HDRTIME",
                                     "HDRVENDOR",
                                     "HDRCHANNEL",
                                     "HDRTERMINA",
                                     "HDRIP",
                                     "HDRNUMREC",
                                     "HDRERR",
                                     "HDREND",
                                     "E01DATA",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01FILE",
                                   "HDRSTART",
                                   "HDRSERVICE",
                                   "HDRSEQ",
                                   "HDRDATE",
                                   "HDRTIME",
                                   "HDRVENDOR",
                                   "HDRCHANNEL",
                                   "HDRTERMINA",
                                   "HDRIP",
                                   "HDRNUMREC",
                                   "HDRERR",
                                   "HDREND",
                                   "E01DATA",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1180103124306";
  final static String rid = "3E155B42AA28E";
  final static String fmtname = "EMQ0000DS";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01FILE = null;
  private CharacterField fieldHDRSTART = null;
  private CharacterField fieldHDRSERVICE = null;
  private DecimalField fieldHDRSEQ = null;
  private DecimalField fieldHDRDATE = null;
  private DecimalField fieldHDRTIME = null;
  private CharacterField fieldHDRVENDOR = null;
  private CharacterField fieldHDRCHANNEL = null;
  private CharacterField fieldHDRTERMINA = null;
  private CharacterField fieldHDRIP = null;
  private DecimalField fieldHDRNUMREC = null;
  private CharacterField fieldHDRERR = null;
  private CharacterField fieldHDREND = null;
  private CharacterField fieldE01DATA = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for EMQ0000DSMessage.
  */
  public EMQ0000DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 18937;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01FILE =
    new CharacterField(message, HEADERSIZE + 42, 40, "E01FILE");
    fields[10] = fieldHDRSTART =
    new CharacterField(message, HEADERSIZE + 82, 3, "HDRSTART");
    fields[11] = fieldHDRSERVICE =
    new CharacterField(message, HEADERSIZE + 85, 10, "HDRSERVICE");
    fields[12] = fieldHDRSEQ =
    new DecimalField(message, HEADERSIZE + 95, 13, 0, "HDRSEQ");
    fields[13] = fieldHDRDATE =
    new DecimalField(message, HEADERSIZE + 108, 9, 0, "HDRDATE");
    fields[14] = fieldHDRTIME =
    new DecimalField(message, HEADERSIZE + 117, 5, 0, "HDRTIME");
    fields[15] = fieldHDRVENDOR =
    new CharacterField(message, HEADERSIZE + 122, 4, "HDRVENDOR");
    fields[16] = fieldHDRCHANNEL =
    new CharacterField(message, HEADERSIZE + 126, 2, "HDRCHANNEL");
    fields[17] = fieldHDRTERMINA =
    new CharacterField(message, HEADERSIZE + 128, 25, "HDRTERMINA");
    fields[18] = fieldHDRIP =
    new CharacterField(message, HEADERSIZE + 153, 25, "HDRIP");
    fields[19] = fieldHDRNUMREC =
    new DecimalField(message, HEADERSIZE + 178, 5, 0, "HDRNUMREC");
    fields[20] = fieldHDRERR =
    new CharacterField(message, HEADERSIZE + 183, 742, "HDRERR");
    fields[21] = fieldHDREND =
    new CharacterField(message, HEADERSIZE + 925, 3, "HDREND");
    fields[22] = fieldE01DATA =
    new CharacterField(message, HEADERSIZE + 928, 18000, "E01DATA");
    fields[23] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 18928, 8, 0, "E01NUMREC");
    fields[24] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 18936, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01FILE using a String value.
  */
  public void setE01FILE(String newvalue)
  {
    fieldE01FILE.setString(newvalue);
  }

  /**
  * Get value of field E01FILE as a String.
  */
  public String getE01FILE()
  {
    return fieldE01FILE.getString();
  }

  /**
  * Set field HDRSTART using a String value.
  */
  public void setHDRSTART(String newvalue)
  {
    fieldHDRSTART.setString(newvalue);
  }

  /**
  * Get value of field HDRSTART as a String.
  */
  public String getHDRSTART()
  {
    return fieldHDRSTART.getString();
  }

  /**
  * Set field HDRSERVICE using a String value.
  */
  public void setHDRSERVICE(String newvalue)
  {
    fieldHDRSERVICE.setString(newvalue);
  }

  /**
  * Get value of field HDRSERVICE as a String.
  */
  public String getHDRSERVICE()
  {
    return fieldHDRSERVICE.getString();
  }

  /**
  * Set field HDRSEQ using a String value.
  */
  public void setHDRSEQ(String newvalue)
  {
    fieldHDRSEQ.setString(newvalue);
  }

  /**
  * Get value of field HDRSEQ as a String.
  */
  public String getHDRSEQ()
  {
    return fieldHDRSEQ.getString();
  }

  /**
  * Set numeric field HDRSEQ using a BigDecimal value.
  */
  public void setHDRSEQ(BigDecimal newvalue)
  {
    fieldHDRSEQ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HDRSEQ as a BigDecimal.
  */
  public BigDecimal getBigDecimalHDRSEQ()
  {
    return fieldHDRSEQ.getBigDecimal();
  }

  /**
  * Set field HDRDATE using a String value.
  */
  public void setHDRDATE(String newvalue)
  {
    fieldHDRDATE.setString(newvalue);
  }

  /**
  * Get value of field HDRDATE as a String.
  */
  public String getHDRDATE()
  {
    return fieldHDRDATE.getString();
  }

  /**
  * Set numeric field HDRDATE using a BigDecimal value.
  */
  public void setHDRDATE(BigDecimal newvalue)
  {
    fieldHDRDATE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HDRDATE as a BigDecimal.
  */
  public BigDecimal getBigDecimalHDRDATE()
  {
    return fieldHDRDATE.getBigDecimal();
  }

  /**
  * Set field HDRTIME using a String value.
  */
  public void setHDRTIME(String newvalue)
  {
    fieldHDRTIME.setString(newvalue);
  }

  /**
  * Get value of field HDRTIME as a String.
  */
  public String getHDRTIME()
  {
    return fieldHDRTIME.getString();
  }

  /**
  * Set numeric field HDRTIME using a BigDecimal value.
  */
  public void setHDRTIME(BigDecimal newvalue)
  {
    fieldHDRTIME.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HDRTIME as a BigDecimal.
  */
  public BigDecimal getBigDecimalHDRTIME()
  {
    return fieldHDRTIME.getBigDecimal();
  }

  /**
  * Set field HDRVENDOR using a String value.
  */
  public void setHDRVENDOR(String newvalue)
  {
    fieldHDRVENDOR.setString(newvalue);
  }

  /**
  * Get value of field HDRVENDOR as a String.
  */
  public String getHDRVENDOR()
  {
    return fieldHDRVENDOR.getString();
  }

  /**
  * Set field HDRCHANNEL using a String value.
  */
  public void setHDRCHANNEL(String newvalue)
  {
    fieldHDRCHANNEL.setString(newvalue);
  }

  /**
  * Get value of field HDRCHANNEL as a String.
  */
  public String getHDRCHANNEL()
  {
    return fieldHDRCHANNEL.getString();
  }

  /**
  * Set field HDRTERMINA using a String value.
  */
  public void setHDRTERMINA(String newvalue)
  {
    fieldHDRTERMINA.setString(newvalue);
  }

  /**
  * Get value of field HDRTERMINA as a String.
  */
  public String getHDRTERMINA()
  {
    return fieldHDRTERMINA.getString();
  }

  /**
  * Set field HDRIP using a String value.
  */
  public void setHDRIP(String newvalue)
  {
    fieldHDRIP.setString(newvalue);
  }

  /**
  * Get value of field HDRIP as a String.
  */
  public String getHDRIP()
  {
    return fieldHDRIP.getString();
  }

  /**
  * Set field HDRNUMREC using a String value.
  */
  public void setHDRNUMREC(String newvalue)
  {
    fieldHDRNUMREC.setString(newvalue);
  }

  /**
  * Get value of field HDRNUMREC as a String.
  */
  public String getHDRNUMREC()
  {
    return fieldHDRNUMREC.getString();
  }

  /**
  * Set numeric field HDRNUMREC using a BigDecimal value.
  */
  public void setHDRNUMREC(BigDecimal newvalue)
  {
    fieldHDRNUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HDRNUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalHDRNUMREC()
  {
    return fieldHDRNUMREC.getBigDecimal();
  }

  /**
  * Set field HDRERR using a String value.
  */
  public void setHDRERR(String newvalue)
  {
    fieldHDRERR.setString(newvalue);
  }

  /**
  * Get value of field HDRERR as a String.
  */
  public String getHDRERR()
  {
    return fieldHDRERR.getString();
  }

  /**
  * Set field HDREND using a String value.
  */
  public void setHDREND(String newvalue)
  {
    fieldHDREND.setString(newvalue);
  }

  /**
  * Get value of field HDREND as a String.
  */
  public String getHDREND()
  {
    return fieldHDREND.getString();
  }

  /**
  * Set field E01DATA using a String value.
  */
  public void setE01DATA(String newvalue)
  {
    fieldE01DATA.setString(newvalue);
  }

  /**
  * Get value of field E01DATA as a String.
  */
  public String getE01DATA()
  {
    return fieldE01DATA.getString();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
