package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC090025 physical file definition.
* 
* File level identifier is 1100706173620.
* Record format level identifier is 3EA566CC63CEA.
*/

public class EGC090025Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "EGCUSR",
                                     "EGCATY",
                                     "EGCXAA",
                                     "EGCXMM",
                                     "EXPACC",
                                     "CUSIDN",
                                     "CUSSHN",
                                     "EXPCPON",
                                     "EXPFAM",
                                     "EXPFAD",
                                     "EXPFAY",
                                     "EXPSCH",
                                     "EGCXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "EGCUSR",
                                   "EGCATY",
                                   "EGCXAA",
                                   "EGCXMM",
                                   "EXPACC",
                                   "CUSIDN",
                                   "CUSSHN",
                                   "EXPCPON",
                                   "EXPFAM",
                                   "EXPFAD",
                                   "EXPFAY",
                                   "EXPSCH",
                                   "EGCXRT"
                                 };
  final static String fid = "1100706173620";
  final static String rid = "3EA566CC63CEA";
  final static String fmtname = "EGC090025";
  final int FIELDCOUNT = 22;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldEGCUSR = null;
  private CharacterField fieldEGCATY = null;
  private DecimalField fieldEGCXAA = null;
  private DecimalField fieldEGCXMM = null;
  private DecimalField fieldEXPACC = null;
  private CharacterField fieldCUSIDN = null;
  private CharacterField fieldCUSSHN = null;
  private DecimalField fieldEXPCPON = null;
  private DecimalField fieldEXPFAM = null;
  private DecimalField fieldEXPFAD = null;
  private DecimalField fieldEXPFAY = null;
  private CharacterField fieldEXPSCH = null;
  private DecimalField fieldEGCXRT = null;

  /**
  * Constructor for EGC090025Message.
  */
  public EGC090025Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 141;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldEGCUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "EGCUSR");
    fields[10] = fieldEGCATY =
    new CharacterField(message, HEADERSIZE + 52, 4, "EGCATY");
    fields[11] = fieldEGCXAA =
    new DecimalField(message, HEADERSIZE + 56, 5, 0, "EGCXAA");
    fields[12] = fieldEGCXMM =
    new DecimalField(message, HEADERSIZE + 61, 3, 0, "EGCXMM");
    fields[13] = fieldEXPACC =
    new DecimalField(message, HEADERSIZE + 64, 13, 0, "EXPACC");
    fields[14] = fieldCUSIDN =
    new CharacterField(message, HEADERSIZE + 77, 15, "CUSIDN");
    fields[15] = fieldCUSSHN =
    new CharacterField(message, HEADERSIZE + 92, 15, "CUSSHN");
    fields[16] = fieldEXPCPON =
    new DecimalField(message, HEADERSIZE + 107, 17, 2, "EXPCPON");
    fields[17] = fieldEXPFAM =
    new DecimalField(message, HEADERSIZE + 124, 3, 0, "EXPFAM");
    fields[18] = fieldEXPFAD =
    new DecimalField(message, HEADERSIZE + 127, 3, 0, "EXPFAD");
    fields[19] = fieldEXPFAY =
    new DecimalField(message, HEADERSIZE + 130, 5, 0, "EXPFAY");
    fields[20] = fieldEXPSCH =
    new CharacterField(message, HEADERSIZE + 135, 4, "EXPSCH");
    fields[21] = fieldEGCXRT =
    new DecimalField(message, HEADERSIZE + 139, 2, 0, "EGCXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field EGCUSR using a String value.
  */
  public void setEGCUSR(String newvalue)
  {
    fieldEGCUSR.setString(newvalue);
  }

  /**
  * Get value of field EGCUSR as a String.
  */
  public String getEGCUSR()
  {
    return fieldEGCUSR.getString();
  }

  /**
  * Set field EGCATY using a String value.
  */
  public void setEGCATY(String newvalue)
  {
    fieldEGCATY.setString(newvalue);
  }

  /**
  * Get value of field EGCATY as a String.
  */
  public String getEGCATY()
  {
    return fieldEGCATY.getString();
  }

  /**
  * Set field EGCXAA using a String value.
  */
  public void setEGCXAA(String newvalue)
  {
    fieldEGCXAA.setString(newvalue);
  }

  /**
  * Get value of field EGCXAA as a String.
  */
  public String getEGCXAA()
  {
    return fieldEGCXAA.getString();
  }

  /**
  * Set numeric field EGCXAA using a BigDecimal value.
  */
  public void setEGCXAA(BigDecimal newvalue)
  {
    fieldEGCXAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXAA()
  {
    return fieldEGCXAA.getBigDecimal();
  }

  /**
  * Set field EGCXMM using a String value.
  */
  public void setEGCXMM(String newvalue)
  {
    fieldEGCXMM.setString(newvalue);
  }

  /**
  * Get value of field EGCXMM as a String.
  */
  public String getEGCXMM()
  {
    return fieldEGCXMM.getString();
  }

  /**
  * Set numeric field EGCXMM using a BigDecimal value.
  */
  public void setEGCXMM(BigDecimal newvalue)
  {
    fieldEGCXMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXMM()
  {
    return fieldEGCXMM.getBigDecimal();
  }

  /**
  * Set field EXPACC using a String value.
  */
  public void setEXPACC(String newvalue)
  {
    fieldEXPACC.setString(newvalue);
  }

  /**
  * Get value of field EXPACC as a String.
  */
  public String getEXPACC()
  {
    return fieldEXPACC.getString();
  }

  /**
  * Set numeric field EXPACC using a BigDecimal value.
  */
  public void setEXPACC(BigDecimal newvalue)
  {
    fieldEXPACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPACC()
  {
    return fieldEXPACC.getBigDecimal();
  }

  /**
  * Set field CUSIDN using a String value.
  */
  public void setCUSIDN(String newvalue)
  {
    fieldCUSIDN.setString(newvalue);
  }

  /**
  * Get value of field CUSIDN as a String.
  */
  public String getCUSIDN()
  {
    return fieldCUSIDN.getString();
  }

  /**
  * Set field CUSSHN using a String value.
  */
  public void setCUSSHN(String newvalue)
  {
    fieldCUSSHN.setString(newvalue);
  }

  /**
  * Get value of field CUSSHN as a String.
  */
  public String getCUSSHN()
  {
    return fieldCUSSHN.getString();
  }

  /**
  * Set field EXPCPON using a String value.
  */
  public void setEXPCPON(String newvalue)
  {
    fieldEXPCPON.setString(newvalue);
  }

  /**
  * Get value of field EXPCPON as a String.
  */
  public String getEXPCPON()
  {
    return fieldEXPCPON.getString();
  }

  /**
  * Set numeric field EXPCPON using a BigDecimal value.
  */
  public void setEXPCPON(BigDecimal newvalue)
  {
    fieldEXPCPON.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPCPON as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPCPON()
  {
    return fieldEXPCPON.getBigDecimal();
  }

  /**
  * Set field EXPFAM using a String value.
  */
  public void setEXPFAM(String newvalue)
  {
    fieldEXPFAM.setString(newvalue);
  }

  /**
  * Get value of field EXPFAM as a String.
  */
  public String getEXPFAM()
  {
    return fieldEXPFAM.getString();
  }

  /**
  * Set numeric field EXPFAM using a BigDecimal value.
  */
  public void setEXPFAM(BigDecimal newvalue)
  {
    fieldEXPFAM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPFAM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPFAM()
  {
    return fieldEXPFAM.getBigDecimal();
  }

  /**
  * Set field EXPFAD using a String value.
  */
  public void setEXPFAD(String newvalue)
  {
    fieldEXPFAD.setString(newvalue);
  }

  /**
  * Get value of field EXPFAD as a String.
  */
  public String getEXPFAD()
  {
    return fieldEXPFAD.getString();
  }

  /**
  * Set numeric field EXPFAD using a BigDecimal value.
  */
  public void setEXPFAD(BigDecimal newvalue)
  {
    fieldEXPFAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPFAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPFAD()
  {
    return fieldEXPFAD.getBigDecimal();
  }

  /**
  * Set field EXPFAY using a String value.
  */
  public void setEXPFAY(String newvalue)
  {
    fieldEXPFAY.setString(newvalue);
  }

  /**
  * Get value of field EXPFAY as a String.
  */
  public String getEXPFAY()
  {
    return fieldEXPFAY.getString();
  }

  /**
  * Set numeric field EXPFAY using a BigDecimal value.
  */
  public void setEXPFAY(BigDecimal newvalue)
  {
    fieldEXPFAY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EXPFAY as a BigDecimal.
  */
  public BigDecimal getBigDecimalEXPFAY()
  {
    return fieldEXPFAY.getBigDecimal();
  }

  /**
  * Set field EXPSCH using a String value.
  */
  public void setEXPSCH(String newvalue)
  {
    fieldEXPSCH.setString(newvalue);
  }

  /**
  * Get value of field EXPSCH as a String.
  */
  public String getEXPSCH()
  {
    return fieldEXPSCH.getString();
  }

  /**
  * Set field EGCXRT using a String value.
  */
  public void setEGCXRT(String newvalue)
  {
    fieldEGCXRT.setString(newvalue);
  }

  /**
  * Get value of field EGCXRT as a String.
  */
  public String getEGCXRT()
  {
    return fieldEGCXRT.getString();
  }

  /**
  * Set numeric field EGCXRT using a BigDecimal value.
  */
  public void setEGCXRT(BigDecimal newvalue)
  {
    fieldEGCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXRT()
  {
    return fieldEGCXRT.getBigDecimal();
  }

}
