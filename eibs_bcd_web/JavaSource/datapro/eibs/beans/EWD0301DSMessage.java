package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EWD0301DS physical file definition.
* 
* File level identifier is 1130611113451.
* Record format level identifier is 3D0B360576A61.
*/

public class EWD0301DSMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "RWDUSR",
                                     "RWDTYP",
                                     "RWDFRC",
                                     "SWDAGR",
                                     "SWDCUN",
                                     "SWDACC",
                                     "SWDNA1",
                                     "SWDREF",
                                     "SWDOPM",
                                     "SWDOPD",
                                     "SWDOPY",
                                     "SWDBNK",
                                     "SWDATY",
                                     "SWDDSC",
                                     "SWDACD",
                                     "SWDSRC",
                                     "SWDREC",
                                     "SWDSCR",
                                     "SWDOPE"
                                   };
  final static String tnames[] = {
                                   "RWDUSR",
                                   "RWDTYP",
                                   "RWDFRC",
                                   "SWDAGR",
                                   "SWDCUN",
                                   "SWDACC",
                                   "SWDNA1",
                                   "SWDREF",
                                   "SWDOPM",
                                   "SWDOPD",
                                   "SWDOPY",
                                   "SWDBNK",
                                   "SWDATY",
                                   "SWDDSC",
                                   "SWDACD",
                                   "SWDSRC",
                                   "SWDREC",
                                   "SWDSCR",
                                   "SWDOPE"
                                 };
  final static String fid = "1130611113451";
  final static String rid = "3D0B360576A61";
  final static String fmtname = "EWD0301DS";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldRWDUSR = null;
  private CharacterField fieldRWDTYP = null;
  private DecimalField fieldRWDFRC = null;
  private DecimalField fieldSWDAGR = null;
  private DecimalField fieldSWDCUN = null;
  private DecimalField fieldSWDACC = null;
  private CharacterField fieldSWDNA1 = null;
  private CharacterField fieldSWDREF = null;
  private DecimalField fieldSWDOPM = null;
  private DecimalField fieldSWDOPD = null;
  private DecimalField fieldSWDOPY = null;
  private CharacterField fieldSWDBNK = null;
  private CharacterField fieldSWDATY = null;
  private CharacterField fieldSWDDSC = null;
  private CharacterField fieldSWDACD = null;
  private CharacterField fieldSWDSRC = null;
  private DecimalField fieldSWDREC = null;
  private CharacterField fieldSWDSCR = null;
  private CharacterField fieldSWDOPE = null;

  /**
  * Constructor for EWD0301DSMessage.
  */
  public EWD0301DSMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 222;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldRWDUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "RWDUSR");
    fields[1] = fieldRWDTYP =
    new CharacterField(message, HEADERSIZE + 10, 1, "RWDTYP");
    fields[2] = fieldRWDFRC =
    new DecimalField(message, HEADERSIZE + 11, 8, 0, "RWDFRC");
    fields[3] = fieldSWDAGR =
    new DecimalField(message, HEADERSIZE + 19, 13, 0, "SWDAGR");
    fields[4] = fieldSWDCUN =
    new DecimalField(message, HEADERSIZE + 32, 10, 0, "SWDCUN");
    fields[5] = fieldSWDACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "SWDACC");
    fields[6] = fieldSWDNA1 =
    new CharacterField(message, HEADERSIZE + 55, 45, "SWDNA1");
    fields[7] = fieldSWDREF =
    new CharacterField(message, HEADERSIZE + 100, 30, "SWDREF");
    fields[8] = fieldSWDOPM =
    new DecimalField(message, HEADERSIZE + 130, 3, 0, "SWDOPM");
    fields[9] = fieldSWDOPD =
    new DecimalField(message, HEADERSIZE + 133, 3, 0, "SWDOPD");
    fields[10] = fieldSWDOPY =
    new DecimalField(message, HEADERSIZE + 136, 5, 0, "SWDOPY");
    fields[11] = fieldSWDBNK =
    new CharacterField(message, HEADERSIZE + 141, 2, "SWDBNK");
    fields[12] = fieldSWDATY =
    new CharacterField(message, HEADERSIZE + 143, 4, "SWDATY");
    fields[13] = fieldSWDDSC =
    new CharacterField(message, HEADERSIZE + 147, 60, "SWDDSC");
    fields[14] = fieldSWDACD =
    new CharacterField(message, HEADERSIZE + 207, 2, "SWDACD");
    fields[15] = fieldSWDSRC =
    new CharacterField(message, HEADERSIZE + 209, 1, "SWDSRC");
    fields[16] = fieldSWDREC =
    new DecimalField(message, HEADERSIZE + 210, 8, 0, "SWDREC");
    fields[17] = fieldSWDSCR =
    new CharacterField(message, HEADERSIZE + 218, 3, "SWDSCR");
    fields[18] = fieldSWDOPE =
    new CharacterField(message, HEADERSIZE + 221, 1, "SWDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field RWDUSR using a String value.
  */
  public void setRWDUSR(String newvalue)
  {
    fieldRWDUSR.setString(newvalue);
  }

  /**
  * Get value of field RWDUSR as a String.
  */
  public String getRWDUSR()
  {
    return fieldRWDUSR.getString();
  }

  /**
  * Set field RWDTYP using a String value.
  */
  public void setRWDTYP(String newvalue)
  {
    fieldRWDTYP.setString(newvalue);
  }

  /**
  * Get value of field RWDTYP as a String.
  */
  public String getRWDTYP()
  {
    return fieldRWDTYP.getString();
  }

  /**
  * Set field RWDFRC using a String value.
  */
  public void setRWDFRC(String newvalue)
  {
    fieldRWDFRC.setString(newvalue);
  }

  /**
  * Get value of field RWDFRC as a String.
  */
  public String getRWDFRC()
  {
    return fieldRWDFRC.getString();
  }

  /**
  * Set numeric field RWDFRC using a BigDecimal value.
  */
  public void setRWDFRC(BigDecimal newvalue)
  {
    fieldRWDFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RWDFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRWDFRC()
  {
    return fieldRWDFRC.getBigDecimal();
  }

  /**
  * Set field SWDAGR using a String value.
  */
  public void setSWDAGR(String newvalue)
  {
    fieldSWDAGR.setString(newvalue);
  }

  /**
  * Get value of field SWDAGR as a String.
  */
  public String getSWDAGR()
  {
    return fieldSWDAGR.getString();
  }

  /**
  * Set numeric field SWDAGR using a BigDecimal value.
  */
  public void setSWDAGR(BigDecimal newvalue)
  {
    fieldSWDAGR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDAGR as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDAGR()
  {
    return fieldSWDAGR.getBigDecimal();
  }

  /**
  * Set field SWDCUN using a String value.
  */
  public void setSWDCUN(String newvalue)
  {
    fieldSWDCUN.setString(newvalue);
  }

  /**
  * Get value of field SWDCUN as a String.
  */
  public String getSWDCUN()
  {
    return fieldSWDCUN.getString();
  }

  /**
  * Set numeric field SWDCUN using a BigDecimal value.
  */
  public void setSWDCUN(BigDecimal newvalue)
  {
    fieldSWDCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDCUN()
  {
    return fieldSWDCUN.getBigDecimal();
  }

  /**
  * Set field SWDACC using a String value.
  */
  public void setSWDACC(String newvalue)
  {
    fieldSWDACC.setString(newvalue);
  }

  /**
  * Get value of field SWDACC as a String.
  */
  public String getSWDACC()
  {
    return fieldSWDACC.getString();
  }

  /**
  * Set numeric field SWDACC using a BigDecimal value.
  */
  public void setSWDACC(BigDecimal newvalue)
  {
    fieldSWDACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDACC()
  {
    return fieldSWDACC.getBigDecimal();
  }

  /**
  * Set field SWDNA1 using a String value.
  */
  public void setSWDNA1(String newvalue)
  {
    fieldSWDNA1.setString(newvalue);
  }

  /**
  * Get value of field SWDNA1 as a String.
  */
  public String getSWDNA1()
  {
    return fieldSWDNA1.getString();
  }

  /**
  * Set field SWDREF using a String value.
  */
  public void setSWDREF(String newvalue)
  {
    fieldSWDREF.setString(newvalue);
  }

  /**
  * Get value of field SWDREF as a String.
  */
  public String getSWDREF()
  {
    return fieldSWDREF.getString();
  }

  /**
  * Set field SWDOPM using a String value.
  */
  public void setSWDOPM(String newvalue)
  {
    fieldSWDOPM.setString(newvalue);
  }

  /**
  * Get value of field SWDOPM as a String.
  */
  public String getSWDOPM()
  {
    return fieldSWDOPM.getString();
  }

  /**
  * Set numeric field SWDOPM using a BigDecimal value.
  */
  public void setSWDOPM(BigDecimal newvalue)
  {
    fieldSWDOPM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDOPM as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDOPM()
  {
    return fieldSWDOPM.getBigDecimal();
  }

  /**
  * Set field SWDOPD using a String value.
  */
  public void setSWDOPD(String newvalue)
  {
    fieldSWDOPD.setString(newvalue);
  }

  /**
  * Get value of field SWDOPD as a String.
  */
  public String getSWDOPD()
  {
    return fieldSWDOPD.getString();
  }

  /**
  * Set numeric field SWDOPD using a BigDecimal value.
  */
  public void setSWDOPD(BigDecimal newvalue)
  {
    fieldSWDOPD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDOPD as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDOPD()
  {
    return fieldSWDOPD.getBigDecimal();
  }

  /**
  * Set field SWDOPY using a String value.
  */
  public void setSWDOPY(String newvalue)
  {
    fieldSWDOPY.setString(newvalue);
  }

  /**
  * Get value of field SWDOPY as a String.
  */
  public String getSWDOPY()
  {
    return fieldSWDOPY.getString();
  }

  /**
  * Set numeric field SWDOPY using a BigDecimal value.
  */
  public void setSWDOPY(BigDecimal newvalue)
  {
    fieldSWDOPY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDOPY as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDOPY()
  {
    return fieldSWDOPY.getBigDecimal();
  }

  /**
  * Set field SWDBNK using a String value.
  */
  public void setSWDBNK(String newvalue)
  {
    fieldSWDBNK.setString(newvalue);
  }

  /**
  * Get value of field SWDBNK as a String.
  */
  public String getSWDBNK()
  {
    return fieldSWDBNK.getString();
  }

  /**
  * Set field SWDATY using a String value.
  */
  public void setSWDATY(String newvalue)
  {
    fieldSWDATY.setString(newvalue);
  }

  /**
  * Get value of field SWDATY as a String.
  */
  public String getSWDATY()
  {
    return fieldSWDATY.getString();
  }

  /**
  * Set field SWDDSC using a String value.
  */
  public void setSWDDSC(String newvalue)
  {
    fieldSWDDSC.setString(newvalue);
  }

  /**
  * Get value of field SWDDSC as a String.
  */
  public String getSWDDSC()
  {
    return fieldSWDDSC.getString();
  }

  /**
  * Set field SWDACD using a String value.
  */
  public void setSWDACD(String newvalue)
  {
    fieldSWDACD.setString(newvalue);
  }

  /**
  * Get value of field SWDACD as a String.
  */
  public String getSWDACD()
  {
    return fieldSWDACD.getString();
  }

  /**
  * Set field SWDSRC using a String value.
  */
  public void setSWDSRC(String newvalue)
  {
    fieldSWDSRC.setString(newvalue);
  }

  /**
  * Get value of field SWDSRC as a String.
  */
  public String getSWDSRC()
  {
    return fieldSWDSRC.getString();
  }

  /**
  * Set field SWDREC using a String value.
  */
  public void setSWDREC(String newvalue)
  {
    fieldSWDREC.setString(newvalue);
  }

  /**
  * Get value of field SWDREC as a String.
  */
  public String getSWDREC()
  {
    return fieldSWDREC.getString();
  }

  /**
  * Set numeric field SWDREC using a BigDecimal value.
  */
  public void setSWDREC(BigDecimal newvalue)
  {
    fieldSWDREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field SWDREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalSWDREC()
  {
    return fieldSWDREC.getBigDecimal();
  }

  /**
  * Set field SWDSCR using a String value.
  */
  public void setSWDSCR(String newvalue)
  {
    fieldSWDSCR.setString(newvalue);
  }

  /**
  * Get value of field SWDSCR as a String.
  */
  public String getSWDSCR()
  {
    return fieldSWDSCR.getString();
  }

  /**
  * Set field SWDOPE using a String value.
  */
  public void setSWDOPE(String newvalue)
  {
    fieldSWDOPE.setString(newvalue);
  }

  /**
  * Get value of field SWDOPE as a String.
  */
  public String getSWDOPE()
  {
    return fieldSWDOPE.getString();
  }

}
