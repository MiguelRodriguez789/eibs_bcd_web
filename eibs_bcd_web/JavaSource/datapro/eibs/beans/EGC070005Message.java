package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EGC070005 physical file definition.
* 
* File level identifier is 1100706173619.
* Record format level identifier is 22C42194C0238.
*/

public class EGC070005Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "EGCUSR",
                                     "EGCXAA",
                                     "EGCXMM",
                                     "EGCPRO",
                                     "EGCMEV",
                                     "RVMACC",
                                     "RVMCAC",
                                     "EGCODY",
                                     "EGCODM",
                                     "EGCODD",
                                     "CUSIDN",
                                     "CUSNA1",
                                     "EGCTYP",
                                     "EGCCUP",
                                     "RVMESW",
                                     "RVMEOF",
                                     "RVMESU",
                                     "EGCXRT"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "EGCUSR",
                                   "EGCXAA",
                                   "EGCXMM",
                                   "EGCPRO",
                                   "EGCMEV",
                                   "RVMACC",
                                   "RVMCAC",
                                   "EGCODY",
                                   "EGCODM",
                                   "EGCODD",
                                   "CUSIDN",
                                   "CUSNA1",
                                   "EGCTYP",
                                   "EGCCUP",
                                   "RVMESW",
                                   "RVMEOF",
                                   "RVMESU",
                                   "EGCXRT"
                                 };
  final static String fid = "1100706173619";
  final static String rid = "22C42194C0238";
  final static String fmtname = "EGC070005";
  final int FIELDCOUNT = 27;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldEGCUSR = null;
  private DecimalField fieldEGCXAA = null;
  private DecimalField fieldEGCXMM = null;
  private CharacterField fieldEGCPRO = null;
  private CharacterField fieldEGCMEV = null;
  private DecimalField fieldRVMACC = null;
  private DecimalField fieldRVMCAC = null;
  private DecimalField fieldEGCODY = null;
  private DecimalField fieldEGCODM = null;
  private DecimalField fieldEGCODD = null;
  private CharacterField fieldCUSIDN = null;
  private CharacterField fieldCUSNA1 = null;
  private CharacterField fieldEGCTYP = null;
  private DecimalField fieldEGCCUP = null;
  private CharacterField fieldRVMESW = null;
  private CharacterField fieldRVMEOF = null;
  private CharacterField fieldRVMESU = null;
  private DecimalField fieldEGCXRT = null;

  /**
  * Constructor for EGC070005Message.
  */
  public EGC070005Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 192;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldEGCUSR =
    new CharacterField(message, HEADERSIZE + 42, 10, "EGCUSR");
    fields[10] = fieldEGCXAA =
    new DecimalField(message, HEADERSIZE + 52, 5, 0, "EGCXAA");
    fields[11] = fieldEGCXMM =
    new DecimalField(message, HEADERSIZE + 57, 3, 0, "EGCXMM");
    fields[12] = fieldEGCPRO =
    new CharacterField(message, HEADERSIZE + 60, 4, "EGCPRO");
    fields[13] = fieldEGCMEV =
    new CharacterField(message, HEADERSIZE + 64, 2, "EGCMEV");
    fields[14] = fieldRVMACC =
    new DecimalField(message, HEADERSIZE + 66, 13, 0, "RVMACC");
    fields[15] = fieldRVMCAC =
    new DecimalField(message, HEADERSIZE + 79, 13, 0, "RVMCAC");
    fields[16] = fieldEGCODY =
    new DecimalField(message, HEADERSIZE + 92, 5, 0, "EGCODY");
    fields[17] = fieldEGCODM =
    new DecimalField(message, HEADERSIZE + 97, 3, 0, "EGCODM");
    fields[18] = fieldEGCODD =
    new DecimalField(message, HEADERSIZE + 100, 3, 0, "EGCODD");
    fields[19] = fieldCUSIDN =
    new CharacterField(message, HEADERSIZE + 103, 15, "CUSIDN");
    fields[20] = fieldCUSNA1 =
    new CharacterField(message, HEADERSIZE + 118, 45, "CUSNA1");
    fields[21] = fieldEGCTYP =
    new CharacterField(message, HEADERSIZE + 163, 4, "EGCTYP");
    fields[22] = fieldEGCCUP =
    new DecimalField(message, HEADERSIZE + 167, 17, 2, "EGCCUP");
    fields[23] = fieldRVMESW =
    new CharacterField(message, HEADERSIZE + 184, 2, "RVMESW");
    fields[24] = fieldRVMEOF =
    new CharacterField(message, HEADERSIZE + 186, 2, "RVMEOF");
    fields[25] = fieldRVMESU =
    new CharacterField(message, HEADERSIZE + 188, 2, "RVMESU");
    fields[26] = fieldEGCXRT =
    new DecimalField(message, HEADERSIZE + 190, 2, 0, "EGCXRT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field EGCUSR using a String value.
  */
  public void setEGCUSR(String newvalue)
  {
    fieldEGCUSR.setString(newvalue);
  }

  /**
  * Get value of field EGCUSR as a String.
  */
  public String getEGCUSR()
  {
    return fieldEGCUSR.getString();
  }

  /**
  * Set field EGCXAA using a String value.
  */
  public void setEGCXAA(String newvalue)
  {
    fieldEGCXAA.setString(newvalue);
  }

  /**
  * Get value of field EGCXAA as a String.
  */
  public String getEGCXAA()
  {
    return fieldEGCXAA.getString();
  }

  /**
  * Set numeric field EGCXAA using a BigDecimal value.
  */
  public void setEGCXAA(BigDecimal newvalue)
  {
    fieldEGCXAA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXAA as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXAA()
  {
    return fieldEGCXAA.getBigDecimal();
  }

  /**
  * Set field EGCXMM using a String value.
  */
  public void setEGCXMM(String newvalue)
  {
    fieldEGCXMM.setString(newvalue);
  }

  /**
  * Get value of field EGCXMM as a String.
  */
  public String getEGCXMM()
  {
    return fieldEGCXMM.getString();
  }

  /**
  * Set numeric field EGCXMM using a BigDecimal value.
  */
  public void setEGCXMM(BigDecimal newvalue)
  {
    fieldEGCXMM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXMM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXMM()
  {
    return fieldEGCXMM.getBigDecimal();
  }

  /**
  * Set field EGCPRO using a String value.
  */
  public void setEGCPRO(String newvalue)
  {
    fieldEGCPRO.setString(newvalue);
  }

  /**
  * Get value of field EGCPRO as a String.
  */
  public String getEGCPRO()
  {
    return fieldEGCPRO.getString();
  }

  /**
  * Set field EGCMEV using a String value.
  */
  public void setEGCMEV(String newvalue)
  {
    fieldEGCMEV.setString(newvalue);
  }

  /**
  * Get value of field EGCMEV as a String.
  */
  public String getEGCMEV()
  {
    return fieldEGCMEV.getString();
  }

  /**
  * Set field RVMACC using a String value.
  */
  public void setRVMACC(String newvalue)
  {
    fieldRVMACC.setString(newvalue);
  }

  /**
  * Get value of field RVMACC as a String.
  */
  public String getRVMACC()
  {
    return fieldRVMACC.getString();
  }

  /**
  * Set numeric field RVMACC using a BigDecimal value.
  */
  public void setRVMACC(BigDecimal newvalue)
  {
    fieldRVMACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RVMACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRVMACC()
  {
    return fieldRVMACC.getBigDecimal();
  }

  /**
  * Set field RVMCAC using a String value.
  */
  public void setRVMCAC(String newvalue)
  {
    fieldRVMCAC.setString(newvalue);
  }

  /**
  * Get value of field RVMCAC as a String.
  */
  public String getRVMCAC()
  {
    return fieldRVMCAC.getString();
  }

  /**
  * Set numeric field RVMCAC using a BigDecimal value.
  */
  public void setRVMCAC(BigDecimal newvalue)
  {
    fieldRVMCAC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field RVMCAC as a BigDecimal.
  */
  public BigDecimal getBigDecimalRVMCAC()
  {
    return fieldRVMCAC.getBigDecimal();
  }

  /**
  * Set field EGCODY using a String value.
  */
  public void setEGCODY(String newvalue)
  {
    fieldEGCODY.setString(newvalue);
  }

  /**
  * Get value of field EGCODY as a String.
  */
  public String getEGCODY()
  {
    return fieldEGCODY.getString();
  }

  /**
  * Set numeric field EGCODY using a BigDecimal value.
  */
  public void setEGCODY(BigDecimal newvalue)
  {
    fieldEGCODY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCODY as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCODY()
  {
    return fieldEGCODY.getBigDecimal();
  }

  /**
  * Set field EGCODM using a String value.
  */
  public void setEGCODM(String newvalue)
  {
    fieldEGCODM.setString(newvalue);
  }

  /**
  * Get value of field EGCODM as a String.
  */
  public String getEGCODM()
  {
    return fieldEGCODM.getString();
  }

  /**
  * Set numeric field EGCODM using a BigDecimal value.
  */
  public void setEGCODM(BigDecimal newvalue)
  {
    fieldEGCODM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCODM as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCODM()
  {
    return fieldEGCODM.getBigDecimal();
  }

  /**
  * Set field EGCODD using a String value.
  */
  public void setEGCODD(String newvalue)
  {
    fieldEGCODD.setString(newvalue);
  }

  /**
  * Get value of field EGCODD as a String.
  */
  public String getEGCODD()
  {
    return fieldEGCODD.getString();
  }

  /**
  * Set numeric field EGCODD using a BigDecimal value.
  */
  public void setEGCODD(BigDecimal newvalue)
  {
    fieldEGCODD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCODD as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCODD()
  {
    return fieldEGCODD.getBigDecimal();
  }

  /**
  * Set field CUSIDN using a String value.
  */
  public void setCUSIDN(String newvalue)
  {
    fieldCUSIDN.setString(newvalue);
  }

  /**
  * Get value of field CUSIDN as a String.
  */
  public String getCUSIDN()
  {
    return fieldCUSIDN.getString();
  }

  /**
  * Set field CUSNA1 using a String value.
  */
  public void setCUSNA1(String newvalue)
  {
    fieldCUSNA1.setString(newvalue);
  }

  /**
  * Get value of field CUSNA1 as a String.
  */
  public String getCUSNA1()
  {
    return fieldCUSNA1.getString();
  }

  /**
  * Set field EGCTYP using a String value.
  */
  public void setEGCTYP(String newvalue)
  {
    fieldEGCTYP.setString(newvalue);
  }

  /**
  * Get value of field EGCTYP as a String.
  */
  public String getEGCTYP()
  {
    return fieldEGCTYP.getString();
  }

  /**
  * Set field EGCCUP using a String value.
  */
  public void setEGCCUP(String newvalue)
  {
    fieldEGCCUP.setString(newvalue);
  }

  /**
  * Get value of field EGCCUP as a String.
  */
  public String getEGCCUP()
  {
    return fieldEGCCUP.getString();
  }

  /**
  * Set numeric field EGCCUP using a BigDecimal value.
  */
  public void setEGCCUP(BigDecimal newvalue)
  {
    fieldEGCCUP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCCUP as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCCUP()
  {
    return fieldEGCCUP.getBigDecimal();
  }

  /**
  * Set field RVMESW using a String value.
  */
  public void setRVMESW(String newvalue)
  {
    fieldRVMESW.setString(newvalue);
  }

  /**
  * Get value of field RVMESW as a String.
  */
  public String getRVMESW()
  {
    return fieldRVMESW.getString();
  }

  /**
  * Set field RVMEOF using a String value.
  */
  public void setRVMEOF(String newvalue)
  {
    fieldRVMEOF.setString(newvalue);
  }

  /**
  * Get value of field RVMEOF as a String.
  */
  public String getRVMEOF()
  {
    return fieldRVMEOF.getString();
  }

  /**
  * Set field RVMESU using a String value.
  */
  public void setRVMESU(String newvalue)
  {
    fieldRVMESU.setString(newvalue);
  }

  /**
  * Get value of field RVMESU as a String.
  */
  public String getRVMESU()
  {
    return fieldRVMESU.getString();
  }

  /**
  * Set field EGCXRT using a String value.
  */
  public void setEGCXRT(String newvalue)
  {
    fieldEGCXRT.setString(newvalue);
  }

  /**
  * Get value of field EGCXRT as a String.
  */
  public String getEGCXRT()
  {
    return fieldEGCXRT.getString();
  }

  /**
  * Set numeric field EGCXRT using a BigDecimal value.
  */
  public void setEGCXRT(BigDecimal newvalue)
  {
    fieldEGCXRT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EGCXRT as a BigDecimal.
  */
  public BigDecimal getBigDecimalEGCXRT()
  {
    return fieldEGCXRT.getBigDecimal();
  }

}
