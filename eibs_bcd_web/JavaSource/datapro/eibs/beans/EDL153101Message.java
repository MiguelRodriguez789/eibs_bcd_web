package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL153101 physical file definition.
* 
* File level identifier is 1130611112925.
* Record format level identifier is 4AFDEC597F370.
*/

public class EDL153101Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01USUBNK",
                                     "E01USUPRD",
                                     "E01USUDSC",
                                     "E01USUCCY",
                                     "E01USUPUS",
                                     "E01USUVDY",
                                     "E01USUVDM",
                                     "E01USUVDD",
                                     "E01USUTEN",
                                     "E01OPETYP",
                                     "E01OPERID",
                                     "E01FILCOD"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01USUBNK",
                                   "E01USUPRD",
                                   "E01USUDSC",
                                   "E01USUCCY",
                                   "E01USUPUS",
                                   "E01USUVDY",
                                   "E01USUVDM",
                                   "E01USUVDD",
                                   "E01USUTEN",
                                   "E01OPETYP",
                                   "E01OPERID",
                                   "E01FILCOD"
                                 };
  final static String fid = "1130611112925";
  final static String rid = "4AFDEC597F370";
  final static String fmtname = "EDL153101";
  final int FIELDCOUNT = 21;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01USUBNK = null;
  private CharacterField fieldE01USUPRD = null;
  private CharacterField fieldE01USUDSC = null;
  private CharacterField fieldE01USUCCY = null;
  private DecimalField fieldE01USUPUS = null;
  private DecimalField fieldE01USUVDY = null;
  private DecimalField fieldE01USUVDM = null;
  private DecimalField fieldE01USUVDD = null;
  private CharacterField fieldE01USUTEN = null;
  private CharacterField fieldE01OPETYP = null;
  private CharacterField fieldE01OPERID = null;
  private CharacterField fieldE01FILCOD = null;

  /**
  * Constructor for EDL153101Message.
  */
  public EDL153101Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 132;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01USUBNK =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01USUBNK");
    fields[10] = fieldE01USUPRD =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01USUPRD");
    fields[11] = fieldE01USUDSC =
    new CharacterField(message, HEADERSIZE + 48, 45, "E01USUDSC");
    fields[12] = fieldE01USUCCY =
    new CharacterField(message, HEADERSIZE + 93, 3, "E01USUCCY");
    fields[13] = fieldE01USUPUS =
    new DecimalField(message, HEADERSIZE + 96, 11, 6, "E01USUPUS");
    fields[14] = fieldE01USUVDY =
    new DecimalField(message, HEADERSIZE + 107, 5, 0, "E01USUVDY");
    fields[15] = fieldE01USUVDM =
    new DecimalField(message, HEADERSIZE + 112, 3, 0, "E01USUVDM");
    fields[16] = fieldE01USUVDD =
    new DecimalField(message, HEADERSIZE + 115, 3, 0, "E01USUVDD");
    fields[17] = fieldE01USUTEN =
    new CharacterField(message, HEADERSIZE + 118, 1, "E01USUTEN");
    fields[18] = fieldE01OPETYP =
    new CharacterField(message, HEADERSIZE + 119, 2, "E01OPETYP");
    fields[19] = fieldE01OPERID =
    new CharacterField(message, HEADERSIZE + 121, 10, "E01OPERID");
    fields[20] = fieldE01FILCOD =
    new CharacterField(message, HEADERSIZE + 131, 1, "E01FILCOD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01USUBNK using a String value.
  */
  public void setE01USUBNK(String newvalue)
  {
    fieldE01USUBNK.setString(newvalue);
  }

  /**
  * Get value of field E01USUBNK as a String.
  */
  public String getE01USUBNK()
  {
    return fieldE01USUBNK.getString();
  }

  /**
  * Set field E01USUPRD using a String value.
  */
  public void setE01USUPRD(String newvalue)
  {
    fieldE01USUPRD.setString(newvalue);
  }

  /**
  * Get value of field E01USUPRD as a String.
  */
  public String getE01USUPRD()
  {
    return fieldE01USUPRD.getString();
  }

  /**
  * Set field E01USUDSC using a String value.
  */
  public void setE01USUDSC(String newvalue)
  {
    fieldE01USUDSC.setString(newvalue);
  }

  /**
  * Get value of field E01USUDSC as a String.
  */
  public String getE01USUDSC()
  {
    return fieldE01USUDSC.getString();
  }

  /**
  * Set field E01USUCCY using a String value.
  */
  public void setE01USUCCY(String newvalue)
  {
    fieldE01USUCCY.setString(newvalue);
  }

  /**
  * Get value of field E01USUCCY as a String.
  */
  public String getE01USUCCY()
  {
    return fieldE01USUCCY.getString();
  }

  /**
  * Set field E01USUPUS using a String value.
  */
  public void setE01USUPUS(String newvalue)
  {
    fieldE01USUPUS.setString(newvalue);
  }

  /**
  * Get value of field E01USUPUS as a String.
  */
  public String getE01USUPUS()
  {
    return fieldE01USUPUS.getString();
  }

  /**
  * Set numeric field E01USUPUS using a BigDecimal value.
  */
  public void setE01USUPUS(BigDecimal newvalue)
  {
    fieldE01USUPUS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01USUPUS as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01USUPUS()
  {
    return fieldE01USUPUS.getBigDecimal();
  }

  /**
  * Set field E01USUVDY using a String value.
  */
  public void setE01USUVDY(String newvalue)
  {
    fieldE01USUVDY.setString(newvalue);
  }

  /**
  * Get value of field E01USUVDY as a String.
  */
  public String getE01USUVDY()
  {
    return fieldE01USUVDY.getString();
  }

  /**
  * Set numeric field E01USUVDY using a BigDecimal value.
  */
  public void setE01USUVDY(BigDecimal newvalue)
  {
    fieldE01USUVDY.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01USUVDY as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01USUVDY()
  {
    return fieldE01USUVDY.getBigDecimal();
  }

  /**
  * Set field E01USUVDM using a String value.
  */
  public void setE01USUVDM(String newvalue)
  {
    fieldE01USUVDM.setString(newvalue);
  }

  /**
  * Get value of field E01USUVDM as a String.
  */
  public String getE01USUVDM()
  {
    return fieldE01USUVDM.getString();
  }

  /**
  * Set numeric field E01USUVDM using a BigDecimal value.
  */
  public void setE01USUVDM(BigDecimal newvalue)
  {
    fieldE01USUVDM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01USUVDM as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01USUVDM()
  {
    return fieldE01USUVDM.getBigDecimal();
  }

  /**
  * Set field E01USUVDD using a String value.
  */
  public void setE01USUVDD(String newvalue)
  {
    fieldE01USUVDD.setString(newvalue);
  }

  /**
  * Get value of field E01USUVDD as a String.
  */
  public String getE01USUVDD()
  {
    return fieldE01USUVDD.getString();
  }

  /**
  * Set numeric field E01USUVDD using a BigDecimal value.
  */
  public void setE01USUVDD(BigDecimal newvalue)
  {
    fieldE01USUVDD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01USUVDD as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01USUVDD()
  {
    return fieldE01USUVDD.getBigDecimal();
  }

  /**
  * Set field E01USUTEN using a String value.
  */
  public void setE01USUTEN(String newvalue)
  {
    fieldE01USUTEN.setString(newvalue);
  }

  /**
  * Get value of field E01USUTEN as a String.
  */
  public String getE01USUTEN()
  {
    return fieldE01USUTEN.getString();
  }

  /**
  * Set field E01OPETYP using a String value.
  */
  public void setE01OPETYP(String newvalue)
  {
    fieldE01OPETYP.setString(newvalue);
  }

  /**
  * Get value of field E01OPETYP as a String.
  */
  public String getE01OPETYP()
  {
    return fieldE01OPETYP.getString();
  }

  /**
  * Set field E01OPERID using a String value.
  */
  public void setE01OPERID(String newvalue)
  {
    fieldE01OPERID.setString(newvalue);
  }

  /**
  * Get value of field E01OPERID as a String.
  */
  public String getE01OPERID()
  {
    return fieldE01OPERID.getString();
  }

  /**
  * Set field E01FILCOD using a String value.
  */
  public void setE01FILCOD(String newvalue)
  {
    fieldE01FILCOD.setString(newvalue);
  }

  /**
  * Get value of field E01FILCOD as a String.
  */
  public String getE01FILCOD()
  {
    return fieldE01FILCOD.getString();
  }

}
