package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ECL000203 physical file definition.
* 
* File level identifier is 1100706173539.
* Record format level identifier is 49F755AB9EDB9.
*/

public class ECL000203Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "ECLCUN",
                                     "ECLXAC",
                                     "ECLMAN",
                                     "ECLNA1",
                                     "ECLRSL",
                                     "ECLSTF",
                                     "ECLINC",
                                     "ECLBNI",
                                     "ECLMA1",
                                     "ECLINR"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "ECLCUN",
                                   "ECLXAC",
                                   "ECLMAN",
                                   "ECLNA1",
                                   "ECLRSL",
                                   "ECLSTF",
                                   "ECLINC",
                                   "ECLBNI",
                                   "ECLMA1",
                                   "ECLINR"
                                 };
  final static String fid = "1100706173539";
  final static String rid = "49F755AB9EDB9";
  final static String fmtname = "ECL000203";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private DecimalField fieldECLCUN = null;
  private CharacterField fieldECLXAC = null;
  private DecimalField fieldECLMAN = null;
  private CharacterField fieldECLNA1 = null;
  private CharacterField fieldECLRSL = null;
  private CharacterField fieldECLSTF = null;
  private CharacterField fieldECLINC = null;
  private CharacterField fieldECLBNI = null;
  private CharacterField fieldECLMA1 = null;
  private CharacterField fieldECLINR = null;

  /**
  * Constructor for ECL000203Message.
  */
  public ECL000203Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 174;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldECLCUN =
    new DecimalField(message, HEADERSIZE + 42, 10, 0, "ECLCUN");
    fields[10] = fieldECLXAC =
    new CharacterField(message, HEADERSIZE + 52, 1, "ECLXAC");
    fields[11] = fieldECLMAN =
    new DecimalField(message, HEADERSIZE + 53, 3, 0, "ECLMAN");
    fields[12] = fieldECLNA1 =
    new CharacterField(message, HEADERSIZE + 56, 45, "ECLNA1");
    fields[13] = fieldECLRSL =
    new CharacterField(message, HEADERSIZE + 101, 4, "ECLRSL");
    fields[14] = fieldECLSTF =
    new CharacterField(message, HEADERSIZE + 105, 1, "ECLSTF");
    fields[15] = fieldECLINC =
    new CharacterField(message, HEADERSIZE + 106, 4, "ECLINC");
    fields[16] = fieldECLBNI =
    new CharacterField(message, HEADERSIZE + 110, 15, "ECLBNI");
    fields[17] = fieldECLMA1 =
    new CharacterField(message, HEADERSIZE + 125, 45, "ECLMA1");
    fields[18] = fieldECLINR =
    new CharacterField(message, HEADERSIZE + 170, 4, "ECLINR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field ECLCUN using a String value.
  */
  public void setECLCUN(String newvalue)
  {
    fieldECLCUN.setString(newvalue);
  }

  /**
  * Get value of field ECLCUN as a String.
  */
  public String getECLCUN()
  {
    return fieldECLCUN.getString();
  }

  /**
  * Set numeric field ECLCUN using a BigDecimal value.
  */
  public void setECLCUN(BigDecimal newvalue)
  {
    fieldECLCUN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLCUN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLCUN()
  {
    return fieldECLCUN.getBigDecimal();
  }

  /**
  * Set field ECLXAC using a String value.
  */
  public void setECLXAC(String newvalue)
  {
    fieldECLXAC.setString(newvalue);
  }

  /**
  * Get value of field ECLXAC as a String.
  */
  public String getECLXAC()
  {
    return fieldECLXAC.getString();
  }

  /**
  * Set field ECLMAN using a String value.
  */
  public void setECLMAN(String newvalue)
  {
    fieldECLMAN.setString(newvalue);
  }

  /**
  * Get value of field ECLMAN as a String.
  */
  public String getECLMAN()
  {
    return fieldECLMAN.getString();
  }

  /**
  * Set numeric field ECLMAN using a BigDecimal value.
  */
  public void setECLMAN(BigDecimal newvalue)
  {
    fieldECLMAN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field ECLMAN as a BigDecimal.
  */
  public BigDecimal getBigDecimalECLMAN()
  {
    return fieldECLMAN.getBigDecimal();
  }

  /**
  * Set field ECLNA1 using a String value.
  */
  public void setECLNA1(String newvalue)
  {
    fieldECLNA1.setString(newvalue);
  }

  /**
  * Get value of field ECLNA1 as a String.
  */
  public String getECLNA1()
  {
    return fieldECLNA1.getString();
  }

  /**
  * Set field ECLRSL using a String value.
  */
  public void setECLRSL(String newvalue)
  {
    fieldECLRSL.setString(newvalue);
  }

  /**
  * Get value of field ECLRSL as a String.
  */
  public String getECLRSL()
  {
    return fieldECLRSL.getString();
  }

  /**
  * Set field ECLSTF using a String value.
  */
  public void setECLSTF(String newvalue)
  {
    fieldECLSTF.setString(newvalue);
  }

  /**
  * Get value of field ECLSTF as a String.
  */
  public String getECLSTF()
  {
    return fieldECLSTF.getString();
  }

  /**
  * Set field ECLINC using a String value.
  */
  public void setECLINC(String newvalue)
  {
    fieldECLINC.setString(newvalue);
  }

  /**
  * Get value of field ECLINC as a String.
  */
  public String getECLINC()
  {
    return fieldECLINC.getString();
  }

  /**
  * Set field ECLBNI using a String value.
  */
  public void setECLBNI(String newvalue)
  {
    fieldECLBNI.setString(newvalue);
  }

  /**
  * Get value of field ECLBNI as a String.
  */
  public String getECLBNI()
  {
    return fieldECLBNI.getString();
  }

  /**
  * Set field ECLMA1 using a String value.
  */
  public void setECLMA1(String newvalue)
  {
    fieldECLMA1.setString(newvalue);
  }

  /**
  * Get value of field ECLMA1 as a String.
  */
  public String getECLMA1()
  {
    return fieldECLMA1.getString();
  }

  /**
  * Set field ECLINR using a String value.
  */
  public void setECLINR(String newvalue)
  {
    fieldECLINR.setString(newvalue);
  }

  /**
  * Get value of field ECLINR as a String.
  */
  public String getECLINR()
  {
    return fieldECLINR.getString();
  }

}
