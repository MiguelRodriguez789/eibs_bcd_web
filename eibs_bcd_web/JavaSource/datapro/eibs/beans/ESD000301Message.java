package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from ESD000301 physical file definition.
* 
* File level identifier is 1130611113339.
* Record format level identifier is 3A2612604396E.
*/

public class ESD000301Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H01USERID",
                                     "H01PROGRM",
                                     "H01TIMSYS",
                                     "H01SCRCOD",
                                     "H01OPECOD",
                                     "H01FLGMAS",
                                     "H01FLGWK1",
                                     "H01FLGWK2",
                                     "H01FLGWK3",
                                     "E01NUMACD",
                                     "E01NUMATY",
                                     "E01NUMDSC",
                                     "E01NUMLST",
                                     "E01NUMNEW",
                                     "E01CNTANG",
                                     "E01NUMBNK",
                                     "E01NUMBRN",
                                     "E01NUMREC",
                                     "E01INDOPE"
                                   };
  final static String tnames[] = {
                                   "H01USERID",
                                   "H01PROGRM",
                                   "H01TIMSYS",
                                   "H01SCRCOD",
                                   "H01OPECOD",
                                   "H01FLGMAS",
                                   "H01FLGWK1",
                                   "H01FLGWK2",
                                   "H01FLGWK3",
                                   "E01NUMACD",
                                   "E01NUMATY",
                                   "E01NUMDSC",
                                   "E01NUMLST",
                                   "E01NUMNEW",
                                   "E01CNTANG",
                                   "E01NUMBNK",
                                   "E01NUMBRN",
                                   "E01NUMREC",
                                   "E01INDOPE"
                                 };
  final static String fid = "1130611113339";
  final static String rid = "3A2612604396E";
  final static String fmtname = "ESD000301";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH01USERID = null;
  private CharacterField fieldH01PROGRM = null;
  private CharacterField fieldH01TIMSYS = null;
  private CharacterField fieldH01SCRCOD = null;
  private CharacterField fieldH01OPECOD = null;
  private CharacterField fieldH01FLGMAS = null;
  private CharacterField fieldH01FLGWK1 = null;
  private CharacterField fieldH01FLGWK2 = null;
  private CharacterField fieldH01FLGWK3 = null;
  private CharacterField fieldE01NUMACD = null;
  private CharacterField fieldE01NUMATY = null;
  private CharacterField fieldE01NUMDSC = null;
  private DecimalField fieldE01NUMLST = null;
  private DecimalField fieldE01NUMNEW = null;
  private CharacterField fieldE01CNTANG = null;
  private CharacterField fieldE01NUMBNK = null;
  private DecimalField fieldE01NUMBRN = null;
  private DecimalField fieldE01NUMREC = null;
  private CharacterField fieldE01INDOPE = null;

  /**
  * Constructor for ESD000301Message.
  */
  public ESD000301Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 151;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH01USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H01USERID");
    fields[1] = fieldH01PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H01PROGRM");
    fields[2] = fieldH01TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H01TIMSYS");
    fields[3] = fieldH01SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H01SCRCOD");
    fields[4] = fieldH01OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H01OPECOD");
    fields[5] = fieldH01FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H01FLGMAS");
    fields[6] = fieldH01FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H01FLGWK1");
    fields[7] = fieldH01FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H01FLGWK2");
    fields[8] = fieldH01FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H01FLGWK3");
    fields[9] = fieldE01NUMACD =
    new CharacterField(message, HEADERSIZE + 42, 2, "E01NUMACD");
    fields[10] = fieldE01NUMATY =
    new CharacterField(message, HEADERSIZE + 44, 4, "E01NUMATY");
    fields[11] = fieldE01NUMDSC =
    new CharacterField(message, HEADERSIZE + 48, 60, "E01NUMDSC");
    fields[12] = fieldE01NUMLST =
    new DecimalField(message, HEADERSIZE + 108, 13, 0, "E01NUMLST");
    fields[13] = fieldE01NUMNEW =
    new DecimalField(message, HEADERSIZE + 121, 13, 0, "E01NUMNEW");
    fields[14] = fieldE01CNTANG =
    new CharacterField(message, HEADERSIZE + 134, 1, "E01CNTANG");
    fields[15] = fieldE01NUMBNK =
    new CharacterField(message, HEADERSIZE + 135, 2, "E01NUMBNK");
    fields[16] = fieldE01NUMBRN =
    new DecimalField(message, HEADERSIZE + 137, 5, 0, "E01NUMBRN");
    fields[17] = fieldE01NUMREC =
    new DecimalField(message, HEADERSIZE + 142, 8, 0, "E01NUMREC");
    fields[18] = fieldE01INDOPE =
    new CharacterField(message, HEADERSIZE + 150, 1, "E01INDOPE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H01USERID using a String value.
  */
  public void setH01USERID(String newvalue)
  {
    fieldH01USERID.setString(newvalue);
  }

  /**
  * Get value of field H01USERID as a String.
  */
  public String getH01USERID()
  {
    return fieldH01USERID.getString();
  }

  /**
  * Set field H01PROGRM using a String value.
  */
  public void setH01PROGRM(String newvalue)
  {
    fieldH01PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H01PROGRM as a String.
  */
  public String getH01PROGRM()
  {
    return fieldH01PROGRM.getString();
  }

  /**
  * Set field H01TIMSYS using a String value.
  */
  public void setH01TIMSYS(String newvalue)
  {
    fieldH01TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H01TIMSYS as a String.
  */
  public String getH01TIMSYS()
  {
    return fieldH01TIMSYS.getString();
  }

  /**
  * Set field H01SCRCOD using a String value.
  */
  public void setH01SCRCOD(String newvalue)
  {
    fieldH01SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H01SCRCOD as a String.
  */
  public String getH01SCRCOD()
  {
    return fieldH01SCRCOD.getString();
  }

  /**
  * Set field H01OPECOD using a String value.
  */
  public void setH01OPECOD(String newvalue)
  {
    fieldH01OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H01OPECOD as a String.
  */
  public String getH01OPECOD()
  {
    return fieldH01OPECOD.getString();
  }

  /**
  * Set field H01FLGMAS using a String value.
  */
  public void setH01FLGMAS(String newvalue)
  {
    fieldH01FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H01FLGMAS as a String.
  */
  public String getH01FLGMAS()
  {
    return fieldH01FLGMAS.getString();
  }

  /**
  * Set field H01FLGWK1 using a String value.
  */
  public void setH01FLGWK1(String newvalue)
  {
    fieldH01FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK1 as a String.
  */
  public String getH01FLGWK1()
  {
    return fieldH01FLGWK1.getString();
  }

  /**
  * Set field H01FLGWK2 using a String value.
  */
  public void setH01FLGWK2(String newvalue)
  {
    fieldH01FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK2 as a String.
  */
  public String getH01FLGWK2()
  {
    return fieldH01FLGWK2.getString();
  }

  /**
  * Set field H01FLGWK3 using a String value.
  */
  public void setH01FLGWK3(String newvalue)
  {
    fieldH01FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H01FLGWK3 as a String.
  */
  public String getH01FLGWK3()
  {
    return fieldH01FLGWK3.getString();
  }

  /**
  * Set field E01NUMACD using a String value.
  */
  public void setE01NUMACD(String newvalue)
  {
    fieldE01NUMACD.setString(newvalue);
  }

  /**
  * Get value of field E01NUMACD as a String.
  */
  public String getE01NUMACD()
  {
    return fieldE01NUMACD.getString();
  }

  /**
  * Set field E01NUMATY using a String value.
  */
  public void setE01NUMATY(String newvalue)
  {
    fieldE01NUMATY.setString(newvalue);
  }

  /**
  * Get value of field E01NUMATY as a String.
  */
  public String getE01NUMATY()
  {
    return fieldE01NUMATY.getString();
  }

  /**
  * Set field E01NUMDSC using a String value.
  */
  public void setE01NUMDSC(String newvalue)
  {
    fieldE01NUMDSC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMDSC as a String.
  */
  public String getE01NUMDSC()
  {
    return fieldE01NUMDSC.getString();
  }

  /**
  * Set field E01NUMLST using a String value.
  */
  public void setE01NUMLST(String newvalue)
  {
    fieldE01NUMLST.setString(newvalue);
  }

  /**
  * Get value of field E01NUMLST as a String.
  */
  public String getE01NUMLST()
  {
    return fieldE01NUMLST.getString();
  }

  /**
  * Set numeric field E01NUMLST using a BigDecimal value.
  */
  public void setE01NUMLST(BigDecimal newvalue)
  {
    fieldE01NUMLST.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMLST as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMLST()
  {
    return fieldE01NUMLST.getBigDecimal();
  }

  /**
  * Set field E01NUMNEW using a String value.
  */
  public void setE01NUMNEW(String newvalue)
  {
    fieldE01NUMNEW.setString(newvalue);
  }

  /**
  * Get value of field E01NUMNEW as a String.
  */
  public String getE01NUMNEW()
  {
    return fieldE01NUMNEW.getString();
  }

  /**
  * Set numeric field E01NUMNEW using a BigDecimal value.
  */
  public void setE01NUMNEW(BigDecimal newvalue)
  {
    fieldE01NUMNEW.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMNEW as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMNEW()
  {
    return fieldE01NUMNEW.getBigDecimal();
  }

  /**
  * Set field E01CNTANG using a String value.
  */
  public void setE01CNTANG(String newvalue)
  {
    fieldE01CNTANG.setString(newvalue);
  }

  /**
  * Get value of field E01CNTANG as a String.
  */
  public String getE01CNTANG()
  {
    return fieldE01CNTANG.getString();
  }

  /**
  * Set field E01NUMBNK using a String value.
  */
  public void setE01NUMBNK(String newvalue)
  {
    fieldE01NUMBNK.setString(newvalue);
  }

  /**
  * Get value of field E01NUMBNK as a String.
  */
  public String getE01NUMBNK()
  {
    return fieldE01NUMBNK.getString();
  }

  /**
  * Set field E01NUMBRN using a String value.
  */
  public void setE01NUMBRN(String newvalue)
  {
    fieldE01NUMBRN.setString(newvalue);
  }

  /**
  * Get value of field E01NUMBRN as a String.
  */
  public String getE01NUMBRN()
  {
    return fieldE01NUMBRN.getString();
  }

  /**
  * Set numeric field E01NUMBRN using a BigDecimal value.
  */
  public void setE01NUMBRN(BigDecimal newvalue)
  {
    fieldE01NUMBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMBRN()
  {
    return fieldE01NUMBRN.getBigDecimal();
  }

  /**
  * Set field E01NUMREC using a String value.
  */
  public void setE01NUMREC(String newvalue)
  {
    fieldE01NUMREC.setString(newvalue);
  }

  /**
  * Get value of field E01NUMREC as a String.
  */
  public String getE01NUMREC()
  {
    return fieldE01NUMREC.getString();
  }

  /**
  * Set numeric field E01NUMREC using a BigDecimal value.
  */
  public void setE01NUMREC(BigDecimal newvalue)
  {
    fieldE01NUMREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E01NUMREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE01NUMREC()
  {
    return fieldE01NUMREC.getBigDecimal();
  }

  /**
  * Set field E01INDOPE using a String value.
  */
  public void setE01INDOPE(String newvalue)
  {
    fieldE01INDOPE.setString(newvalue);
  }

  /**
  * Get value of field E01INDOPE as a String.
  */
  public String getE01INDOPE()
  {
    return fieldE01INDOPE.getString();
  }

}
