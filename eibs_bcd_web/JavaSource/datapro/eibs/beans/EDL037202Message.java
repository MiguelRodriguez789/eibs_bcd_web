package datapro.eibs.beans;

import datapro.eibs.sockets.*;
import java.io.*;
import java.math.*;

import java.util.*;

/**
* Class generated by AS/400 CRTCLASS command from EDL037202 physical file definition.
* 
* File level identifier is 1190919122407.
* Record format level identifier is 3470B6A5114BC.
*/

public class EDL037202Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "H02USERID",
                                     "H02PROGRM",
                                     "H02TIMSYS",
                                     "H02SCRCOD",
                                     "H02OPECOD",
                                     "H02FLGMAS",
                                     "H02FLGWK1",
                                     "H02FLGWK2",
                                     "H02FLGWK3",
                                     "E02DEAACC",
                                     "E02DCOCDE",
                                     "E02DCONAR",
                                     "E02DCOCTY",
                                     "E02DCOBSC",
                                     "E02DCOFVA",
                                     "E02DCOTVA",
                                     "E02DCOPVI",
                                     "E02DCOMPG",
                                     "E02DCOFL3"
                                   };
  final static String tnames[] = {
                                   "H02USERID",
                                   "H02PROGRM",
                                   "H02TIMSYS",
                                   "H02SCRCOD",
                                   "H02OPECOD",
                                   "H02FLGMAS",
                                   "H02FLGWK1",
                                   "H02FLGWK2",
                                   "H02FLGWK3",
                                   "E02DEAACC",
                                   "E02DCOCDE",
                                   "E02DCONAR",
                                   "E02DCOCTY",
                                   "E02DCOBSC",
                                   "E02DCOFVA",
                                   "E02DCOTVA",
                                   "E02DCOPVI",
                                   "E02DCOMPG",
                                   "E02DCOFL3"
                                 };
  final static String fid = "1190919122407";
  final static String rid = "3470B6A5114BC";
  final static String fmtname = "EDL037202";
  final int FIELDCOUNT = 19;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldH02USERID = null;
  private CharacterField fieldH02PROGRM = null;
  private CharacterField fieldH02TIMSYS = null;
  private CharacterField fieldH02SCRCOD = null;
  private CharacterField fieldH02OPECOD = null;
  private CharacterField fieldH02FLGMAS = null;
  private CharacterField fieldH02FLGWK1 = null;
  private CharacterField fieldH02FLGWK2 = null;
  private CharacterField fieldH02FLGWK3 = null;
  private DecimalField fieldE02DEAACC = null;
  private CharacterField fieldE02DCOCDE = null;
  private CharacterField fieldE02DCONAR = null;
  private CharacterField fieldE02DCOCTY = null;
  private CharacterField fieldE02DCOBSC = null;
  private DecimalField fieldE02DCOFVA = null;
  private CharacterField fieldE02DCOTVA = null;
  private CharacterField fieldE02DCOPVI = null;
  private CharacterField fieldE02DCOMPG = null;
  private CharacterField fieldE02DCOFL3 = null;

  /**
  * Constructor for EDL037202Message.
  */
  public EDL037202Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 144;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldH02USERID =
    new CharacterField(message, HEADERSIZE + 0, 10, "H02USERID");
    fields[1] = fieldH02PROGRM =
    new CharacterField(message, HEADERSIZE + 10, 10, "H02PROGRM");
    fields[2] = fieldH02TIMSYS =
    new CharacterField(message, HEADERSIZE + 20, 12, "H02TIMSYS");
    fields[3] = fieldH02SCRCOD =
    new CharacterField(message, HEADERSIZE + 32, 2, "H02SCRCOD");
    fields[4] = fieldH02OPECOD =
    new CharacterField(message, HEADERSIZE + 34, 4, "H02OPECOD");
    fields[5] = fieldH02FLGMAS =
    new CharacterField(message, HEADERSIZE + 38, 1, "H02FLGMAS");
    fields[6] = fieldH02FLGWK1 =
    new CharacterField(message, HEADERSIZE + 39, 1, "H02FLGWK1");
    fields[7] = fieldH02FLGWK2 =
    new CharacterField(message, HEADERSIZE + 40, 1, "H02FLGWK2");
    fields[8] = fieldH02FLGWK3 =
    new CharacterField(message, HEADERSIZE + 41, 1, "H02FLGWK3");
    fields[9] = fieldE02DEAACC =
    new DecimalField(message, HEADERSIZE + 42, 13, 0, "E02DEAACC");
    fields[10] = fieldE02DCOCDE =
    new CharacterField(message, HEADERSIZE + 55, 4, "E02DCOCDE");
    fields[11] = fieldE02DCONAR =
    new CharacterField(message, HEADERSIZE + 59, 60, "E02DCONAR");
    fields[12] = fieldE02DCOCTY =
    new CharacterField(message, HEADERSIZE + 119, 1, "E02DCOCTY");
    fields[13] = fieldE02DCOBSC =
    new CharacterField(message, HEADERSIZE + 120, 1, "E02DCOBSC");
    fields[14] = fieldE02DCOFVA =
    new DecimalField(message, HEADERSIZE + 121, 19, 4, "E02DCOFVA");
    fields[15] = fieldE02DCOTVA =
    new CharacterField(message, HEADERSIZE + 140, 1, "E02DCOTVA");
    fields[16] = fieldE02DCOPVI =
    new CharacterField(message, HEADERSIZE + 141, 1, "E02DCOPVI");
    fields[17] = fieldE02DCOMPG =
    new CharacterField(message, HEADERSIZE + 142, 1, "E02DCOMPG");
    fields[18] = fieldE02DCOFL3 =
    new CharacterField(message, HEADERSIZE + 143, 1, "E02DCOFL3");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field H02USERID using a String value.
  */
  public void setH02USERID(String newvalue)
  {
    fieldH02USERID.setString(newvalue);
  }

  /**
  * Get value of field H02USERID as a String.
  */
  public String getH02USERID()
  {
    return fieldH02USERID.getString();
  }

  /**
  * Set field H02PROGRM using a String value.
  */
  public void setH02PROGRM(String newvalue)
  {
    fieldH02PROGRM.setString(newvalue);
  }

  /**
  * Get value of field H02PROGRM as a String.
  */
  public String getH02PROGRM()
  {
    return fieldH02PROGRM.getString();
  }

  /**
  * Set field H02TIMSYS using a String value.
  */
  public void setH02TIMSYS(String newvalue)
  {
    fieldH02TIMSYS.setString(newvalue);
  }

  /**
  * Get value of field H02TIMSYS as a String.
  */
  public String getH02TIMSYS()
  {
    return fieldH02TIMSYS.getString();
  }

  /**
  * Set field H02SCRCOD using a String value.
  */
  public void setH02SCRCOD(String newvalue)
  {
    fieldH02SCRCOD.setString(newvalue);
  }

  /**
  * Get value of field H02SCRCOD as a String.
  */
  public String getH02SCRCOD()
  {
    return fieldH02SCRCOD.getString();
  }

  /**
  * Set field H02OPECOD using a String value.
  */
  public void setH02OPECOD(String newvalue)
  {
    fieldH02OPECOD.setString(newvalue);
  }

  /**
  * Get value of field H02OPECOD as a String.
  */
  public String getH02OPECOD()
  {
    return fieldH02OPECOD.getString();
  }

  /**
  * Set field H02FLGMAS using a String value.
  */
  public void setH02FLGMAS(String newvalue)
  {
    fieldH02FLGMAS.setString(newvalue);
  }

  /**
  * Get value of field H02FLGMAS as a String.
  */
  public String getH02FLGMAS()
  {
    return fieldH02FLGMAS.getString();
  }

  /**
  * Set field H02FLGWK1 using a String value.
  */
  public void setH02FLGWK1(String newvalue)
  {
    fieldH02FLGWK1.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK1 as a String.
  */
  public String getH02FLGWK1()
  {
    return fieldH02FLGWK1.getString();
  }

  /**
  * Set field H02FLGWK2 using a String value.
  */
  public void setH02FLGWK2(String newvalue)
  {
    fieldH02FLGWK2.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK2 as a String.
  */
  public String getH02FLGWK2()
  {
    return fieldH02FLGWK2.getString();
  }

  /**
  * Set field H02FLGWK3 using a String value.
  */
  public void setH02FLGWK3(String newvalue)
  {
    fieldH02FLGWK3.setString(newvalue);
  }

  /**
  * Get value of field H02FLGWK3 as a String.
  */
  public String getH02FLGWK3()
  {
    return fieldH02FLGWK3.getString();
  }

  /**
  * Set field E02DEAACC using a String value.
  */
  public void setE02DEAACC(String newvalue)
  {
    fieldE02DEAACC.setString(newvalue);
  }

  /**
  * Get value of field E02DEAACC as a String.
  */
  public String getE02DEAACC()
  {
    return fieldE02DEAACC.getString();
  }

  /**
  * Set numeric field E02DEAACC using a BigDecimal value.
  */
  public void setE02DEAACC(BigDecimal newvalue)
  {
    fieldE02DEAACC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DEAACC as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DEAACC()
  {
    return fieldE02DEAACC.getBigDecimal();
  }

  /**
  * Set field E02DCOCDE using a String value.
  */
  public void setE02DCOCDE(String newvalue)
  {
    fieldE02DCOCDE.setString(newvalue);
  }

  /**
  * Get value of field E02DCOCDE as a String.
  */
  public String getE02DCOCDE()
  {
    return fieldE02DCOCDE.getString();
  }

  /**
  * Set field E02DCONAR using a String value.
  */
  public void setE02DCONAR(String newvalue)
  {
    fieldE02DCONAR.setString(newvalue);
  }

  /**
  * Get value of field E02DCONAR as a String.
  */
  public String getE02DCONAR()
  {
    return fieldE02DCONAR.getString();
  }

  /**
  * Set field E02DCOCTY using a String value.
  */
  public void setE02DCOCTY(String newvalue)
  {
    fieldE02DCOCTY.setString(newvalue);
  }

  /**
  * Get value of field E02DCOCTY as a String.
  */
  public String getE02DCOCTY()
  {
    return fieldE02DCOCTY.getString();
  }

  /**
  * Set field E02DCOBSC using a String value.
  */
  public void setE02DCOBSC(String newvalue)
  {
    fieldE02DCOBSC.setString(newvalue);
  }

  /**
  * Get value of field E02DCOBSC as a String.
  */
  public String getE02DCOBSC()
  {
    return fieldE02DCOBSC.getString();
  }

  /**
  * Set field E02DCOFVA using a String value.
  */
  public void setE02DCOFVA(String newvalue)
  {
    fieldE02DCOFVA.setString(newvalue);
  }

  /**
  * Get value of field E02DCOFVA as a String.
  */
  public String getE02DCOFVA()
  {
    return fieldE02DCOFVA.getString();
  }

  /**
  * Set numeric field E02DCOFVA using a BigDecimal value.
  */
  public void setE02DCOFVA(BigDecimal newvalue)
  {
    fieldE02DCOFVA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field E02DCOFVA as a BigDecimal.
  */
  public BigDecimal getBigDecimalE02DCOFVA()
  {
    return fieldE02DCOFVA.getBigDecimal();
  }

  /**
  * Set field E02DCOTVA using a String value.
  */
  public void setE02DCOTVA(String newvalue)
  {
    fieldE02DCOTVA.setString(newvalue);
  }

  /**
  * Get value of field E02DCOTVA as a String.
  */
  public String getE02DCOTVA()
  {
    return fieldE02DCOTVA.getString();
  }

  /**
  * Set field E02DCOPVI using a String value.
  */
  public void setE02DCOPVI(String newvalue)
  {
    fieldE02DCOPVI.setString(newvalue);
  }

  /**
  * Get value of field E02DCOPVI as a String.
  */
  public String getE02DCOPVI()
  {
    return fieldE02DCOPVI.getString();
  }

  /**
  * Set field E02DCOMPG using a String value.
  */
  public void setE02DCOMPG(String newvalue)
  {
    fieldE02DCOMPG.setString(newvalue);
  }

  /**
  * Get value of field E02DCOMPG as a String.
  */
  public String getE02DCOMPG()
  {
    return fieldE02DCOMPG.getString();
  }

  /**
  * Set field E02DCOFL3 using a String value.
  */
  public void setE02DCOFL3(String newvalue)
  {
    fieldE02DCOFL3.setString(newvalue);
  }

  /**
  * Get value of field E02DCOFL3 as a String.
  */
  public String getE02DCOFL3()
  {
    return fieldE02DCOFL3.getString();
  }

}
